// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ManagementZoneMetadata struct {
	ClusterVersion               *string  `pulumi:"clusterVersion"`
	ConfigurationVersions        []int    `pulumi:"configurationVersions"`
	CurrentConfigurationVersions []string `pulumi:"currentConfigurationVersions"`
}

// ManagementZoneMetadataInput is an input type that accepts ManagementZoneMetadataArgs and ManagementZoneMetadataOutput values.
// You can construct a concrete instance of `ManagementZoneMetadataInput` via:
//
//	ManagementZoneMetadataArgs{...}
type ManagementZoneMetadataInput interface {
	pulumi.Input

	ToManagementZoneMetadataOutput() ManagementZoneMetadataOutput
	ToManagementZoneMetadataOutputWithContext(context.Context) ManagementZoneMetadataOutput
}

type ManagementZoneMetadataArgs struct {
	ClusterVersion               pulumi.StringPtrInput   `pulumi:"clusterVersion"`
	ConfigurationVersions        pulumi.IntArrayInput    `pulumi:"configurationVersions"`
	CurrentConfigurationVersions pulumi.StringArrayInput `pulumi:"currentConfigurationVersions"`
}

func (ManagementZoneMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneMetadata)(nil)).Elem()
}

func (i ManagementZoneMetadataArgs) ToManagementZoneMetadataOutput() ManagementZoneMetadataOutput {
	return i.ToManagementZoneMetadataOutputWithContext(context.Background())
}

func (i ManagementZoneMetadataArgs) ToManagementZoneMetadataOutputWithContext(ctx context.Context) ManagementZoneMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneMetadataOutput)
}

func (i ManagementZoneMetadataArgs) ToManagementZoneMetadataPtrOutput() ManagementZoneMetadataPtrOutput {
	return i.ToManagementZoneMetadataPtrOutputWithContext(context.Background())
}

func (i ManagementZoneMetadataArgs) ToManagementZoneMetadataPtrOutputWithContext(ctx context.Context) ManagementZoneMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneMetadataOutput).ToManagementZoneMetadataPtrOutputWithContext(ctx)
}

// ManagementZoneMetadataPtrInput is an input type that accepts ManagementZoneMetadataArgs, ManagementZoneMetadataPtr and ManagementZoneMetadataPtrOutput values.
// You can construct a concrete instance of `ManagementZoneMetadataPtrInput` via:
//
//	        ManagementZoneMetadataArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneMetadataPtrInput interface {
	pulumi.Input

	ToManagementZoneMetadataPtrOutput() ManagementZoneMetadataPtrOutput
	ToManagementZoneMetadataPtrOutputWithContext(context.Context) ManagementZoneMetadataPtrOutput
}

type managementZoneMetadataPtrType ManagementZoneMetadataArgs

func ManagementZoneMetadataPtr(v *ManagementZoneMetadataArgs) ManagementZoneMetadataPtrInput {
	return (*managementZoneMetadataPtrType)(v)
}

func (*managementZoneMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneMetadata)(nil)).Elem()
}

func (i *managementZoneMetadataPtrType) ToManagementZoneMetadataPtrOutput() ManagementZoneMetadataPtrOutput {
	return i.ToManagementZoneMetadataPtrOutputWithContext(context.Background())
}

func (i *managementZoneMetadataPtrType) ToManagementZoneMetadataPtrOutputWithContext(ctx context.Context) ManagementZoneMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneMetadataPtrOutput)
}

type ManagementZoneMetadataOutput struct{ *pulumi.OutputState }

func (ManagementZoneMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneMetadata)(nil)).Elem()
}

func (o ManagementZoneMetadataOutput) ToManagementZoneMetadataOutput() ManagementZoneMetadataOutput {
	return o
}

func (o ManagementZoneMetadataOutput) ToManagementZoneMetadataOutputWithContext(ctx context.Context) ManagementZoneMetadataOutput {
	return o
}

func (o ManagementZoneMetadataOutput) ToManagementZoneMetadataPtrOutput() ManagementZoneMetadataPtrOutput {
	return o.ToManagementZoneMetadataPtrOutputWithContext(context.Background())
}

func (o ManagementZoneMetadataOutput) ToManagementZoneMetadataPtrOutputWithContext(ctx context.Context) ManagementZoneMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneMetadata) *ManagementZoneMetadata {
		return &v
	}).(ManagementZoneMetadataPtrOutput)
}

func (o ManagementZoneMetadataOutput) ClusterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneMetadata) *string { return v.ClusterVersion }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneMetadataOutput) ConfigurationVersions() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ManagementZoneMetadata) []int { return v.ConfigurationVersions }).(pulumi.IntArrayOutput)
}

func (o ManagementZoneMetadataOutput) CurrentConfigurationVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementZoneMetadata) []string { return v.CurrentConfigurationVersions }).(pulumi.StringArrayOutput)
}

type ManagementZoneMetadataPtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneMetadata)(nil)).Elem()
}

func (o ManagementZoneMetadataPtrOutput) ToManagementZoneMetadataPtrOutput() ManagementZoneMetadataPtrOutput {
	return o
}

func (o ManagementZoneMetadataPtrOutput) ToManagementZoneMetadataPtrOutputWithContext(ctx context.Context) ManagementZoneMetadataPtrOutput {
	return o
}

func (o ManagementZoneMetadataPtrOutput) Elem() ManagementZoneMetadataOutput {
	return o.ApplyT(func(v *ManagementZoneMetadata) ManagementZoneMetadata {
		if v != nil {
			return *v
		}
		var ret ManagementZoneMetadata
		return ret
	}).(ManagementZoneMetadataOutput)
}

func (o ManagementZoneMetadataPtrOutput) ClusterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneMetadata) *string {
		if v == nil {
			return nil
		}
		return v.ClusterVersion
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneMetadataPtrOutput) ConfigurationVersions() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ManagementZoneMetadata) []int {
		if v == nil {
			return nil
		}
		return v.ConfigurationVersions
	}).(pulumi.IntArrayOutput)
}

func (o ManagementZoneMetadataPtrOutput) CurrentConfigurationVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementZoneMetadata) []string {
		if v == nil {
			return nil
		}
		return v.CurrentConfigurationVersions
	}).(pulumi.StringArrayOutput)
}

type ManagementZoneRule struct {
	Conditions       []ManagementZoneRuleCondition `pulumi:"conditions"`
	Enabled          *bool                         `pulumi:"enabled"`
	PropagationTypes []string                      `pulumi:"propagationTypes"`
	Type             string                        `pulumi:"type"`
	Unknowns         *string                       `pulumi:"unknowns"`
}

// ManagementZoneRuleInput is an input type that accepts ManagementZoneRuleArgs and ManagementZoneRuleOutput values.
// You can construct a concrete instance of `ManagementZoneRuleInput` via:
//
//	ManagementZoneRuleArgs{...}
type ManagementZoneRuleInput interface {
	pulumi.Input

	ToManagementZoneRuleOutput() ManagementZoneRuleOutput
	ToManagementZoneRuleOutputWithContext(context.Context) ManagementZoneRuleOutput
}

type ManagementZoneRuleArgs struct {
	Conditions       ManagementZoneRuleConditionArrayInput `pulumi:"conditions"`
	Enabled          pulumi.BoolPtrInput                   `pulumi:"enabled"`
	PropagationTypes pulumi.StringArrayInput               `pulumi:"propagationTypes"`
	Type             pulumi.StringInput                    `pulumi:"type"`
	Unknowns         pulumi.StringPtrInput                 `pulumi:"unknowns"`
}

func (ManagementZoneRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRule)(nil)).Elem()
}

func (i ManagementZoneRuleArgs) ToManagementZoneRuleOutput() ManagementZoneRuleOutput {
	return i.ToManagementZoneRuleOutputWithContext(context.Background())
}

func (i ManagementZoneRuleArgs) ToManagementZoneRuleOutputWithContext(ctx context.Context) ManagementZoneRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleOutput)
}

// ManagementZoneRuleArrayInput is an input type that accepts ManagementZoneRuleArray and ManagementZoneRuleArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleArrayInput` via:
//
//	ManagementZoneRuleArray{ ManagementZoneRuleArgs{...} }
type ManagementZoneRuleArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleArrayOutput() ManagementZoneRuleArrayOutput
	ToManagementZoneRuleArrayOutputWithContext(context.Context) ManagementZoneRuleArrayOutput
}

type ManagementZoneRuleArray []ManagementZoneRuleInput

func (ManagementZoneRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRule)(nil)).Elem()
}

func (i ManagementZoneRuleArray) ToManagementZoneRuleArrayOutput() ManagementZoneRuleArrayOutput {
	return i.ToManagementZoneRuleArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleArray) ToManagementZoneRuleArrayOutputWithContext(ctx context.Context) ManagementZoneRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleArrayOutput)
}

type ManagementZoneRuleOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRule)(nil)).Elem()
}

func (o ManagementZoneRuleOutput) ToManagementZoneRuleOutput() ManagementZoneRuleOutput {
	return o
}

func (o ManagementZoneRuleOutput) ToManagementZoneRuleOutputWithContext(ctx context.Context) ManagementZoneRuleOutput {
	return o
}

func (o ManagementZoneRuleOutput) Conditions() ManagementZoneRuleConditionArrayOutput {
	return o.ApplyT(func(v ManagementZoneRule) []ManagementZoneRuleCondition { return v.Conditions }).(ManagementZoneRuleConditionArrayOutput)
}

func (o ManagementZoneRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleOutput) PropagationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementZoneRule) []string { return v.PropagationTypes }).(pulumi.StringArrayOutput)
}

func (o ManagementZoneRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRule) string { return v.Type }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRule) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRule)(nil)).Elem()
}

func (o ManagementZoneRuleArrayOutput) ToManagementZoneRuleArrayOutput() ManagementZoneRuleArrayOutput {
	return o
}

func (o ManagementZoneRuleArrayOutput) ToManagementZoneRuleArrayOutputWithContext(ctx context.Context) ManagementZoneRuleArrayOutput {
	return o
}

func (o ManagementZoneRuleArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRule {
		return vs[0].([]ManagementZoneRule)[vs[1].(int)]
	}).(ManagementZoneRuleOutput)
}

type ManagementZoneRuleCondition struct {
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons  []ManagementZoneRuleConditionApplicationTypeComparison  `pulumi:"applicationTypeComparisons"`
	ApplicationTypes            []ManagementZoneRuleConditionApplicationType            `pulumi:"applicationTypes"`
	AzureComputeModeComparisons []ManagementZoneRuleConditionAzureComputeModeComparison `pulumi:"azureComputeModeComparisons"`
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes []ManagementZoneRuleConditionAzureComputeMode `pulumi:"azureComputeModes"`
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions []ManagementZoneRuleConditionAzureSkuComparision `pulumi:"azureSkuComparisions"`
	AzureSkus            []ManagementZoneRuleConditionAzureSkus           `pulumi:"azureSkus"`
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics []ManagementZoneRuleConditionBaseComparisonBasic `pulumi:"baseComparisonBasics"`
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys []ManagementZoneRuleConditionBaseConditionKey `pulumi:"baseConditionKeys"`
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions []ManagementZoneRuleConditionBitnessComparision `pulumi:"bitnessComparisions"`
	Bitnesses           []ManagementZoneRuleConditionBitness            `pulumi:"bitnesses"`
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons []ManagementZoneRuleConditionCloudTypeComparison `pulumi:"cloudTypeComparisons"`
	CloudTypes           []ManagementZoneRuleConditionCloudType           `pulumi:"cloudTypes"`
	Comparisons          []ManagementZoneRuleConditionComparison          `pulumi:"comparisons"`
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons []ManagementZoneRuleConditionCustomApplicationTypeComparison `pulumi:"customApplicationTypeComparisons"`
	CustomApplicationTypes           []ManagementZoneRuleConditionCustomApplicationType           `pulumi:"customApplicationTypes"`
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys []ManagementZoneRuleConditionCustomHostMetadataConditionKey `pulumi:"customHostMetadataConditionKeys"`
	CustomHostMetadatas             []ManagementZoneRuleConditionCustomHostMetadata             `pulumi:"customHostMetadatas"`
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys []ManagementZoneRuleConditionCustomProcessMetadataConditionKey `pulumi:"customProcessMetadataConditionKeys"`
	CustomProcessMetadatas             []ManagementZoneRuleConditionCustomProcessMetadata             `pulumi:"customProcessMetadatas"`
	DatabaseTopologies                 []ManagementZoneRuleConditionDatabaseTopology                  `pulumi:"databaseTopologies"`
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons []ManagementZoneRuleConditionDatabaseTopologyComparison `pulumi:"databaseTopologyComparisons"`
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons []ManagementZoneRuleConditionDcrumDecoderComparison `pulumi:"dcrumDecoderComparisons"`
	DcrumDecoders           []ManagementZoneRuleConditionDcrumDecoder           `pulumi:"dcrumDecoders"`
	Entities                []ManagementZoneRuleConditionEntity                 `pulumi:"entities"`
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons []ManagementZoneRuleConditionEntityIdComparison `pulumi:"entityIdComparisons"`
	HostTeches          []ManagementZoneRuleConditionHostTech           `pulumi:"hostTeches"`
	// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions []ManagementZoneRuleConditionHypervisorTypeComparision `pulumi:"hypervisorTypeComparisions"`
	Hypervisors                []ManagementZoneRuleConditionHypervisor                `pulumi:"hypervisors"`
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons []ManagementZoneRuleConditionIndexedNameComparison `pulumi:"indexedNameComparisons"`
	IndexedNames           []ManagementZoneRuleConditionIndexedName           `pulumi:"indexedNames"`
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons []ManagementZoneRuleConditionIndexedStringComparison `pulumi:"indexedStringComparisons"`
	IndexedStrings           []ManagementZoneRuleConditionIndexedString           `pulumi:"indexedStrings"`
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons []ManagementZoneRuleConditionIndexedTagComparison `pulumi:"indexedTagComparisons"`
	IndexedTags           []ManagementZoneRuleConditionIndexedTag           `pulumi:"indexedTags"`
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons []ManagementZoneRuleConditionIntegerComparison `pulumi:"integerComparisons"`
	Integers           []ManagementZoneRuleConditionInteger           `pulumi:"integers"`
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons []ManagementZoneRuleConditionIpaddressComparison `pulumi:"ipaddressComparisons"`
	Ipaddresses          []ManagementZoneRuleConditionIpaddress           `pulumi:"ipaddresses"`
	Keys                 []ManagementZoneRuleConditionKey                 `pulumi:"keys"`
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons []ManagementZoneRuleConditionMobilePlatformComparison `pulumi:"mobilePlatformComparisons"`
	MobilePlatforms           []ManagementZoneRuleConditionMobilePlatform           `pulumi:"mobilePlatforms"`
	OsArches                  []ManagementZoneRuleConditionOsArch                   `pulumi:"osArches"`
	OsTypes                   []ManagementZoneRuleConditionOsType                   `pulumi:"osTypes"`
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons []ManagementZoneRuleConditionOsarchitectureComparison `pulumi:"osarchitectureComparisons"`
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons []ManagementZoneRuleConditionOstypeComparison `pulumi:"ostypeComparisons"`
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons []ManagementZoneRuleConditionPaasTypeComparison `pulumi:"paasTypeComparisons"`
	PaasTypes           []ManagementZoneRuleConditionPaasType           `pulumi:"paasTypes"`
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys []ManagementZoneRuleConditionProcessMetadataConditionKey `pulumi:"processMetadataConditionKeys"`
	ProcessMetadatas             []ManagementZoneRuleConditionProcessMetadata             `pulumi:"processMetadatas"`
	ServiceTopologies            []ManagementZoneRuleConditionServiceTopology             `pulumi:"serviceTopologies"`
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons []ManagementZoneRuleConditionServiceTopologyComparison `pulumi:"serviceTopologyComparisons"`
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons []ManagementZoneRuleConditionServiceTypeComparison `pulumi:"serviceTypeComparisons"`
	ServiceTypes           []ManagementZoneRuleConditionServiceType           `pulumi:"serviceTypes"`
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons []ManagementZoneRuleConditionSimpleHostTechComparison `pulumi:"simpleHostTechComparisons"`
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons []ManagementZoneRuleConditionSimpleTechComparison `pulumi:"simpleTechComparisons"`
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons []ManagementZoneRuleConditionStringComparison `pulumi:"stringComparisons"`
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys []ManagementZoneRuleConditionStringConditionKey `pulumi:"stringConditionKeys"`
	StringKeys          []ManagementZoneRuleConditionStringKey          `pulumi:"stringKeys"`
	Strings             []ManagementZoneRuleConditionString             `pulumi:"strings"`
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons []ManagementZoneRuleConditionSyntheticEngineTypeComparison `pulumi:"syntheticEngineTypeComparisons"`
	SyntheticEngines               []ManagementZoneRuleConditionSyntheticEngine               `pulumi:"syntheticEngines"`
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons []ManagementZoneRuleConditionTagComparison `pulumi:"tagComparisons"`
	Tags           []ManagementZoneRuleConditionTag           `pulumi:"tags"`
	Teches         []ManagementZoneRuleConditionTech          `pulumi:"teches"`
	Unknowns       *string                                    `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionInput is an input type that accepts ManagementZoneRuleConditionArgs and ManagementZoneRuleConditionOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionInput` via:
//
//	ManagementZoneRuleConditionArgs{...}
type ManagementZoneRuleConditionInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOutput() ManagementZoneRuleConditionOutput
	ToManagementZoneRuleConditionOutputWithContext(context.Context) ManagementZoneRuleConditionOutput
}

type ManagementZoneRuleConditionArgs struct {
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons  ManagementZoneRuleConditionApplicationTypeComparisonArrayInput  `pulumi:"applicationTypeComparisons"`
	ApplicationTypes            ManagementZoneRuleConditionApplicationTypeArrayInput            `pulumi:"applicationTypes"`
	AzureComputeModeComparisons ManagementZoneRuleConditionAzureComputeModeComparisonArrayInput `pulumi:"azureComputeModeComparisons"`
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes ManagementZoneRuleConditionAzureComputeModeArrayInput `pulumi:"azureComputeModes"`
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions ManagementZoneRuleConditionAzureSkuComparisionArrayInput `pulumi:"azureSkuComparisions"`
	AzureSkus            ManagementZoneRuleConditionAzureSkusArrayInput           `pulumi:"azureSkus"`
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics ManagementZoneRuleConditionBaseComparisonBasicArrayInput `pulumi:"baseComparisonBasics"`
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys ManagementZoneRuleConditionBaseConditionKeyArrayInput `pulumi:"baseConditionKeys"`
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions ManagementZoneRuleConditionBitnessComparisionArrayInput `pulumi:"bitnessComparisions"`
	Bitnesses           ManagementZoneRuleConditionBitnessArrayInput            `pulumi:"bitnesses"`
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons ManagementZoneRuleConditionCloudTypeComparisonArrayInput `pulumi:"cloudTypeComparisons"`
	CloudTypes           ManagementZoneRuleConditionCloudTypeArrayInput           `pulumi:"cloudTypes"`
	Comparisons          ManagementZoneRuleConditionComparisonArrayInput          `pulumi:"comparisons"`
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayInput `pulumi:"customApplicationTypeComparisons"`
	CustomApplicationTypes           ManagementZoneRuleConditionCustomApplicationTypeArrayInput           `pulumi:"customApplicationTypes"`
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayInput `pulumi:"customHostMetadataConditionKeys"`
	CustomHostMetadatas             ManagementZoneRuleConditionCustomHostMetadataArrayInput             `pulumi:"customHostMetadatas"`
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayInput `pulumi:"customProcessMetadataConditionKeys"`
	CustomProcessMetadatas             ManagementZoneRuleConditionCustomProcessMetadataArrayInput             `pulumi:"customProcessMetadatas"`
	DatabaseTopologies                 ManagementZoneRuleConditionDatabaseTopologyArrayInput                  `pulumi:"databaseTopologies"`
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons ManagementZoneRuleConditionDatabaseTopologyComparisonArrayInput `pulumi:"databaseTopologyComparisons"`
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons ManagementZoneRuleConditionDcrumDecoderComparisonArrayInput `pulumi:"dcrumDecoderComparisons"`
	DcrumDecoders           ManagementZoneRuleConditionDcrumDecoderArrayInput           `pulumi:"dcrumDecoders"`
	Entities                ManagementZoneRuleConditionEntityArrayInput                 `pulumi:"entities"`
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons ManagementZoneRuleConditionEntityIdComparisonArrayInput `pulumi:"entityIdComparisons"`
	HostTeches          ManagementZoneRuleConditionHostTechArrayInput           `pulumi:"hostTeches"`
	// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions ManagementZoneRuleConditionHypervisorTypeComparisionArrayInput `pulumi:"hypervisorTypeComparisions"`
	Hypervisors                ManagementZoneRuleConditionHypervisorArrayInput                `pulumi:"hypervisors"`
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons ManagementZoneRuleConditionIndexedNameComparisonArrayInput `pulumi:"indexedNameComparisons"`
	IndexedNames           ManagementZoneRuleConditionIndexedNameArrayInput           `pulumi:"indexedNames"`
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons ManagementZoneRuleConditionIndexedStringComparisonArrayInput `pulumi:"indexedStringComparisons"`
	IndexedStrings           ManagementZoneRuleConditionIndexedStringArrayInput           `pulumi:"indexedStrings"`
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons ManagementZoneRuleConditionIndexedTagComparisonArrayInput `pulumi:"indexedTagComparisons"`
	IndexedTags           ManagementZoneRuleConditionIndexedTagArrayInput           `pulumi:"indexedTags"`
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons ManagementZoneRuleConditionIntegerComparisonArrayInput `pulumi:"integerComparisons"`
	Integers           ManagementZoneRuleConditionIntegerArrayInput           `pulumi:"integers"`
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons ManagementZoneRuleConditionIpaddressComparisonArrayInput `pulumi:"ipaddressComparisons"`
	Ipaddresses          ManagementZoneRuleConditionIpaddressArrayInput           `pulumi:"ipaddresses"`
	Keys                 ManagementZoneRuleConditionKeyArrayInput                 `pulumi:"keys"`
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons ManagementZoneRuleConditionMobilePlatformComparisonArrayInput `pulumi:"mobilePlatformComparisons"`
	MobilePlatforms           ManagementZoneRuleConditionMobilePlatformArrayInput           `pulumi:"mobilePlatforms"`
	OsArches                  ManagementZoneRuleConditionOsArchArrayInput                   `pulumi:"osArches"`
	OsTypes                   ManagementZoneRuleConditionOsTypeArrayInput                   `pulumi:"osTypes"`
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons ManagementZoneRuleConditionOsarchitectureComparisonArrayInput `pulumi:"osarchitectureComparisons"`
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons ManagementZoneRuleConditionOstypeComparisonArrayInput `pulumi:"ostypeComparisons"`
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons ManagementZoneRuleConditionPaasTypeComparisonArrayInput `pulumi:"paasTypeComparisons"`
	PaasTypes           ManagementZoneRuleConditionPaasTypeArrayInput           `pulumi:"paasTypes"`
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys ManagementZoneRuleConditionProcessMetadataConditionKeyArrayInput `pulumi:"processMetadataConditionKeys"`
	ProcessMetadatas             ManagementZoneRuleConditionProcessMetadataArrayInput             `pulumi:"processMetadatas"`
	ServiceTopologies            ManagementZoneRuleConditionServiceTopologyArrayInput             `pulumi:"serviceTopologies"`
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons ManagementZoneRuleConditionServiceTopologyComparisonArrayInput `pulumi:"serviceTopologyComparisons"`
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons ManagementZoneRuleConditionServiceTypeComparisonArrayInput `pulumi:"serviceTypeComparisons"`
	ServiceTypes           ManagementZoneRuleConditionServiceTypeArrayInput           `pulumi:"serviceTypes"`
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons ManagementZoneRuleConditionSimpleHostTechComparisonArrayInput `pulumi:"simpleHostTechComparisons"`
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons ManagementZoneRuleConditionSimpleTechComparisonArrayInput `pulumi:"simpleTechComparisons"`
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons ManagementZoneRuleConditionStringComparisonArrayInput `pulumi:"stringComparisons"`
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys ManagementZoneRuleConditionStringConditionKeyArrayInput `pulumi:"stringConditionKeys"`
	StringKeys          ManagementZoneRuleConditionStringKeyArrayInput          `pulumi:"stringKeys"`
	Strings             ManagementZoneRuleConditionStringArrayInput             `pulumi:"strings"`
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayInput `pulumi:"syntheticEngineTypeComparisons"`
	SyntheticEngines               ManagementZoneRuleConditionSyntheticEngineArrayInput               `pulumi:"syntheticEngines"`
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons ManagementZoneRuleConditionTagComparisonArrayInput `pulumi:"tagComparisons"`
	Tags           ManagementZoneRuleConditionTagArrayInput           `pulumi:"tags"`
	Teches         ManagementZoneRuleConditionTechArrayInput          `pulumi:"teches"`
	Unknowns       pulumi.StringPtrInput                              `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleCondition)(nil)).Elem()
}

func (i ManagementZoneRuleConditionArgs) ToManagementZoneRuleConditionOutput() ManagementZoneRuleConditionOutput {
	return i.ToManagementZoneRuleConditionOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionArgs) ToManagementZoneRuleConditionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOutput)
}

// ManagementZoneRuleConditionArrayInput is an input type that accepts ManagementZoneRuleConditionArray and ManagementZoneRuleConditionArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionArrayInput` via:
//
//	ManagementZoneRuleConditionArray{ ManagementZoneRuleConditionArgs{...} }
type ManagementZoneRuleConditionArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionArrayOutput() ManagementZoneRuleConditionArrayOutput
	ToManagementZoneRuleConditionArrayOutputWithContext(context.Context) ManagementZoneRuleConditionArrayOutput
}

type ManagementZoneRuleConditionArray []ManagementZoneRuleConditionInput

func (ManagementZoneRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleCondition)(nil)).Elem()
}

func (i ManagementZoneRuleConditionArray) ToManagementZoneRuleConditionArrayOutput() ManagementZoneRuleConditionArrayOutput {
	return i.ToManagementZoneRuleConditionArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionArray) ToManagementZoneRuleConditionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionArrayOutput)
}

type ManagementZoneRuleConditionOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleCondition)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOutput) ToManagementZoneRuleConditionOutput() ManagementZoneRuleConditionOutput {
	return o
}

func (o ManagementZoneRuleConditionOutput) ToManagementZoneRuleConditionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOutput {
	return o
}

// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) ApplicationTypeComparisons() ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionApplicationTypeComparison {
		return v.ApplicationTypeComparisons
	}).(ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) ApplicationTypes() ManagementZoneRuleConditionApplicationTypeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionApplicationType {
		return v.ApplicationTypes
	}).(ManagementZoneRuleConditionApplicationTypeArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) AzureComputeModeComparisons() ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionAzureComputeModeComparison {
		return v.AzureComputeModeComparisons
	}).(ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput)
}

// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) AzureComputeModes() ManagementZoneRuleConditionAzureComputeModeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionAzureComputeMode {
		return v.AzureComputeModes
	}).(ManagementZoneRuleConditionAzureComputeModeArrayOutput)
}

// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) AzureSkuComparisions() ManagementZoneRuleConditionAzureSkuComparisionArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionAzureSkuComparision {
		return v.AzureSkuComparisions
	}).(ManagementZoneRuleConditionAzureSkuComparisionArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) AzureSkus() ManagementZoneRuleConditionAzureSkusArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionAzureSkus { return v.AzureSkus }).(ManagementZoneRuleConditionAzureSkusArrayOutput)
}

// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) BaseComparisonBasics() ManagementZoneRuleConditionBaseComparisonBasicArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionBaseComparisonBasic {
		return v.BaseComparisonBasics
	}).(ManagementZoneRuleConditionBaseComparisonBasicArrayOutput)
}

// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
func (o ManagementZoneRuleConditionOutput) BaseConditionKeys() ManagementZoneRuleConditionBaseConditionKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionBaseConditionKey {
		return v.BaseConditionKeys
	}).(ManagementZoneRuleConditionBaseConditionKeyArrayOutput)
}

// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) BitnessComparisions() ManagementZoneRuleConditionBitnessComparisionArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionBitnessComparision {
		return v.BitnessComparisions
	}).(ManagementZoneRuleConditionBitnessComparisionArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Bitnesses() ManagementZoneRuleConditionBitnessArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionBitness { return v.Bitnesses }).(ManagementZoneRuleConditionBitnessArrayOutput)
}

// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) CloudTypeComparisons() ManagementZoneRuleConditionCloudTypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCloudTypeComparison {
		return v.CloudTypeComparisons
	}).(ManagementZoneRuleConditionCloudTypeComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) CloudTypes() ManagementZoneRuleConditionCloudTypeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCloudType { return v.CloudTypes }).(ManagementZoneRuleConditionCloudTypeArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Comparisons() ManagementZoneRuleConditionComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionComparison { return v.Comparisons }).(ManagementZoneRuleConditionComparisonArrayOutput)
}

// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) CustomApplicationTypeComparisons() ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCustomApplicationTypeComparison {
		return v.CustomApplicationTypeComparisons
	}).(ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) CustomApplicationTypes() ManagementZoneRuleConditionCustomApplicationTypeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCustomApplicationType {
		return v.CustomApplicationTypes
	}).(ManagementZoneRuleConditionCustomApplicationTypeArrayOutput)
}

// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
func (o ManagementZoneRuleConditionOutput) CustomHostMetadataConditionKeys() ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCustomHostMetadataConditionKey {
		return v.CustomHostMetadataConditionKeys
	}).(ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) CustomHostMetadatas() ManagementZoneRuleConditionCustomHostMetadataArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCustomHostMetadata {
		return v.CustomHostMetadatas
	}).(ManagementZoneRuleConditionCustomHostMetadataArrayOutput)
}

// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
func (o ManagementZoneRuleConditionOutput) CustomProcessMetadataConditionKeys() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCustomProcessMetadataConditionKey {
		return v.CustomProcessMetadataConditionKeys
	}).(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) CustomProcessMetadatas() ManagementZoneRuleConditionCustomProcessMetadataArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionCustomProcessMetadata {
		return v.CustomProcessMetadatas
	}).(ManagementZoneRuleConditionCustomProcessMetadataArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) DatabaseTopologies() ManagementZoneRuleConditionDatabaseTopologyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionDatabaseTopology {
		return v.DatabaseTopologies
	}).(ManagementZoneRuleConditionDatabaseTopologyArrayOutput)
}

// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) DatabaseTopologyComparisons() ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionDatabaseTopologyComparison {
		return v.DatabaseTopologyComparisons
	}).(ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput)
}

// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) DcrumDecoderComparisons() ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionDcrumDecoderComparison {
		return v.DcrumDecoderComparisons
	}).(ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) DcrumDecoders() ManagementZoneRuleConditionDcrumDecoderArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionDcrumDecoder { return v.DcrumDecoders }).(ManagementZoneRuleConditionDcrumDecoderArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Entities() ManagementZoneRuleConditionEntityArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionEntity { return v.Entities }).(ManagementZoneRuleConditionEntityArrayOutput)
}

// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) EntityIdComparisons() ManagementZoneRuleConditionEntityIdComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionEntityIdComparison {
		return v.EntityIdComparisons
	}).(ManagementZoneRuleConditionEntityIdComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) HostTeches() ManagementZoneRuleConditionHostTechArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionHostTech { return v.HostTeches }).(ManagementZoneRuleConditionHostTechArrayOutput)
}

// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
func (o ManagementZoneRuleConditionOutput) HypervisorTypeComparisions() ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionHypervisorTypeComparision {
		return v.HypervisorTypeComparisions
	}).(ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Hypervisors() ManagementZoneRuleConditionHypervisorArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionHypervisor { return v.Hypervisors }).(ManagementZoneRuleConditionHypervisorArrayOutput)
}

// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) IndexedNameComparisons() ManagementZoneRuleConditionIndexedNameComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIndexedNameComparison {
		return v.IndexedNameComparisons
	}).(ManagementZoneRuleConditionIndexedNameComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) IndexedNames() ManagementZoneRuleConditionIndexedNameArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIndexedName { return v.IndexedNames }).(ManagementZoneRuleConditionIndexedNameArrayOutput)
}

// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) IndexedStringComparisons() ManagementZoneRuleConditionIndexedStringComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIndexedStringComparison {
		return v.IndexedStringComparisons
	}).(ManagementZoneRuleConditionIndexedStringComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) IndexedStrings() ManagementZoneRuleConditionIndexedStringArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIndexedString {
		return v.IndexedStrings
	}).(ManagementZoneRuleConditionIndexedStringArrayOutput)
}

// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) IndexedTagComparisons() ManagementZoneRuleConditionIndexedTagComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIndexedTagComparison {
		return v.IndexedTagComparisons
	}).(ManagementZoneRuleConditionIndexedTagComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) IndexedTags() ManagementZoneRuleConditionIndexedTagArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIndexedTag { return v.IndexedTags }).(ManagementZoneRuleConditionIndexedTagArrayOutput)
}

// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) IntegerComparisons() ManagementZoneRuleConditionIntegerComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIntegerComparison {
		return v.IntegerComparisons
	}).(ManagementZoneRuleConditionIntegerComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Integers() ManagementZoneRuleConditionIntegerArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionInteger { return v.Integers }).(ManagementZoneRuleConditionIntegerArrayOutput)
}

// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) IpaddressComparisons() ManagementZoneRuleConditionIpaddressComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIpaddressComparison {
		return v.IpaddressComparisons
	}).(ManagementZoneRuleConditionIpaddressComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Ipaddresses() ManagementZoneRuleConditionIpaddressArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionIpaddress { return v.Ipaddresses }).(ManagementZoneRuleConditionIpaddressArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Keys() ManagementZoneRuleConditionKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionKey { return v.Keys }).(ManagementZoneRuleConditionKeyArrayOutput)
}

// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) MobilePlatformComparisons() ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionMobilePlatformComparison {
		return v.MobilePlatformComparisons
	}).(ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) MobilePlatforms() ManagementZoneRuleConditionMobilePlatformArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionMobilePlatform {
		return v.MobilePlatforms
	}).(ManagementZoneRuleConditionMobilePlatformArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) OsArches() ManagementZoneRuleConditionOsArchArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionOsArch { return v.OsArches }).(ManagementZoneRuleConditionOsArchArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) OsTypes() ManagementZoneRuleConditionOsTypeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionOsType { return v.OsTypes }).(ManagementZoneRuleConditionOsTypeArrayOutput)
}

// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) OsarchitectureComparisons() ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionOsarchitectureComparison {
		return v.OsarchitectureComparisons
	}).(ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput)
}

// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) OstypeComparisons() ManagementZoneRuleConditionOstypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionOstypeComparison {
		return v.OstypeComparisons
	}).(ManagementZoneRuleConditionOstypeComparisonArrayOutput)
}

// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) PaasTypeComparisons() ManagementZoneRuleConditionPaasTypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionPaasTypeComparison {
		return v.PaasTypeComparisons
	}).(ManagementZoneRuleConditionPaasTypeComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) PaasTypes() ManagementZoneRuleConditionPaasTypeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionPaasType { return v.PaasTypes }).(ManagementZoneRuleConditionPaasTypeArrayOutput)
}

// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
func (o ManagementZoneRuleConditionOutput) ProcessMetadataConditionKeys() ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionProcessMetadataConditionKey {
		return v.ProcessMetadataConditionKeys
	}).(ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) ProcessMetadatas() ManagementZoneRuleConditionProcessMetadataArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionProcessMetadata {
		return v.ProcessMetadatas
	}).(ManagementZoneRuleConditionProcessMetadataArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) ServiceTopologies() ManagementZoneRuleConditionServiceTopologyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionServiceTopology {
		return v.ServiceTopologies
	}).(ManagementZoneRuleConditionServiceTopologyArrayOutput)
}

// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) ServiceTopologyComparisons() ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionServiceTopologyComparison {
		return v.ServiceTopologyComparisons
	}).(ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput)
}

// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) ServiceTypeComparisons() ManagementZoneRuleConditionServiceTypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionServiceTypeComparison {
		return v.ServiceTypeComparisons
	}).(ManagementZoneRuleConditionServiceTypeComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) ServiceTypes() ManagementZoneRuleConditionServiceTypeArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionServiceType { return v.ServiceTypes }).(ManagementZoneRuleConditionServiceTypeArrayOutput)
}

// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) SimpleHostTechComparisons() ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionSimpleHostTechComparison {
		return v.SimpleHostTechComparisons
	}).(ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput)
}

// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) SimpleTechComparisons() ManagementZoneRuleConditionSimpleTechComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionSimpleTechComparison {
		return v.SimpleTechComparisons
	}).(ManagementZoneRuleConditionSimpleTechComparisonArrayOutput)
}

// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) StringComparisons() ManagementZoneRuleConditionStringComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionStringComparison {
		return v.StringComparisons
	}).(ManagementZoneRuleConditionStringComparisonArrayOutput)
}

// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
func (o ManagementZoneRuleConditionOutput) StringConditionKeys() ManagementZoneRuleConditionStringConditionKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionStringConditionKey {
		return v.StringConditionKeys
	}).(ManagementZoneRuleConditionStringConditionKeyArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) StringKeys() ManagementZoneRuleConditionStringKeyArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionStringKey { return v.StringKeys }).(ManagementZoneRuleConditionStringKeyArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Strings() ManagementZoneRuleConditionStringArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionString { return v.Strings }).(ManagementZoneRuleConditionStringArrayOutput)
}

// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) SyntheticEngineTypeComparisons() ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionSyntheticEngineTypeComparison {
		return v.SyntheticEngineTypeComparisons
	}).(ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) SyntheticEngines() ManagementZoneRuleConditionSyntheticEngineArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionSyntheticEngine {
		return v.SyntheticEngines
	}).(ManagementZoneRuleConditionSyntheticEngineArrayOutput)
}

// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
func (o ManagementZoneRuleConditionOutput) TagComparisons() ManagementZoneRuleConditionTagComparisonArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionTagComparison {
		return v.TagComparisons
	}).(ManagementZoneRuleConditionTagComparisonArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Tags() ManagementZoneRuleConditionTagArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionTag { return v.Tags }).(ManagementZoneRuleConditionTagArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Teches() ManagementZoneRuleConditionTechArrayOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) []ManagementZoneRuleConditionTech { return v.Teches }).(ManagementZoneRuleConditionTechArrayOutput)
}

func (o ManagementZoneRuleConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleCondition)(nil)).Elem()
}

func (o ManagementZoneRuleConditionArrayOutput) ToManagementZoneRuleConditionArrayOutput() ManagementZoneRuleConditionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionArrayOutput) ToManagementZoneRuleConditionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleCondition {
		return vs[0].([]ManagementZoneRuleCondition)[vs[1].(int)]
	}).(ManagementZoneRuleConditionOutput)
}

type ManagementZoneRuleConditionApplicationType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionApplicationTypeInput is an input type that accepts ManagementZoneRuleConditionApplicationTypeArgs and ManagementZoneRuleConditionApplicationTypeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionApplicationTypeInput` via:
//
//	ManagementZoneRuleConditionApplicationTypeArgs{...}
type ManagementZoneRuleConditionApplicationTypeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionApplicationTypeOutput() ManagementZoneRuleConditionApplicationTypeOutput
	ToManagementZoneRuleConditionApplicationTypeOutputWithContext(context.Context) ManagementZoneRuleConditionApplicationTypeOutput
}

type ManagementZoneRuleConditionApplicationTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionApplicationType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionApplicationTypeArgs) ToManagementZoneRuleConditionApplicationTypeOutput() ManagementZoneRuleConditionApplicationTypeOutput {
	return i.ToManagementZoneRuleConditionApplicationTypeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionApplicationTypeArgs) ToManagementZoneRuleConditionApplicationTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionApplicationTypeOutput)
}

// ManagementZoneRuleConditionApplicationTypeArrayInput is an input type that accepts ManagementZoneRuleConditionApplicationTypeArray and ManagementZoneRuleConditionApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionApplicationTypeArrayInput` via:
//
//	ManagementZoneRuleConditionApplicationTypeArray{ ManagementZoneRuleConditionApplicationTypeArgs{...} }
type ManagementZoneRuleConditionApplicationTypeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionApplicationTypeArrayOutput() ManagementZoneRuleConditionApplicationTypeArrayOutput
	ToManagementZoneRuleConditionApplicationTypeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionApplicationTypeArrayOutput
}

type ManagementZoneRuleConditionApplicationTypeArray []ManagementZoneRuleConditionApplicationTypeInput

func (ManagementZoneRuleConditionApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionApplicationType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionApplicationTypeArray) ToManagementZoneRuleConditionApplicationTypeArrayOutput() ManagementZoneRuleConditionApplicationTypeArrayOutput {
	return i.ToManagementZoneRuleConditionApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionApplicationTypeArray) ToManagementZoneRuleConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionApplicationTypeArrayOutput)
}

type ManagementZoneRuleConditionApplicationTypeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionApplicationType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionApplicationTypeOutput) ToManagementZoneRuleConditionApplicationTypeOutput() ManagementZoneRuleConditionApplicationTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeOutput) ToManagementZoneRuleConditionApplicationTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionApplicationType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionApplicationTypeArrayOutput) ToManagementZoneRuleConditionApplicationTypeArrayOutput() ManagementZoneRuleConditionApplicationTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeArrayOutput) ToManagementZoneRuleConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionApplicationType {
		return vs[0].([]ManagementZoneRuleConditionApplicationType)[vs[1].(int)]
	}).(ManagementZoneRuleConditionApplicationTypeOutput)
}

type ManagementZoneRuleConditionApplicationTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionApplicationTypeComparisonInput is an input type that accepts ManagementZoneRuleConditionApplicationTypeComparisonArgs and ManagementZoneRuleConditionApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionApplicationTypeComparisonInput` via:
//
//	ManagementZoneRuleConditionApplicationTypeComparisonArgs{...}
type ManagementZoneRuleConditionApplicationTypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionApplicationTypeComparisonOutput() ManagementZoneRuleConditionApplicationTypeComparisonOutput
	ToManagementZoneRuleConditionApplicationTypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionApplicationTypeComparisonOutput
}

type ManagementZoneRuleConditionApplicationTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionApplicationTypeComparisonArgs) ToManagementZoneRuleConditionApplicationTypeComparisonOutput() ManagementZoneRuleConditionApplicationTypeComparisonOutput {
	return i.ToManagementZoneRuleConditionApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionApplicationTypeComparisonArgs) ToManagementZoneRuleConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionApplicationTypeComparisonOutput)
}

// ManagementZoneRuleConditionApplicationTypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionApplicationTypeComparisonArray and ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionApplicationTypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionApplicationTypeComparisonArray{ ManagementZoneRuleConditionApplicationTypeComparisonArgs{...} }
type ManagementZoneRuleConditionApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutput() ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput
	ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput
}

type ManagementZoneRuleConditionApplicationTypeComparisonArray []ManagementZoneRuleConditionApplicationTypeComparisonInput

func (ManagementZoneRuleConditionApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionApplicationTypeComparisonArray) ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutput() ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionApplicationTypeComparisonArray) ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) ToManagementZoneRuleConditionApplicationTypeComparisonOutput() ManagementZoneRuleConditionApplicationTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) ToManagementZoneRuleConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput) ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutput() ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput) ToManagementZoneRuleConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionApplicationTypeComparison {
		return vs[0].([]ManagementZoneRuleConditionApplicationTypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionApplicationTypeComparisonOutput)
}

type ManagementZoneRuleConditionAzureComputeMode struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionAzureComputeModeInput is an input type that accepts ManagementZoneRuleConditionAzureComputeModeArgs and ManagementZoneRuleConditionAzureComputeModeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureComputeModeInput` via:
//
//	ManagementZoneRuleConditionAzureComputeModeArgs{...}
type ManagementZoneRuleConditionAzureComputeModeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureComputeModeOutput() ManagementZoneRuleConditionAzureComputeModeOutput
	ToManagementZoneRuleConditionAzureComputeModeOutputWithContext(context.Context) ManagementZoneRuleConditionAzureComputeModeOutput
}

type ManagementZoneRuleConditionAzureComputeModeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionAzureComputeModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeMode)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureComputeModeArgs) ToManagementZoneRuleConditionAzureComputeModeOutput() ManagementZoneRuleConditionAzureComputeModeOutput {
	return i.ToManagementZoneRuleConditionAzureComputeModeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureComputeModeArgs) ToManagementZoneRuleConditionAzureComputeModeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureComputeModeOutput)
}

// ManagementZoneRuleConditionAzureComputeModeArrayInput is an input type that accepts ManagementZoneRuleConditionAzureComputeModeArray and ManagementZoneRuleConditionAzureComputeModeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureComputeModeArrayInput` via:
//
//	ManagementZoneRuleConditionAzureComputeModeArray{ ManagementZoneRuleConditionAzureComputeModeArgs{...} }
type ManagementZoneRuleConditionAzureComputeModeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureComputeModeArrayOutput() ManagementZoneRuleConditionAzureComputeModeArrayOutput
	ToManagementZoneRuleConditionAzureComputeModeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionAzureComputeModeArrayOutput
}

type ManagementZoneRuleConditionAzureComputeModeArray []ManagementZoneRuleConditionAzureComputeModeInput

func (ManagementZoneRuleConditionAzureComputeModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureComputeMode)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureComputeModeArray) ToManagementZoneRuleConditionAzureComputeModeArrayOutput() ManagementZoneRuleConditionAzureComputeModeArrayOutput {
	return i.ToManagementZoneRuleConditionAzureComputeModeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureComputeModeArray) ToManagementZoneRuleConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureComputeModeArrayOutput)
}

type ManagementZoneRuleConditionAzureComputeModeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureComputeModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeMode)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureComputeModeOutput) ToManagementZoneRuleConditionAzureComputeModeOutput() ManagementZoneRuleConditionAzureComputeModeOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeOutput) ToManagementZoneRuleConditionAzureComputeModeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeMode) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionAzureComputeModeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeMode) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionAzureComputeModeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeMode) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionAzureComputeModeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeMode) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionAzureComputeModeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureComputeModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureComputeMode)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureComputeModeArrayOutput) ToManagementZoneRuleConditionAzureComputeModeArrayOutput() ManagementZoneRuleConditionAzureComputeModeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeArrayOutput) ToManagementZoneRuleConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionAzureComputeModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionAzureComputeMode {
		return vs[0].([]ManagementZoneRuleConditionAzureComputeMode)[vs[1].(int)]
	}).(ManagementZoneRuleConditionAzureComputeModeOutput)
}

type ManagementZoneRuleConditionAzureComputeModeComparison struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionAzureComputeModeComparisonInput is an input type that accepts ManagementZoneRuleConditionAzureComputeModeComparisonArgs and ManagementZoneRuleConditionAzureComputeModeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureComputeModeComparisonInput` via:
//
//	ManagementZoneRuleConditionAzureComputeModeComparisonArgs{...}
type ManagementZoneRuleConditionAzureComputeModeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureComputeModeComparisonOutput() ManagementZoneRuleConditionAzureComputeModeComparisonOutput
	ToManagementZoneRuleConditionAzureComputeModeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionAzureComputeModeComparisonOutput
}

type ManagementZoneRuleConditionAzureComputeModeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionAzureComputeModeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureComputeModeComparisonArgs) ToManagementZoneRuleConditionAzureComputeModeComparisonOutput() ManagementZoneRuleConditionAzureComputeModeComparisonOutput {
	return i.ToManagementZoneRuleConditionAzureComputeModeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureComputeModeComparisonArgs) ToManagementZoneRuleConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureComputeModeComparisonOutput)
}

// ManagementZoneRuleConditionAzureComputeModeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionAzureComputeModeComparisonArray and ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureComputeModeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionAzureComputeModeComparisonArray{ ManagementZoneRuleConditionAzureComputeModeComparisonArgs{...} }
type ManagementZoneRuleConditionAzureComputeModeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput() ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput
	ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput
}

type ManagementZoneRuleConditionAzureComputeModeComparisonArray []ManagementZoneRuleConditionAzureComputeModeComparisonInput

func (ManagementZoneRuleConditionAzureComputeModeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureComputeModeComparisonArray) ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput() ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureComputeModeComparisonArray) ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput)
}

type ManagementZoneRuleConditionAzureComputeModeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureComputeModeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonOutput) ToManagementZoneRuleConditionAzureComputeModeComparisonOutput() ManagementZoneRuleConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonOutput) ToManagementZoneRuleConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeModeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeModeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeModeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureComputeModeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput) ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput() ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput) ToManagementZoneRuleConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionAzureComputeModeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionAzureComputeModeComparison {
		return vs[0].([]ManagementZoneRuleConditionAzureComputeModeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionAzureComputeModeComparisonOutput)
}

type ManagementZoneRuleConditionAzureSkuComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionAzureSkuComparisionInput is an input type that accepts ManagementZoneRuleConditionAzureSkuComparisionArgs and ManagementZoneRuleConditionAzureSkuComparisionOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureSkuComparisionInput` via:
//
//	ManagementZoneRuleConditionAzureSkuComparisionArgs{...}
type ManagementZoneRuleConditionAzureSkuComparisionInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureSkuComparisionOutput() ManagementZoneRuleConditionAzureSkuComparisionOutput
	ToManagementZoneRuleConditionAzureSkuComparisionOutputWithContext(context.Context) ManagementZoneRuleConditionAzureSkuComparisionOutput
}

type ManagementZoneRuleConditionAzureSkuComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionAzureSkuComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureSkuComparision)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureSkuComparisionArgs) ToManagementZoneRuleConditionAzureSkuComparisionOutput() ManagementZoneRuleConditionAzureSkuComparisionOutput {
	return i.ToManagementZoneRuleConditionAzureSkuComparisionOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureSkuComparisionArgs) ToManagementZoneRuleConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkuComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureSkuComparisionOutput)
}

// ManagementZoneRuleConditionAzureSkuComparisionArrayInput is an input type that accepts ManagementZoneRuleConditionAzureSkuComparisionArray and ManagementZoneRuleConditionAzureSkuComparisionArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureSkuComparisionArrayInput` via:
//
//	ManagementZoneRuleConditionAzureSkuComparisionArray{ ManagementZoneRuleConditionAzureSkuComparisionArgs{...} }
type ManagementZoneRuleConditionAzureSkuComparisionArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureSkuComparisionArrayOutput() ManagementZoneRuleConditionAzureSkuComparisionArrayOutput
	ToManagementZoneRuleConditionAzureSkuComparisionArrayOutputWithContext(context.Context) ManagementZoneRuleConditionAzureSkuComparisionArrayOutput
}

type ManagementZoneRuleConditionAzureSkuComparisionArray []ManagementZoneRuleConditionAzureSkuComparisionInput

func (ManagementZoneRuleConditionAzureSkuComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureSkuComparision)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureSkuComparisionArray) ToManagementZoneRuleConditionAzureSkuComparisionArrayOutput() ManagementZoneRuleConditionAzureSkuComparisionArrayOutput {
	return i.ToManagementZoneRuleConditionAzureSkuComparisionArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureSkuComparisionArray) ToManagementZoneRuleConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkuComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureSkuComparisionArrayOutput)
}

type ManagementZoneRuleConditionAzureSkuComparisionOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureSkuComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureSkuComparision)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) ToManagementZoneRuleConditionAzureSkuComparisionOutput() ManagementZoneRuleConditionAzureSkuComparisionOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) ToManagementZoneRuleConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkuComparisionOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkuComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkuComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkuComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkuComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionAzureSkuComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkuComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionAzureSkuComparisionArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureSkuComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureSkuComparision)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureSkuComparisionArrayOutput) ToManagementZoneRuleConditionAzureSkuComparisionArrayOutput() ManagementZoneRuleConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkuComparisionArrayOutput) ToManagementZoneRuleConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkuComparisionArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionAzureSkuComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionAzureSkuComparision {
		return vs[0].([]ManagementZoneRuleConditionAzureSkuComparision)[vs[1].(int)]
	}).(ManagementZoneRuleConditionAzureSkuComparisionOutput)
}

type ManagementZoneRuleConditionAzureSkus struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionAzureSkusInput is an input type that accepts ManagementZoneRuleConditionAzureSkusArgs and ManagementZoneRuleConditionAzureSkusOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureSkusInput` via:
//
//	ManagementZoneRuleConditionAzureSkusArgs{...}
type ManagementZoneRuleConditionAzureSkusInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureSkusOutput() ManagementZoneRuleConditionAzureSkusOutput
	ToManagementZoneRuleConditionAzureSkusOutputWithContext(context.Context) ManagementZoneRuleConditionAzureSkusOutput
}

type ManagementZoneRuleConditionAzureSkusArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionAzureSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureSkus)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureSkusArgs) ToManagementZoneRuleConditionAzureSkusOutput() ManagementZoneRuleConditionAzureSkusOutput {
	return i.ToManagementZoneRuleConditionAzureSkusOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureSkusArgs) ToManagementZoneRuleConditionAzureSkusOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureSkusOutput)
}

// ManagementZoneRuleConditionAzureSkusArrayInput is an input type that accepts ManagementZoneRuleConditionAzureSkusArray and ManagementZoneRuleConditionAzureSkusArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionAzureSkusArrayInput` via:
//
//	ManagementZoneRuleConditionAzureSkusArray{ ManagementZoneRuleConditionAzureSkusArgs{...} }
type ManagementZoneRuleConditionAzureSkusArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionAzureSkusArrayOutput() ManagementZoneRuleConditionAzureSkusArrayOutput
	ToManagementZoneRuleConditionAzureSkusArrayOutputWithContext(context.Context) ManagementZoneRuleConditionAzureSkusArrayOutput
}

type ManagementZoneRuleConditionAzureSkusArray []ManagementZoneRuleConditionAzureSkusInput

func (ManagementZoneRuleConditionAzureSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureSkus)(nil)).Elem()
}

func (i ManagementZoneRuleConditionAzureSkusArray) ToManagementZoneRuleConditionAzureSkusArrayOutput() ManagementZoneRuleConditionAzureSkusArrayOutput {
	return i.ToManagementZoneRuleConditionAzureSkusArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionAzureSkusArray) ToManagementZoneRuleConditionAzureSkusArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionAzureSkusArrayOutput)
}

type ManagementZoneRuleConditionAzureSkusOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionAzureSkus)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureSkusOutput) ToManagementZoneRuleConditionAzureSkusOutput() ManagementZoneRuleConditionAzureSkusOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkusOutput) ToManagementZoneRuleConditionAzureSkusOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkusOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkusOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkus) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionAzureSkusOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkus) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionAzureSkusOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkus) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionAzureSkusOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionAzureSkus) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionAzureSkusArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionAzureSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionAzureSkus)(nil)).Elem()
}

func (o ManagementZoneRuleConditionAzureSkusArrayOutput) ToManagementZoneRuleConditionAzureSkusArrayOutput() ManagementZoneRuleConditionAzureSkusArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkusArrayOutput) ToManagementZoneRuleConditionAzureSkusArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionAzureSkusArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionAzureSkusArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionAzureSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionAzureSkus {
		return vs[0].([]ManagementZoneRuleConditionAzureSkus)[vs[1].(int)]
	}).(ManagementZoneRuleConditionAzureSkusOutput)
}

type ManagementZoneRuleConditionBaseComparisonBasic struct {
	Negate   *bool   `pulumi:"negate"`
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionBaseComparisonBasicInput is an input type that accepts ManagementZoneRuleConditionBaseComparisonBasicArgs and ManagementZoneRuleConditionBaseComparisonBasicOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBaseComparisonBasicInput` via:
//
//	ManagementZoneRuleConditionBaseComparisonBasicArgs{...}
type ManagementZoneRuleConditionBaseComparisonBasicInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBaseComparisonBasicOutput() ManagementZoneRuleConditionBaseComparisonBasicOutput
	ToManagementZoneRuleConditionBaseComparisonBasicOutputWithContext(context.Context) ManagementZoneRuleConditionBaseComparisonBasicOutput
}

type ManagementZoneRuleConditionBaseComparisonBasicArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionBaseComparisonBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBaseComparisonBasicArgs) ToManagementZoneRuleConditionBaseComparisonBasicOutput() ManagementZoneRuleConditionBaseComparisonBasicOutput {
	return i.ToManagementZoneRuleConditionBaseComparisonBasicOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBaseComparisonBasicArgs) ToManagementZoneRuleConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseComparisonBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBaseComparisonBasicOutput)
}

// ManagementZoneRuleConditionBaseComparisonBasicArrayInput is an input type that accepts ManagementZoneRuleConditionBaseComparisonBasicArray and ManagementZoneRuleConditionBaseComparisonBasicArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBaseComparisonBasicArrayInput` via:
//
//	ManagementZoneRuleConditionBaseComparisonBasicArray{ ManagementZoneRuleConditionBaseComparisonBasicArgs{...} }
type ManagementZoneRuleConditionBaseComparisonBasicArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBaseComparisonBasicArrayOutput() ManagementZoneRuleConditionBaseComparisonBasicArrayOutput
	ToManagementZoneRuleConditionBaseComparisonBasicArrayOutputWithContext(context.Context) ManagementZoneRuleConditionBaseComparisonBasicArrayOutput
}

type ManagementZoneRuleConditionBaseComparisonBasicArray []ManagementZoneRuleConditionBaseComparisonBasicInput

func (ManagementZoneRuleConditionBaseComparisonBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBaseComparisonBasicArray) ToManagementZoneRuleConditionBaseComparisonBasicArrayOutput() ManagementZoneRuleConditionBaseComparisonBasicArrayOutput {
	return i.ToManagementZoneRuleConditionBaseComparisonBasicArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBaseComparisonBasicArray) ToManagementZoneRuleConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseComparisonBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBaseComparisonBasicArrayOutput)
}

type ManagementZoneRuleConditionBaseComparisonBasicOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBaseComparisonBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBaseComparisonBasicOutput) ToManagementZoneRuleConditionBaseComparisonBasicOutput() ManagementZoneRuleConditionBaseComparisonBasicOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseComparisonBasicOutput) ToManagementZoneRuleConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseComparisonBasicOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseComparisonBasicOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBaseComparisonBasic) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionBaseComparisonBasicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBaseComparisonBasic) string { return v.Type }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionBaseComparisonBasicOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBaseComparisonBasic) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionBaseComparisonBasicArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBaseComparisonBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBaseComparisonBasicArrayOutput) ToManagementZoneRuleConditionBaseComparisonBasicArrayOutput() ManagementZoneRuleConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseComparisonBasicArrayOutput) ToManagementZoneRuleConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseComparisonBasicArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionBaseComparisonBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionBaseComparisonBasic {
		return vs[0].([]ManagementZoneRuleConditionBaseComparisonBasic)[vs[1].(int)]
	}).(ManagementZoneRuleConditionBaseComparisonBasicOutput)
}

type ManagementZoneRuleConditionBaseConditionKey struct {
	Attribute string  `pulumi:"attribute"`
	Type      *string `pulumi:"type"`
	Unknowns  *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionBaseConditionKeyInput is an input type that accepts ManagementZoneRuleConditionBaseConditionKeyArgs and ManagementZoneRuleConditionBaseConditionKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBaseConditionKeyInput` via:
//
//	ManagementZoneRuleConditionBaseConditionKeyArgs{...}
type ManagementZoneRuleConditionBaseConditionKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBaseConditionKeyOutput() ManagementZoneRuleConditionBaseConditionKeyOutput
	ToManagementZoneRuleConditionBaseConditionKeyOutputWithContext(context.Context) ManagementZoneRuleConditionBaseConditionKeyOutput
}

type ManagementZoneRuleConditionBaseConditionKeyArgs struct {
	Attribute pulumi.StringInput    `pulumi:"attribute"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Unknowns  pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionBaseConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBaseConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBaseConditionKeyArgs) ToManagementZoneRuleConditionBaseConditionKeyOutput() ManagementZoneRuleConditionBaseConditionKeyOutput {
	return i.ToManagementZoneRuleConditionBaseConditionKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBaseConditionKeyArgs) ToManagementZoneRuleConditionBaseConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBaseConditionKeyOutput)
}

// ManagementZoneRuleConditionBaseConditionKeyArrayInput is an input type that accepts ManagementZoneRuleConditionBaseConditionKeyArray and ManagementZoneRuleConditionBaseConditionKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBaseConditionKeyArrayInput` via:
//
//	ManagementZoneRuleConditionBaseConditionKeyArray{ ManagementZoneRuleConditionBaseConditionKeyArgs{...} }
type ManagementZoneRuleConditionBaseConditionKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBaseConditionKeyArrayOutput() ManagementZoneRuleConditionBaseConditionKeyArrayOutput
	ToManagementZoneRuleConditionBaseConditionKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionBaseConditionKeyArrayOutput
}

type ManagementZoneRuleConditionBaseConditionKeyArray []ManagementZoneRuleConditionBaseConditionKeyInput

func (ManagementZoneRuleConditionBaseConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBaseConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBaseConditionKeyArray) ToManagementZoneRuleConditionBaseConditionKeyArrayOutput() ManagementZoneRuleConditionBaseConditionKeyArrayOutput {
	return i.ToManagementZoneRuleConditionBaseConditionKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBaseConditionKeyArray) ToManagementZoneRuleConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBaseConditionKeyArrayOutput)
}

type ManagementZoneRuleConditionBaseConditionKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBaseConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBaseConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBaseConditionKeyOutput) ToManagementZoneRuleConditionBaseConditionKeyOutput() ManagementZoneRuleConditionBaseConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseConditionKeyOutput) ToManagementZoneRuleConditionBaseConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBaseConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionBaseConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBaseConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionBaseConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBaseConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionBaseConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBaseConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBaseConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBaseConditionKeyArrayOutput) ToManagementZoneRuleConditionBaseConditionKeyArrayOutput() ManagementZoneRuleConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseConditionKeyArrayOutput) ToManagementZoneRuleConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBaseConditionKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionBaseConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionBaseConditionKey {
		return vs[0].([]ManagementZoneRuleConditionBaseConditionKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionBaseConditionKeyOutput)
}

type ManagementZoneRuleConditionBitness struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionBitnessInput is an input type that accepts ManagementZoneRuleConditionBitnessArgs and ManagementZoneRuleConditionBitnessOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBitnessInput` via:
//
//	ManagementZoneRuleConditionBitnessArgs{...}
type ManagementZoneRuleConditionBitnessInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBitnessOutput() ManagementZoneRuleConditionBitnessOutput
	ToManagementZoneRuleConditionBitnessOutputWithContext(context.Context) ManagementZoneRuleConditionBitnessOutput
}

type ManagementZoneRuleConditionBitnessArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionBitnessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBitness)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBitnessArgs) ToManagementZoneRuleConditionBitnessOutput() ManagementZoneRuleConditionBitnessOutput {
	return i.ToManagementZoneRuleConditionBitnessOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBitnessArgs) ToManagementZoneRuleConditionBitnessOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBitnessOutput)
}

// ManagementZoneRuleConditionBitnessArrayInput is an input type that accepts ManagementZoneRuleConditionBitnessArray and ManagementZoneRuleConditionBitnessArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBitnessArrayInput` via:
//
//	ManagementZoneRuleConditionBitnessArray{ ManagementZoneRuleConditionBitnessArgs{...} }
type ManagementZoneRuleConditionBitnessArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBitnessArrayOutput() ManagementZoneRuleConditionBitnessArrayOutput
	ToManagementZoneRuleConditionBitnessArrayOutputWithContext(context.Context) ManagementZoneRuleConditionBitnessArrayOutput
}

type ManagementZoneRuleConditionBitnessArray []ManagementZoneRuleConditionBitnessInput

func (ManagementZoneRuleConditionBitnessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBitness)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBitnessArray) ToManagementZoneRuleConditionBitnessArrayOutput() ManagementZoneRuleConditionBitnessArrayOutput {
	return i.ToManagementZoneRuleConditionBitnessArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBitnessArray) ToManagementZoneRuleConditionBitnessArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBitnessArrayOutput)
}

type ManagementZoneRuleConditionBitnessOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBitnessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBitness)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBitnessOutput) ToManagementZoneRuleConditionBitnessOutput() ManagementZoneRuleConditionBitnessOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessOutput) ToManagementZoneRuleConditionBitnessOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitness) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionBitnessOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitness) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionBitnessOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitness) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionBitnessOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitness) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionBitnessArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBitnessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBitness)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBitnessArrayOutput) ToManagementZoneRuleConditionBitnessArrayOutput() ManagementZoneRuleConditionBitnessArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessArrayOutput) ToManagementZoneRuleConditionBitnessArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionBitnessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionBitness {
		return vs[0].([]ManagementZoneRuleConditionBitness)[vs[1].(int)]
	}).(ManagementZoneRuleConditionBitnessOutput)
}

type ManagementZoneRuleConditionBitnessComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionBitnessComparisionInput is an input type that accepts ManagementZoneRuleConditionBitnessComparisionArgs and ManagementZoneRuleConditionBitnessComparisionOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBitnessComparisionInput` via:
//
//	ManagementZoneRuleConditionBitnessComparisionArgs{...}
type ManagementZoneRuleConditionBitnessComparisionInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBitnessComparisionOutput() ManagementZoneRuleConditionBitnessComparisionOutput
	ToManagementZoneRuleConditionBitnessComparisionOutputWithContext(context.Context) ManagementZoneRuleConditionBitnessComparisionOutput
}

type ManagementZoneRuleConditionBitnessComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionBitnessComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBitnessComparision)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBitnessComparisionArgs) ToManagementZoneRuleConditionBitnessComparisionOutput() ManagementZoneRuleConditionBitnessComparisionOutput {
	return i.ToManagementZoneRuleConditionBitnessComparisionOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBitnessComparisionArgs) ToManagementZoneRuleConditionBitnessComparisionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBitnessComparisionOutput)
}

// ManagementZoneRuleConditionBitnessComparisionArrayInput is an input type that accepts ManagementZoneRuleConditionBitnessComparisionArray and ManagementZoneRuleConditionBitnessComparisionArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionBitnessComparisionArrayInput` via:
//
//	ManagementZoneRuleConditionBitnessComparisionArray{ ManagementZoneRuleConditionBitnessComparisionArgs{...} }
type ManagementZoneRuleConditionBitnessComparisionArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionBitnessComparisionArrayOutput() ManagementZoneRuleConditionBitnessComparisionArrayOutput
	ToManagementZoneRuleConditionBitnessComparisionArrayOutputWithContext(context.Context) ManagementZoneRuleConditionBitnessComparisionArrayOutput
}

type ManagementZoneRuleConditionBitnessComparisionArray []ManagementZoneRuleConditionBitnessComparisionInput

func (ManagementZoneRuleConditionBitnessComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBitnessComparision)(nil)).Elem()
}

func (i ManagementZoneRuleConditionBitnessComparisionArray) ToManagementZoneRuleConditionBitnessComparisionArrayOutput() ManagementZoneRuleConditionBitnessComparisionArrayOutput {
	return i.ToManagementZoneRuleConditionBitnessComparisionArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionBitnessComparisionArray) ToManagementZoneRuleConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionBitnessComparisionArrayOutput)
}

type ManagementZoneRuleConditionBitnessComparisionOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBitnessComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionBitnessComparision)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBitnessComparisionOutput) ToManagementZoneRuleConditionBitnessComparisionOutput() ManagementZoneRuleConditionBitnessComparisionOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessComparisionOutput) ToManagementZoneRuleConditionBitnessComparisionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessComparisionOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitnessComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionBitnessComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitnessComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionBitnessComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitnessComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionBitnessComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitnessComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionBitnessComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionBitnessComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionBitnessComparisionArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionBitnessComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionBitnessComparision)(nil)).Elem()
}

func (o ManagementZoneRuleConditionBitnessComparisionArrayOutput) ToManagementZoneRuleConditionBitnessComparisionArrayOutput() ManagementZoneRuleConditionBitnessComparisionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessComparisionArrayOutput) ToManagementZoneRuleConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionBitnessComparisionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionBitnessComparisionArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionBitnessComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionBitnessComparision {
		return vs[0].([]ManagementZoneRuleConditionBitnessComparision)[vs[1].(int)]
	}).(ManagementZoneRuleConditionBitnessComparisionOutput)
}

type ManagementZoneRuleConditionCloudType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionCloudTypeInput is an input type that accepts ManagementZoneRuleConditionCloudTypeArgs and ManagementZoneRuleConditionCloudTypeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCloudTypeInput` via:
//
//	ManagementZoneRuleConditionCloudTypeArgs{...}
type ManagementZoneRuleConditionCloudTypeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCloudTypeOutput() ManagementZoneRuleConditionCloudTypeOutput
	ToManagementZoneRuleConditionCloudTypeOutputWithContext(context.Context) ManagementZoneRuleConditionCloudTypeOutput
}

type ManagementZoneRuleConditionCloudTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionCloudTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCloudType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCloudTypeArgs) ToManagementZoneRuleConditionCloudTypeOutput() ManagementZoneRuleConditionCloudTypeOutput {
	return i.ToManagementZoneRuleConditionCloudTypeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCloudTypeArgs) ToManagementZoneRuleConditionCloudTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCloudTypeOutput)
}

// ManagementZoneRuleConditionCloudTypeArrayInput is an input type that accepts ManagementZoneRuleConditionCloudTypeArray and ManagementZoneRuleConditionCloudTypeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCloudTypeArrayInput` via:
//
//	ManagementZoneRuleConditionCloudTypeArray{ ManagementZoneRuleConditionCloudTypeArgs{...} }
type ManagementZoneRuleConditionCloudTypeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCloudTypeArrayOutput() ManagementZoneRuleConditionCloudTypeArrayOutput
	ToManagementZoneRuleConditionCloudTypeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCloudTypeArrayOutput
}

type ManagementZoneRuleConditionCloudTypeArray []ManagementZoneRuleConditionCloudTypeInput

func (ManagementZoneRuleConditionCloudTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCloudType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCloudTypeArray) ToManagementZoneRuleConditionCloudTypeArrayOutput() ManagementZoneRuleConditionCloudTypeArrayOutput {
	return i.ToManagementZoneRuleConditionCloudTypeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCloudTypeArray) ToManagementZoneRuleConditionCloudTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCloudTypeArrayOutput)
}

type ManagementZoneRuleConditionCloudTypeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCloudType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCloudTypeOutput) ToManagementZoneRuleConditionCloudTypeOutput() ManagementZoneRuleConditionCloudTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeOutput) ToManagementZoneRuleConditionCloudTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionCloudTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCloudTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCloudTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCloudTypeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCloudTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCloudType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCloudTypeArrayOutput) ToManagementZoneRuleConditionCloudTypeArrayOutput() ManagementZoneRuleConditionCloudTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeArrayOutput) ToManagementZoneRuleConditionCloudTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCloudTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCloudType {
		return vs[0].([]ManagementZoneRuleConditionCloudType)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCloudTypeOutput)
}

type ManagementZoneRuleConditionCloudTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionCloudTypeComparisonInput is an input type that accepts ManagementZoneRuleConditionCloudTypeComparisonArgs and ManagementZoneRuleConditionCloudTypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCloudTypeComparisonInput` via:
//
//	ManagementZoneRuleConditionCloudTypeComparisonArgs{...}
type ManagementZoneRuleConditionCloudTypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCloudTypeComparisonOutput() ManagementZoneRuleConditionCloudTypeComparisonOutput
	ToManagementZoneRuleConditionCloudTypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionCloudTypeComparisonOutput
}

type ManagementZoneRuleConditionCloudTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionCloudTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCloudTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCloudTypeComparisonArgs) ToManagementZoneRuleConditionCloudTypeComparisonOutput() ManagementZoneRuleConditionCloudTypeComparisonOutput {
	return i.ToManagementZoneRuleConditionCloudTypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCloudTypeComparisonArgs) ToManagementZoneRuleConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCloudTypeComparisonOutput)
}

// ManagementZoneRuleConditionCloudTypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionCloudTypeComparisonArray and ManagementZoneRuleConditionCloudTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCloudTypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionCloudTypeComparisonArray{ ManagementZoneRuleConditionCloudTypeComparisonArgs{...} }
type ManagementZoneRuleConditionCloudTypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCloudTypeComparisonArrayOutput() ManagementZoneRuleConditionCloudTypeComparisonArrayOutput
	ToManagementZoneRuleConditionCloudTypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCloudTypeComparisonArrayOutput
}

type ManagementZoneRuleConditionCloudTypeComparisonArray []ManagementZoneRuleConditionCloudTypeComparisonInput

func (ManagementZoneRuleConditionCloudTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCloudTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCloudTypeComparisonArray) ToManagementZoneRuleConditionCloudTypeComparisonArrayOutput() ManagementZoneRuleConditionCloudTypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionCloudTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCloudTypeComparisonArray) ToManagementZoneRuleConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCloudTypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionCloudTypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCloudTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCloudTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) ToManagementZoneRuleConditionCloudTypeComparisonOutput() ManagementZoneRuleConditionCloudTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) ToManagementZoneRuleConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCloudTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCloudTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCloudTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCloudTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCloudTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCloudTypeComparisonArrayOutput) ToManagementZoneRuleConditionCloudTypeComparisonArrayOutput() ManagementZoneRuleConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeComparisonArrayOutput) ToManagementZoneRuleConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCloudTypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCloudTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCloudTypeComparison {
		return vs[0].([]ManagementZoneRuleConditionCloudTypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCloudTypeComparisonOutput)
}

type ManagementZoneRuleConditionComparison struct {
	Negate   *bool   `pulumi:"negate"`
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionComparisonInput is an input type that accepts ManagementZoneRuleConditionComparisonArgs and ManagementZoneRuleConditionComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionComparisonInput` via:
//
//	ManagementZoneRuleConditionComparisonArgs{...}
type ManagementZoneRuleConditionComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionComparisonOutput() ManagementZoneRuleConditionComparisonOutput
	ToManagementZoneRuleConditionComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionComparisonOutput
}

type ManagementZoneRuleConditionComparisonArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionComparisonArgs) ToManagementZoneRuleConditionComparisonOutput() ManagementZoneRuleConditionComparisonOutput {
	return i.ToManagementZoneRuleConditionComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionComparisonArgs) ToManagementZoneRuleConditionComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionComparisonOutput)
}

// ManagementZoneRuleConditionComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionComparisonArray and ManagementZoneRuleConditionComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionComparisonArray{ ManagementZoneRuleConditionComparisonArgs{...} }
type ManagementZoneRuleConditionComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionComparisonArrayOutput() ManagementZoneRuleConditionComparisonArrayOutput
	ToManagementZoneRuleConditionComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionComparisonArrayOutput
}

type ManagementZoneRuleConditionComparisonArray []ManagementZoneRuleConditionComparisonInput

func (ManagementZoneRuleConditionComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionComparisonArray) ToManagementZoneRuleConditionComparisonArrayOutput() ManagementZoneRuleConditionComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionComparisonArray) ToManagementZoneRuleConditionComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionComparisonArrayOutput)
}

type ManagementZoneRuleConditionComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionComparisonOutput) ToManagementZoneRuleConditionComparisonOutput() ManagementZoneRuleConditionComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionComparisonOutput) ToManagementZoneRuleConditionComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionComparisonOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionComparison) string { return v.Type }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionComparisonArrayOutput) ToManagementZoneRuleConditionComparisonArrayOutput() ManagementZoneRuleConditionComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionComparisonArrayOutput) ToManagementZoneRuleConditionComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionComparison {
		return vs[0].([]ManagementZoneRuleConditionComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionComparisonOutput)
}

type ManagementZoneRuleConditionCustomApplicationType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionCustomApplicationTypeInput is an input type that accepts ManagementZoneRuleConditionCustomApplicationTypeArgs and ManagementZoneRuleConditionCustomApplicationTypeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomApplicationTypeInput` via:
//
//	ManagementZoneRuleConditionCustomApplicationTypeArgs{...}
type ManagementZoneRuleConditionCustomApplicationTypeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomApplicationTypeOutput() ManagementZoneRuleConditionCustomApplicationTypeOutput
	ToManagementZoneRuleConditionCustomApplicationTypeOutputWithContext(context.Context) ManagementZoneRuleConditionCustomApplicationTypeOutput
}

type ManagementZoneRuleConditionCustomApplicationTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionCustomApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomApplicationTypeArgs) ToManagementZoneRuleConditionCustomApplicationTypeOutput() ManagementZoneRuleConditionCustomApplicationTypeOutput {
	return i.ToManagementZoneRuleConditionCustomApplicationTypeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomApplicationTypeArgs) ToManagementZoneRuleConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomApplicationTypeOutput)
}

// ManagementZoneRuleConditionCustomApplicationTypeArrayInput is an input type that accepts ManagementZoneRuleConditionCustomApplicationTypeArray and ManagementZoneRuleConditionCustomApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomApplicationTypeArrayInput` via:
//
//	ManagementZoneRuleConditionCustomApplicationTypeArray{ ManagementZoneRuleConditionCustomApplicationTypeArgs{...} }
type ManagementZoneRuleConditionCustomApplicationTypeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomApplicationTypeArrayOutput() ManagementZoneRuleConditionCustomApplicationTypeArrayOutput
	ToManagementZoneRuleConditionCustomApplicationTypeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCustomApplicationTypeArrayOutput
}

type ManagementZoneRuleConditionCustomApplicationTypeArray []ManagementZoneRuleConditionCustomApplicationTypeInput

func (ManagementZoneRuleConditionCustomApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomApplicationType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomApplicationTypeArray) ToManagementZoneRuleConditionCustomApplicationTypeArrayOutput() ManagementZoneRuleConditionCustomApplicationTypeArrayOutput {
	return i.ToManagementZoneRuleConditionCustomApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomApplicationTypeArray) ToManagementZoneRuleConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomApplicationTypeArrayOutput)
}

type ManagementZoneRuleConditionCustomApplicationTypeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomApplicationTypeOutput) ToManagementZoneRuleConditionCustomApplicationTypeOutput() ManagementZoneRuleConditionCustomApplicationTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeOutput) ToManagementZoneRuleConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionCustomApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCustomApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomApplicationType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomApplicationTypeArrayOutput) ToManagementZoneRuleConditionCustomApplicationTypeArrayOutput() ManagementZoneRuleConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeArrayOutput) ToManagementZoneRuleConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCustomApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCustomApplicationType {
		return vs[0].([]ManagementZoneRuleConditionCustomApplicationType)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCustomApplicationTypeOutput)
}

type ManagementZoneRuleConditionCustomApplicationTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionCustomApplicationTypeComparisonInput is an input type that accepts ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs and ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomApplicationTypeComparisonInput` via:
//
//	ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs{...}
type ManagementZoneRuleConditionCustomApplicationTypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutput() ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput
	ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput
}

type ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs) ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutput() ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput {
	return i.ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs) ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput)
}

// ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionCustomApplicationTypeComparisonArray and ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionCustomApplicationTypeComparisonArray{ ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs{...} }
type ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput() ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput
	ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput
}

type ManagementZoneRuleConditionCustomApplicationTypeComparisonArray []ManagementZoneRuleConditionCustomApplicationTypeComparisonInput

func (ManagementZoneRuleConditionCustomApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomApplicationTypeComparisonArray) ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput() ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomApplicationTypeComparisonArray) ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutput() ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) ToManagementZoneRuleConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput) ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput() ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput) ToManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCustomApplicationTypeComparison {
		return vs[0].([]ManagementZoneRuleConditionCustomApplicationTypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput)
}

type ManagementZoneRuleConditionCustomHostMetadata struct {
	Attribute  string                                                  `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomHostMetadataDynamicKey `pulumi:"dynamicKey"`
	Unknowns   *string                                                 `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomHostMetadataInput is an input type that accepts ManagementZoneRuleConditionCustomHostMetadataArgs and ManagementZoneRuleConditionCustomHostMetadataOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomHostMetadataInput` via:
//
//	ManagementZoneRuleConditionCustomHostMetadataArgs{...}
type ManagementZoneRuleConditionCustomHostMetadataInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomHostMetadataOutput() ManagementZoneRuleConditionCustomHostMetadataOutput
	ToManagementZoneRuleConditionCustomHostMetadataOutputWithContext(context.Context) ManagementZoneRuleConditionCustomHostMetadataOutput
}

type ManagementZoneRuleConditionCustomHostMetadataArgs struct {
	Attribute  pulumi.StringInput                                           `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomHostMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput                                        `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomHostMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadata)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomHostMetadataArgs) ToManagementZoneRuleConditionCustomHostMetadataOutput() ManagementZoneRuleConditionCustomHostMetadataOutput {
	return i.ToManagementZoneRuleConditionCustomHostMetadataOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomHostMetadataArgs) ToManagementZoneRuleConditionCustomHostMetadataOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomHostMetadataOutput)
}

// ManagementZoneRuleConditionCustomHostMetadataArrayInput is an input type that accepts ManagementZoneRuleConditionCustomHostMetadataArray and ManagementZoneRuleConditionCustomHostMetadataArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomHostMetadataArrayInput` via:
//
//	ManagementZoneRuleConditionCustomHostMetadataArray{ ManagementZoneRuleConditionCustomHostMetadataArgs{...} }
type ManagementZoneRuleConditionCustomHostMetadataArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomHostMetadataArrayOutput() ManagementZoneRuleConditionCustomHostMetadataArrayOutput
	ToManagementZoneRuleConditionCustomHostMetadataArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCustomHostMetadataArrayOutput
}

type ManagementZoneRuleConditionCustomHostMetadataArray []ManagementZoneRuleConditionCustomHostMetadataInput

func (ManagementZoneRuleConditionCustomHostMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomHostMetadata)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomHostMetadataArray) ToManagementZoneRuleConditionCustomHostMetadataArrayOutput() ManagementZoneRuleConditionCustomHostMetadataArrayOutput {
	return i.ToManagementZoneRuleConditionCustomHostMetadataArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomHostMetadataArray) ToManagementZoneRuleConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomHostMetadataArrayOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomHostMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadata)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomHostMetadataOutput) ToManagementZoneRuleConditionCustomHostMetadataOutput() ManagementZoneRuleConditionCustomHostMetadataOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataOutput) ToManagementZoneRuleConditionCustomHostMetadataOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataOutput) DynamicKey() ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadata) ManagementZoneRuleConditionCustomHostMetadataDynamicKey {
		return v.DynamicKey
	}).(ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomHostMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomHostMetadata)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomHostMetadataArrayOutput) ToManagementZoneRuleConditionCustomHostMetadataArrayOutput() ManagementZoneRuleConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataArrayOutput) ToManagementZoneRuleConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCustomHostMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCustomHostMetadata {
		return vs[0].([]ManagementZoneRuleConditionCustomHostMetadata)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCustomHostMetadataOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKey struct {
	Attribute  string                                                              `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomHostMetadataConditionKeyInput is an input type that accepts ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs and ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomHostMetadataConditionKeyInput` via:
//
//	ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs{...}
type ManagementZoneRuleConditionCustomHostMetadataConditionKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput
	ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutputWithContext(context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput                                                       `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput {
	return i.ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput)
}

// ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayInput is an input type that accepts ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray and ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayInput` via:
//
//	ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray{ ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs{...} }
type ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput
	ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray []ManagementZoneRuleConditionCustomHostMetadataConditionKeyInput

func (ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput {
	return i.ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) DynamicKey() ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKey) ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCustomHostMetadataConditionKey {
		return vs[0].([]ManagementZoneRuleConditionCustomHostMetadataConditionKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyInput is an input type that accepts ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs and ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyInput` via:
//
//	ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs{...}
type ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput
	ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return i.ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomHostMetadataDynamicKeyInput is an input type that accepts ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs and ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomHostMetadataDynamicKeyInput` via:
//
//	ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs{...}
type ManagementZoneRuleConditionCustomHostMetadataDynamicKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput() ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput
	ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Context) ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput
}

type ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs) ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput() ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput {
	return i.ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs) ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput)
}

type ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput) ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput() ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput) ToManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomHostMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadata struct {
	Attribute  string                                                     `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomProcessMetadataDynamicKey `pulumi:"dynamicKey"`
	Unknowns   *string                                                    `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomProcessMetadataInput is an input type that accepts ManagementZoneRuleConditionCustomProcessMetadataArgs and ManagementZoneRuleConditionCustomProcessMetadataOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomProcessMetadataInput` via:
//
//	ManagementZoneRuleConditionCustomProcessMetadataArgs{...}
type ManagementZoneRuleConditionCustomProcessMetadataInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomProcessMetadataOutput() ManagementZoneRuleConditionCustomProcessMetadataOutput
	ToManagementZoneRuleConditionCustomProcessMetadataOutputWithContext(context.Context) ManagementZoneRuleConditionCustomProcessMetadataOutput
}

type ManagementZoneRuleConditionCustomProcessMetadataArgs struct {
	Attribute  pulumi.StringInput                                              `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput                                           `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomProcessMetadataArgs) ToManagementZoneRuleConditionCustomProcessMetadataOutput() ManagementZoneRuleConditionCustomProcessMetadataOutput {
	return i.ToManagementZoneRuleConditionCustomProcessMetadataOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomProcessMetadataArgs) ToManagementZoneRuleConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomProcessMetadataOutput)
}

// ManagementZoneRuleConditionCustomProcessMetadataArrayInput is an input type that accepts ManagementZoneRuleConditionCustomProcessMetadataArray and ManagementZoneRuleConditionCustomProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomProcessMetadataArrayInput` via:
//
//	ManagementZoneRuleConditionCustomProcessMetadataArray{ ManagementZoneRuleConditionCustomProcessMetadataArgs{...} }
type ManagementZoneRuleConditionCustomProcessMetadataArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomProcessMetadataArrayOutput() ManagementZoneRuleConditionCustomProcessMetadataArrayOutput
	ToManagementZoneRuleConditionCustomProcessMetadataArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCustomProcessMetadataArrayOutput
}

type ManagementZoneRuleConditionCustomProcessMetadataArray []ManagementZoneRuleConditionCustomProcessMetadataInput

func (ManagementZoneRuleConditionCustomProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomProcessMetadataArray) ToManagementZoneRuleConditionCustomProcessMetadataArrayOutput() ManagementZoneRuleConditionCustomProcessMetadataArrayOutput {
	return i.ToManagementZoneRuleConditionCustomProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomProcessMetadataArray) ToManagementZoneRuleConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomProcessMetadataArrayOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomProcessMetadataOutput) ToManagementZoneRuleConditionCustomProcessMetadataOutput() ManagementZoneRuleConditionCustomProcessMetadataOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataOutput) ToManagementZoneRuleConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataOutput) DynamicKey() ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadata) ManagementZoneRuleConditionCustomProcessMetadataDynamicKey {
		return v.DynamicKey
	}).(ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomProcessMetadataArrayOutput) ToManagementZoneRuleConditionCustomProcessMetadataArrayOutput() ManagementZoneRuleConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataArrayOutput) ToManagementZoneRuleConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCustomProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCustomProcessMetadata {
		return vs[0].([]ManagementZoneRuleConditionCustomProcessMetadata)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCustomProcessMetadataOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKey struct {
	Attribute  string                                                                 `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomProcessMetadataConditionKeyInput is an input type that accepts ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs and ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomProcessMetadataConditionKeyInput` via:
//
//	ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs{...}
type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput
	ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput                                                          `pulumi:"attribute"`
	DynamicKey ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput {
	return i.ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput)
}

// ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayInput is an input type that accepts ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray and ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayInput` via:
//
//	ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray{ ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs{...} }
type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput
	ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray []ManagementZoneRuleConditionCustomProcessMetadataConditionKeyInput

func (ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput {
	return i.ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) DynamicKey() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKey) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionCustomProcessMetadataConditionKey {
		return vs[0].([]ManagementZoneRuleConditionCustomProcessMetadataConditionKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyInput is an input type that accepts ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs and ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyInput` via:
//
//	ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{...}
type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
	ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return i.ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyInput is an input type that accepts ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs and ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyInput` via:
//
//	ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs{...}
type ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput
	ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Context) ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput
}

type ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs) ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput {
	return i.ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs) ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput)
}

type ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput) ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput() ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput) ToManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionCustomProcessMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionDatabaseTopology struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionDatabaseTopologyInput is an input type that accepts ManagementZoneRuleConditionDatabaseTopologyArgs and ManagementZoneRuleConditionDatabaseTopologyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDatabaseTopologyInput` via:
//
//	ManagementZoneRuleConditionDatabaseTopologyArgs{...}
type ManagementZoneRuleConditionDatabaseTopologyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDatabaseTopologyOutput() ManagementZoneRuleConditionDatabaseTopologyOutput
	ToManagementZoneRuleConditionDatabaseTopologyOutputWithContext(context.Context) ManagementZoneRuleConditionDatabaseTopologyOutput
}

type ManagementZoneRuleConditionDatabaseTopologyArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionDatabaseTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopology)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDatabaseTopologyArgs) ToManagementZoneRuleConditionDatabaseTopologyOutput() ManagementZoneRuleConditionDatabaseTopologyOutput {
	return i.ToManagementZoneRuleConditionDatabaseTopologyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDatabaseTopologyArgs) ToManagementZoneRuleConditionDatabaseTopologyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDatabaseTopologyOutput)
}

// ManagementZoneRuleConditionDatabaseTopologyArrayInput is an input type that accepts ManagementZoneRuleConditionDatabaseTopologyArray and ManagementZoneRuleConditionDatabaseTopologyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDatabaseTopologyArrayInput` via:
//
//	ManagementZoneRuleConditionDatabaseTopologyArray{ ManagementZoneRuleConditionDatabaseTopologyArgs{...} }
type ManagementZoneRuleConditionDatabaseTopologyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDatabaseTopologyArrayOutput() ManagementZoneRuleConditionDatabaseTopologyArrayOutput
	ToManagementZoneRuleConditionDatabaseTopologyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionDatabaseTopologyArrayOutput
}

type ManagementZoneRuleConditionDatabaseTopologyArray []ManagementZoneRuleConditionDatabaseTopologyInput

func (ManagementZoneRuleConditionDatabaseTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDatabaseTopology)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDatabaseTopologyArray) ToManagementZoneRuleConditionDatabaseTopologyArrayOutput() ManagementZoneRuleConditionDatabaseTopologyArrayOutput {
	return i.ToManagementZoneRuleConditionDatabaseTopologyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDatabaseTopologyArray) ToManagementZoneRuleConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDatabaseTopologyArrayOutput)
}

type ManagementZoneRuleConditionDatabaseTopologyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDatabaseTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopology)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDatabaseTopologyOutput) ToManagementZoneRuleConditionDatabaseTopologyOutput() ManagementZoneRuleConditionDatabaseTopologyOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyOutput) ToManagementZoneRuleConditionDatabaseTopologyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionDatabaseTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopology) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionDatabaseTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionDatabaseTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionDatabaseTopologyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDatabaseTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDatabaseTopology)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDatabaseTopologyArrayOutput) ToManagementZoneRuleConditionDatabaseTopologyArrayOutput() ManagementZoneRuleConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyArrayOutput) ToManagementZoneRuleConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionDatabaseTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionDatabaseTopology {
		return vs[0].([]ManagementZoneRuleConditionDatabaseTopology)[vs[1].(int)]
	}).(ManagementZoneRuleConditionDatabaseTopologyOutput)
}

type ManagementZoneRuleConditionDatabaseTopologyComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionDatabaseTopologyComparisonInput is an input type that accepts ManagementZoneRuleConditionDatabaseTopologyComparisonArgs and ManagementZoneRuleConditionDatabaseTopologyComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDatabaseTopologyComparisonInput` via:
//
//	ManagementZoneRuleConditionDatabaseTopologyComparisonArgs{...}
type ManagementZoneRuleConditionDatabaseTopologyComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDatabaseTopologyComparisonOutput() ManagementZoneRuleConditionDatabaseTopologyComparisonOutput
	ToManagementZoneRuleConditionDatabaseTopologyComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionDatabaseTopologyComparisonOutput
}

type ManagementZoneRuleConditionDatabaseTopologyComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionDatabaseTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDatabaseTopologyComparisonArgs) ToManagementZoneRuleConditionDatabaseTopologyComparisonOutput() ManagementZoneRuleConditionDatabaseTopologyComparisonOutput {
	return i.ToManagementZoneRuleConditionDatabaseTopologyComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDatabaseTopologyComparisonArgs) ToManagementZoneRuleConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDatabaseTopologyComparisonOutput)
}

// ManagementZoneRuleConditionDatabaseTopologyComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionDatabaseTopologyComparisonArray and ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDatabaseTopologyComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionDatabaseTopologyComparisonArray{ ManagementZoneRuleConditionDatabaseTopologyComparisonArgs{...} }
type ManagementZoneRuleConditionDatabaseTopologyComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput() ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput
	ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput
}

type ManagementZoneRuleConditionDatabaseTopologyComparisonArray []ManagementZoneRuleConditionDatabaseTopologyComparisonInput

func (ManagementZoneRuleConditionDatabaseTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDatabaseTopologyComparisonArray) ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput() ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDatabaseTopologyComparisonArray) ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput)
}

type ManagementZoneRuleConditionDatabaseTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) ToManagementZoneRuleConditionDatabaseTopologyComparisonOutput() ManagementZoneRuleConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) ToManagementZoneRuleConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDatabaseTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput) ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput() ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput) ToManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionDatabaseTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionDatabaseTopologyComparison {
		return vs[0].([]ManagementZoneRuleConditionDatabaseTopologyComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionDatabaseTopologyComparisonOutput)
}

type ManagementZoneRuleConditionDcrumDecoder struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionDcrumDecoderInput is an input type that accepts ManagementZoneRuleConditionDcrumDecoderArgs and ManagementZoneRuleConditionDcrumDecoderOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDcrumDecoderInput` via:
//
//	ManagementZoneRuleConditionDcrumDecoderArgs{...}
type ManagementZoneRuleConditionDcrumDecoderInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDcrumDecoderOutput() ManagementZoneRuleConditionDcrumDecoderOutput
	ToManagementZoneRuleConditionDcrumDecoderOutputWithContext(context.Context) ManagementZoneRuleConditionDcrumDecoderOutput
}

type ManagementZoneRuleConditionDcrumDecoderArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionDcrumDecoderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoder)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDcrumDecoderArgs) ToManagementZoneRuleConditionDcrumDecoderOutput() ManagementZoneRuleConditionDcrumDecoderOutput {
	return i.ToManagementZoneRuleConditionDcrumDecoderOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDcrumDecoderArgs) ToManagementZoneRuleConditionDcrumDecoderOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDcrumDecoderOutput)
}

// ManagementZoneRuleConditionDcrumDecoderArrayInput is an input type that accepts ManagementZoneRuleConditionDcrumDecoderArray and ManagementZoneRuleConditionDcrumDecoderArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDcrumDecoderArrayInput` via:
//
//	ManagementZoneRuleConditionDcrumDecoderArray{ ManagementZoneRuleConditionDcrumDecoderArgs{...} }
type ManagementZoneRuleConditionDcrumDecoderArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDcrumDecoderArrayOutput() ManagementZoneRuleConditionDcrumDecoderArrayOutput
	ToManagementZoneRuleConditionDcrumDecoderArrayOutputWithContext(context.Context) ManagementZoneRuleConditionDcrumDecoderArrayOutput
}

type ManagementZoneRuleConditionDcrumDecoderArray []ManagementZoneRuleConditionDcrumDecoderInput

func (ManagementZoneRuleConditionDcrumDecoderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDcrumDecoder)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDcrumDecoderArray) ToManagementZoneRuleConditionDcrumDecoderArrayOutput() ManagementZoneRuleConditionDcrumDecoderArrayOutput {
	return i.ToManagementZoneRuleConditionDcrumDecoderArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDcrumDecoderArray) ToManagementZoneRuleConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDcrumDecoderArrayOutput)
}

type ManagementZoneRuleConditionDcrumDecoderOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDcrumDecoderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoder)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDcrumDecoderOutput) ToManagementZoneRuleConditionDcrumDecoderOutput() ManagementZoneRuleConditionDcrumDecoderOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderOutput) ToManagementZoneRuleConditionDcrumDecoderOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoder) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionDcrumDecoderOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoder) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionDcrumDecoderOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoder) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionDcrumDecoderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoder) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionDcrumDecoderArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDcrumDecoderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDcrumDecoder)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDcrumDecoderArrayOutput) ToManagementZoneRuleConditionDcrumDecoderArrayOutput() ManagementZoneRuleConditionDcrumDecoderArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderArrayOutput) ToManagementZoneRuleConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionDcrumDecoderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionDcrumDecoder {
		return vs[0].([]ManagementZoneRuleConditionDcrumDecoder)[vs[1].(int)]
	}).(ManagementZoneRuleConditionDcrumDecoderOutput)
}

type ManagementZoneRuleConditionDcrumDecoderComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionDcrumDecoderComparisonInput is an input type that accepts ManagementZoneRuleConditionDcrumDecoderComparisonArgs and ManagementZoneRuleConditionDcrumDecoderComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDcrumDecoderComparisonInput` via:
//
//	ManagementZoneRuleConditionDcrumDecoderComparisonArgs{...}
type ManagementZoneRuleConditionDcrumDecoderComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDcrumDecoderComparisonOutput() ManagementZoneRuleConditionDcrumDecoderComparisonOutput
	ToManagementZoneRuleConditionDcrumDecoderComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionDcrumDecoderComparisonOutput
}

type ManagementZoneRuleConditionDcrumDecoderComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionDcrumDecoderComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDcrumDecoderComparisonArgs) ToManagementZoneRuleConditionDcrumDecoderComparisonOutput() ManagementZoneRuleConditionDcrumDecoderComparisonOutput {
	return i.ToManagementZoneRuleConditionDcrumDecoderComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDcrumDecoderComparisonArgs) ToManagementZoneRuleConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDcrumDecoderComparisonOutput)
}

// ManagementZoneRuleConditionDcrumDecoderComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionDcrumDecoderComparisonArray and ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionDcrumDecoderComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionDcrumDecoderComparisonArray{ ManagementZoneRuleConditionDcrumDecoderComparisonArgs{...} }
type ManagementZoneRuleConditionDcrumDecoderComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput() ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput
	ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput
}

type ManagementZoneRuleConditionDcrumDecoderComparisonArray []ManagementZoneRuleConditionDcrumDecoderComparisonInput

func (ManagementZoneRuleConditionDcrumDecoderComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionDcrumDecoderComparisonArray) ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput() ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionDcrumDecoderComparisonArray) ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput)
}

type ManagementZoneRuleConditionDcrumDecoderComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDcrumDecoderComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) ToManagementZoneRuleConditionDcrumDecoderComparisonOutput() ManagementZoneRuleConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) ToManagementZoneRuleConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoderComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoderComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoderComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoderComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionDcrumDecoderComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput) ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput() ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput) ToManagementZoneRuleConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionDcrumDecoderComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionDcrumDecoderComparison {
		return vs[0].([]ManagementZoneRuleConditionDcrumDecoderComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionDcrumDecoderComparisonOutput)
}

type ManagementZoneRuleConditionEntity struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionEntityInput is an input type that accepts ManagementZoneRuleConditionEntityArgs and ManagementZoneRuleConditionEntityOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionEntityInput` via:
//
//	ManagementZoneRuleConditionEntityArgs{...}
type ManagementZoneRuleConditionEntityInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionEntityOutput() ManagementZoneRuleConditionEntityOutput
	ToManagementZoneRuleConditionEntityOutputWithContext(context.Context) ManagementZoneRuleConditionEntityOutput
}

type ManagementZoneRuleConditionEntityArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionEntity)(nil)).Elem()
}

func (i ManagementZoneRuleConditionEntityArgs) ToManagementZoneRuleConditionEntityOutput() ManagementZoneRuleConditionEntityOutput {
	return i.ToManagementZoneRuleConditionEntityOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionEntityArgs) ToManagementZoneRuleConditionEntityOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionEntityOutput)
}

// ManagementZoneRuleConditionEntityArrayInput is an input type that accepts ManagementZoneRuleConditionEntityArray and ManagementZoneRuleConditionEntityArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionEntityArrayInput` via:
//
//	ManagementZoneRuleConditionEntityArray{ ManagementZoneRuleConditionEntityArgs{...} }
type ManagementZoneRuleConditionEntityArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionEntityArrayOutput() ManagementZoneRuleConditionEntityArrayOutput
	ToManagementZoneRuleConditionEntityArrayOutputWithContext(context.Context) ManagementZoneRuleConditionEntityArrayOutput
}

type ManagementZoneRuleConditionEntityArray []ManagementZoneRuleConditionEntityInput

func (ManagementZoneRuleConditionEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionEntity)(nil)).Elem()
}

func (i ManagementZoneRuleConditionEntityArray) ToManagementZoneRuleConditionEntityArrayOutput() ManagementZoneRuleConditionEntityArrayOutput {
	return i.ToManagementZoneRuleConditionEntityArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionEntityArray) ToManagementZoneRuleConditionEntityArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionEntityArrayOutput)
}

type ManagementZoneRuleConditionEntityOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionEntity)(nil)).Elem()
}

func (o ManagementZoneRuleConditionEntityOutput) ToManagementZoneRuleConditionEntityOutput() ManagementZoneRuleConditionEntityOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityOutput) ToManagementZoneRuleConditionEntityOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntity) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionEntityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntity) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionEntityOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntity) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionEntityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntity) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionEntityArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionEntity)(nil)).Elem()
}

func (o ManagementZoneRuleConditionEntityArrayOutput) ToManagementZoneRuleConditionEntityArrayOutput() ManagementZoneRuleConditionEntityArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityArrayOutput) ToManagementZoneRuleConditionEntityArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionEntity {
		return vs[0].([]ManagementZoneRuleConditionEntity)[vs[1].(int)]
	}).(ManagementZoneRuleConditionEntityOutput)
}

type ManagementZoneRuleConditionEntityIdComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionEntityIdComparisonInput is an input type that accepts ManagementZoneRuleConditionEntityIdComparisonArgs and ManagementZoneRuleConditionEntityIdComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionEntityIdComparisonInput` via:
//
//	ManagementZoneRuleConditionEntityIdComparisonArgs{...}
type ManagementZoneRuleConditionEntityIdComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionEntityIdComparisonOutput() ManagementZoneRuleConditionEntityIdComparisonOutput
	ToManagementZoneRuleConditionEntityIdComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionEntityIdComparisonOutput
}

type ManagementZoneRuleConditionEntityIdComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionEntityIdComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionEntityIdComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionEntityIdComparisonArgs) ToManagementZoneRuleConditionEntityIdComparisonOutput() ManagementZoneRuleConditionEntityIdComparisonOutput {
	return i.ToManagementZoneRuleConditionEntityIdComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionEntityIdComparisonArgs) ToManagementZoneRuleConditionEntityIdComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityIdComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionEntityIdComparisonOutput)
}

// ManagementZoneRuleConditionEntityIdComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionEntityIdComparisonArray and ManagementZoneRuleConditionEntityIdComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionEntityIdComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionEntityIdComparisonArray{ ManagementZoneRuleConditionEntityIdComparisonArgs{...} }
type ManagementZoneRuleConditionEntityIdComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionEntityIdComparisonArrayOutput() ManagementZoneRuleConditionEntityIdComparisonArrayOutput
	ToManagementZoneRuleConditionEntityIdComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionEntityIdComparisonArrayOutput
}

type ManagementZoneRuleConditionEntityIdComparisonArray []ManagementZoneRuleConditionEntityIdComparisonInput

func (ManagementZoneRuleConditionEntityIdComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionEntityIdComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionEntityIdComparisonArray) ToManagementZoneRuleConditionEntityIdComparisonArrayOutput() ManagementZoneRuleConditionEntityIdComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionEntityIdComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionEntityIdComparisonArray) ToManagementZoneRuleConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityIdComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionEntityIdComparisonArrayOutput)
}

type ManagementZoneRuleConditionEntityIdComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionEntityIdComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionEntityIdComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionEntityIdComparisonOutput) ToManagementZoneRuleConditionEntityIdComparisonOutput() ManagementZoneRuleConditionEntityIdComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityIdComparisonOutput) ToManagementZoneRuleConditionEntityIdComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityIdComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityIdComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntityIdComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionEntityIdComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntityIdComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionEntityIdComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntityIdComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionEntityIdComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntityIdComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionEntityIdComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionEntityIdComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionEntityIdComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionEntityIdComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionEntityIdComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionEntityIdComparisonArrayOutput) ToManagementZoneRuleConditionEntityIdComparisonArrayOutput() ManagementZoneRuleConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityIdComparisonArrayOutput) ToManagementZoneRuleConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionEntityIdComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionEntityIdComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionEntityIdComparison {
		return vs[0].([]ManagementZoneRuleConditionEntityIdComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionEntityIdComparisonOutput)
}

type ManagementZoneRuleConditionHostTech struct {
	Negate   *bool                                     `pulumi:"negate"`
	Operator string                                    `pulumi:"operator"`
	Unknowns *string                                   `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionHostTechValue `pulumi:"value"`
}

// ManagementZoneRuleConditionHostTechInput is an input type that accepts ManagementZoneRuleConditionHostTechArgs and ManagementZoneRuleConditionHostTechOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHostTechInput` via:
//
//	ManagementZoneRuleConditionHostTechArgs{...}
type ManagementZoneRuleConditionHostTechInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHostTechOutput() ManagementZoneRuleConditionHostTechOutput
	ToManagementZoneRuleConditionHostTechOutputWithContext(context.Context) ManagementZoneRuleConditionHostTechOutput
}

type ManagementZoneRuleConditionHostTechArgs struct {
	Negate   pulumi.BoolPtrInput                              `pulumi:"negate"`
	Operator pulumi.StringInput                               `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                            `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionHostTechValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionHostTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHostTech)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHostTechArgs) ToManagementZoneRuleConditionHostTechOutput() ManagementZoneRuleConditionHostTechOutput {
	return i.ToManagementZoneRuleConditionHostTechOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHostTechArgs) ToManagementZoneRuleConditionHostTechOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHostTechOutput)
}

// ManagementZoneRuleConditionHostTechArrayInput is an input type that accepts ManagementZoneRuleConditionHostTechArray and ManagementZoneRuleConditionHostTechArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHostTechArrayInput` via:
//
//	ManagementZoneRuleConditionHostTechArray{ ManagementZoneRuleConditionHostTechArgs{...} }
type ManagementZoneRuleConditionHostTechArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHostTechArrayOutput() ManagementZoneRuleConditionHostTechArrayOutput
	ToManagementZoneRuleConditionHostTechArrayOutputWithContext(context.Context) ManagementZoneRuleConditionHostTechArrayOutput
}

type ManagementZoneRuleConditionHostTechArray []ManagementZoneRuleConditionHostTechInput

func (ManagementZoneRuleConditionHostTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionHostTech)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHostTechArray) ToManagementZoneRuleConditionHostTechArrayOutput() ManagementZoneRuleConditionHostTechArrayOutput {
	return i.ToManagementZoneRuleConditionHostTechArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHostTechArray) ToManagementZoneRuleConditionHostTechArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHostTechArrayOutput)
}

type ManagementZoneRuleConditionHostTechOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHostTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHostTech)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHostTechOutput) ToManagementZoneRuleConditionHostTechOutput() ManagementZoneRuleConditionHostTechOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechOutput) ToManagementZoneRuleConditionHostTechOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionHostTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTech) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionHostTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHostTechOutput) Value() ManagementZoneRuleConditionHostTechValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTech) *ManagementZoneRuleConditionHostTechValue { return v.Value }).(ManagementZoneRuleConditionHostTechValuePtrOutput)
}

type ManagementZoneRuleConditionHostTechArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHostTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionHostTech)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHostTechArrayOutput) ToManagementZoneRuleConditionHostTechArrayOutput() ManagementZoneRuleConditionHostTechArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechArrayOutput) ToManagementZoneRuleConditionHostTechArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionHostTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionHostTech {
		return vs[0].([]ManagementZoneRuleConditionHostTech)[vs[1].(int)]
	}).(ManagementZoneRuleConditionHostTechOutput)
}

type ManagementZoneRuleConditionHostTechValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ManagementZoneRuleConditionHostTechValueInput is an input type that accepts ManagementZoneRuleConditionHostTechValueArgs and ManagementZoneRuleConditionHostTechValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHostTechValueInput` via:
//
//	ManagementZoneRuleConditionHostTechValueArgs{...}
type ManagementZoneRuleConditionHostTechValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHostTechValueOutput() ManagementZoneRuleConditionHostTechValueOutput
	ToManagementZoneRuleConditionHostTechValueOutputWithContext(context.Context) ManagementZoneRuleConditionHostTechValueOutput
}

type ManagementZoneRuleConditionHostTechValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ManagementZoneRuleConditionHostTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHostTechValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHostTechValueArgs) ToManagementZoneRuleConditionHostTechValueOutput() ManagementZoneRuleConditionHostTechValueOutput {
	return i.ToManagementZoneRuleConditionHostTechValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHostTechValueArgs) ToManagementZoneRuleConditionHostTechValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHostTechValueOutput)
}

func (i ManagementZoneRuleConditionHostTechValueArgs) ToManagementZoneRuleConditionHostTechValuePtrOutput() ManagementZoneRuleConditionHostTechValuePtrOutput {
	return i.ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHostTechValueArgs) ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHostTechValueOutput).ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionHostTechValuePtrInput is an input type that accepts ManagementZoneRuleConditionHostTechValueArgs, ManagementZoneRuleConditionHostTechValuePtr and ManagementZoneRuleConditionHostTechValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHostTechValuePtrInput` via:
//
//	        ManagementZoneRuleConditionHostTechValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionHostTechValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHostTechValuePtrOutput() ManagementZoneRuleConditionHostTechValuePtrOutput
	ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionHostTechValuePtrOutput
}

type managementZoneRuleConditionHostTechValuePtrType ManagementZoneRuleConditionHostTechValueArgs

func ManagementZoneRuleConditionHostTechValuePtr(v *ManagementZoneRuleConditionHostTechValueArgs) ManagementZoneRuleConditionHostTechValuePtrInput {
	return (*managementZoneRuleConditionHostTechValuePtrType)(v)
}

func (*managementZoneRuleConditionHostTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionHostTechValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionHostTechValuePtrType) ToManagementZoneRuleConditionHostTechValuePtrOutput() ManagementZoneRuleConditionHostTechValuePtrOutput {
	return i.ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionHostTechValuePtrType) ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHostTechValuePtrOutput)
}

type ManagementZoneRuleConditionHostTechValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHostTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHostTechValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHostTechValueOutput) ToManagementZoneRuleConditionHostTechValueOutput() ManagementZoneRuleConditionHostTechValueOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechValueOutput) ToManagementZoneRuleConditionHostTechValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechValueOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechValueOutput) ToManagementZoneRuleConditionHostTechValuePtrOutput() ManagementZoneRuleConditionHostTechValuePtrOutput {
	return o.ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionHostTechValueOutput) ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionHostTechValue) *ManagementZoneRuleConditionHostTechValue {
		return &v
	}).(ManagementZoneRuleConditionHostTechValuePtrOutput)
}

func (o ManagementZoneRuleConditionHostTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHostTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHostTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHostTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionHostTechValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHostTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionHostTechValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHostTechValuePtrOutput) ToManagementZoneRuleConditionHostTechValuePtrOutput() ManagementZoneRuleConditionHostTechValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechValuePtrOutput) ToManagementZoneRuleConditionHostTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHostTechValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionHostTechValuePtrOutput) Elem() ManagementZoneRuleConditionHostTechValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionHostTechValue) ManagementZoneRuleConditionHostTechValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionHostTechValue
		return ret
	}).(ManagementZoneRuleConditionHostTechValueOutput)
}

func (o ManagementZoneRuleConditionHostTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHostTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHostTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionHypervisor struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionHypervisorInput is an input type that accepts ManagementZoneRuleConditionHypervisorArgs and ManagementZoneRuleConditionHypervisorOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHypervisorInput` via:
//
//	ManagementZoneRuleConditionHypervisorArgs{...}
type ManagementZoneRuleConditionHypervisorInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHypervisorOutput() ManagementZoneRuleConditionHypervisorOutput
	ToManagementZoneRuleConditionHypervisorOutputWithContext(context.Context) ManagementZoneRuleConditionHypervisorOutput
}

type ManagementZoneRuleConditionHypervisorArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionHypervisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHypervisor)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHypervisorArgs) ToManagementZoneRuleConditionHypervisorOutput() ManagementZoneRuleConditionHypervisorOutput {
	return i.ToManagementZoneRuleConditionHypervisorOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHypervisorArgs) ToManagementZoneRuleConditionHypervisorOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHypervisorOutput)
}

// ManagementZoneRuleConditionHypervisorArrayInput is an input type that accepts ManagementZoneRuleConditionHypervisorArray and ManagementZoneRuleConditionHypervisorArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHypervisorArrayInput` via:
//
//	ManagementZoneRuleConditionHypervisorArray{ ManagementZoneRuleConditionHypervisorArgs{...} }
type ManagementZoneRuleConditionHypervisorArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHypervisorArrayOutput() ManagementZoneRuleConditionHypervisorArrayOutput
	ToManagementZoneRuleConditionHypervisorArrayOutputWithContext(context.Context) ManagementZoneRuleConditionHypervisorArrayOutput
}

type ManagementZoneRuleConditionHypervisorArray []ManagementZoneRuleConditionHypervisorInput

func (ManagementZoneRuleConditionHypervisorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionHypervisor)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHypervisorArray) ToManagementZoneRuleConditionHypervisorArrayOutput() ManagementZoneRuleConditionHypervisorArrayOutput {
	return i.ToManagementZoneRuleConditionHypervisorArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHypervisorArray) ToManagementZoneRuleConditionHypervisorArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHypervisorArrayOutput)
}

type ManagementZoneRuleConditionHypervisorOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHypervisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHypervisor)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHypervisorOutput) ToManagementZoneRuleConditionHypervisorOutput() ManagementZoneRuleConditionHypervisorOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorOutput) ToManagementZoneRuleConditionHypervisorOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisor) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionHypervisorOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisor) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionHypervisorOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisor) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHypervisorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisor) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionHypervisorArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHypervisorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionHypervisor)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHypervisorArrayOutput) ToManagementZoneRuleConditionHypervisorArrayOutput() ManagementZoneRuleConditionHypervisorArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorArrayOutput) ToManagementZoneRuleConditionHypervisorArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionHypervisorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionHypervisor {
		return vs[0].([]ManagementZoneRuleConditionHypervisor)[vs[1].(int)]
	}).(ManagementZoneRuleConditionHypervisorOutput)
}

type ManagementZoneRuleConditionHypervisorTypeComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionHypervisorTypeComparisionInput is an input type that accepts ManagementZoneRuleConditionHypervisorTypeComparisionArgs and ManagementZoneRuleConditionHypervisorTypeComparisionOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHypervisorTypeComparisionInput` via:
//
//	ManagementZoneRuleConditionHypervisorTypeComparisionArgs{...}
type ManagementZoneRuleConditionHypervisorTypeComparisionInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHypervisorTypeComparisionOutput() ManagementZoneRuleConditionHypervisorTypeComparisionOutput
	ToManagementZoneRuleConditionHypervisorTypeComparisionOutputWithContext(context.Context) ManagementZoneRuleConditionHypervisorTypeComparisionOutput
}

type ManagementZoneRuleConditionHypervisorTypeComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionHypervisorTypeComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHypervisorTypeComparisionArgs) ToManagementZoneRuleConditionHypervisorTypeComparisionOutput() ManagementZoneRuleConditionHypervisorTypeComparisionOutput {
	return i.ToManagementZoneRuleConditionHypervisorTypeComparisionOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHypervisorTypeComparisionArgs) ToManagementZoneRuleConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorTypeComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHypervisorTypeComparisionOutput)
}

// ManagementZoneRuleConditionHypervisorTypeComparisionArrayInput is an input type that accepts ManagementZoneRuleConditionHypervisorTypeComparisionArray and ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionHypervisorTypeComparisionArrayInput` via:
//
//	ManagementZoneRuleConditionHypervisorTypeComparisionArray{ ManagementZoneRuleConditionHypervisorTypeComparisionArgs{...} }
type ManagementZoneRuleConditionHypervisorTypeComparisionArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput() ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput
	ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutputWithContext(context.Context) ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput
}

type ManagementZoneRuleConditionHypervisorTypeComparisionArray []ManagementZoneRuleConditionHypervisorTypeComparisionInput

func (ManagementZoneRuleConditionHypervisorTypeComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ManagementZoneRuleConditionHypervisorTypeComparisionArray) ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput() ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput {
	return i.ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionHypervisorTypeComparisionArray) ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput)
}

type ManagementZoneRuleConditionHypervisorTypeComparisionOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHypervisorTypeComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) ToManagementZoneRuleConditionHypervisorTypeComparisionOutput() ManagementZoneRuleConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) ToManagementZoneRuleConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisorTypeComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisorTypeComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisorTypeComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisorTypeComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionHypervisorTypeComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput) ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput() ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput) ToManagementZoneRuleConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionHypervisorTypeComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionHypervisorTypeComparision {
		return vs[0].([]ManagementZoneRuleConditionHypervisorTypeComparision)[vs[1].(int)]
	}).(ManagementZoneRuleConditionHypervisorTypeComparisionOutput)
}

type ManagementZoneRuleConditionIndexedName struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedNameInput is an input type that accepts ManagementZoneRuleConditionIndexedNameArgs and ManagementZoneRuleConditionIndexedNameOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedNameInput` via:
//
//	ManagementZoneRuleConditionIndexedNameArgs{...}
type ManagementZoneRuleConditionIndexedNameInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedNameOutput() ManagementZoneRuleConditionIndexedNameOutput
	ToManagementZoneRuleConditionIndexedNameOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedNameOutput
}

type ManagementZoneRuleConditionIndexedNameArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedName)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedNameArgs) ToManagementZoneRuleConditionIndexedNameOutput() ManagementZoneRuleConditionIndexedNameOutput {
	return i.ToManagementZoneRuleConditionIndexedNameOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedNameArgs) ToManagementZoneRuleConditionIndexedNameOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedNameOutput)
}

// ManagementZoneRuleConditionIndexedNameArrayInput is an input type that accepts ManagementZoneRuleConditionIndexedNameArray and ManagementZoneRuleConditionIndexedNameArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedNameArrayInput` via:
//
//	ManagementZoneRuleConditionIndexedNameArray{ ManagementZoneRuleConditionIndexedNameArgs{...} }
type ManagementZoneRuleConditionIndexedNameArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedNameArrayOutput() ManagementZoneRuleConditionIndexedNameArrayOutput
	ToManagementZoneRuleConditionIndexedNameArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedNameArrayOutput
}

type ManagementZoneRuleConditionIndexedNameArray []ManagementZoneRuleConditionIndexedNameInput

func (ManagementZoneRuleConditionIndexedNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedName)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedNameArray) ToManagementZoneRuleConditionIndexedNameArrayOutput() ManagementZoneRuleConditionIndexedNameArrayOutput {
	return i.ToManagementZoneRuleConditionIndexedNameArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedNameArray) ToManagementZoneRuleConditionIndexedNameArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedNameArrayOutput)
}

type ManagementZoneRuleConditionIndexedNameOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedName)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedNameOutput) ToManagementZoneRuleConditionIndexedNameOutput() ManagementZoneRuleConditionIndexedNameOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameOutput) ToManagementZoneRuleConditionIndexedNameOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedName) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedNameOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedName) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedNameOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedName) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedNameOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedName) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedNameArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedName)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedNameArrayOutput) ToManagementZoneRuleConditionIndexedNameArrayOutput() ManagementZoneRuleConditionIndexedNameArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameArrayOutput) ToManagementZoneRuleConditionIndexedNameArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIndexedNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIndexedName {
		return vs[0].([]ManagementZoneRuleConditionIndexedName)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIndexedNameOutput)
}

type ManagementZoneRuleConditionIndexedNameComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedNameComparisonInput is an input type that accepts ManagementZoneRuleConditionIndexedNameComparisonArgs and ManagementZoneRuleConditionIndexedNameComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedNameComparisonInput` via:
//
//	ManagementZoneRuleConditionIndexedNameComparisonArgs{...}
type ManagementZoneRuleConditionIndexedNameComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedNameComparisonOutput() ManagementZoneRuleConditionIndexedNameComparisonOutput
	ToManagementZoneRuleConditionIndexedNameComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedNameComparisonOutput
}

type ManagementZoneRuleConditionIndexedNameComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedNameComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedNameComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedNameComparisonArgs) ToManagementZoneRuleConditionIndexedNameComparisonOutput() ManagementZoneRuleConditionIndexedNameComparisonOutput {
	return i.ToManagementZoneRuleConditionIndexedNameComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedNameComparisonArgs) ToManagementZoneRuleConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedNameComparisonOutput)
}

// ManagementZoneRuleConditionIndexedNameComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionIndexedNameComparisonArray and ManagementZoneRuleConditionIndexedNameComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedNameComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionIndexedNameComparisonArray{ ManagementZoneRuleConditionIndexedNameComparisonArgs{...} }
type ManagementZoneRuleConditionIndexedNameComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedNameComparisonArrayOutput() ManagementZoneRuleConditionIndexedNameComparisonArrayOutput
	ToManagementZoneRuleConditionIndexedNameComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedNameComparisonArrayOutput
}

type ManagementZoneRuleConditionIndexedNameComparisonArray []ManagementZoneRuleConditionIndexedNameComparisonInput

func (ManagementZoneRuleConditionIndexedNameComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedNameComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedNameComparisonArray) ToManagementZoneRuleConditionIndexedNameComparisonArrayOutput() ManagementZoneRuleConditionIndexedNameComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionIndexedNameComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedNameComparisonArray) ToManagementZoneRuleConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedNameComparisonArrayOutput)
}

type ManagementZoneRuleConditionIndexedNameComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedNameComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedNameComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) ToManagementZoneRuleConditionIndexedNameComparisonOutput() ManagementZoneRuleConditionIndexedNameComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) ToManagementZoneRuleConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedNameComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedNameComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedNameComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedNameComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedNameComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedNameComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedNameComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedNameComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedNameComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedNameComparisonArrayOutput) ToManagementZoneRuleConditionIndexedNameComparisonArrayOutput() ManagementZoneRuleConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameComparisonArrayOutput) ToManagementZoneRuleConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedNameComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIndexedNameComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIndexedNameComparison {
		return vs[0].([]ManagementZoneRuleConditionIndexedNameComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIndexedNameComparisonOutput)
}

type ManagementZoneRuleConditionIndexedString struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedStringInput is an input type that accepts ManagementZoneRuleConditionIndexedStringArgs and ManagementZoneRuleConditionIndexedStringOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedStringInput` via:
//
//	ManagementZoneRuleConditionIndexedStringArgs{...}
type ManagementZoneRuleConditionIndexedStringInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedStringOutput() ManagementZoneRuleConditionIndexedStringOutput
	ToManagementZoneRuleConditionIndexedStringOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedStringOutput
}

type ManagementZoneRuleConditionIndexedStringArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedString)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedStringArgs) ToManagementZoneRuleConditionIndexedStringOutput() ManagementZoneRuleConditionIndexedStringOutput {
	return i.ToManagementZoneRuleConditionIndexedStringOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedStringArgs) ToManagementZoneRuleConditionIndexedStringOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedStringOutput)
}

// ManagementZoneRuleConditionIndexedStringArrayInput is an input type that accepts ManagementZoneRuleConditionIndexedStringArray and ManagementZoneRuleConditionIndexedStringArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedStringArrayInput` via:
//
//	ManagementZoneRuleConditionIndexedStringArray{ ManagementZoneRuleConditionIndexedStringArgs{...} }
type ManagementZoneRuleConditionIndexedStringArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedStringArrayOutput() ManagementZoneRuleConditionIndexedStringArrayOutput
	ToManagementZoneRuleConditionIndexedStringArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedStringArrayOutput
}

type ManagementZoneRuleConditionIndexedStringArray []ManagementZoneRuleConditionIndexedStringInput

func (ManagementZoneRuleConditionIndexedStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedString)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedStringArray) ToManagementZoneRuleConditionIndexedStringArrayOutput() ManagementZoneRuleConditionIndexedStringArrayOutput {
	return i.ToManagementZoneRuleConditionIndexedStringArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedStringArray) ToManagementZoneRuleConditionIndexedStringArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedStringArrayOutput)
}

type ManagementZoneRuleConditionIndexedStringOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedString)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedStringOutput) ToManagementZoneRuleConditionIndexedStringOutput() ManagementZoneRuleConditionIndexedStringOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringOutput) ToManagementZoneRuleConditionIndexedStringOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedString) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedStringArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedString)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedStringArrayOutput) ToManagementZoneRuleConditionIndexedStringArrayOutput() ManagementZoneRuleConditionIndexedStringArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringArrayOutput) ToManagementZoneRuleConditionIndexedStringArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIndexedStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIndexedString {
		return vs[0].([]ManagementZoneRuleConditionIndexedString)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIndexedStringOutput)
}

type ManagementZoneRuleConditionIndexedStringComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedStringComparisonInput is an input type that accepts ManagementZoneRuleConditionIndexedStringComparisonArgs and ManagementZoneRuleConditionIndexedStringComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedStringComparisonInput` via:
//
//	ManagementZoneRuleConditionIndexedStringComparisonArgs{...}
type ManagementZoneRuleConditionIndexedStringComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedStringComparisonOutput() ManagementZoneRuleConditionIndexedStringComparisonOutput
	ToManagementZoneRuleConditionIndexedStringComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedStringComparisonOutput
}

type ManagementZoneRuleConditionIndexedStringComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedStringComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedStringComparisonArgs) ToManagementZoneRuleConditionIndexedStringComparisonOutput() ManagementZoneRuleConditionIndexedStringComparisonOutput {
	return i.ToManagementZoneRuleConditionIndexedStringComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedStringComparisonArgs) ToManagementZoneRuleConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedStringComparisonOutput)
}

// ManagementZoneRuleConditionIndexedStringComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionIndexedStringComparisonArray and ManagementZoneRuleConditionIndexedStringComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedStringComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionIndexedStringComparisonArray{ ManagementZoneRuleConditionIndexedStringComparisonArgs{...} }
type ManagementZoneRuleConditionIndexedStringComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedStringComparisonArrayOutput() ManagementZoneRuleConditionIndexedStringComparisonArrayOutput
	ToManagementZoneRuleConditionIndexedStringComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedStringComparisonArrayOutput
}

type ManagementZoneRuleConditionIndexedStringComparisonArray []ManagementZoneRuleConditionIndexedStringComparisonInput

func (ManagementZoneRuleConditionIndexedStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedStringComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedStringComparisonArray) ToManagementZoneRuleConditionIndexedStringComparisonArrayOutput() ManagementZoneRuleConditionIndexedStringComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionIndexedStringComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedStringComparisonArray) ToManagementZoneRuleConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedStringComparisonArrayOutput)
}

type ManagementZoneRuleConditionIndexedStringComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedStringComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) ToManagementZoneRuleConditionIndexedStringComparisonOutput() ManagementZoneRuleConditionIndexedStringComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) ToManagementZoneRuleConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedStringComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedStringComparisonArrayOutput) ToManagementZoneRuleConditionIndexedStringComparisonArrayOutput() ManagementZoneRuleConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringComparisonArrayOutput) ToManagementZoneRuleConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedStringComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIndexedStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIndexedStringComparison {
		return vs[0].([]ManagementZoneRuleConditionIndexedStringComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIndexedStringComparisonOutput)
}

type ManagementZoneRuleConditionIndexedTag struct {
	Negate   *bool                                       `pulumi:"negate"`
	Operator string                                      `pulumi:"operator"`
	Unknowns *string                                     `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionIndexedTagValue `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedTagInput is an input type that accepts ManagementZoneRuleConditionIndexedTagArgs and ManagementZoneRuleConditionIndexedTagOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagInput` via:
//
//	ManagementZoneRuleConditionIndexedTagArgs{...}
type ManagementZoneRuleConditionIndexedTagInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagOutput() ManagementZoneRuleConditionIndexedTagOutput
	ToManagementZoneRuleConditionIndexedTagOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagOutput
}

type ManagementZoneRuleConditionIndexedTagArgs struct {
	Negate   pulumi.BoolPtrInput                                `pulumi:"negate"`
	Operator pulumi.StringInput                                 `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                              `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionIndexedTagValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTag)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedTagArgs) ToManagementZoneRuleConditionIndexedTagOutput() ManagementZoneRuleConditionIndexedTagOutput {
	return i.ToManagementZoneRuleConditionIndexedTagOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagArgs) ToManagementZoneRuleConditionIndexedTagOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagOutput)
}

// ManagementZoneRuleConditionIndexedTagArrayInput is an input type that accepts ManagementZoneRuleConditionIndexedTagArray and ManagementZoneRuleConditionIndexedTagArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagArrayInput` via:
//
//	ManagementZoneRuleConditionIndexedTagArray{ ManagementZoneRuleConditionIndexedTagArgs{...} }
type ManagementZoneRuleConditionIndexedTagArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagArrayOutput() ManagementZoneRuleConditionIndexedTagArrayOutput
	ToManagementZoneRuleConditionIndexedTagArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagArrayOutput
}

type ManagementZoneRuleConditionIndexedTagArray []ManagementZoneRuleConditionIndexedTagInput

func (ManagementZoneRuleConditionIndexedTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedTag)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedTagArray) ToManagementZoneRuleConditionIndexedTagArrayOutput() ManagementZoneRuleConditionIndexedTagArrayOutput {
	return i.ToManagementZoneRuleConditionIndexedTagArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagArray) ToManagementZoneRuleConditionIndexedTagArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagArrayOutput)
}

type ManagementZoneRuleConditionIndexedTagOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTag)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagOutput) ToManagementZoneRuleConditionIndexedTagOutput() ManagementZoneRuleConditionIndexedTagOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagOutput) ToManagementZoneRuleConditionIndexedTagOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTag) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagOutput) Value() ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTag) *ManagementZoneRuleConditionIndexedTagValue {
		return v.Value
	}).(ManagementZoneRuleConditionIndexedTagValuePtrOutput)
}

type ManagementZoneRuleConditionIndexedTagArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedTag)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagArrayOutput) ToManagementZoneRuleConditionIndexedTagArrayOutput() ManagementZoneRuleConditionIndexedTagArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagArrayOutput) ToManagementZoneRuleConditionIndexedTagArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIndexedTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIndexedTag {
		return vs[0].([]ManagementZoneRuleConditionIndexedTag)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIndexedTagOutput)
}

type ManagementZoneRuleConditionIndexedTagComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                               `pulumi:"type"`
	Unknowns *string                                               `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionIndexedTagComparisonValue `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedTagComparisonInput is an input type that accepts ManagementZoneRuleConditionIndexedTagComparisonArgs and ManagementZoneRuleConditionIndexedTagComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagComparisonInput` via:
//
//	ManagementZoneRuleConditionIndexedTagComparisonArgs{...}
type ManagementZoneRuleConditionIndexedTagComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagComparisonOutput() ManagementZoneRuleConditionIndexedTagComparisonOutput
	ToManagementZoneRuleConditionIndexedTagComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagComparisonOutput
}

type ManagementZoneRuleConditionIndexedTagComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                        `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                        `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionIndexedTagComparisonValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedTagComparisonArgs) ToManagementZoneRuleConditionIndexedTagComparisonOutput() ManagementZoneRuleConditionIndexedTagComparisonOutput {
	return i.ToManagementZoneRuleConditionIndexedTagComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagComparisonArgs) ToManagementZoneRuleConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagComparisonOutput)
}

// ManagementZoneRuleConditionIndexedTagComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionIndexedTagComparisonArray and ManagementZoneRuleConditionIndexedTagComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionIndexedTagComparisonArray{ ManagementZoneRuleConditionIndexedTagComparisonArgs{...} }
type ManagementZoneRuleConditionIndexedTagComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagComparisonArrayOutput() ManagementZoneRuleConditionIndexedTagComparisonArrayOutput
	ToManagementZoneRuleConditionIndexedTagComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagComparisonArrayOutput
}

type ManagementZoneRuleConditionIndexedTagComparisonArray []ManagementZoneRuleConditionIndexedTagComparisonInput

func (ManagementZoneRuleConditionIndexedTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedTagComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedTagComparisonArray) ToManagementZoneRuleConditionIndexedTagComparisonArrayOutput() ManagementZoneRuleConditionIndexedTagComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionIndexedTagComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagComparisonArray) ToManagementZoneRuleConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagComparisonArrayOutput)
}

type ManagementZoneRuleConditionIndexedTagComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) ToManagementZoneRuleConditionIndexedTagComparisonOutput() ManagementZoneRuleConditionIndexedTagComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) ToManagementZoneRuleConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonOutput) Value() ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparison) *ManagementZoneRuleConditionIndexedTagComparisonValue {
		return v.Value
	}).(ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionIndexedTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIndexedTagComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagComparisonArrayOutput) ToManagementZoneRuleConditionIndexedTagComparisonArrayOutput() ManagementZoneRuleConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonArrayOutput) ToManagementZoneRuleConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIndexedTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIndexedTagComparison {
		return vs[0].([]ManagementZoneRuleConditionIndexedTagComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIndexedTagComparisonOutput)
}

type ManagementZoneRuleConditionIndexedTagComparisonValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedTagComparisonValueInput is an input type that accepts ManagementZoneRuleConditionIndexedTagComparisonValueArgs and ManagementZoneRuleConditionIndexedTagComparisonValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagComparisonValueInput` via:
//
//	ManagementZoneRuleConditionIndexedTagComparisonValueArgs{...}
type ManagementZoneRuleConditionIndexedTagComparisonValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagComparisonValueOutput() ManagementZoneRuleConditionIndexedTagComparisonValueOutput
	ToManagementZoneRuleConditionIndexedTagComparisonValueOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagComparisonValueOutput
}

type ManagementZoneRuleConditionIndexedTagComparisonValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedTagComparisonValueArgs) ToManagementZoneRuleConditionIndexedTagComparisonValueOutput() ManagementZoneRuleConditionIndexedTagComparisonValueOutput {
	return i.ToManagementZoneRuleConditionIndexedTagComparisonValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagComparisonValueArgs) ToManagementZoneRuleConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagComparisonValueOutput)
}

func (i ManagementZoneRuleConditionIndexedTagComparisonValueArgs) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput() ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagComparisonValueArgs) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagComparisonValueOutput).ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionIndexedTagComparisonValuePtrInput is an input type that accepts ManagementZoneRuleConditionIndexedTagComparisonValueArgs, ManagementZoneRuleConditionIndexedTagComparisonValuePtr and ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagComparisonValuePtrInput` via:
//
//	        ManagementZoneRuleConditionIndexedTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionIndexedTagComparisonValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput() ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput
	ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput
}

type managementZoneRuleConditionIndexedTagComparisonValuePtrType ManagementZoneRuleConditionIndexedTagComparisonValueArgs

func ManagementZoneRuleConditionIndexedTagComparisonValuePtr(v *ManagementZoneRuleConditionIndexedTagComparisonValueArgs) ManagementZoneRuleConditionIndexedTagComparisonValuePtrInput {
	return (*managementZoneRuleConditionIndexedTagComparisonValuePtrType)(v)
}

func (*managementZoneRuleConditionIndexedTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionIndexedTagComparisonValuePtrType) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput() ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionIndexedTagComparisonValuePtrType) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionIndexedTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) ToManagementZoneRuleConditionIndexedTagComparisonValueOutput() ManagementZoneRuleConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) ToManagementZoneRuleConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput() ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return o.ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionIndexedTagComparisonValue) *ManagementZoneRuleConditionIndexedTagComparisonValue {
		return &v
	}).(ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput() ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) ToManagementZoneRuleConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) Elem() ManagementZoneRuleConditionIndexedTagComparisonValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagComparisonValue) ManagementZoneRuleConditionIndexedTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionIndexedTagComparisonValue
		return ret
	}).(ManagementZoneRuleConditionIndexedTagComparisonValueOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIndexedTagValueInput is an input type that accepts ManagementZoneRuleConditionIndexedTagValueArgs and ManagementZoneRuleConditionIndexedTagValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagValueInput` via:
//
//	ManagementZoneRuleConditionIndexedTagValueArgs{...}
type ManagementZoneRuleConditionIndexedTagValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagValueOutput() ManagementZoneRuleConditionIndexedTagValueOutput
	ToManagementZoneRuleConditionIndexedTagValueOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagValueOutput
}

type ManagementZoneRuleConditionIndexedTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIndexedTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIndexedTagValueArgs) ToManagementZoneRuleConditionIndexedTagValueOutput() ManagementZoneRuleConditionIndexedTagValueOutput {
	return i.ToManagementZoneRuleConditionIndexedTagValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagValueArgs) ToManagementZoneRuleConditionIndexedTagValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagValueOutput)
}

func (i ManagementZoneRuleConditionIndexedTagValueArgs) ToManagementZoneRuleConditionIndexedTagValuePtrOutput() ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return i.ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIndexedTagValueArgs) ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagValueOutput).ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionIndexedTagValuePtrInput is an input type that accepts ManagementZoneRuleConditionIndexedTagValueArgs, ManagementZoneRuleConditionIndexedTagValuePtr and ManagementZoneRuleConditionIndexedTagValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIndexedTagValuePtrInput` via:
//
//	        ManagementZoneRuleConditionIndexedTagValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionIndexedTagValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIndexedTagValuePtrOutput() ManagementZoneRuleConditionIndexedTagValuePtrOutput
	ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionIndexedTagValuePtrOutput
}

type managementZoneRuleConditionIndexedTagValuePtrType ManagementZoneRuleConditionIndexedTagValueArgs

func ManagementZoneRuleConditionIndexedTagValuePtr(v *ManagementZoneRuleConditionIndexedTagValueArgs) ManagementZoneRuleConditionIndexedTagValuePtrInput {
	return (*managementZoneRuleConditionIndexedTagValuePtrType)(v)
}

func (*managementZoneRuleConditionIndexedTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionIndexedTagValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionIndexedTagValuePtrType) ToManagementZoneRuleConditionIndexedTagValuePtrOutput() ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return i.ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionIndexedTagValuePtrType) ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIndexedTagValuePtrOutput)
}

type ManagementZoneRuleConditionIndexedTagValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) ToManagementZoneRuleConditionIndexedTagValueOutput() ManagementZoneRuleConditionIndexedTagValueOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) ToManagementZoneRuleConditionIndexedTagValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagValueOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) ToManagementZoneRuleConditionIndexedTagValuePtrOutput() ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return o.ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionIndexedTagValue) *ManagementZoneRuleConditionIndexedTagValue {
		return &v
	}).(ManagementZoneRuleConditionIndexedTagValuePtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIndexedTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIndexedTagValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIndexedTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionIndexedTagValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) ToManagementZoneRuleConditionIndexedTagValuePtrOutput() ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) ToManagementZoneRuleConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIndexedTagValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) Elem() ManagementZoneRuleConditionIndexedTagValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagValue) ManagementZoneRuleConditionIndexedTagValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionIndexedTagValue
		return ret
	}).(ManagementZoneRuleConditionIndexedTagValueOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIndexedTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionInteger struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *int    `pulumi:"value"`
}

// ManagementZoneRuleConditionIntegerInput is an input type that accepts ManagementZoneRuleConditionIntegerArgs and ManagementZoneRuleConditionIntegerOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIntegerInput` via:
//
//	ManagementZoneRuleConditionIntegerArgs{...}
type ManagementZoneRuleConditionIntegerInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIntegerOutput() ManagementZoneRuleConditionIntegerOutput
	ToManagementZoneRuleConditionIntegerOutputWithContext(context.Context) ManagementZoneRuleConditionIntegerOutput
}

type ManagementZoneRuleConditionIntegerArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.IntPtrInput    `pulumi:"value"`
}

func (ManagementZoneRuleConditionIntegerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionInteger)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIntegerArgs) ToManagementZoneRuleConditionIntegerOutput() ManagementZoneRuleConditionIntegerOutput {
	return i.ToManagementZoneRuleConditionIntegerOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIntegerArgs) ToManagementZoneRuleConditionIntegerOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIntegerOutput)
}

// ManagementZoneRuleConditionIntegerArrayInput is an input type that accepts ManagementZoneRuleConditionIntegerArray and ManagementZoneRuleConditionIntegerArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIntegerArrayInput` via:
//
//	ManagementZoneRuleConditionIntegerArray{ ManagementZoneRuleConditionIntegerArgs{...} }
type ManagementZoneRuleConditionIntegerArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIntegerArrayOutput() ManagementZoneRuleConditionIntegerArrayOutput
	ToManagementZoneRuleConditionIntegerArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIntegerArrayOutput
}

type ManagementZoneRuleConditionIntegerArray []ManagementZoneRuleConditionIntegerInput

func (ManagementZoneRuleConditionIntegerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionInteger)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIntegerArray) ToManagementZoneRuleConditionIntegerArrayOutput() ManagementZoneRuleConditionIntegerArrayOutput {
	return i.ToManagementZoneRuleConditionIntegerArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIntegerArray) ToManagementZoneRuleConditionIntegerArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIntegerArrayOutput)
}

type ManagementZoneRuleConditionIntegerOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIntegerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionInteger)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIntegerOutput) ToManagementZoneRuleConditionIntegerOutput() ManagementZoneRuleConditionIntegerOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerOutput) ToManagementZoneRuleConditionIntegerOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionInteger) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIntegerOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionInteger) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIntegerOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionInteger) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIntegerOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionInteger) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ManagementZoneRuleConditionIntegerArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIntegerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionInteger)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIntegerArrayOutput) ToManagementZoneRuleConditionIntegerArrayOutput() ManagementZoneRuleConditionIntegerArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerArrayOutput) ToManagementZoneRuleConditionIntegerArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIntegerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionInteger {
		return vs[0].([]ManagementZoneRuleConditionInteger)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIntegerOutput)
}

type ManagementZoneRuleConditionIntegerComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *int    `pulumi:"value"`
}

// ManagementZoneRuleConditionIntegerComparisonInput is an input type that accepts ManagementZoneRuleConditionIntegerComparisonArgs and ManagementZoneRuleConditionIntegerComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIntegerComparisonInput` via:
//
//	ManagementZoneRuleConditionIntegerComparisonArgs{...}
type ManagementZoneRuleConditionIntegerComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIntegerComparisonOutput() ManagementZoneRuleConditionIntegerComparisonOutput
	ToManagementZoneRuleConditionIntegerComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionIntegerComparisonOutput
}

type ManagementZoneRuleConditionIntegerComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.IntPtrInput    `pulumi:"value"`
}

func (ManagementZoneRuleConditionIntegerComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIntegerComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIntegerComparisonArgs) ToManagementZoneRuleConditionIntegerComparisonOutput() ManagementZoneRuleConditionIntegerComparisonOutput {
	return i.ToManagementZoneRuleConditionIntegerComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIntegerComparisonArgs) ToManagementZoneRuleConditionIntegerComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIntegerComparisonOutput)
}

// ManagementZoneRuleConditionIntegerComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionIntegerComparisonArray and ManagementZoneRuleConditionIntegerComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIntegerComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionIntegerComparisonArray{ ManagementZoneRuleConditionIntegerComparisonArgs{...} }
type ManagementZoneRuleConditionIntegerComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIntegerComparisonArrayOutput() ManagementZoneRuleConditionIntegerComparisonArrayOutput
	ToManagementZoneRuleConditionIntegerComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIntegerComparisonArrayOutput
}

type ManagementZoneRuleConditionIntegerComparisonArray []ManagementZoneRuleConditionIntegerComparisonInput

func (ManagementZoneRuleConditionIntegerComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIntegerComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIntegerComparisonArray) ToManagementZoneRuleConditionIntegerComparisonArrayOutput() ManagementZoneRuleConditionIntegerComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionIntegerComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIntegerComparisonArray) ToManagementZoneRuleConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIntegerComparisonArrayOutput)
}

type ManagementZoneRuleConditionIntegerComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIntegerComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIntegerComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIntegerComparisonOutput) ToManagementZoneRuleConditionIntegerComparisonOutput() ManagementZoneRuleConditionIntegerComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerComparisonOutput) ToManagementZoneRuleConditionIntegerComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIntegerComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIntegerComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIntegerComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionIntegerComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIntegerComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIntegerComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIntegerComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIntegerComparisonOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIntegerComparison) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ManagementZoneRuleConditionIntegerComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIntegerComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIntegerComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIntegerComparisonArrayOutput) ToManagementZoneRuleConditionIntegerComparisonArrayOutput() ManagementZoneRuleConditionIntegerComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerComparisonArrayOutput) ToManagementZoneRuleConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIntegerComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIntegerComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIntegerComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIntegerComparison {
		return vs[0].([]ManagementZoneRuleConditionIntegerComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIntegerComparisonOutput)
}

type ManagementZoneRuleConditionIpaddress struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Negate        *bool   `pulumi:"negate"`
	Operator      string  `pulumi:"operator"`
	Unknowns      *string `pulumi:"unknowns"`
	Value         *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIpaddressInput is an input type that accepts ManagementZoneRuleConditionIpaddressArgs and ManagementZoneRuleConditionIpaddressOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIpaddressInput` via:
//
//	ManagementZoneRuleConditionIpaddressArgs{...}
type ManagementZoneRuleConditionIpaddressInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIpaddressOutput() ManagementZoneRuleConditionIpaddressOutput
	ToManagementZoneRuleConditionIpaddressOutputWithContext(context.Context) ManagementZoneRuleConditionIpaddressOutput
}

type ManagementZoneRuleConditionIpaddressArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator      pulumi.StringInput    `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIpaddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIpaddress)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIpaddressArgs) ToManagementZoneRuleConditionIpaddressOutput() ManagementZoneRuleConditionIpaddressOutput {
	return i.ToManagementZoneRuleConditionIpaddressOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIpaddressArgs) ToManagementZoneRuleConditionIpaddressOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIpaddressOutput)
}

// ManagementZoneRuleConditionIpaddressArrayInput is an input type that accepts ManagementZoneRuleConditionIpaddressArray and ManagementZoneRuleConditionIpaddressArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIpaddressArrayInput` via:
//
//	ManagementZoneRuleConditionIpaddressArray{ ManagementZoneRuleConditionIpaddressArgs{...} }
type ManagementZoneRuleConditionIpaddressArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIpaddressArrayOutput() ManagementZoneRuleConditionIpaddressArrayOutput
	ToManagementZoneRuleConditionIpaddressArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIpaddressArrayOutput
}

type ManagementZoneRuleConditionIpaddressArray []ManagementZoneRuleConditionIpaddressInput

func (ManagementZoneRuleConditionIpaddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIpaddress)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIpaddressArray) ToManagementZoneRuleConditionIpaddressArrayOutput() ManagementZoneRuleConditionIpaddressArrayOutput {
	return i.ToManagementZoneRuleConditionIpaddressArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIpaddressArray) ToManagementZoneRuleConditionIpaddressArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIpaddressArrayOutput)
}

type ManagementZoneRuleConditionIpaddressOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIpaddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIpaddress)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIpaddressOutput) ToManagementZoneRuleConditionIpaddressOutput() ManagementZoneRuleConditionIpaddressOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressOutput) ToManagementZoneRuleConditionIpaddressOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddress) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddress) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddress) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionIpaddressOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddress) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIpaddressArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIpaddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIpaddress)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIpaddressArrayOutput) ToManagementZoneRuleConditionIpaddressArrayOutput() ManagementZoneRuleConditionIpaddressArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressArrayOutput) ToManagementZoneRuleConditionIpaddressArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIpaddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIpaddress {
		return vs[0].([]ManagementZoneRuleConditionIpaddress)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIpaddressOutput)
}

type ManagementZoneRuleConditionIpaddressComparison struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Negate        *bool  `pulumi:"negate"`
	Operator      string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionIpaddressComparisonInput is an input type that accepts ManagementZoneRuleConditionIpaddressComparisonArgs and ManagementZoneRuleConditionIpaddressComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIpaddressComparisonInput` via:
//
//	ManagementZoneRuleConditionIpaddressComparisonArgs{...}
type ManagementZoneRuleConditionIpaddressComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIpaddressComparisonOutput() ManagementZoneRuleConditionIpaddressComparisonOutput
	ToManagementZoneRuleConditionIpaddressComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionIpaddressComparisonOutput
}

type ManagementZoneRuleConditionIpaddressComparisonArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput `pulumi:"negate"`
	Operator      pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionIpaddressComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIpaddressComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIpaddressComparisonArgs) ToManagementZoneRuleConditionIpaddressComparisonOutput() ManagementZoneRuleConditionIpaddressComparisonOutput {
	return i.ToManagementZoneRuleConditionIpaddressComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIpaddressComparisonArgs) ToManagementZoneRuleConditionIpaddressComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIpaddressComparisonOutput)
}

// ManagementZoneRuleConditionIpaddressComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionIpaddressComparisonArray and ManagementZoneRuleConditionIpaddressComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionIpaddressComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionIpaddressComparisonArray{ ManagementZoneRuleConditionIpaddressComparisonArgs{...} }
type ManagementZoneRuleConditionIpaddressComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionIpaddressComparisonArrayOutput() ManagementZoneRuleConditionIpaddressComparisonArrayOutput
	ToManagementZoneRuleConditionIpaddressComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionIpaddressComparisonArrayOutput
}

type ManagementZoneRuleConditionIpaddressComparisonArray []ManagementZoneRuleConditionIpaddressComparisonInput

func (ManagementZoneRuleConditionIpaddressComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIpaddressComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionIpaddressComparisonArray) ToManagementZoneRuleConditionIpaddressComparisonArrayOutput() ManagementZoneRuleConditionIpaddressComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionIpaddressComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionIpaddressComparisonArray) ToManagementZoneRuleConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionIpaddressComparisonArrayOutput)
}

type ManagementZoneRuleConditionIpaddressComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIpaddressComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionIpaddressComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) ToManagementZoneRuleConditionIpaddressComparisonOutput() ManagementZoneRuleConditionIpaddressComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) ToManagementZoneRuleConditionIpaddressComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddressComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddressComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddressComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionIpaddressComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddressComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddressComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionIpaddressComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionIpaddressComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionIpaddressComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionIpaddressComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionIpaddressComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionIpaddressComparisonArrayOutput) ToManagementZoneRuleConditionIpaddressComparisonArrayOutput() ManagementZoneRuleConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressComparisonArrayOutput) ToManagementZoneRuleConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionIpaddressComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionIpaddressComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionIpaddressComparison {
		return vs[0].([]ManagementZoneRuleConditionIpaddressComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionIpaddressComparisonOutput)
}

type ManagementZoneRuleConditionKey struct {
	Attribute string  `pulumi:"attribute"`
	Type      *string `pulumi:"type"`
	Unknowns  *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionKeyInput is an input type that accepts ManagementZoneRuleConditionKeyArgs and ManagementZoneRuleConditionKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionKeyInput` via:
//
//	ManagementZoneRuleConditionKeyArgs{...}
type ManagementZoneRuleConditionKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionKeyOutput() ManagementZoneRuleConditionKeyOutput
	ToManagementZoneRuleConditionKeyOutputWithContext(context.Context) ManagementZoneRuleConditionKeyOutput
}

type ManagementZoneRuleConditionKeyArgs struct {
	Attribute pulumi.StringInput    `pulumi:"attribute"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Unknowns  pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionKeyArgs) ToManagementZoneRuleConditionKeyOutput() ManagementZoneRuleConditionKeyOutput {
	return i.ToManagementZoneRuleConditionKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionKeyArgs) ToManagementZoneRuleConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionKeyOutput)
}

// ManagementZoneRuleConditionKeyArrayInput is an input type that accepts ManagementZoneRuleConditionKeyArray and ManagementZoneRuleConditionKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionKeyArrayInput` via:
//
//	ManagementZoneRuleConditionKeyArray{ ManagementZoneRuleConditionKeyArgs{...} }
type ManagementZoneRuleConditionKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionKeyArrayOutput() ManagementZoneRuleConditionKeyArrayOutput
	ToManagementZoneRuleConditionKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionKeyArrayOutput
}

type ManagementZoneRuleConditionKeyArray []ManagementZoneRuleConditionKeyInput

func (ManagementZoneRuleConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionKeyArray) ToManagementZoneRuleConditionKeyArrayOutput() ManagementZoneRuleConditionKeyArrayOutput {
	return i.ToManagementZoneRuleConditionKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionKeyArray) ToManagementZoneRuleConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionKeyArrayOutput)
}

type ManagementZoneRuleConditionKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionKeyOutput) ToManagementZoneRuleConditionKeyOutput() ManagementZoneRuleConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionKeyOutput) ToManagementZoneRuleConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionKeyArrayOutput) ToManagementZoneRuleConditionKeyArrayOutput() ManagementZoneRuleConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionKeyArrayOutput) ToManagementZoneRuleConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionKey {
		return vs[0].([]ManagementZoneRuleConditionKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionKeyOutput)
}

type ManagementZoneRuleConditionMobilePlatform struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionMobilePlatformInput is an input type that accepts ManagementZoneRuleConditionMobilePlatformArgs and ManagementZoneRuleConditionMobilePlatformOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionMobilePlatformInput` via:
//
//	ManagementZoneRuleConditionMobilePlatformArgs{...}
type ManagementZoneRuleConditionMobilePlatformInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionMobilePlatformOutput() ManagementZoneRuleConditionMobilePlatformOutput
	ToManagementZoneRuleConditionMobilePlatformOutputWithContext(context.Context) ManagementZoneRuleConditionMobilePlatformOutput
}

type ManagementZoneRuleConditionMobilePlatformArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionMobilePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatform)(nil)).Elem()
}

func (i ManagementZoneRuleConditionMobilePlatformArgs) ToManagementZoneRuleConditionMobilePlatformOutput() ManagementZoneRuleConditionMobilePlatformOutput {
	return i.ToManagementZoneRuleConditionMobilePlatformOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionMobilePlatformArgs) ToManagementZoneRuleConditionMobilePlatformOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionMobilePlatformOutput)
}

// ManagementZoneRuleConditionMobilePlatformArrayInput is an input type that accepts ManagementZoneRuleConditionMobilePlatformArray and ManagementZoneRuleConditionMobilePlatformArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionMobilePlatformArrayInput` via:
//
//	ManagementZoneRuleConditionMobilePlatformArray{ ManagementZoneRuleConditionMobilePlatformArgs{...} }
type ManagementZoneRuleConditionMobilePlatformArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionMobilePlatformArrayOutput() ManagementZoneRuleConditionMobilePlatformArrayOutput
	ToManagementZoneRuleConditionMobilePlatformArrayOutputWithContext(context.Context) ManagementZoneRuleConditionMobilePlatformArrayOutput
}

type ManagementZoneRuleConditionMobilePlatformArray []ManagementZoneRuleConditionMobilePlatformInput

func (ManagementZoneRuleConditionMobilePlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionMobilePlatform)(nil)).Elem()
}

func (i ManagementZoneRuleConditionMobilePlatformArray) ToManagementZoneRuleConditionMobilePlatformArrayOutput() ManagementZoneRuleConditionMobilePlatformArrayOutput {
	return i.ToManagementZoneRuleConditionMobilePlatformArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionMobilePlatformArray) ToManagementZoneRuleConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionMobilePlatformArrayOutput)
}

type ManagementZoneRuleConditionMobilePlatformOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionMobilePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatform)(nil)).Elem()
}

func (o ManagementZoneRuleConditionMobilePlatformOutput) ToManagementZoneRuleConditionMobilePlatformOutput() ManagementZoneRuleConditionMobilePlatformOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformOutput) ToManagementZoneRuleConditionMobilePlatformOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatform) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionMobilePlatformOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatform) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionMobilePlatformOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatform) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionMobilePlatformOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatform) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionMobilePlatformArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionMobilePlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionMobilePlatform)(nil)).Elem()
}

func (o ManagementZoneRuleConditionMobilePlatformArrayOutput) ToManagementZoneRuleConditionMobilePlatformArrayOutput() ManagementZoneRuleConditionMobilePlatformArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformArrayOutput) ToManagementZoneRuleConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionMobilePlatformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionMobilePlatform {
		return vs[0].([]ManagementZoneRuleConditionMobilePlatform)[vs[1].(int)]
	}).(ManagementZoneRuleConditionMobilePlatformOutput)
}

type ManagementZoneRuleConditionMobilePlatformComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionMobilePlatformComparisonInput is an input type that accepts ManagementZoneRuleConditionMobilePlatformComparisonArgs and ManagementZoneRuleConditionMobilePlatformComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionMobilePlatformComparisonInput` via:
//
//	ManagementZoneRuleConditionMobilePlatformComparisonArgs{...}
type ManagementZoneRuleConditionMobilePlatformComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionMobilePlatformComparisonOutput() ManagementZoneRuleConditionMobilePlatformComparisonOutput
	ToManagementZoneRuleConditionMobilePlatformComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionMobilePlatformComparisonOutput
}

type ManagementZoneRuleConditionMobilePlatformComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionMobilePlatformComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionMobilePlatformComparisonArgs) ToManagementZoneRuleConditionMobilePlatformComparisonOutput() ManagementZoneRuleConditionMobilePlatformComparisonOutput {
	return i.ToManagementZoneRuleConditionMobilePlatformComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionMobilePlatformComparisonArgs) ToManagementZoneRuleConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionMobilePlatformComparisonOutput)
}

// ManagementZoneRuleConditionMobilePlatformComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionMobilePlatformComparisonArray and ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionMobilePlatformComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionMobilePlatformComparisonArray{ ManagementZoneRuleConditionMobilePlatformComparisonArgs{...} }
type ManagementZoneRuleConditionMobilePlatformComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutput() ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput
	ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput
}

type ManagementZoneRuleConditionMobilePlatformComparisonArray []ManagementZoneRuleConditionMobilePlatformComparisonInput

func (ManagementZoneRuleConditionMobilePlatformComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionMobilePlatformComparisonArray) ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutput() ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionMobilePlatformComparisonArray) ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput)
}

type ManagementZoneRuleConditionMobilePlatformComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionMobilePlatformComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) ToManagementZoneRuleConditionMobilePlatformComparisonOutput() ManagementZoneRuleConditionMobilePlatformComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) ToManagementZoneRuleConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatformComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatformComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatformComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatformComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionMobilePlatformComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput) ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutput() ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput) ToManagementZoneRuleConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionMobilePlatformComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionMobilePlatformComparison {
		return vs[0].([]ManagementZoneRuleConditionMobilePlatformComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionMobilePlatformComparisonOutput)
}

type ManagementZoneRuleConditionOsArch struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionOsArchInput is an input type that accepts ManagementZoneRuleConditionOsArchArgs and ManagementZoneRuleConditionOsArchOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOsArchInput` via:
//
//	ManagementZoneRuleConditionOsArchArgs{...}
type ManagementZoneRuleConditionOsArchInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOsArchOutput() ManagementZoneRuleConditionOsArchOutput
	ToManagementZoneRuleConditionOsArchOutputWithContext(context.Context) ManagementZoneRuleConditionOsArchOutput
}

type ManagementZoneRuleConditionOsArchArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionOsArchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOsArch)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOsArchArgs) ToManagementZoneRuleConditionOsArchOutput() ManagementZoneRuleConditionOsArchOutput {
	return i.ToManagementZoneRuleConditionOsArchOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOsArchArgs) ToManagementZoneRuleConditionOsArchOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsArchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOsArchOutput)
}

// ManagementZoneRuleConditionOsArchArrayInput is an input type that accepts ManagementZoneRuleConditionOsArchArray and ManagementZoneRuleConditionOsArchArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOsArchArrayInput` via:
//
//	ManagementZoneRuleConditionOsArchArray{ ManagementZoneRuleConditionOsArchArgs{...} }
type ManagementZoneRuleConditionOsArchArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOsArchArrayOutput() ManagementZoneRuleConditionOsArchArrayOutput
	ToManagementZoneRuleConditionOsArchArrayOutputWithContext(context.Context) ManagementZoneRuleConditionOsArchArrayOutput
}

type ManagementZoneRuleConditionOsArchArray []ManagementZoneRuleConditionOsArchInput

func (ManagementZoneRuleConditionOsArchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOsArch)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOsArchArray) ToManagementZoneRuleConditionOsArchArrayOutput() ManagementZoneRuleConditionOsArchArrayOutput {
	return i.ToManagementZoneRuleConditionOsArchArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOsArchArray) ToManagementZoneRuleConditionOsArchArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsArchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOsArchArrayOutput)
}

type ManagementZoneRuleConditionOsArchOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOsArchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOsArch)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOsArchOutput) ToManagementZoneRuleConditionOsArchOutput() ManagementZoneRuleConditionOsArchOutput {
	return o
}

func (o ManagementZoneRuleConditionOsArchOutput) ToManagementZoneRuleConditionOsArchOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsArchOutput {
	return o
}

func (o ManagementZoneRuleConditionOsArchOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsArch) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionOsArchOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsArch) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionOsArchOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsArch) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionOsArchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsArch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionOsArchArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOsArchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOsArch)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOsArchArrayOutput) ToManagementZoneRuleConditionOsArchArrayOutput() ManagementZoneRuleConditionOsArchArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOsArchArrayOutput) ToManagementZoneRuleConditionOsArchArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsArchArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOsArchArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionOsArchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionOsArch {
		return vs[0].([]ManagementZoneRuleConditionOsArch)[vs[1].(int)]
	}).(ManagementZoneRuleConditionOsArchOutput)
}

type ManagementZoneRuleConditionOsType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionOsTypeInput is an input type that accepts ManagementZoneRuleConditionOsTypeArgs and ManagementZoneRuleConditionOsTypeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOsTypeInput` via:
//
//	ManagementZoneRuleConditionOsTypeArgs{...}
type ManagementZoneRuleConditionOsTypeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOsTypeOutput() ManagementZoneRuleConditionOsTypeOutput
	ToManagementZoneRuleConditionOsTypeOutputWithContext(context.Context) ManagementZoneRuleConditionOsTypeOutput
}

type ManagementZoneRuleConditionOsTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionOsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOsType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOsTypeArgs) ToManagementZoneRuleConditionOsTypeOutput() ManagementZoneRuleConditionOsTypeOutput {
	return i.ToManagementZoneRuleConditionOsTypeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOsTypeArgs) ToManagementZoneRuleConditionOsTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOsTypeOutput)
}

// ManagementZoneRuleConditionOsTypeArrayInput is an input type that accepts ManagementZoneRuleConditionOsTypeArray and ManagementZoneRuleConditionOsTypeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOsTypeArrayInput` via:
//
//	ManagementZoneRuleConditionOsTypeArray{ ManagementZoneRuleConditionOsTypeArgs{...} }
type ManagementZoneRuleConditionOsTypeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOsTypeArrayOutput() ManagementZoneRuleConditionOsTypeArrayOutput
	ToManagementZoneRuleConditionOsTypeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionOsTypeArrayOutput
}

type ManagementZoneRuleConditionOsTypeArray []ManagementZoneRuleConditionOsTypeInput

func (ManagementZoneRuleConditionOsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOsType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOsTypeArray) ToManagementZoneRuleConditionOsTypeArrayOutput() ManagementZoneRuleConditionOsTypeArrayOutput {
	return i.ToManagementZoneRuleConditionOsTypeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOsTypeArray) ToManagementZoneRuleConditionOsTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOsTypeArrayOutput)
}

type ManagementZoneRuleConditionOsTypeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOsType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOsTypeOutput) ToManagementZoneRuleConditionOsTypeOutput() ManagementZoneRuleConditionOsTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionOsTypeOutput) ToManagementZoneRuleConditionOsTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionOsTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionOsTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionOsTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionOsTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionOsTypeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOsType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOsTypeArrayOutput) ToManagementZoneRuleConditionOsTypeArrayOutput() ManagementZoneRuleConditionOsTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOsTypeArrayOutput) ToManagementZoneRuleConditionOsTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOsTypeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionOsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionOsType {
		return vs[0].([]ManagementZoneRuleConditionOsType)[vs[1].(int)]
	}).(ManagementZoneRuleConditionOsTypeOutput)
}

type ManagementZoneRuleConditionOsarchitectureComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionOsarchitectureComparisonInput is an input type that accepts ManagementZoneRuleConditionOsarchitectureComparisonArgs and ManagementZoneRuleConditionOsarchitectureComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOsarchitectureComparisonInput` via:
//
//	ManagementZoneRuleConditionOsarchitectureComparisonArgs{...}
type ManagementZoneRuleConditionOsarchitectureComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOsarchitectureComparisonOutput() ManagementZoneRuleConditionOsarchitectureComparisonOutput
	ToManagementZoneRuleConditionOsarchitectureComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionOsarchitectureComparisonOutput
}

type ManagementZoneRuleConditionOsarchitectureComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionOsarchitectureComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOsarchitectureComparisonArgs) ToManagementZoneRuleConditionOsarchitectureComparisonOutput() ManagementZoneRuleConditionOsarchitectureComparisonOutput {
	return i.ToManagementZoneRuleConditionOsarchitectureComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOsarchitectureComparisonArgs) ToManagementZoneRuleConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsarchitectureComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOsarchitectureComparisonOutput)
}

// ManagementZoneRuleConditionOsarchitectureComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionOsarchitectureComparisonArray and ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOsarchitectureComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionOsarchitectureComparisonArray{ ManagementZoneRuleConditionOsarchitectureComparisonArgs{...} }
type ManagementZoneRuleConditionOsarchitectureComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutput() ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput
	ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput
}

type ManagementZoneRuleConditionOsarchitectureComparisonArray []ManagementZoneRuleConditionOsarchitectureComparisonInput

func (ManagementZoneRuleConditionOsarchitectureComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOsarchitectureComparisonArray) ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutput() ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOsarchitectureComparisonArray) ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput)
}

type ManagementZoneRuleConditionOsarchitectureComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOsarchitectureComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) ToManagementZoneRuleConditionOsarchitectureComparisonOutput() ManagementZoneRuleConditionOsarchitectureComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) ToManagementZoneRuleConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsarchitectureComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsarchitectureComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsarchitectureComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsarchitectureComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsarchitectureComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOsarchitectureComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput) ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutput() ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput) ToManagementZoneRuleConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionOsarchitectureComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionOsarchitectureComparison {
		return vs[0].([]ManagementZoneRuleConditionOsarchitectureComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionOsarchitectureComparisonOutput)
}

type ManagementZoneRuleConditionOstypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionOstypeComparisonInput is an input type that accepts ManagementZoneRuleConditionOstypeComparisonArgs and ManagementZoneRuleConditionOstypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOstypeComparisonInput` via:
//
//	ManagementZoneRuleConditionOstypeComparisonArgs{...}
type ManagementZoneRuleConditionOstypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOstypeComparisonOutput() ManagementZoneRuleConditionOstypeComparisonOutput
	ToManagementZoneRuleConditionOstypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionOstypeComparisonOutput
}

type ManagementZoneRuleConditionOstypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionOstypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOstypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOstypeComparisonArgs) ToManagementZoneRuleConditionOstypeComparisonOutput() ManagementZoneRuleConditionOstypeComparisonOutput {
	return i.ToManagementZoneRuleConditionOstypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOstypeComparisonArgs) ToManagementZoneRuleConditionOstypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOstypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOstypeComparisonOutput)
}

// ManagementZoneRuleConditionOstypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionOstypeComparisonArray and ManagementZoneRuleConditionOstypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionOstypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionOstypeComparisonArray{ ManagementZoneRuleConditionOstypeComparisonArgs{...} }
type ManagementZoneRuleConditionOstypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionOstypeComparisonArrayOutput() ManagementZoneRuleConditionOstypeComparisonArrayOutput
	ToManagementZoneRuleConditionOstypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionOstypeComparisonArrayOutput
}

type ManagementZoneRuleConditionOstypeComparisonArray []ManagementZoneRuleConditionOstypeComparisonInput

func (ManagementZoneRuleConditionOstypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOstypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionOstypeComparisonArray) ToManagementZoneRuleConditionOstypeComparisonArrayOutput() ManagementZoneRuleConditionOstypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionOstypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionOstypeComparisonArray) ToManagementZoneRuleConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOstypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionOstypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionOstypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOstypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionOstypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOstypeComparisonOutput) ToManagementZoneRuleConditionOstypeComparisonOutput() ManagementZoneRuleConditionOstypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionOstypeComparisonOutput) ToManagementZoneRuleConditionOstypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOstypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionOstypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOstypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionOstypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOstypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionOstypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOstypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionOstypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOstypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionOstypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionOstypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionOstypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionOstypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionOstypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionOstypeComparisonArrayOutput) ToManagementZoneRuleConditionOstypeComparisonArrayOutput() ManagementZoneRuleConditionOstypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOstypeComparisonArrayOutput) ToManagementZoneRuleConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionOstypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionOstypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionOstypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionOstypeComparison {
		return vs[0].([]ManagementZoneRuleConditionOstypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionOstypeComparisonOutput)
}

type ManagementZoneRuleConditionPaasType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionPaasTypeInput is an input type that accepts ManagementZoneRuleConditionPaasTypeArgs and ManagementZoneRuleConditionPaasTypeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionPaasTypeInput` via:
//
//	ManagementZoneRuleConditionPaasTypeArgs{...}
type ManagementZoneRuleConditionPaasTypeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionPaasTypeOutput() ManagementZoneRuleConditionPaasTypeOutput
	ToManagementZoneRuleConditionPaasTypeOutputWithContext(context.Context) ManagementZoneRuleConditionPaasTypeOutput
}

type ManagementZoneRuleConditionPaasTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionPaasTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionPaasType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionPaasTypeArgs) ToManagementZoneRuleConditionPaasTypeOutput() ManagementZoneRuleConditionPaasTypeOutput {
	return i.ToManagementZoneRuleConditionPaasTypeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionPaasTypeArgs) ToManagementZoneRuleConditionPaasTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionPaasTypeOutput)
}

// ManagementZoneRuleConditionPaasTypeArrayInput is an input type that accepts ManagementZoneRuleConditionPaasTypeArray and ManagementZoneRuleConditionPaasTypeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionPaasTypeArrayInput` via:
//
//	ManagementZoneRuleConditionPaasTypeArray{ ManagementZoneRuleConditionPaasTypeArgs{...} }
type ManagementZoneRuleConditionPaasTypeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionPaasTypeArrayOutput() ManagementZoneRuleConditionPaasTypeArrayOutput
	ToManagementZoneRuleConditionPaasTypeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionPaasTypeArrayOutput
}

type ManagementZoneRuleConditionPaasTypeArray []ManagementZoneRuleConditionPaasTypeInput

func (ManagementZoneRuleConditionPaasTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionPaasType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionPaasTypeArray) ToManagementZoneRuleConditionPaasTypeArrayOutput() ManagementZoneRuleConditionPaasTypeArrayOutput {
	return i.ToManagementZoneRuleConditionPaasTypeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionPaasTypeArray) ToManagementZoneRuleConditionPaasTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionPaasTypeArrayOutput)
}

type ManagementZoneRuleConditionPaasTypeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionPaasTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionPaasType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionPaasTypeOutput) ToManagementZoneRuleConditionPaasTypeOutput() ManagementZoneRuleConditionPaasTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeOutput) ToManagementZoneRuleConditionPaasTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionPaasTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionPaasTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionPaasTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionPaasTypeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionPaasTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionPaasType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionPaasTypeArrayOutput) ToManagementZoneRuleConditionPaasTypeArrayOutput() ManagementZoneRuleConditionPaasTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeArrayOutput) ToManagementZoneRuleConditionPaasTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionPaasTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionPaasType {
		return vs[0].([]ManagementZoneRuleConditionPaasType)[vs[1].(int)]
	}).(ManagementZoneRuleConditionPaasTypeOutput)
}

type ManagementZoneRuleConditionPaasTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionPaasTypeComparisonInput is an input type that accepts ManagementZoneRuleConditionPaasTypeComparisonArgs and ManagementZoneRuleConditionPaasTypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionPaasTypeComparisonInput` via:
//
//	ManagementZoneRuleConditionPaasTypeComparisonArgs{...}
type ManagementZoneRuleConditionPaasTypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionPaasTypeComparisonOutput() ManagementZoneRuleConditionPaasTypeComparisonOutput
	ToManagementZoneRuleConditionPaasTypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionPaasTypeComparisonOutput
}

type ManagementZoneRuleConditionPaasTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionPaasTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionPaasTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionPaasTypeComparisonArgs) ToManagementZoneRuleConditionPaasTypeComparisonOutput() ManagementZoneRuleConditionPaasTypeComparisonOutput {
	return i.ToManagementZoneRuleConditionPaasTypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionPaasTypeComparisonArgs) ToManagementZoneRuleConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionPaasTypeComparisonOutput)
}

// ManagementZoneRuleConditionPaasTypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionPaasTypeComparisonArray and ManagementZoneRuleConditionPaasTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionPaasTypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionPaasTypeComparisonArray{ ManagementZoneRuleConditionPaasTypeComparisonArgs{...} }
type ManagementZoneRuleConditionPaasTypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionPaasTypeComparisonArrayOutput() ManagementZoneRuleConditionPaasTypeComparisonArrayOutput
	ToManagementZoneRuleConditionPaasTypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionPaasTypeComparisonArrayOutput
}

type ManagementZoneRuleConditionPaasTypeComparisonArray []ManagementZoneRuleConditionPaasTypeComparisonInput

func (ManagementZoneRuleConditionPaasTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionPaasTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionPaasTypeComparisonArray) ToManagementZoneRuleConditionPaasTypeComparisonArrayOutput() ManagementZoneRuleConditionPaasTypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionPaasTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionPaasTypeComparisonArray) ToManagementZoneRuleConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionPaasTypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionPaasTypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionPaasTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionPaasTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) ToManagementZoneRuleConditionPaasTypeComparisonOutput() ManagementZoneRuleConditionPaasTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) ToManagementZoneRuleConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionPaasTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionPaasTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionPaasTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionPaasTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionPaasTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionPaasTypeComparisonArrayOutput) ToManagementZoneRuleConditionPaasTypeComparisonArrayOutput() ManagementZoneRuleConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeComparisonArrayOutput) ToManagementZoneRuleConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionPaasTypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionPaasTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionPaasTypeComparison {
		return vs[0].([]ManagementZoneRuleConditionPaasTypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionPaasTypeComparisonOutput)
}

type ManagementZoneRuleConditionProcessMetadata struct {
	Attribute  string  `pulumi:"attribute"`
	DynamicKey string  `pulumi:"dynamicKey"`
	Unknowns   *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionProcessMetadataInput is an input type that accepts ManagementZoneRuleConditionProcessMetadataArgs and ManagementZoneRuleConditionProcessMetadataOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionProcessMetadataInput` via:
//
//	ManagementZoneRuleConditionProcessMetadataArgs{...}
type ManagementZoneRuleConditionProcessMetadataInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionProcessMetadataOutput() ManagementZoneRuleConditionProcessMetadataOutput
	ToManagementZoneRuleConditionProcessMetadataOutputWithContext(context.Context) ManagementZoneRuleConditionProcessMetadataOutput
}

type ManagementZoneRuleConditionProcessMetadataArgs struct {
	Attribute  pulumi.StringInput    `pulumi:"attribute"`
	DynamicKey pulumi.StringInput    `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadata)(nil)).Elem()
}

func (i ManagementZoneRuleConditionProcessMetadataArgs) ToManagementZoneRuleConditionProcessMetadataOutput() ManagementZoneRuleConditionProcessMetadataOutput {
	return i.ToManagementZoneRuleConditionProcessMetadataOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionProcessMetadataArgs) ToManagementZoneRuleConditionProcessMetadataOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionProcessMetadataOutput)
}

// ManagementZoneRuleConditionProcessMetadataArrayInput is an input type that accepts ManagementZoneRuleConditionProcessMetadataArray and ManagementZoneRuleConditionProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionProcessMetadataArrayInput` via:
//
//	ManagementZoneRuleConditionProcessMetadataArray{ ManagementZoneRuleConditionProcessMetadataArgs{...} }
type ManagementZoneRuleConditionProcessMetadataArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionProcessMetadataArrayOutput() ManagementZoneRuleConditionProcessMetadataArrayOutput
	ToManagementZoneRuleConditionProcessMetadataArrayOutputWithContext(context.Context) ManagementZoneRuleConditionProcessMetadataArrayOutput
}

type ManagementZoneRuleConditionProcessMetadataArray []ManagementZoneRuleConditionProcessMetadataInput

func (ManagementZoneRuleConditionProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionProcessMetadata)(nil)).Elem()
}

func (i ManagementZoneRuleConditionProcessMetadataArray) ToManagementZoneRuleConditionProcessMetadataArrayOutput() ManagementZoneRuleConditionProcessMetadataArrayOutput {
	return i.ToManagementZoneRuleConditionProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionProcessMetadataArray) ToManagementZoneRuleConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionProcessMetadataArrayOutput)
}

type ManagementZoneRuleConditionProcessMetadataOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadata)(nil)).Elem()
}

func (o ManagementZoneRuleConditionProcessMetadataOutput) ToManagementZoneRuleConditionProcessMetadataOutput() ManagementZoneRuleConditionProcessMetadataOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataOutput) ToManagementZoneRuleConditionProcessMetadataOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionProcessMetadataOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadata) string { return v.DynamicKey }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionProcessMetadata)(nil)).Elem()
}

func (o ManagementZoneRuleConditionProcessMetadataArrayOutput) ToManagementZoneRuleConditionProcessMetadataArrayOutput() ManagementZoneRuleConditionProcessMetadataArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataArrayOutput) ToManagementZoneRuleConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionProcessMetadata {
		return vs[0].([]ManagementZoneRuleConditionProcessMetadata)[vs[1].(int)]
	}).(ManagementZoneRuleConditionProcessMetadataOutput)
}

type ManagementZoneRuleConditionProcessMetadataConditionKey struct {
	Attribute  string `pulumi:"attribute"`
	DynamicKey string `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionProcessMetadataConditionKeyInput is an input type that accepts ManagementZoneRuleConditionProcessMetadataConditionKeyArgs and ManagementZoneRuleConditionProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionProcessMetadataConditionKeyInput` via:
//
//	ManagementZoneRuleConditionProcessMetadataConditionKeyArgs{...}
type ManagementZoneRuleConditionProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionProcessMetadataConditionKeyOutput() ManagementZoneRuleConditionProcessMetadataConditionKeyOutput
	ToManagementZoneRuleConditionProcessMetadataConditionKeyOutputWithContext(context.Context) ManagementZoneRuleConditionProcessMetadataConditionKeyOutput
}

type ManagementZoneRuleConditionProcessMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput `pulumi:"attribute"`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionProcessMetadataConditionKeyArgs) ToManagementZoneRuleConditionProcessMetadataConditionKeyOutput() ManagementZoneRuleConditionProcessMetadataConditionKeyOutput {
	return i.ToManagementZoneRuleConditionProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionProcessMetadataConditionKeyArgs) ToManagementZoneRuleConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionProcessMetadataConditionKeyOutput)
}

// ManagementZoneRuleConditionProcessMetadataConditionKeyArrayInput is an input type that accepts ManagementZoneRuleConditionProcessMetadataConditionKeyArray and ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionProcessMetadataConditionKeyArrayInput` via:
//
//	ManagementZoneRuleConditionProcessMetadataConditionKeyArray{ ManagementZoneRuleConditionProcessMetadataConditionKeyArgs{...} }
type ManagementZoneRuleConditionProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput
	ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput
}

type ManagementZoneRuleConditionProcessMetadataConditionKeyArray []ManagementZoneRuleConditionProcessMetadataConditionKeyInput

func (ManagementZoneRuleConditionProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionProcessMetadataConditionKeyArray) ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput {
	return i.ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionProcessMetadataConditionKeyArray) ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput)
}

type ManagementZoneRuleConditionProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) ToManagementZoneRuleConditionProcessMetadataConditionKeyOutput() ManagementZoneRuleConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) ToManagementZoneRuleConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadataConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput) ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput() ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput) ToManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionProcessMetadataConditionKey {
		return vs[0].([]ManagementZoneRuleConditionProcessMetadataConditionKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionProcessMetadataConditionKeyOutput)
}

type ManagementZoneRuleConditionServiceTopology struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionServiceTopologyInput is an input type that accepts ManagementZoneRuleConditionServiceTopologyArgs and ManagementZoneRuleConditionServiceTopologyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTopologyInput` via:
//
//	ManagementZoneRuleConditionServiceTopologyArgs{...}
type ManagementZoneRuleConditionServiceTopologyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTopologyOutput() ManagementZoneRuleConditionServiceTopologyOutput
	ToManagementZoneRuleConditionServiceTopologyOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTopologyOutput
}

type ManagementZoneRuleConditionServiceTopologyArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionServiceTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceTopology)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTopologyArgs) ToManagementZoneRuleConditionServiceTopologyOutput() ManagementZoneRuleConditionServiceTopologyOutput {
	return i.ToManagementZoneRuleConditionServiceTopologyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTopologyArgs) ToManagementZoneRuleConditionServiceTopologyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTopologyOutput)
}

// ManagementZoneRuleConditionServiceTopologyArrayInput is an input type that accepts ManagementZoneRuleConditionServiceTopologyArray and ManagementZoneRuleConditionServiceTopologyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTopologyArrayInput` via:
//
//	ManagementZoneRuleConditionServiceTopologyArray{ ManagementZoneRuleConditionServiceTopologyArgs{...} }
type ManagementZoneRuleConditionServiceTopologyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTopologyArrayOutput() ManagementZoneRuleConditionServiceTopologyArrayOutput
	ToManagementZoneRuleConditionServiceTopologyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTopologyArrayOutput
}

type ManagementZoneRuleConditionServiceTopologyArray []ManagementZoneRuleConditionServiceTopologyInput

func (ManagementZoneRuleConditionServiceTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceTopology)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTopologyArray) ToManagementZoneRuleConditionServiceTopologyArrayOutput() ManagementZoneRuleConditionServiceTopologyArrayOutput {
	return i.ToManagementZoneRuleConditionServiceTopologyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTopologyArray) ToManagementZoneRuleConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTopologyArrayOutput)
}

type ManagementZoneRuleConditionServiceTopologyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceTopology)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTopologyOutput) ToManagementZoneRuleConditionServiceTopologyOutput() ManagementZoneRuleConditionServiceTopologyOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyOutput) ToManagementZoneRuleConditionServiceTopologyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopology) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionServiceTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionServiceTopologyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceTopology)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTopologyArrayOutput) ToManagementZoneRuleConditionServiceTopologyArrayOutput() ManagementZoneRuleConditionServiceTopologyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyArrayOutput) ToManagementZoneRuleConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionServiceTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionServiceTopology {
		return vs[0].([]ManagementZoneRuleConditionServiceTopology)[vs[1].(int)]
	}).(ManagementZoneRuleConditionServiceTopologyOutput)
}

type ManagementZoneRuleConditionServiceTopologyComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionServiceTopologyComparisonInput is an input type that accepts ManagementZoneRuleConditionServiceTopologyComparisonArgs and ManagementZoneRuleConditionServiceTopologyComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTopologyComparisonInput` via:
//
//	ManagementZoneRuleConditionServiceTopologyComparisonArgs{...}
type ManagementZoneRuleConditionServiceTopologyComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTopologyComparisonOutput() ManagementZoneRuleConditionServiceTopologyComparisonOutput
	ToManagementZoneRuleConditionServiceTopologyComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTopologyComparisonOutput
}

type ManagementZoneRuleConditionServiceTopologyComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionServiceTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTopologyComparisonArgs) ToManagementZoneRuleConditionServiceTopologyComparisonOutput() ManagementZoneRuleConditionServiceTopologyComparisonOutput {
	return i.ToManagementZoneRuleConditionServiceTopologyComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTopologyComparisonArgs) ToManagementZoneRuleConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTopologyComparisonOutput)
}

// ManagementZoneRuleConditionServiceTopologyComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionServiceTopologyComparisonArray and ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTopologyComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionServiceTopologyComparisonArray{ ManagementZoneRuleConditionServiceTopologyComparisonArgs{...} }
type ManagementZoneRuleConditionServiceTopologyComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutput() ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput
	ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput
}

type ManagementZoneRuleConditionServiceTopologyComparisonArray []ManagementZoneRuleConditionServiceTopologyComparisonInput

func (ManagementZoneRuleConditionServiceTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTopologyComparisonArray) ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutput() ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTopologyComparisonArray) ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput)
}

type ManagementZoneRuleConditionServiceTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) ToManagementZoneRuleConditionServiceTopologyComparisonOutput() ManagementZoneRuleConditionServiceTopologyComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) ToManagementZoneRuleConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput) ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutput() ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput) ToManagementZoneRuleConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionServiceTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionServiceTopologyComparison {
		return vs[0].([]ManagementZoneRuleConditionServiceTopologyComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionServiceTopologyComparisonOutput)
}

type ManagementZoneRuleConditionServiceType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionServiceTypeInput is an input type that accepts ManagementZoneRuleConditionServiceTypeArgs and ManagementZoneRuleConditionServiceTypeOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTypeInput` via:
//
//	ManagementZoneRuleConditionServiceTypeArgs{...}
type ManagementZoneRuleConditionServiceTypeInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTypeOutput() ManagementZoneRuleConditionServiceTypeOutput
	ToManagementZoneRuleConditionServiceTypeOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTypeOutput
}

type ManagementZoneRuleConditionServiceTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTypeArgs) ToManagementZoneRuleConditionServiceTypeOutput() ManagementZoneRuleConditionServiceTypeOutput {
	return i.ToManagementZoneRuleConditionServiceTypeOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTypeArgs) ToManagementZoneRuleConditionServiceTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTypeOutput)
}

// ManagementZoneRuleConditionServiceTypeArrayInput is an input type that accepts ManagementZoneRuleConditionServiceTypeArray and ManagementZoneRuleConditionServiceTypeArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTypeArrayInput` via:
//
//	ManagementZoneRuleConditionServiceTypeArray{ ManagementZoneRuleConditionServiceTypeArgs{...} }
type ManagementZoneRuleConditionServiceTypeArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTypeArrayOutput() ManagementZoneRuleConditionServiceTypeArrayOutput
	ToManagementZoneRuleConditionServiceTypeArrayOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTypeArrayOutput
}

type ManagementZoneRuleConditionServiceTypeArray []ManagementZoneRuleConditionServiceTypeInput

func (ManagementZoneRuleConditionServiceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceType)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTypeArray) ToManagementZoneRuleConditionServiceTypeArrayOutput() ManagementZoneRuleConditionServiceTypeArrayOutput {
	return i.ToManagementZoneRuleConditionServiceTypeArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTypeArray) ToManagementZoneRuleConditionServiceTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTypeArrayOutput)
}

type ManagementZoneRuleConditionServiceTypeOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTypeOutput) ToManagementZoneRuleConditionServiceTypeOutput() ManagementZoneRuleConditionServiceTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeOutput) ToManagementZoneRuleConditionServiceTypeOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionServiceTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionServiceTypeArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceType)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTypeArrayOutput) ToManagementZoneRuleConditionServiceTypeArrayOutput() ManagementZoneRuleConditionServiceTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeArrayOutput) ToManagementZoneRuleConditionServiceTypeArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionServiceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionServiceType {
		return vs[0].([]ManagementZoneRuleConditionServiceType)[vs[1].(int)]
	}).(ManagementZoneRuleConditionServiceTypeOutput)
}

type ManagementZoneRuleConditionServiceTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionServiceTypeComparisonInput is an input type that accepts ManagementZoneRuleConditionServiceTypeComparisonArgs and ManagementZoneRuleConditionServiceTypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTypeComparisonInput` via:
//
//	ManagementZoneRuleConditionServiceTypeComparisonArgs{...}
type ManagementZoneRuleConditionServiceTypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTypeComparisonOutput() ManagementZoneRuleConditionServiceTypeComparisonOutput
	ToManagementZoneRuleConditionServiceTypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTypeComparisonOutput
}

type ManagementZoneRuleConditionServiceTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionServiceTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTypeComparisonArgs) ToManagementZoneRuleConditionServiceTypeComparisonOutput() ManagementZoneRuleConditionServiceTypeComparisonOutput {
	return i.ToManagementZoneRuleConditionServiceTypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTypeComparisonArgs) ToManagementZoneRuleConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTypeComparisonOutput)
}

// ManagementZoneRuleConditionServiceTypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionServiceTypeComparisonArray and ManagementZoneRuleConditionServiceTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionServiceTypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionServiceTypeComparisonArray{ ManagementZoneRuleConditionServiceTypeComparisonArgs{...} }
type ManagementZoneRuleConditionServiceTypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionServiceTypeComparisonArrayOutput() ManagementZoneRuleConditionServiceTypeComparisonArrayOutput
	ToManagementZoneRuleConditionServiceTypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionServiceTypeComparisonArrayOutput
}

type ManagementZoneRuleConditionServiceTypeComparisonArray []ManagementZoneRuleConditionServiceTypeComparisonInput

func (ManagementZoneRuleConditionServiceTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionServiceTypeComparisonArray) ToManagementZoneRuleConditionServiceTypeComparisonArrayOutput() ManagementZoneRuleConditionServiceTypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionServiceTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionServiceTypeComparisonArray) ToManagementZoneRuleConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionServiceTypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionServiceTypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionServiceTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) ToManagementZoneRuleConditionServiceTypeComparisonOutput() ManagementZoneRuleConditionServiceTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) ToManagementZoneRuleConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionServiceTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionServiceTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionServiceTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionServiceTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionServiceTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionServiceTypeComparisonArrayOutput) ToManagementZoneRuleConditionServiceTypeComparisonArrayOutput() ManagementZoneRuleConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeComparisonArrayOutput) ToManagementZoneRuleConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionServiceTypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionServiceTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionServiceTypeComparison {
		return vs[0].([]ManagementZoneRuleConditionServiceTypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionServiceTypeComparisonOutput)
}

type ManagementZoneRuleConditionSimpleHostTechComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                   `pulumi:"type"`
	Unknowns *string                                                   `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionSimpleHostTechComparisonValue `pulumi:"value"`
}

// ManagementZoneRuleConditionSimpleHostTechComparisonInput is an input type that accepts ManagementZoneRuleConditionSimpleHostTechComparisonArgs and ManagementZoneRuleConditionSimpleHostTechComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleHostTechComparisonInput` via:
//
//	ManagementZoneRuleConditionSimpleHostTechComparisonArgs{...}
type ManagementZoneRuleConditionSimpleHostTechComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleHostTechComparisonOutput() ManagementZoneRuleConditionSimpleHostTechComparisonOutput
	ToManagementZoneRuleConditionSimpleHostTechComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonOutput
}

type ManagementZoneRuleConditionSimpleHostTechComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                            `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                            `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionSimpleHostTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonArgs) ToManagementZoneRuleConditionSimpleHostTechComparisonOutput() ManagementZoneRuleConditionSimpleHostTechComparisonOutput {
	return i.ToManagementZoneRuleConditionSimpleHostTechComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonArgs) ToManagementZoneRuleConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleHostTechComparisonOutput)
}

// ManagementZoneRuleConditionSimpleHostTechComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionSimpleHostTechComparisonArray and ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleHostTechComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionSimpleHostTechComparisonArray{ ManagementZoneRuleConditionSimpleHostTechComparisonArgs{...} }
type ManagementZoneRuleConditionSimpleHostTechComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput() ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput
	ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput
}

type ManagementZoneRuleConditionSimpleHostTechComparisonArray []ManagementZoneRuleConditionSimpleHostTechComparisonInput

func (ManagementZoneRuleConditionSimpleHostTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonArray) ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput() ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonArray) ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput)
}

type ManagementZoneRuleConditionSimpleHostTechComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleHostTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonOutput() ManagementZoneRuleConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonOutput) Value() ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparison) *ManagementZoneRuleConditionSimpleHostTechComparisonValue {
		return v.Value
	}).(ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput() ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionSimpleHostTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionSimpleHostTechComparison {
		return vs[0].([]ManagementZoneRuleConditionSimpleHostTechComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionSimpleHostTechComparisonOutput)
}

type ManagementZoneRuleConditionSimpleHostTechComparisonValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ManagementZoneRuleConditionSimpleHostTechComparisonValueInput is an input type that accepts ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs and ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleHostTechComparisonValueInput` via:
//
//	ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs{...}
type ManagementZoneRuleConditionSimpleHostTechComparisonValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput
	ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput
}

type ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput {
	return i.ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput)
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput).ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrInput is an input type that accepts ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs, ManagementZoneRuleConditionSimpleHostTechComparisonValuePtr and ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrInput` via:
//
//	        ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput
	ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput
}

type managementZoneRuleConditionSimpleHostTechComparisonValuePtrType ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs

func ManagementZoneRuleConditionSimpleHostTechComparisonValuePtr(v *ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs) ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrInput {
	return (*managementZoneRuleConditionSimpleHostTechComparisonValuePtrType)(v)
}

func (*managementZoneRuleConditionSimpleHostTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionSimpleHostTechComparisonValuePtrType) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionSimpleHostTechComparisonValuePtrType) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionSimpleHostTechComparisonValue) *ManagementZoneRuleConditionSimpleHostTechComparisonValue {
		return &v
	}).(ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleHostTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) ToManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) Elem() ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleHostTechComparisonValue) ManagementZoneRuleConditionSimpleHostTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionSimpleHostTechComparisonValue
		return ret
	}).(ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionSimpleTechComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                               `pulumi:"type"`
	Unknowns *string                                               `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionSimpleTechComparisonValue `pulumi:"value"`
}

// ManagementZoneRuleConditionSimpleTechComparisonInput is an input type that accepts ManagementZoneRuleConditionSimpleTechComparisonArgs and ManagementZoneRuleConditionSimpleTechComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleTechComparisonInput` via:
//
//	ManagementZoneRuleConditionSimpleTechComparisonArgs{...}
type ManagementZoneRuleConditionSimpleTechComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleTechComparisonOutput() ManagementZoneRuleConditionSimpleTechComparisonOutput
	ToManagementZoneRuleConditionSimpleTechComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleTechComparisonOutput
}

type ManagementZoneRuleConditionSimpleTechComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                        `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                        `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionSimpleTechComparisonValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionSimpleTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSimpleTechComparisonArgs) ToManagementZoneRuleConditionSimpleTechComparisonOutput() ManagementZoneRuleConditionSimpleTechComparisonOutput {
	return i.ToManagementZoneRuleConditionSimpleTechComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleTechComparisonArgs) ToManagementZoneRuleConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleTechComparisonOutput)
}

// ManagementZoneRuleConditionSimpleTechComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionSimpleTechComparisonArray and ManagementZoneRuleConditionSimpleTechComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleTechComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionSimpleTechComparisonArray{ ManagementZoneRuleConditionSimpleTechComparisonArgs{...} }
type ManagementZoneRuleConditionSimpleTechComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleTechComparisonArrayOutput() ManagementZoneRuleConditionSimpleTechComparisonArrayOutput
	ToManagementZoneRuleConditionSimpleTechComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleTechComparisonArrayOutput
}

type ManagementZoneRuleConditionSimpleTechComparisonArray []ManagementZoneRuleConditionSimpleTechComparisonInput

func (ManagementZoneRuleConditionSimpleTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSimpleTechComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSimpleTechComparisonArray) ToManagementZoneRuleConditionSimpleTechComparisonArrayOutput() ManagementZoneRuleConditionSimpleTechComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionSimpleTechComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleTechComparisonArray) ToManagementZoneRuleConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleTechComparisonArrayOutput)
}

type ManagementZoneRuleConditionSimpleTechComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) ToManagementZoneRuleConditionSimpleTechComparisonOutput() ManagementZoneRuleConditionSimpleTechComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) ToManagementZoneRuleConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonOutput) Value() ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparison) *ManagementZoneRuleConditionSimpleTechComparisonValue {
		return v.Value
	}).(ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionSimpleTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSimpleTechComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleTechComparisonArrayOutput) ToManagementZoneRuleConditionSimpleTechComparisonArrayOutput() ManagementZoneRuleConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonArrayOutput) ToManagementZoneRuleConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionSimpleTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionSimpleTechComparison {
		return vs[0].([]ManagementZoneRuleConditionSimpleTechComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionSimpleTechComparisonOutput)
}

type ManagementZoneRuleConditionSimpleTechComparisonValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ManagementZoneRuleConditionSimpleTechComparisonValueInput is an input type that accepts ManagementZoneRuleConditionSimpleTechComparisonValueArgs and ManagementZoneRuleConditionSimpleTechComparisonValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleTechComparisonValueInput` via:
//
//	ManagementZoneRuleConditionSimpleTechComparisonValueArgs{...}
type ManagementZoneRuleConditionSimpleTechComparisonValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleTechComparisonValueOutput() ManagementZoneRuleConditionSimpleTechComparisonValueOutput
	ToManagementZoneRuleConditionSimpleTechComparisonValueOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleTechComparisonValueOutput
}

type ManagementZoneRuleConditionSimpleTechComparisonValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ManagementZoneRuleConditionSimpleTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSimpleTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleTechComparisonValueOutput() ManagementZoneRuleConditionSimpleTechComparisonValueOutput {
	return i.ToManagementZoneRuleConditionSimpleTechComparisonValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleTechComparisonValueOutput)
}

func (i ManagementZoneRuleConditionSimpleTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSimpleTechComparisonValueArgs) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleTechComparisonValueOutput).ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionSimpleTechComparisonValuePtrInput is an input type that accepts ManagementZoneRuleConditionSimpleTechComparisonValueArgs, ManagementZoneRuleConditionSimpleTechComparisonValuePtr and ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSimpleTechComparisonValuePtrInput` via:
//
//	        ManagementZoneRuleConditionSimpleTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionSimpleTechComparisonValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput
	ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput
}

type managementZoneRuleConditionSimpleTechComparisonValuePtrType ManagementZoneRuleConditionSimpleTechComparisonValueArgs

func ManagementZoneRuleConditionSimpleTechComparisonValuePtr(v *ManagementZoneRuleConditionSimpleTechComparisonValueArgs) ManagementZoneRuleConditionSimpleTechComparisonValuePtrInput {
	return (*managementZoneRuleConditionSimpleTechComparisonValuePtrType)(v)
}

func (*managementZoneRuleConditionSimpleTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionSimpleTechComparisonValuePtrType) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionSimpleTechComparisonValuePtrType) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionSimpleTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleTechComparisonValueOutput() ManagementZoneRuleConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return o.ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionSimpleTechComparisonValue) *ManagementZoneRuleConditionSimpleTechComparisonValue {
		return &v
	}).(ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSimpleTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput() ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) ToManagementZoneRuleConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) Elem() ManagementZoneRuleConditionSimpleTechComparisonValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleTechComparisonValue) ManagementZoneRuleConditionSimpleTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionSimpleTechComparisonValue
		return ret
	}).(ManagementZoneRuleConditionSimpleTechComparisonValueOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionString struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Negate        *bool   `pulumi:"negate"`
	Operator      string  `pulumi:"operator"`
	Unknowns      *string `pulumi:"unknowns"`
	Value         *string `pulumi:"value"`
}

// ManagementZoneRuleConditionStringInput is an input type that accepts ManagementZoneRuleConditionStringArgs and ManagementZoneRuleConditionStringOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringInput` via:
//
//	ManagementZoneRuleConditionStringArgs{...}
type ManagementZoneRuleConditionStringInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringOutput() ManagementZoneRuleConditionStringOutput
	ToManagementZoneRuleConditionStringOutputWithContext(context.Context) ManagementZoneRuleConditionStringOutput
}

type ManagementZoneRuleConditionStringArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator      pulumi.StringInput    `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionString)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringArgs) ToManagementZoneRuleConditionStringOutput() ManagementZoneRuleConditionStringOutput {
	return i.ToManagementZoneRuleConditionStringOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringArgs) ToManagementZoneRuleConditionStringOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringOutput)
}

// ManagementZoneRuleConditionStringArrayInput is an input type that accepts ManagementZoneRuleConditionStringArray and ManagementZoneRuleConditionStringArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringArrayInput` via:
//
//	ManagementZoneRuleConditionStringArray{ ManagementZoneRuleConditionStringArgs{...} }
type ManagementZoneRuleConditionStringArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringArrayOutput() ManagementZoneRuleConditionStringArrayOutput
	ToManagementZoneRuleConditionStringArrayOutputWithContext(context.Context) ManagementZoneRuleConditionStringArrayOutput
}

type ManagementZoneRuleConditionStringArray []ManagementZoneRuleConditionStringInput

func (ManagementZoneRuleConditionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionString)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringArray) ToManagementZoneRuleConditionStringArrayOutput() ManagementZoneRuleConditionStringArrayOutput {
	return i.ToManagementZoneRuleConditionStringArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringArray) ToManagementZoneRuleConditionStringArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringArrayOutput)
}

type ManagementZoneRuleConditionStringOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionString)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringOutput) ToManagementZoneRuleConditionStringOutput() ManagementZoneRuleConditionStringOutput {
	return o
}

func (o ManagementZoneRuleConditionStringOutput) ToManagementZoneRuleConditionStringOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringOutput {
	return o
}

func (o ManagementZoneRuleConditionStringOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionString) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionString) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionStringArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionString)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringArrayOutput) ToManagementZoneRuleConditionStringArrayOutput() ManagementZoneRuleConditionStringArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringArrayOutput) ToManagementZoneRuleConditionStringArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionString {
		return vs[0].([]ManagementZoneRuleConditionString)[vs[1].(int)]
	}).(ManagementZoneRuleConditionStringOutput)
}

type ManagementZoneRuleConditionStringComparison struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Negate        *bool  `pulumi:"negate"`
	Operator      string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionStringComparisonInput is an input type that accepts ManagementZoneRuleConditionStringComparisonArgs and ManagementZoneRuleConditionStringComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringComparisonInput` via:
//
//	ManagementZoneRuleConditionStringComparisonArgs{...}
type ManagementZoneRuleConditionStringComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringComparisonOutput() ManagementZoneRuleConditionStringComparisonOutput
	ToManagementZoneRuleConditionStringComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionStringComparisonOutput
}

type ManagementZoneRuleConditionStringComparisonArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput `pulumi:"negate"`
	Operator      pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionStringComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringComparisonArgs) ToManagementZoneRuleConditionStringComparisonOutput() ManagementZoneRuleConditionStringComparisonOutput {
	return i.ToManagementZoneRuleConditionStringComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringComparisonArgs) ToManagementZoneRuleConditionStringComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringComparisonOutput)
}

// ManagementZoneRuleConditionStringComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionStringComparisonArray and ManagementZoneRuleConditionStringComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionStringComparisonArray{ ManagementZoneRuleConditionStringComparisonArgs{...} }
type ManagementZoneRuleConditionStringComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringComparisonArrayOutput() ManagementZoneRuleConditionStringComparisonArrayOutput
	ToManagementZoneRuleConditionStringComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionStringComparisonArrayOutput
}

type ManagementZoneRuleConditionStringComparisonArray []ManagementZoneRuleConditionStringComparisonInput

func (ManagementZoneRuleConditionStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionStringComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringComparisonArray) ToManagementZoneRuleConditionStringComparisonArrayOutput() ManagementZoneRuleConditionStringComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionStringComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringComparisonArray) ToManagementZoneRuleConditionStringComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringComparisonArrayOutput)
}

type ManagementZoneRuleConditionStringComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionStringComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringComparisonOutput) ToManagementZoneRuleConditionStringComparisonOutput() ManagementZoneRuleConditionStringComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionStringComparisonOutput) ToManagementZoneRuleConditionStringComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionStringComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionStringComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringComparisonArrayOutput) ToManagementZoneRuleConditionStringComparisonArrayOutput() ManagementZoneRuleConditionStringComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringComparisonArrayOutput) ToManagementZoneRuleConditionStringComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionStringComparison {
		return vs[0].([]ManagementZoneRuleConditionStringComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionStringComparisonOutput)
}

type ManagementZoneRuleConditionStringConditionKey struct {
	Attribute  string `pulumi:"attribute"`
	DynamicKey string `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionStringConditionKeyInput is an input type that accepts ManagementZoneRuleConditionStringConditionKeyArgs and ManagementZoneRuleConditionStringConditionKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringConditionKeyInput` via:
//
//	ManagementZoneRuleConditionStringConditionKeyArgs{...}
type ManagementZoneRuleConditionStringConditionKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringConditionKeyOutput() ManagementZoneRuleConditionStringConditionKeyOutput
	ToManagementZoneRuleConditionStringConditionKeyOutputWithContext(context.Context) ManagementZoneRuleConditionStringConditionKeyOutput
}

type ManagementZoneRuleConditionStringConditionKeyArgs struct {
	Attribute  pulumi.StringInput `pulumi:"attribute"`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionStringConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionStringConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringConditionKeyArgs) ToManagementZoneRuleConditionStringConditionKeyOutput() ManagementZoneRuleConditionStringConditionKeyOutput {
	return i.ToManagementZoneRuleConditionStringConditionKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringConditionKeyArgs) ToManagementZoneRuleConditionStringConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringConditionKeyOutput)
}

// ManagementZoneRuleConditionStringConditionKeyArrayInput is an input type that accepts ManagementZoneRuleConditionStringConditionKeyArray and ManagementZoneRuleConditionStringConditionKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringConditionKeyArrayInput` via:
//
//	ManagementZoneRuleConditionStringConditionKeyArray{ ManagementZoneRuleConditionStringConditionKeyArgs{...} }
type ManagementZoneRuleConditionStringConditionKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringConditionKeyArrayOutput() ManagementZoneRuleConditionStringConditionKeyArrayOutput
	ToManagementZoneRuleConditionStringConditionKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionStringConditionKeyArrayOutput
}

type ManagementZoneRuleConditionStringConditionKeyArray []ManagementZoneRuleConditionStringConditionKeyInput

func (ManagementZoneRuleConditionStringConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionStringConditionKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringConditionKeyArray) ToManagementZoneRuleConditionStringConditionKeyArrayOutput() ManagementZoneRuleConditionStringConditionKeyArrayOutput {
	return i.ToManagementZoneRuleConditionStringConditionKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringConditionKeyArray) ToManagementZoneRuleConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringConditionKeyArrayOutput)
}

type ManagementZoneRuleConditionStringConditionKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionStringConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringConditionKeyOutput) ToManagementZoneRuleConditionStringConditionKeyOutput() ManagementZoneRuleConditionStringConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionStringConditionKeyOutput) ToManagementZoneRuleConditionStringConditionKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringConditionKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionStringConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionStringConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionStringConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionStringConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionStringConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionStringConditionKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringConditionKeyArrayOutput) ToManagementZoneRuleConditionStringConditionKeyArrayOutput() ManagementZoneRuleConditionStringConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringConditionKeyArrayOutput) ToManagementZoneRuleConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringConditionKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringConditionKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionStringConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionStringConditionKey {
		return vs[0].([]ManagementZoneRuleConditionStringConditionKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionStringConditionKeyOutput)
}

type ManagementZoneRuleConditionStringKey struct {
	Attribute  string  `pulumi:"attribute"`
	DynamicKey string  `pulumi:"dynamicKey"`
	Unknowns   *string `pulumi:"unknowns"`
}

// ManagementZoneRuleConditionStringKeyInput is an input type that accepts ManagementZoneRuleConditionStringKeyArgs and ManagementZoneRuleConditionStringKeyOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringKeyInput` via:
//
//	ManagementZoneRuleConditionStringKeyArgs{...}
type ManagementZoneRuleConditionStringKeyInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringKeyOutput() ManagementZoneRuleConditionStringKeyOutput
	ToManagementZoneRuleConditionStringKeyOutputWithContext(context.Context) ManagementZoneRuleConditionStringKeyOutput
}

type ManagementZoneRuleConditionStringKeyArgs struct {
	Attribute  pulumi.StringInput    `pulumi:"attribute"`
	DynamicKey pulumi.StringInput    `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ManagementZoneRuleConditionStringKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionStringKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringKeyArgs) ToManagementZoneRuleConditionStringKeyOutput() ManagementZoneRuleConditionStringKeyOutput {
	return i.ToManagementZoneRuleConditionStringKeyOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringKeyArgs) ToManagementZoneRuleConditionStringKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringKeyOutput)
}

// ManagementZoneRuleConditionStringKeyArrayInput is an input type that accepts ManagementZoneRuleConditionStringKeyArray and ManagementZoneRuleConditionStringKeyArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionStringKeyArrayInput` via:
//
//	ManagementZoneRuleConditionStringKeyArray{ ManagementZoneRuleConditionStringKeyArgs{...} }
type ManagementZoneRuleConditionStringKeyArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionStringKeyArrayOutput() ManagementZoneRuleConditionStringKeyArrayOutput
	ToManagementZoneRuleConditionStringKeyArrayOutputWithContext(context.Context) ManagementZoneRuleConditionStringKeyArrayOutput
}

type ManagementZoneRuleConditionStringKeyArray []ManagementZoneRuleConditionStringKeyInput

func (ManagementZoneRuleConditionStringKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionStringKey)(nil)).Elem()
}

func (i ManagementZoneRuleConditionStringKeyArray) ToManagementZoneRuleConditionStringKeyArrayOutput() ManagementZoneRuleConditionStringKeyArrayOutput {
	return i.ToManagementZoneRuleConditionStringKeyArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionStringKeyArray) ToManagementZoneRuleConditionStringKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionStringKeyArrayOutput)
}

type ManagementZoneRuleConditionStringKeyOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionStringKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringKeyOutput) ToManagementZoneRuleConditionStringKeyOutput() ManagementZoneRuleConditionStringKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionStringKeyOutput) ToManagementZoneRuleConditionStringKeyOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringKeyOutput {
	return o
}

func (o ManagementZoneRuleConditionStringKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionStringKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionStringKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionStringKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionStringKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionStringKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionStringKey)(nil)).Elem()
}

func (o ManagementZoneRuleConditionStringKeyArrayOutput) ToManagementZoneRuleConditionStringKeyArrayOutput() ManagementZoneRuleConditionStringKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringKeyArrayOutput) ToManagementZoneRuleConditionStringKeyArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionStringKeyArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionStringKeyArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionStringKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionStringKey {
		return vs[0].([]ManagementZoneRuleConditionStringKey)[vs[1].(int)]
	}).(ManagementZoneRuleConditionStringKeyOutput)
}

type ManagementZoneRuleConditionSyntheticEngine struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionSyntheticEngineInput is an input type that accepts ManagementZoneRuleConditionSyntheticEngineArgs and ManagementZoneRuleConditionSyntheticEngineOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSyntheticEngineInput` via:
//
//	ManagementZoneRuleConditionSyntheticEngineArgs{...}
type ManagementZoneRuleConditionSyntheticEngineInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSyntheticEngineOutput() ManagementZoneRuleConditionSyntheticEngineOutput
	ToManagementZoneRuleConditionSyntheticEngineOutputWithContext(context.Context) ManagementZoneRuleConditionSyntheticEngineOutput
}

type ManagementZoneRuleConditionSyntheticEngineArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionSyntheticEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngine)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSyntheticEngineArgs) ToManagementZoneRuleConditionSyntheticEngineOutput() ManagementZoneRuleConditionSyntheticEngineOutput {
	return i.ToManagementZoneRuleConditionSyntheticEngineOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSyntheticEngineArgs) ToManagementZoneRuleConditionSyntheticEngineOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSyntheticEngineOutput)
}

// ManagementZoneRuleConditionSyntheticEngineArrayInput is an input type that accepts ManagementZoneRuleConditionSyntheticEngineArray and ManagementZoneRuleConditionSyntheticEngineArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSyntheticEngineArrayInput` via:
//
//	ManagementZoneRuleConditionSyntheticEngineArray{ ManagementZoneRuleConditionSyntheticEngineArgs{...} }
type ManagementZoneRuleConditionSyntheticEngineArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSyntheticEngineArrayOutput() ManagementZoneRuleConditionSyntheticEngineArrayOutput
	ToManagementZoneRuleConditionSyntheticEngineArrayOutputWithContext(context.Context) ManagementZoneRuleConditionSyntheticEngineArrayOutput
}

type ManagementZoneRuleConditionSyntheticEngineArray []ManagementZoneRuleConditionSyntheticEngineInput

func (ManagementZoneRuleConditionSyntheticEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSyntheticEngine)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSyntheticEngineArray) ToManagementZoneRuleConditionSyntheticEngineArrayOutput() ManagementZoneRuleConditionSyntheticEngineArrayOutput {
	return i.ToManagementZoneRuleConditionSyntheticEngineArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSyntheticEngineArray) ToManagementZoneRuleConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSyntheticEngineArrayOutput)
}

type ManagementZoneRuleConditionSyntheticEngineOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSyntheticEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngine)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSyntheticEngineOutput) ToManagementZoneRuleConditionSyntheticEngineOutput() ManagementZoneRuleConditionSyntheticEngineOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineOutput) ToManagementZoneRuleConditionSyntheticEngineOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngine) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionSyntheticEngineOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngine) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionSyntheticEngineOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngine) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSyntheticEngineOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngine) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionSyntheticEngineArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSyntheticEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSyntheticEngine)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSyntheticEngineArrayOutput) ToManagementZoneRuleConditionSyntheticEngineArrayOutput() ManagementZoneRuleConditionSyntheticEngineArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineArrayOutput) ToManagementZoneRuleConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionSyntheticEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionSyntheticEngine {
		return vs[0].([]ManagementZoneRuleConditionSyntheticEngine)[vs[1].(int)]
	}).(ManagementZoneRuleConditionSyntheticEngineOutput)
}

type ManagementZoneRuleConditionSyntheticEngineTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionSyntheticEngineTypeComparisonInput is an input type that accepts ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs and ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSyntheticEngineTypeComparisonInput` via:
//
//	ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs{...}
type ManagementZoneRuleConditionSyntheticEngineTypeComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput() ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput
	ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput
}

type ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput() ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput {
	return i.ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput)
}

// ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray and ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray{ ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs{...} }
type ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput() ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput
	ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput
}

type ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray []ManagementZoneRuleConditionSyntheticEngineTypeComparisonInput

func (ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput() ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput)
}

type ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput() ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngineTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngineTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngineTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngineTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionSyntheticEngineTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput() ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput) ToManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionSyntheticEngineTypeComparison {
		return vs[0].([]ManagementZoneRuleConditionSyntheticEngineTypeComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput)
}

type ManagementZoneRuleConditionTag struct {
	Negate   *bool                                `pulumi:"negate"`
	Operator string                               `pulumi:"operator"`
	Unknowns *string                              `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionTagValue `pulumi:"value"`
}

// ManagementZoneRuleConditionTagInput is an input type that accepts ManagementZoneRuleConditionTagArgs and ManagementZoneRuleConditionTagOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagInput` via:
//
//	ManagementZoneRuleConditionTagArgs{...}
type ManagementZoneRuleConditionTagInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagOutput() ManagementZoneRuleConditionTagOutput
	ToManagementZoneRuleConditionTagOutputWithContext(context.Context) ManagementZoneRuleConditionTagOutput
}

type ManagementZoneRuleConditionTagArgs struct {
	Negate   pulumi.BoolPtrInput                         `pulumi:"negate"`
	Operator pulumi.StringInput                          `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                       `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionTagValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTag)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTagArgs) ToManagementZoneRuleConditionTagOutput() ManagementZoneRuleConditionTagOutput {
	return i.ToManagementZoneRuleConditionTagOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagArgs) ToManagementZoneRuleConditionTagOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagOutput)
}

// ManagementZoneRuleConditionTagArrayInput is an input type that accepts ManagementZoneRuleConditionTagArray and ManagementZoneRuleConditionTagArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagArrayInput` via:
//
//	ManagementZoneRuleConditionTagArray{ ManagementZoneRuleConditionTagArgs{...} }
type ManagementZoneRuleConditionTagArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagArrayOutput() ManagementZoneRuleConditionTagArrayOutput
	ToManagementZoneRuleConditionTagArrayOutputWithContext(context.Context) ManagementZoneRuleConditionTagArrayOutput
}

type ManagementZoneRuleConditionTagArray []ManagementZoneRuleConditionTagInput

func (ManagementZoneRuleConditionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionTag)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTagArray) ToManagementZoneRuleConditionTagArrayOutput() ManagementZoneRuleConditionTagArrayOutput {
	return i.ToManagementZoneRuleConditionTagArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagArray) ToManagementZoneRuleConditionTagArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagArrayOutput)
}

type ManagementZoneRuleConditionTagOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTag)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagOutput) ToManagementZoneRuleConditionTagOutput() ManagementZoneRuleConditionTagOutput {
	return o
}

func (o ManagementZoneRuleConditionTagOutput) ToManagementZoneRuleConditionTagOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagOutput {
	return o
}

func (o ManagementZoneRuleConditionTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTag) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagOutput) Value() ManagementZoneRuleConditionTagValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTag) *ManagementZoneRuleConditionTagValue { return v.Value }).(ManagementZoneRuleConditionTagValuePtrOutput)
}

type ManagementZoneRuleConditionTagArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionTag)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagArrayOutput) ToManagementZoneRuleConditionTagArrayOutput() ManagementZoneRuleConditionTagArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionTagArrayOutput) ToManagementZoneRuleConditionTagArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionTagArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionTag {
		return vs[0].([]ManagementZoneRuleConditionTag)[vs[1].(int)]
	}).(ManagementZoneRuleConditionTagOutput)
}

type ManagementZoneRuleConditionTagComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                        `pulumi:"type"`
	Unknowns *string                                        `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionTagComparisonValue `pulumi:"value"`
}

// ManagementZoneRuleConditionTagComparisonInput is an input type that accepts ManagementZoneRuleConditionTagComparisonArgs and ManagementZoneRuleConditionTagComparisonOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagComparisonInput` via:
//
//	ManagementZoneRuleConditionTagComparisonArgs{...}
type ManagementZoneRuleConditionTagComparisonInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagComparisonOutput() ManagementZoneRuleConditionTagComparisonOutput
	ToManagementZoneRuleConditionTagComparisonOutputWithContext(context.Context) ManagementZoneRuleConditionTagComparisonOutput
}

type ManagementZoneRuleConditionTagComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                 `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                 `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionTagComparisonValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTagComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTagComparisonArgs) ToManagementZoneRuleConditionTagComparisonOutput() ManagementZoneRuleConditionTagComparisonOutput {
	return i.ToManagementZoneRuleConditionTagComparisonOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagComparisonArgs) ToManagementZoneRuleConditionTagComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagComparisonOutput)
}

// ManagementZoneRuleConditionTagComparisonArrayInput is an input type that accepts ManagementZoneRuleConditionTagComparisonArray and ManagementZoneRuleConditionTagComparisonArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagComparisonArrayInput` via:
//
//	ManagementZoneRuleConditionTagComparisonArray{ ManagementZoneRuleConditionTagComparisonArgs{...} }
type ManagementZoneRuleConditionTagComparisonArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagComparisonArrayOutput() ManagementZoneRuleConditionTagComparisonArrayOutput
	ToManagementZoneRuleConditionTagComparisonArrayOutputWithContext(context.Context) ManagementZoneRuleConditionTagComparisonArrayOutput
}

type ManagementZoneRuleConditionTagComparisonArray []ManagementZoneRuleConditionTagComparisonInput

func (ManagementZoneRuleConditionTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionTagComparison)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTagComparisonArray) ToManagementZoneRuleConditionTagComparisonArrayOutput() ManagementZoneRuleConditionTagComparisonArrayOutput {
	return i.ToManagementZoneRuleConditionTagComparisonArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagComparisonArray) ToManagementZoneRuleConditionTagComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagComparisonArrayOutput)
}

type ManagementZoneRuleConditionTagComparisonOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTagComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagComparisonOutput) ToManagementZoneRuleConditionTagComparisonOutput() ManagementZoneRuleConditionTagComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonOutput) ToManagementZoneRuleConditionTagComparisonOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ManagementZoneRuleConditionTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonOutput) Value() ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparison) *ManagementZoneRuleConditionTagComparisonValue {
		return v.Value
	}).(ManagementZoneRuleConditionTagComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionTagComparison)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagComparisonArrayOutput) ToManagementZoneRuleConditionTagComparisonArrayOutput() ManagementZoneRuleConditionTagComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonArrayOutput) ToManagementZoneRuleConditionTagComparisonArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionTagComparison {
		return vs[0].([]ManagementZoneRuleConditionTagComparison)[vs[1].(int)]
	}).(ManagementZoneRuleConditionTagComparisonOutput)
}

type ManagementZoneRuleConditionTagComparisonValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionTagComparisonValueInput is an input type that accepts ManagementZoneRuleConditionTagComparisonValueArgs and ManagementZoneRuleConditionTagComparisonValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagComparisonValueInput` via:
//
//	ManagementZoneRuleConditionTagComparisonValueArgs{...}
type ManagementZoneRuleConditionTagComparisonValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagComparisonValueOutput() ManagementZoneRuleConditionTagComparisonValueOutput
	ToManagementZoneRuleConditionTagComparisonValueOutputWithContext(context.Context) ManagementZoneRuleConditionTagComparisonValueOutput
}

type ManagementZoneRuleConditionTagComparisonValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTagComparisonValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTagComparisonValueArgs) ToManagementZoneRuleConditionTagComparisonValueOutput() ManagementZoneRuleConditionTagComparisonValueOutput {
	return i.ToManagementZoneRuleConditionTagComparisonValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagComparisonValueArgs) ToManagementZoneRuleConditionTagComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagComparisonValueOutput)
}

func (i ManagementZoneRuleConditionTagComparisonValueArgs) ToManagementZoneRuleConditionTagComparisonValuePtrOutput() ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagComparisonValueArgs) ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagComparisonValueOutput).ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionTagComparisonValuePtrInput is an input type that accepts ManagementZoneRuleConditionTagComparisonValueArgs, ManagementZoneRuleConditionTagComparisonValuePtr and ManagementZoneRuleConditionTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagComparisonValuePtrInput` via:
//
//	        ManagementZoneRuleConditionTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionTagComparisonValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagComparisonValuePtrOutput() ManagementZoneRuleConditionTagComparisonValuePtrOutput
	ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionTagComparisonValuePtrOutput
}

type managementZoneRuleConditionTagComparisonValuePtrType ManagementZoneRuleConditionTagComparisonValueArgs

func ManagementZoneRuleConditionTagComparisonValuePtr(v *ManagementZoneRuleConditionTagComparisonValueArgs) ManagementZoneRuleConditionTagComparisonValuePtrInput {
	return (*managementZoneRuleConditionTagComparisonValuePtrType)(v)
}

func (*managementZoneRuleConditionTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionTagComparisonValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionTagComparisonValuePtrType) ToManagementZoneRuleConditionTagComparisonValuePtrOutput() ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return i.ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionTagComparisonValuePtrType) ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagComparisonValuePtrOutput)
}

type ManagementZoneRuleConditionTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTagComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) ToManagementZoneRuleConditionTagComparisonValueOutput() ManagementZoneRuleConditionTagComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) ToManagementZoneRuleConditionTagComparisonValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonValueOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) ToManagementZoneRuleConditionTagComparisonValuePtrOutput() ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return o.ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionTagComparisonValue) *ManagementZoneRuleConditionTagComparisonValue {
		return &v
	}).(ManagementZoneRuleConditionTagComparisonValuePtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionTagComparisonValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) ToManagementZoneRuleConditionTagComparisonValuePtrOutput() ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) ToManagementZoneRuleConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagComparisonValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) Elem() ManagementZoneRuleConditionTagComparisonValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagComparisonValue) ManagementZoneRuleConditionTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionTagComparisonValue
		return ret
	}).(ManagementZoneRuleConditionTagComparisonValueOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ManagementZoneRuleConditionTagValueInput is an input type that accepts ManagementZoneRuleConditionTagValueArgs and ManagementZoneRuleConditionTagValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagValueInput` via:
//
//	ManagementZoneRuleConditionTagValueArgs{...}
type ManagementZoneRuleConditionTagValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagValueOutput() ManagementZoneRuleConditionTagValueOutput
	ToManagementZoneRuleConditionTagValueOutputWithContext(context.Context) ManagementZoneRuleConditionTagValueOutput
}

type ManagementZoneRuleConditionTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTagValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTagValueArgs) ToManagementZoneRuleConditionTagValueOutput() ManagementZoneRuleConditionTagValueOutput {
	return i.ToManagementZoneRuleConditionTagValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagValueArgs) ToManagementZoneRuleConditionTagValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagValueOutput)
}

func (i ManagementZoneRuleConditionTagValueArgs) ToManagementZoneRuleConditionTagValuePtrOutput() ManagementZoneRuleConditionTagValuePtrOutput {
	return i.ToManagementZoneRuleConditionTagValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTagValueArgs) ToManagementZoneRuleConditionTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagValueOutput).ToManagementZoneRuleConditionTagValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionTagValuePtrInput is an input type that accepts ManagementZoneRuleConditionTagValueArgs, ManagementZoneRuleConditionTagValuePtr and ManagementZoneRuleConditionTagValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTagValuePtrInput` via:
//
//	        ManagementZoneRuleConditionTagValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionTagValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTagValuePtrOutput() ManagementZoneRuleConditionTagValuePtrOutput
	ToManagementZoneRuleConditionTagValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionTagValuePtrOutput
}

type managementZoneRuleConditionTagValuePtrType ManagementZoneRuleConditionTagValueArgs

func ManagementZoneRuleConditionTagValuePtr(v *ManagementZoneRuleConditionTagValueArgs) ManagementZoneRuleConditionTagValuePtrInput {
	return (*managementZoneRuleConditionTagValuePtrType)(v)
}

func (*managementZoneRuleConditionTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionTagValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionTagValuePtrType) ToManagementZoneRuleConditionTagValuePtrOutput() ManagementZoneRuleConditionTagValuePtrOutput {
	return i.ToManagementZoneRuleConditionTagValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionTagValuePtrType) ToManagementZoneRuleConditionTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTagValuePtrOutput)
}

type ManagementZoneRuleConditionTagValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTagValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagValueOutput) ToManagementZoneRuleConditionTagValueOutput() ManagementZoneRuleConditionTagValueOutput {
	return o
}

func (o ManagementZoneRuleConditionTagValueOutput) ToManagementZoneRuleConditionTagValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagValueOutput {
	return o
}

func (o ManagementZoneRuleConditionTagValueOutput) ToManagementZoneRuleConditionTagValuePtrOutput() ManagementZoneRuleConditionTagValuePtrOutput {
	return o.ToManagementZoneRuleConditionTagValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionTagValueOutput) ToManagementZoneRuleConditionTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionTagValue) *ManagementZoneRuleConditionTagValue {
		return &v
	}).(ManagementZoneRuleConditionTagValuePtrOutput)
}

func (o ManagementZoneRuleConditionTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionTagValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionTagValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) ToManagementZoneRuleConditionTagValuePtrOutput() ManagementZoneRuleConditionTagValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) ToManagementZoneRuleConditionTagValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTagValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) Elem() ManagementZoneRuleConditionTagValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagValue) ManagementZoneRuleConditionTagValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionTagValue
		return ret
	}).(ManagementZoneRuleConditionTagValueOutput)
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionTech struct {
	Negate   *bool                                 `pulumi:"negate"`
	Operator string                                `pulumi:"operator"`
	Unknowns *string                               `pulumi:"unknowns"`
	Value    *ManagementZoneRuleConditionTechValue `pulumi:"value"`
}

// ManagementZoneRuleConditionTechInput is an input type that accepts ManagementZoneRuleConditionTechArgs and ManagementZoneRuleConditionTechOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTechInput` via:
//
//	ManagementZoneRuleConditionTechArgs{...}
type ManagementZoneRuleConditionTechInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTechOutput() ManagementZoneRuleConditionTechOutput
	ToManagementZoneRuleConditionTechOutputWithContext(context.Context) ManagementZoneRuleConditionTechOutput
}

type ManagementZoneRuleConditionTechArgs struct {
	Negate   pulumi.BoolPtrInput                          `pulumi:"negate"`
	Operator pulumi.StringInput                           `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                        `pulumi:"unknowns"`
	Value    ManagementZoneRuleConditionTechValuePtrInput `pulumi:"value"`
}

func (ManagementZoneRuleConditionTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTech)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTechArgs) ToManagementZoneRuleConditionTechOutput() ManagementZoneRuleConditionTechOutput {
	return i.ToManagementZoneRuleConditionTechOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTechArgs) ToManagementZoneRuleConditionTechOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTechOutput)
}

// ManagementZoneRuleConditionTechArrayInput is an input type that accepts ManagementZoneRuleConditionTechArray and ManagementZoneRuleConditionTechArrayOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTechArrayInput` via:
//
//	ManagementZoneRuleConditionTechArray{ ManagementZoneRuleConditionTechArgs{...} }
type ManagementZoneRuleConditionTechArrayInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTechArrayOutput() ManagementZoneRuleConditionTechArrayOutput
	ToManagementZoneRuleConditionTechArrayOutputWithContext(context.Context) ManagementZoneRuleConditionTechArrayOutput
}

type ManagementZoneRuleConditionTechArray []ManagementZoneRuleConditionTechInput

func (ManagementZoneRuleConditionTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionTech)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTechArray) ToManagementZoneRuleConditionTechArrayOutput() ManagementZoneRuleConditionTechArrayOutput {
	return i.ToManagementZoneRuleConditionTechArrayOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTechArray) ToManagementZoneRuleConditionTechArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTechArrayOutput)
}

type ManagementZoneRuleConditionTechOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTech)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTechOutput) ToManagementZoneRuleConditionTechOutput() ManagementZoneRuleConditionTechOutput {
	return o
}

func (o ManagementZoneRuleConditionTechOutput) ToManagementZoneRuleConditionTechOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechOutput {
	return o
}

func (o ManagementZoneRuleConditionTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ManagementZoneRuleConditionTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTech) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ManagementZoneRuleConditionTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTechOutput) Value() ManagementZoneRuleConditionTechValuePtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTech) *ManagementZoneRuleConditionTechValue { return v.Value }).(ManagementZoneRuleConditionTechValuePtrOutput)
}

type ManagementZoneRuleConditionTechArrayOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementZoneRuleConditionTech)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTechArrayOutput) ToManagementZoneRuleConditionTechArrayOutput() ManagementZoneRuleConditionTechArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionTechArrayOutput) ToManagementZoneRuleConditionTechArrayOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechArrayOutput {
	return o
}

func (o ManagementZoneRuleConditionTechArrayOutput) Index(i pulumi.IntInput) ManagementZoneRuleConditionTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementZoneRuleConditionTech {
		return vs[0].([]ManagementZoneRuleConditionTech)[vs[1].(int)]
	}).(ManagementZoneRuleConditionTechOutput)
}

type ManagementZoneRuleConditionTechValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ManagementZoneRuleConditionTechValueInput is an input type that accepts ManagementZoneRuleConditionTechValueArgs and ManagementZoneRuleConditionTechValueOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTechValueInput` via:
//
//	ManagementZoneRuleConditionTechValueArgs{...}
type ManagementZoneRuleConditionTechValueInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTechValueOutput() ManagementZoneRuleConditionTechValueOutput
	ToManagementZoneRuleConditionTechValueOutputWithContext(context.Context) ManagementZoneRuleConditionTechValueOutput
}

type ManagementZoneRuleConditionTechValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ManagementZoneRuleConditionTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTechValue)(nil)).Elem()
}

func (i ManagementZoneRuleConditionTechValueArgs) ToManagementZoneRuleConditionTechValueOutput() ManagementZoneRuleConditionTechValueOutput {
	return i.ToManagementZoneRuleConditionTechValueOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTechValueArgs) ToManagementZoneRuleConditionTechValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTechValueOutput)
}

func (i ManagementZoneRuleConditionTechValueArgs) ToManagementZoneRuleConditionTechValuePtrOutput() ManagementZoneRuleConditionTechValuePtrOutput {
	return i.ToManagementZoneRuleConditionTechValuePtrOutputWithContext(context.Background())
}

func (i ManagementZoneRuleConditionTechValueArgs) ToManagementZoneRuleConditionTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTechValueOutput).ToManagementZoneRuleConditionTechValuePtrOutputWithContext(ctx)
}

// ManagementZoneRuleConditionTechValuePtrInput is an input type that accepts ManagementZoneRuleConditionTechValueArgs, ManagementZoneRuleConditionTechValuePtr and ManagementZoneRuleConditionTechValuePtrOutput values.
// You can construct a concrete instance of `ManagementZoneRuleConditionTechValuePtrInput` via:
//
//	        ManagementZoneRuleConditionTechValueArgs{...}
//
//	or:
//
//	        nil
type ManagementZoneRuleConditionTechValuePtrInput interface {
	pulumi.Input

	ToManagementZoneRuleConditionTechValuePtrOutput() ManagementZoneRuleConditionTechValuePtrOutput
	ToManagementZoneRuleConditionTechValuePtrOutputWithContext(context.Context) ManagementZoneRuleConditionTechValuePtrOutput
}

type managementZoneRuleConditionTechValuePtrType ManagementZoneRuleConditionTechValueArgs

func ManagementZoneRuleConditionTechValuePtr(v *ManagementZoneRuleConditionTechValueArgs) ManagementZoneRuleConditionTechValuePtrInput {
	return (*managementZoneRuleConditionTechValuePtrType)(v)
}

func (*managementZoneRuleConditionTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionTechValue)(nil)).Elem()
}

func (i *managementZoneRuleConditionTechValuePtrType) ToManagementZoneRuleConditionTechValuePtrOutput() ManagementZoneRuleConditionTechValuePtrOutput {
	return i.ToManagementZoneRuleConditionTechValuePtrOutputWithContext(context.Background())
}

func (i *managementZoneRuleConditionTechValuePtrType) ToManagementZoneRuleConditionTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementZoneRuleConditionTechValuePtrOutput)
}

type ManagementZoneRuleConditionTechValueOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementZoneRuleConditionTechValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTechValueOutput) ToManagementZoneRuleConditionTechValueOutput() ManagementZoneRuleConditionTechValueOutput {
	return o
}

func (o ManagementZoneRuleConditionTechValueOutput) ToManagementZoneRuleConditionTechValueOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechValueOutput {
	return o
}

func (o ManagementZoneRuleConditionTechValueOutput) ToManagementZoneRuleConditionTechValuePtrOutput() ManagementZoneRuleConditionTechValuePtrOutput {
	return o.ToManagementZoneRuleConditionTechValuePtrOutputWithContext(context.Background())
}

func (o ManagementZoneRuleConditionTechValueOutput) ToManagementZoneRuleConditionTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementZoneRuleConditionTechValue) *ManagementZoneRuleConditionTechValue {
		return &v
	}).(ManagementZoneRuleConditionTechValuePtrOutput)
}

func (o ManagementZoneRuleConditionTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementZoneRuleConditionTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ManagementZoneRuleConditionTechValuePtrOutput struct{ *pulumi.OutputState }

func (ManagementZoneRuleConditionTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementZoneRuleConditionTechValue)(nil)).Elem()
}

func (o ManagementZoneRuleConditionTechValuePtrOutput) ToManagementZoneRuleConditionTechValuePtrOutput() ManagementZoneRuleConditionTechValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionTechValuePtrOutput) ToManagementZoneRuleConditionTechValuePtrOutputWithContext(ctx context.Context) ManagementZoneRuleConditionTechValuePtrOutput {
	return o
}

func (o ManagementZoneRuleConditionTechValuePtrOutput) Elem() ManagementZoneRuleConditionTechValueOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTechValue) ManagementZoneRuleConditionTechValue {
		if v != nil {
			return *v
		}
		var ret ManagementZoneRuleConditionTechValue
		return ret
	}).(ManagementZoneRuleConditionTechValueOutput)
}

func (o ManagementZoneRuleConditionTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ManagementZoneRuleConditionTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementZoneRuleConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type MobileApplicationApdex struct {
	// Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated
	Frustrated int `pulumi:"frustrated"`
	// Apdex error condition: if `true` the user session is considered frustrated when an error is reported
	FrustratedOnError *bool `pulumi:"frustratedOnError"`
	// Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable
	Tolerable int `pulumi:"tolerable"`
}

// MobileApplicationApdexInput is an input type that accepts MobileApplicationApdexArgs and MobileApplicationApdexOutput values.
// You can construct a concrete instance of `MobileApplicationApdexInput` via:
//
//	MobileApplicationApdexArgs{...}
type MobileApplicationApdexInput interface {
	pulumi.Input

	ToMobileApplicationApdexOutput() MobileApplicationApdexOutput
	ToMobileApplicationApdexOutputWithContext(context.Context) MobileApplicationApdexOutput
}

type MobileApplicationApdexArgs struct {
	// Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated
	Frustrated pulumi.IntInput `pulumi:"frustrated"`
	// Apdex error condition: if `true` the user session is considered frustrated when an error is reported
	FrustratedOnError pulumi.BoolPtrInput `pulumi:"frustratedOnError"`
	// Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable
	Tolerable pulumi.IntInput `pulumi:"tolerable"`
}

func (MobileApplicationApdexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationApdex)(nil)).Elem()
}

func (i MobileApplicationApdexArgs) ToMobileApplicationApdexOutput() MobileApplicationApdexOutput {
	return i.ToMobileApplicationApdexOutputWithContext(context.Background())
}

func (i MobileApplicationApdexArgs) ToMobileApplicationApdexOutputWithContext(ctx context.Context) MobileApplicationApdexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationApdexOutput)
}

func (i MobileApplicationApdexArgs) ToMobileApplicationApdexPtrOutput() MobileApplicationApdexPtrOutput {
	return i.ToMobileApplicationApdexPtrOutputWithContext(context.Background())
}

func (i MobileApplicationApdexArgs) ToMobileApplicationApdexPtrOutputWithContext(ctx context.Context) MobileApplicationApdexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationApdexOutput).ToMobileApplicationApdexPtrOutputWithContext(ctx)
}

// MobileApplicationApdexPtrInput is an input type that accepts MobileApplicationApdexArgs, MobileApplicationApdexPtr and MobileApplicationApdexPtrOutput values.
// You can construct a concrete instance of `MobileApplicationApdexPtrInput` via:
//
//	        MobileApplicationApdexArgs{...}
//
//	or:
//
//	        nil
type MobileApplicationApdexPtrInput interface {
	pulumi.Input

	ToMobileApplicationApdexPtrOutput() MobileApplicationApdexPtrOutput
	ToMobileApplicationApdexPtrOutputWithContext(context.Context) MobileApplicationApdexPtrOutput
}

type mobileApplicationApdexPtrType MobileApplicationApdexArgs

func MobileApplicationApdexPtr(v *MobileApplicationApdexArgs) MobileApplicationApdexPtrInput {
	return (*mobileApplicationApdexPtrType)(v)
}

func (*mobileApplicationApdexPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileApplicationApdex)(nil)).Elem()
}

func (i *mobileApplicationApdexPtrType) ToMobileApplicationApdexPtrOutput() MobileApplicationApdexPtrOutput {
	return i.ToMobileApplicationApdexPtrOutputWithContext(context.Background())
}

func (i *mobileApplicationApdexPtrType) ToMobileApplicationApdexPtrOutputWithContext(ctx context.Context) MobileApplicationApdexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationApdexPtrOutput)
}

type MobileApplicationApdexOutput struct{ *pulumi.OutputState }

func (MobileApplicationApdexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationApdex)(nil)).Elem()
}

func (o MobileApplicationApdexOutput) ToMobileApplicationApdexOutput() MobileApplicationApdexOutput {
	return o
}

func (o MobileApplicationApdexOutput) ToMobileApplicationApdexOutputWithContext(ctx context.Context) MobileApplicationApdexOutput {
	return o
}

func (o MobileApplicationApdexOutput) ToMobileApplicationApdexPtrOutput() MobileApplicationApdexPtrOutput {
	return o.ToMobileApplicationApdexPtrOutputWithContext(context.Background())
}

func (o MobileApplicationApdexOutput) ToMobileApplicationApdexPtrOutputWithContext(ctx context.Context) MobileApplicationApdexPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MobileApplicationApdex) *MobileApplicationApdex {
		return &v
	}).(MobileApplicationApdexPtrOutput)
}

// Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated
func (o MobileApplicationApdexOutput) Frustrated() pulumi.IntOutput {
	return o.ApplyT(func(v MobileApplicationApdex) int { return v.Frustrated }).(pulumi.IntOutput)
}

// Apdex error condition: if `true` the user session is considered frustrated when an error is reported
func (o MobileApplicationApdexOutput) FrustratedOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MobileApplicationApdex) *bool { return v.FrustratedOnError }).(pulumi.BoolPtrOutput)
}

// Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable
func (o MobileApplicationApdexOutput) Tolerable() pulumi.IntOutput {
	return o.ApplyT(func(v MobileApplicationApdex) int { return v.Tolerable }).(pulumi.IntOutput)
}

type MobileApplicationApdexPtrOutput struct{ *pulumi.OutputState }

func (MobileApplicationApdexPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileApplicationApdex)(nil)).Elem()
}

func (o MobileApplicationApdexPtrOutput) ToMobileApplicationApdexPtrOutput() MobileApplicationApdexPtrOutput {
	return o
}

func (o MobileApplicationApdexPtrOutput) ToMobileApplicationApdexPtrOutputWithContext(ctx context.Context) MobileApplicationApdexPtrOutput {
	return o
}

func (o MobileApplicationApdexPtrOutput) Elem() MobileApplicationApdexOutput {
	return o.ApplyT(func(v *MobileApplicationApdex) MobileApplicationApdex {
		if v != nil {
			return *v
		}
		var ret MobileApplicationApdex
		return ret
	}).(MobileApplicationApdexOutput)
}

// Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated
func (o MobileApplicationApdexPtrOutput) Frustrated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MobileApplicationApdex) *int {
		if v == nil {
			return nil
		}
		return &v.Frustrated
	}).(pulumi.IntPtrOutput)
}

// Apdex error condition: if `true` the user session is considered frustrated when an error is reported
func (o MobileApplicationApdexPtrOutput) FrustratedOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MobileApplicationApdex) *bool {
		if v == nil {
			return nil
		}
		return v.FrustratedOnError
	}).(pulumi.BoolPtrOutput)
}

// Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable
func (o MobileApplicationApdexPtrOutput) Tolerable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MobileApplicationApdex) *int {
		if v == nil {
			return nil
		}
		return &v.Tolerable
	}).(pulumi.IntPtrOutput)
}

type MobileApplicationProperties struct {
	// A User Action / Session Property based on a value reported by the API
	ApiValues []MobileApplicationPropertiesApiValue `pulumi:"apiValues"`
	// A User Action / Session Property based on a Server Side Request Attribute
	RequestAttributes []MobileApplicationPropertiesRequestAttribute `pulumi:"requestAttributes"`
}

// MobileApplicationPropertiesInput is an input type that accepts MobileApplicationPropertiesArgs and MobileApplicationPropertiesOutput values.
// You can construct a concrete instance of `MobileApplicationPropertiesInput` via:
//
//	MobileApplicationPropertiesArgs{...}
type MobileApplicationPropertiesInput interface {
	pulumi.Input

	ToMobileApplicationPropertiesOutput() MobileApplicationPropertiesOutput
	ToMobileApplicationPropertiesOutputWithContext(context.Context) MobileApplicationPropertiesOutput
}

type MobileApplicationPropertiesArgs struct {
	// A User Action / Session Property based on a value reported by the API
	ApiValues MobileApplicationPropertiesApiValueArrayInput `pulumi:"apiValues"`
	// A User Action / Session Property based on a Server Side Request Attribute
	RequestAttributes MobileApplicationPropertiesRequestAttributeArrayInput `pulumi:"requestAttributes"`
}

func (MobileApplicationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationProperties)(nil)).Elem()
}

func (i MobileApplicationPropertiesArgs) ToMobileApplicationPropertiesOutput() MobileApplicationPropertiesOutput {
	return i.ToMobileApplicationPropertiesOutputWithContext(context.Background())
}

func (i MobileApplicationPropertiesArgs) ToMobileApplicationPropertiesOutputWithContext(ctx context.Context) MobileApplicationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesOutput)
}

func (i MobileApplicationPropertiesArgs) ToMobileApplicationPropertiesPtrOutput() MobileApplicationPropertiesPtrOutput {
	return i.ToMobileApplicationPropertiesPtrOutputWithContext(context.Background())
}

func (i MobileApplicationPropertiesArgs) ToMobileApplicationPropertiesPtrOutputWithContext(ctx context.Context) MobileApplicationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesOutput).ToMobileApplicationPropertiesPtrOutputWithContext(ctx)
}

// MobileApplicationPropertiesPtrInput is an input type that accepts MobileApplicationPropertiesArgs, MobileApplicationPropertiesPtr and MobileApplicationPropertiesPtrOutput values.
// You can construct a concrete instance of `MobileApplicationPropertiesPtrInput` via:
//
//	        MobileApplicationPropertiesArgs{...}
//
//	or:
//
//	        nil
type MobileApplicationPropertiesPtrInput interface {
	pulumi.Input

	ToMobileApplicationPropertiesPtrOutput() MobileApplicationPropertiesPtrOutput
	ToMobileApplicationPropertiesPtrOutputWithContext(context.Context) MobileApplicationPropertiesPtrOutput
}

type mobileApplicationPropertiesPtrType MobileApplicationPropertiesArgs

func MobileApplicationPropertiesPtr(v *MobileApplicationPropertiesArgs) MobileApplicationPropertiesPtrInput {
	return (*mobileApplicationPropertiesPtrType)(v)
}

func (*mobileApplicationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileApplicationProperties)(nil)).Elem()
}

func (i *mobileApplicationPropertiesPtrType) ToMobileApplicationPropertiesPtrOutput() MobileApplicationPropertiesPtrOutput {
	return i.ToMobileApplicationPropertiesPtrOutputWithContext(context.Background())
}

func (i *mobileApplicationPropertiesPtrType) ToMobileApplicationPropertiesPtrOutputWithContext(ctx context.Context) MobileApplicationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesPtrOutput)
}

type MobileApplicationPropertiesOutput struct{ *pulumi.OutputState }

func (MobileApplicationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationProperties)(nil)).Elem()
}

func (o MobileApplicationPropertiesOutput) ToMobileApplicationPropertiesOutput() MobileApplicationPropertiesOutput {
	return o
}

func (o MobileApplicationPropertiesOutput) ToMobileApplicationPropertiesOutputWithContext(ctx context.Context) MobileApplicationPropertiesOutput {
	return o
}

func (o MobileApplicationPropertiesOutput) ToMobileApplicationPropertiesPtrOutput() MobileApplicationPropertiesPtrOutput {
	return o.ToMobileApplicationPropertiesPtrOutputWithContext(context.Background())
}

func (o MobileApplicationPropertiesOutput) ToMobileApplicationPropertiesPtrOutputWithContext(ctx context.Context) MobileApplicationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MobileApplicationProperties) *MobileApplicationProperties {
		return &v
	}).(MobileApplicationPropertiesPtrOutput)
}

// A User Action / Session Property based on a value reported by the API
func (o MobileApplicationPropertiesOutput) ApiValues() MobileApplicationPropertiesApiValueArrayOutput {
	return o.ApplyT(func(v MobileApplicationProperties) []MobileApplicationPropertiesApiValue { return v.ApiValues }).(MobileApplicationPropertiesApiValueArrayOutput)
}

// A User Action / Session Property based on a Server Side Request Attribute
func (o MobileApplicationPropertiesOutput) RequestAttributes() MobileApplicationPropertiesRequestAttributeArrayOutput {
	return o.ApplyT(func(v MobileApplicationProperties) []MobileApplicationPropertiesRequestAttribute {
		return v.RequestAttributes
	}).(MobileApplicationPropertiesRequestAttributeArrayOutput)
}

type MobileApplicationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MobileApplicationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileApplicationProperties)(nil)).Elem()
}

func (o MobileApplicationPropertiesPtrOutput) ToMobileApplicationPropertiesPtrOutput() MobileApplicationPropertiesPtrOutput {
	return o
}

func (o MobileApplicationPropertiesPtrOutput) ToMobileApplicationPropertiesPtrOutputWithContext(ctx context.Context) MobileApplicationPropertiesPtrOutput {
	return o
}

func (o MobileApplicationPropertiesPtrOutput) Elem() MobileApplicationPropertiesOutput {
	return o.ApplyT(func(v *MobileApplicationProperties) MobileApplicationProperties {
		if v != nil {
			return *v
		}
		var ret MobileApplicationProperties
		return ret
	}).(MobileApplicationPropertiesOutput)
}

// A User Action / Session Property based on a value reported by the API
func (o MobileApplicationPropertiesPtrOutput) ApiValues() MobileApplicationPropertiesApiValueArrayOutput {
	return o.ApplyT(func(v *MobileApplicationProperties) []MobileApplicationPropertiesApiValue {
		if v == nil {
			return nil
		}
		return v.ApiValues
	}).(MobileApplicationPropertiesApiValueArrayOutput)
}

// A User Action / Session Property based on a Server Side Request Attribute
func (o MobileApplicationPropertiesPtrOutput) RequestAttributes() MobileApplicationPropertiesRequestAttributeArrayOutput {
	return o.ApplyT(func(v *MobileApplicationProperties) []MobileApplicationPropertiesRequestAttribute {
		if v == nil {
			return nil
		}
		return v.RequestAttributes
	}).(MobileApplicationPropertiesRequestAttributeArrayOutput)
}

type MobileApplicationPropertiesApiValue struct {
	Aggregation *string `pulumi:"aggregation"`
	CleanupRule *string `pulumi:"cleanupRule"`
	DisplayName *string `pulumi:"displayName"`
	Key         string  `pulumi:"key"`
	// The name of the application
	Name                      *string `pulumi:"name"`
	StoreAsSessionProperty    *bool   `pulumi:"storeAsSessionProperty"`
	StoreAsUserActionProperty *bool   `pulumi:"storeAsUserActionProperty"`
	Type                      string  `pulumi:"type"`
}

// MobileApplicationPropertiesApiValueInput is an input type that accepts MobileApplicationPropertiesApiValueArgs and MobileApplicationPropertiesApiValueOutput values.
// You can construct a concrete instance of `MobileApplicationPropertiesApiValueInput` via:
//
//	MobileApplicationPropertiesApiValueArgs{...}
type MobileApplicationPropertiesApiValueInput interface {
	pulumi.Input

	ToMobileApplicationPropertiesApiValueOutput() MobileApplicationPropertiesApiValueOutput
	ToMobileApplicationPropertiesApiValueOutputWithContext(context.Context) MobileApplicationPropertiesApiValueOutput
}

type MobileApplicationPropertiesApiValueArgs struct {
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Key         pulumi.StringInput    `pulumi:"key"`
	// The name of the application
	Name                      pulumi.StringPtrInput `pulumi:"name"`
	StoreAsSessionProperty    pulumi.BoolPtrInput   `pulumi:"storeAsSessionProperty"`
	StoreAsUserActionProperty pulumi.BoolPtrInput   `pulumi:"storeAsUserActionProperty"`
	Type                      pulumi.StringInput    `pulumi:"type"`
}

func (MobileApplicationPropertiesApiValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationPropertiesApiValue)(nil)).Elem()
}

func (i MobileApplicationPropertiesApiValueArgs) ToMobileApplicationPropertiesApiValueOutput() MobileApplicationPropertiesApiValueOutput {
	return i.ToMobileApplicationPropertiesApiValueOutputWithContext(context.Background())
}

func (i MobileApplicationPropertiesApiValueArgs) ToMobileApplicationPropertiesApiValueOutputWithContext(ctx context.Context) MobileApplicationPropertiesApiValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesApiValueOutput)
}

// MobileApplicationPropertiesApiValueArrayInput is an input type that accepts MobileApplicationPropertiesApiValueArray and MobileApplicationPropertiesApiValueArrayOutput values.
// You can construct a concrete instance of `MobileApplicationPropertiesApiValueArrayInput` via:
//
//	MobileApplicationPropertiesApiValueArray{ MobileApplicationPropertiesApiValueArgs{...} }
type MobileApplicationPropertiesApiValueArrayInput interface {
	pulumi.Input

	ToMobileApplicationPropertiesApiValueArrayOutput() MobileApplicationPropertiesApiValueArrayOutput
	ToMobileApplicationPropertiesApiValueArrayOutputWithContext(context.Context) MobileApplicationPropertiesApiValueArrayOutput
}

type MobileApplicationPropertiesApiValueArray []MobileApplicationPropertiesApiValueInput

func (MobileApplicationPropertiesApiValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileApplicationPropertiesApiValue)(nil)).Elem()
}

func (i MobileApplicationPropertiesApiValueArray) ToMobileApplicationPropertiesApiValueArrayOutput() MobileApplicationPropertiesApiValueArrayOutput {
	return i.ToMobileApplicationPropertiesApiValueArrayOutputWithContext(context.Background())
}

func (i MobileApplicationPropertiesApiValueArray) ToMobileApplicationPropertiesApiValueArrayOutputWithContext(ctx context.Context) MobileApplicationPropertiesApiValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesApiValueArrayOutput)
}

type MobileApplicationPropertiesApiValueOutput struct{ *pulumi.OutputState }

func (MobileApplicationPropertiesApiValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationPropertiesApiValue)(nil)).Elem()
}

func (o MobileApplicationPropertiesApiValueOutput) ToMobileApplicationPropertiesApiValueOutput() MobileApplicationPropertiesApiValueOutput {
	return o
}

func (o MobileApplicationPropertiesApiValueOutput) ToMobileApplicationPropertiesApiValueOutputWithContext(ctx context.Context) MobileApplicationPropertiesApiValueOutput {
	return o
}

func (o MobileApplicationPropertiesApiValueOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesApiValueOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesApiValueOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesApiValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the application
func (o MobileApplicationPropertiesApiValueOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesApiValueOutput) StoreAsSessionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) *bool { return v.StoreAsSessionProperty }).(pulumi.BoolPtrOutput)
}

func (o MobileApplicationPropertiesApiValueOutput) StoreAsUserActionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) *bool { return v.StoreAsUserActionProperty }).(pulumi.BoolPtrOutput)
}

func (o MobileApplicationPropertiesApiValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesApiValue) string { return v.Type }).(pulumi.StringOutput)
}

type MobileApplicationPropertiesApiValueArrayOutput struct{ *pulumi.OutputState }

func (MobileApplicationPropertiesApiValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileApplicationPropertiesApiValue)(nil)).Elem()
}

func (o MobileApplicationPropertiesApiValueArrayOutput) ToMobileApplicationPropertiesApiValueArrayOutput() MobileApplicationPropertiesApiValueArrayOutput {
	return o
}

func (o MobileApplicationPropertiesApiValueArrayOutput) ToMobileApplicationPropertiesApiValueArrayOutputWithContext(ctx context.Context) MobileApplicationPropertiesApiValueArrayOutput {
	return o
}

func (o MobileApplicationPropertiesApiValueArrayOutput) Index(i pulumi.IntInput) MobileApplicationPropertiesApiValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MobileApplicationPropertiesApiValue {
		return vs[0].([]MobileApplicationPropertiesApiValue)[vs[1].(int)]
	}).(MobileApplicationPropertiesApiValueOutput)
}

type MobileApplicationPropertiesRequestAttribute struct {
	Aggregation               *string `pulumi:"aggregation"`
	CleanupRule               *string `pulumi:"cleanupRule"`
	DisplayName               *string `pulumi:"displayName"`
	Id                        string  `pulumi:"id"`
	Key                       string  `pulumi:"key"`
	StoreAsSessionProperty    *bool   `pulumi:"storeAsSessionProperty"`
	StoreAsUserActionProperty *bool   `pulumi:"storeAsUserActionProperty"`
	Type                      string  `pulumi:"type"`
}

// MobileApplicationPropertiesRequestAttributeInput is an input type that accepts MobileApplicationPropertiesRequestAttributeArgs and MobileApplicationPropertiesRequestAttributeOutput values.
// You can construct a concrete instance of `MobileApplicationPropertiesRequestAttributeInput` via:
//
//	MobileApplicationPropertiesRequestAttributeArgs{...}
type MobileApplicationPropertiesRequestAttributeInput interface {
	pulumi.Input

	ToMobileApplicationPropertiesRequestAttributeOutput() MobileApplicationPropertiesRequestAttributeOutput
	ToMobileApplicationPropertiesRequestAttributeOutputWithContext(context.Context) MobileApplicationPropertiesRequestAttributeOutput
}

type MobileApplicationPropertiesRequestAttributeArgs struct {
	Aggregation               pulumi.StringPtrInput `pulumi:"aggregation"`
	CleanupRule               pulumi.StringPtrInput `pulumi:"cleanupRule"`
	DisplayName               pulumi.StringPtrInput `pulumi:"displayName"`
	Id                        pulumi.StringInput    `pulumi:"id"`
	Key                       pulumi.StringInput    `pulumi:"key"`
	StoreAsSessionProperty    pulumi.BoolPtrInput   `pulumi:"storeAsSessionProperty"`
	StoreAsUserActionProperty pulumi.BoolPtrInput   `pulumi:"storeAsUserActionProperty"`
	Type                      pulumi.StringInput    `pulumi:"type"`
}

func (MobileApplicationPropertiesRequestAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationPropertiesRequestAttribute)(nil)).Elem()
}

func (i MobileApplicationPropertiesRequestAttributeArgs) ToMobileApplicationPropertiesRequestAttributeOutput() MobileApplicationPropertiesRequestAttributeOutput {
	return i.ToMobileApplicationPropertiesRequestAttributeOutputWithContext(context.Background())
}

func (i MobileApplicationPropertiesRequestAttributeArgs) ToMobileApplicationPropertiesRequestAttributeOutputWithContext(ctx context.Context) MobileApplicationPropertiesRequestAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesRequestAttributeOutput)
}

// MobileApplicationPropertiesRequestAttributeArrayInput is an input type that accepts MobileApplicationPropertiesRequestAttributeArray and MobileApplicationPropertiesRequestAttributeArrayOutput values.
// You can construct a concrete instance of `MobileApplicationPropertiesRequestAttributeArrayInput` via:
//
//	MobileApplicationPropertiesRequestAttributeArray{ MobileApplicationPropertiesRequestAttributeArgs{...} }
type MobileApplicationPropertiesRequestAttributeArrayInput interface {
	pulumi.Input

	ToMobileApplicationPropertiesRequestAttributeArrayOutput() MobileApplicationPropertiesRequestAttributeArrayOutput
	ToMobileApplicationPropertiesRequestAttributeArrayOutputWithContext(context.Context) MobileApplicationPropertiesRequestAttributeArrayOutput
}

type MobileApplicationPropertiesRequestAttributeArray []MobileApplicationPropertiesRequestAttributeInput

func (MobileApplicationPropertiesRequestAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileApplicationPropertiesRequestAttribute)(nil)).Elem()
}

func (i MobileApplicationPropertiesRequestAttributeArray) ToMobileApplicationPropertiesRequestAttributeArrayOutput() MobileApplicationPropertiesRequestAttributeArrayOutput {
	return i.ToMobileApplicationPropertiesRequestAttributeArrayOutputWithContext(context.Background())
}

func (i MobileApplicationPropertiesRequestAttributeArray) ToMobileApplicationPropertiesRequestAttributeArrayOutputWithContext(ctx context.Context) MobileApplicationPropertiesRequestAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileApplicationPropertiesRequestAttributeArrayOutput)
}

type MobileApplicationPropertiesRequestAttributeOutput struct{ *pulumi.OutputState }

func (MobileApplicationPropertiesRequestAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileApplicationPropertiesRequestAttribute)(nil)).Elem()
}

func (o MobileApplicationPropertiesRequestAttributeOutput) ToMobileApplicationPropertiesRequestAttributeOutput() MobileApplicationPropertiesRequestAttributeOutput {
	return o
}

func (o MobileApplicationPropertiesRequestAttributeOutput) ToMobileApplicationPropertiesRequestAttributeOutputWithContext(ctx context.Context) MobileApplicationPropertiesRequestAttributeOutput {
	return o
}

func (o MobileApplicationPropertiesRequestAttributeOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) string { return v.Id }).(pulumi.StringOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) string { return v.Key }).(pulumi.StringOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) StoreAsSessionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) *bool { return v.StoreAsSessionProperty }).(pulumi.BoolPtrOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) StoreAsUserActionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) *bool { return v.StoreAsUserActionProperty }).(pulumi.BoolPtrOutput)
}

func (o MobileApplicationPropertiesRequestAttributeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MobileApplicationPropertiesRequestAttribute) string { return v.Type }).(pulumi.StringOutput)
}

type MobileApplicationPropertiesRequestAttributeArrayOutput struct{ *pulumi.OutputState }

func (MobileApplicationPropertiesRequestAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileApplicationPropertiesRequestAttribute)(nil)).Elem()
}

func (o MobileApplicationPropertiesRequestAttributeArrayOutput) ToMobileApplicationPropertiesRequestAttributeArrayOutput() MobileApplicationPropertiesRequestAttributeArrayOutput {
	return o
}

func (o MobileApplicationPropertiesRequestAttributeArrayOutput) ToMobileApplicationPropertiesRequestAttributeArrayOutputWithContext(ctx context.Context) MobileApplicationPropertiesRequestAttributeArrayOutput {
	return o
}

func (o MobileApplicationPropertiesRequestAttributeArrayOutput) Index(i pulumi.IntInput) MobileApplicationPropertiesRequestAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MobileApplicationPropertiesRequestAttribute {
		return vs[0].([]MobileApplicationPropertiesRequestAttribute)[vs[1].(int)]
	}).(MobileApplicationPropertiesRequestAttributeOutput)
}

type NotificationAnsibleTower struct {
	// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
	AcceptAnyCertificate bool `pulumi:"acceptAnyCertificate"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	CustomMessage string `pulumi:"customMessage"`
	// The ID of the target Ansible Tower job template
	JobTemplateId int `pulumi:"jobTemplateId"`
	// The URL of the target Ansible Tower job template
	JobTemplateUrl string `pulumi:"jobTemplateUrl"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The password for the Ansible Tower account
	Password *string `pulumi:"password"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The username of the Ansible Tower account
	Username string `pulumi:"username"`
}

// NotificationAnsibleTowerInput is an input type that accepts NotificationAnsibleTowerArgs and NotificationAnsibleTowerOutput values.
// You can construct a concrete instance of `NotificationAnsibleTowerInput` via:
//
//	NotificationAnsibleTowerArgs{...}
type NotificationAnsibleTowerInput interface {
	pulumi.Input

	ToNotificationAnsibleTowerOutput() NotificationAnsibleTowerOutput
	ToNotificationAnsibleTowerOutputWithContext(context.Context) NotificationAnsibleTowerOutput
}

type NotificationAnsibleTowerArgs struct {
	// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
	AcceptAnyCertificate pulumi.BoolInput `pulumi:"acceptAnyCertificate"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	CustomMessage pulumi.StringInput `pulumi:"customMessage"`
	// The ID of the target Ansible Tower job template
	JobTemplateId pulumi.IntInput `pulumi:"jobTemplateId"`
	// The URL of the target Ansible Tower job template
	JobTemplateUrl pulumi.StringInput `pulumi:"jobTemplateUrl"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The password for the Ansible Tower account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The username of the Ansible Tower account
	Username pulumi.StringInput `pulumi:"username"`
}

func (NotificationAnsibleTowerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationAnsibleTower)(nil)).Elem()
}

func (i NotificationAnsibleTowerArgs) ToNotificationAnsibleTowerOutput() NotificationAnsibleTowerOutput {
	return i.ToNotificationAnsibleTowerOutputWithContext(context.Background())
}

func (i NotificationAnsibleTowerArgs) ToNotificationAnsibleTowerOutputWithContext(ctx context.Context) NotificationAnsibleTowerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationAnsibleTowerOutput)
}

func (i NotificationAnsibleTowerArgs) ToNotificationAnsibleTowerPtrOutput() NotificationAnsibleTowerPtrOutput {
	return i.ToNotificationAnsibleTowerPtrOutputWithContext(context.Background())
}

func (i NotificationAnsibleTowerArgs) ToNotificationAnsibleTowerPtrOutputWithContext(ctx context.Context) NotificationAnsibleTowerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationAnsibleTowerOutput).ToNotificationAnsibleTowerPtrOutputWithContext(ctx)
}

// NotificationAnsibleTowerPtrInput is an input type that accepts NotificationAnsibleTowerArgs, NotificationAnsibleTowerPtr and NotificationAnsibleTowerPtrOutput values.
// You can construct a concrete instance of `NotificationAnsibleTowerPtrInput` via:
//
//	        NotificationAnsibleTowerArgs{...}
//
//	or:
//
//	        nil
type NotificationAnsibleTowerPtrInput interface {
	pulumi.Input

	ToNotificationAnsibleTowerPtrOutput() NotificationAnsibleTowerPtrOutput
	ToNotificationAnsibleTowerPtrOutputWithContext(context.Context) NotificationAnsibleTowerPtrOutput
}

type notificationAnsibleTowerPtrType NotificationAnsibleTowerArgs

func NotificationAnsibleTowerPtr(v *NotificationAnsibleTowerArgs) NotificationAnsibleTowerPtrInput {
	return (*notificationAnsibleTowerPtrType)(v)
}

func (*notificationAnsibleTowerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationAnsibleTower)(nil)).Elem()
}

func (i *notificationAnsibleTowerPtrType) ToNotificationAnsibleTowerPtrOutput() NotificationAnsibleTowerPtrOutput {
	return i.ToNotificationAnsibleTowerPtrOutputWithContext(context.Background())
}

func (i *notificationAnsibleTowerPtrType) ToNotificationAnsibleTowerPtrOutputWithContext(ctx context.Context) NotificationAnsibleTowerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationAnsibleTowerPtrOutput)
}

type NotificationAnsibleTowerOutput struct{ *pulumi.OutputState }

func (NotificationAnsibleTowerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationAnsibleTower)(nil)).Elem()
}

func (o NotificationAnsibleTowerOutput) ToNotificationAnsibleTowerOutput() NotificationAnsibleTowerOutput {
	return o
}

func (o NotificationAnsibleTowerOutput) ToNotificationAnsibleTowerOutputWithContext(ctx context.Context) NotificationAnsibleTowerOutput {
	return o
}

func (o NotificationAnsibleTowerOutput) ToNotificationAnsibleTowerPtrOutput() NotificationAnsibleTowerPtrOutput {
	return o.ToNotificationAnsibleTowerPtrOutputWithContext(context.Background())
}

func (o NotificationAnsibleTowerOutput) ToNotificationAnsibleTowerPtrOutputWithContext(ctx context.Context) NotificationAnsibleTowerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationAnsibleTower) *NotificationAnsibleTower {
		return &v
	}).(NotificationAnsibleTowerPtrOutput)
}

// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
func (o NotificationAnsibleTowerOutput) AcceptAnyCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) bool { return v.AcceptAnyCertificate }).(pulumi.BoolOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationAnsibleTowerOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationAnsibleTowerOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationAnsibleTowerOutput) CustomMessage() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) string { return v.CustomMessage }).(pulumi.StringOutput)
}

// The ID of the target Ansible Tower job template
func (o NotificationAnsibleTowerOutput) JobTemplateId() pulumi.IntOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) int { return v.JobTemplateId }).(pulumi.IntOutput)
}

// The URL of the target Ansible Tower job template
func (o NotificationAnsibleTowerOutput) JobTemplateUrl() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) string { return v.JobTemplateUrl }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationAnsibleTowerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) string { return v.Name }).(pulumi.StringOutput)
}

// The password for the Ansible Tower account
func (o NotificationAnsibleTowerOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationAnsibleTowerOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The username of the Ansible Tower account
func (o NotificationAnsibleTowerOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationAnsibleTower) string { return v.Username }).(pulumi.StringOutput)
}

type NotificationAnsibleTowerPtrOutput struct{ *pulumi.OutputState }

func (NotificationAnsibleTowerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationAnsibleTower)(nil)).Elem()
}

func (o NotificationAnsibleTowerPtrOutput) ToNotificationAnsibleTowerPtrOutput() NotificationAnsibleTowerPtrOutput {
	return o
}

func (o NotificationAnsibleTowerPtrOutput) ToNotificationAnsibleTowerPtrOutputWithContext(ctx context.Context) NotificationAnsibleTowerPtrOutput {
	return o
}

func (o NotificationAnsibleTowerPtrOutput) Elem() NotificationAnsibleTowerOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) NotificationAnsibleTower {
		if v != nil {
			return *v
		}
		var ret NotificationAnsibleTower
		return ret
	}).(NotificationAnsibleTowerOutput)
}

// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
func (o NotificationAnsibleTowerPtrOutput) AcceptAnyCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *bool {
		if v == nil {
			return nil
		}
		return &v.AcceptAnyCertificate
	}).(pulumi.BoolPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationAnsibleTowerPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationAnsibleTowerPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationAnsibleTowerPtrOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return &v.CustomMessage
	}).(pulumi.StringPtrOutput)
}

// The ID of the target Ansible Tower job template
func (o NotificationAnsibleTowerPtrOutput) JobTemplateId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *int {
		if v == nil {
			return nil
		}
		return &v.JobTemplateId
	}).(pulumi.IntPtrOutput)
}

// The URL of the target Ansible Tower job template
func (o NotificationAnsibleTowerPtrOutput) JobTemplateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return &v.JobTemplateUrl
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationAnsibleTowerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The password for the Ansible Tower account
func (o NotificationAnsibleTowerPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationAnsibleTowerPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The username of the Ansible Tower account
func (o NotificationAnsibleTowerPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationAnsibleTower) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type NotificationConfig struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` > EmailNotificationConfig  * `PAGER_DUTY` > PagerDutyNotificationConfig  * `WEBHOOK` > WebHookNotificationConfig  * `SLACK` > SlackNotificationConfig  * `HIPCHAT` > HipChatNotificationConfig  * `VICTOROPS` > VictorOpsNotificationConfig  * `SERVICE_NOW` > ServiceNowNotificationConfig  * `XMATTERS` > XMattersNotificationConfig  * `ANSIBLETOWER` > AnsibleTowerNotificationConfig  * `OPS_GENIE` > OpsGenieNotificationConfig  * `JIRA` > JiraNotificationConfig  * `TRELLO` > TrelloNotificationConfig
	Type string `pulumi:"type"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// NotificationConfigInput is an input type that accepts NotificationConfigArgs and NotificationConfigOutput values.
// You can construct a concrete instance of `NotificationConfigInput` via:
//
//	NotificationConfigArgs{...}
type NotificationConfigInput interface {
	pulumi.Input

	ToNotificationConfigOutput() NotificationConfigOutput
	ToNotificationConfigOutputWithContext(context.Context) NotificationConfigOutput
}

type NotificationConfigArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` > EmailNotificationConfig  * `PAGER_DUTY` > PagerDutyNotificationConfig  * `WEBHOOK` > WebHookNotificationConfig  * `SLACK` > SlackNotificationConfig  * `HIPCHAT` > HipChatNotificationConfig  * `VICTOROPS` > VictorOpsNotificationConfig  * `SERVICE_NOW` > ServiceNowNotificationConfig  * `XMATTERS` > XMattersNotificationConfig  * `ANSIBLETOWER` > AnsibleTowerNotificationConfig  * `OPS_GENIE` > OpsGenieNotificationConfig  * `JIRA` > JiraNotificationConfig  * `TRELLO` > TrelloNotificationConfig
	Type pulumi.StringInput `pulumi:"type"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (NotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfig)(nil)).Elem()
}

func (i NotificationConfigArgs) ToNotificationConfigOutput() NotificationConfigOutput {
	return i.ToNotificationConfigOutputWithContext(context.Background())
}

func (i NotificationConfigArgs) ToNotificationConfigOutputWithContext(ctx context.Context) NotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigOutput)
}

func (i NotificationConfigArgs) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return i.ToNotificationConfigPtrOutputWithContext(context.Background())
}

func (i NotificationConfigArgs) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigOutput).ToNotificationConfigPtrOutputWithContext(ctx)
}

// NotificationConfigPtrInput is an input type that accepts NotificationConfigArgs, NotificationConfigPtr and NotificationConfigPtrOutput values.
// You can construct a concrete instance of `NotificationConfigPtrInput` via:
//
//	        NotificationConfigArgs{...}
//
//	or:
//
//	        nil
type NotificationConfigPtrInput interface {
	pulumi.Input

	ToNotificationConfigPtrOutput() NotificationConfigPtrOutput
	ToNotificationConfigPtrOutputWithContext(context.Context) NotificationConfigPtrOutput
}

type notificationConfigPtrType NotificationConfigArgs

func NotificationConfigPtr(v *NotificationConfigArgs) NotificationConfigPtrInput {
	return (*notificationConfigPtrType)(v)
}

func (*notificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfig)(nil)).Elem()
}

func (i *notificationConfigPtrType) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return i.ToNotificationConfigPtrOutputWithContext(context.Background())
}

func (i *notificationConfigPtrType) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigPtrOutput)
}

type NotificationConfigOutput struct{ *pulumi.OutputState }

func (NotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfig)(nil)).Elem()
}

func (o NotificationConfigOutput) ToNotificationConfigOutput() NotificationConfigOutput {
	return o
}

func (o NotificationConfigOutput) ToNotificationConfigOutputWithContext(ctx context.Context) NotificationConfigOutput {
	return o
}

func (o NotificationConfigOutput) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return o.ToNotificationConfigPtrOutputWithContext(context.Background())
}

func (o NotificationConfigOutput) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationConfig) *NotificationConfig {
		return &v
	}).(NotificationConfigPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationConfigOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationConfig) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationConfigOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfig) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfig) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` > EmailNotificationConfig  * `PAGER_DUTY` > PagerDutyNotificationConfig  * `WEBHOOK` > WebHookNotificationConfig  * `SLACK` > SlackNotificationConfig  * `HIPCHAT` > HipChatNotificationConfig  * `VICTOROPS` > VictorOpsNotificationConfig  * `SERVICE_NOW` > ServiceNowNotificationConfig  * `XMATTERS` > XMattersNotificationConfig  * `ANSIBLETOWER` > AnsibleTowerNotificationConfig  * `OPS_GENIE` > OpsGenieNotificationConfig  * `JIRA` > JiraNotificationConfig  * `TRELLO` > TrelloNotificationConfig
func (o NotificationConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfig) string { return v.Type }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationConfigOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfig) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type NotificationConfigPtrOutput struct{ *pulumi.OutputState }

func (NotificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfig)(nil)).Elem()
}

func (o NotificationConfigPtrOutput) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return o
}

func (o NotificationConfigPtrOutput) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return o
}

func (o NotificationConfigPtrOutput) Elem() NotificationConfigOutput {
	return o.ApplyT(func(v *NotificationConfig) NotificationConfig {
		if v != nil {
			return *v
		}
		var ret NotificationConfig
		return ret
	}).(NotificationConfigOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationConfigPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationConfigPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` > EmailNotificationConfig  * `PAGER_DUTY` > PagerDutyNotificationConfig  * `WEBHOOK` > WebHookNotificationConfig  * `SLACK` > SlackNotificationConfig  * `HIPCHAT` > HipChatNotificationConfig  * `VICTOROPS` > VictorOpsNotificationConfig  * `SERVICE_NOW` > ServiceNowNotificationConfig  * `XMATTERS` > XMattersNotificationConfig  * `ANSIBLETOWER` > AnsibleTowerNotificationConfig  * `OPS_GENIE` > OpsGenieNotificationConfig  * `JIRA` > JiraNotificationConfig  * `TRELLO` > TrelloNotificationConfig
func (o NotificationConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationConfigPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type NotificationEmail struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The list of the email BCC-recipients
	BccReceivers []string `pulumi:"bccReceivers"`
	// The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Body string `pulumi:"body"`
	// The list of the email CC-recipients
	CcReceivers []string `pulumi:"ccReceivers"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The list of the email recipients
	Receivers []string `pulumi:"receivers"`
	// The subject of the email notifications
	Subject string `pulumi:"subject"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// NotificationEmailInput is an input type that accepts NotificationEmailArgs and NotificationEmailOutput values.
// You can construct a concrete instance of `NotificationEmailInput` via:
//
//	NotificationEmailArgs{...}
type NotificationEmailInput interface {
	pulumi.Input

	ToNotificationEmailOutput() NotificationEmailOutput
	ToNotificationEmailOutputWithContext(context.Context) NotificationEmailOutput
}

type NotificationEmailArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The list of the email BCC-recipients
	BccReceivers pulumi.StringArrayInput `pulumi:"bccReceivers"`
	// The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Body pulumi.StringInput `pulumi:"body"`
	// The list of the email CC-recipients
	CcReceivers pulumi.StringArrayInput `pulumi:"ccReceivers"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The list of the email recipients
	Receivers pulumi.StringArrayInput `pulumi:"receivers"`
	// The subject of the email notifications
	Subject pulumi.StringInput `pulumi:"subject"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (NotificationEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationEmail)(nil)).Elem()
}

func (i NotificationEmailArgs) ToNotificationEmailOutput() NotificationEmailOutput {
	return i.ToNotificationEmailOutputWithContext(context.Background())
}

func (i NotificationEmailArgs) ToNotificationEmailOutputWithContext(ctx context.Context) NotificationEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationEmailOutput)
}

func (i NotificationEmailArgs) ToNotificationEmailPtrOutput() NotificationEmailPtrOutput {
	return i.ToNotificationEmailPtrOutputWithContext(context.Background())
}

func (i NotificationEmailArgs) ToNotificationEmailPtrOutputWithContext(ctx context.Context) NotificationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationEmailOutput).ToNotificationEmailPtrOutputWithContext(ctx)
}

// NotificationEmailPtrInput is an input type that accepts NotificationEmailArgs, NotificationEmailPtr and NotificationEmailPtrOutput values.
// You can construct a concrete instance of `NotificationEmailPtrInput` via:
//
//	        NotificationEmailArgs{...}
//
//	or:
//
//	        nil
type NotificationEmailPtrInput interface {
	pulumi.Input

	ToNotificationEmailPtrOutput() NotificationEmailPtrOutput
	ToNotificationEmailPtrOutputWithContext(context.Context) NotificationEmailPtrOutput
}

type notificationEmailPtrType NotificationEmailArgs

func NotificationEmailPtr(v *NotificationEmailArgs) NotificationEmailPtrInput {
	return (*notificationEmailPtrType)(v)
}

func (*notificationEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationEmail)(nil)).Elem()
}

func (i *notificationEmailPtrType) ToNotificationEmailPtrOutput() NotificationEmailPtrOutput {
	return i.ToNotificationEmailPtrOutputWithContext(context.Background())
}

func (i *notificationEmailPtrType) ToNotificationEmailPtrOutputWithContext(ctx context.Context) NotificationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationEmailPtrOutput)
}

type NotificationEmailOutput struct{ *pulumi.OutputState }

func (NotificationEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationEmail)(nil)).Elem()
}

func (o NotificationEmailOutput) ToNotificationEmailOutput() NotificationEmailOutput {
	return o
}

func (o NotificationEmailOutput) ToNotificationEmailOutputWithContext(ctx context.Context) NotificationEmailOutput {
	return o
}

func (o NotificationEmailOutput) ToNotificationEmailPtrOutput() NotificationEmailPtrOutput {
	return o.ToNotificationEmailPtrOutputWithContext(context.Background())
}

func (o NotificationEmailOutput) ToNotificationEmailPtrOutputWithContext(ctx context.Context) NotificationEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationEmail) *NotificationEmail {
		return &v
	}).(NotificationEmailPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationEmailOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationEmail) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationEmailOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationEmail) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The list of the email BCC-recipients
func (o NotificationEmailOutput) BccReceivers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationEmail) []string { return v.BccReceivers }).(pulumi.StringArrayOutput)
}

// The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationEmailOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationEmail) string { return v.Body }).(pulumi.StringOutput)
}

// The list of the email CC-recipients
func (o NotificationEmailOutput) CcReceivers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationEmail) []string { return v.CcReceivers }).(pulumi.StringArrayOutput)
}

// The name of the notification configuration
func (o NotificationEmailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationEmail) string { return v.Name }).(pulumi.StringOutput)
}

// The list of the email recipients
func (o NotificationEmailOutput) Receivers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationEmail) []string { return v.Receivers }).(pulumi.StringArrayOutput)
}

// The subject of the email notifications
func (o NotificationEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationEmailOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationEmail) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type NotificationEmailPtrOutput struct{ *pulumi.OutputState }

func (NotificationEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationEmail)(nil)).Elem()
}

func (o NotificationEmailPtrOutput) ToNotificationEmailPtrOutput() NotificationEmailPtrOutput {
	return o
}

func (o NotificationEmailPtrOutput) ToNotificationEmailPtrOutputWithContext(ctx context.Context) NotificationEmailPtrOutput {
	return o
}

func (o NotificationEmailPtrOutput) Elem() NotificationEmailOutput {
	return o.ApplyT(func(v *NotificationEmail) NotificationEmail {
		if v != nil {
			return *v
		}
		var ret NotificationEmail
		return ret
	}).(NotificationEmailOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationEmailPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationEmail) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationEmailPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The list of the email BCC-recipients
func (o NotificationEmailPtrOutput) BccReceivers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationEmail) []string {
		if v == nil {
			return nil
		}
		return v.BccReceivers
	}).(pulumi.StringArrayOutput)
}

// The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationEmailPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

// The list of the email CC-recipients
func (o NotificationEmailPtrOutput) CcReceivers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationEmail) []string {
		if v == nil {
			return nil
		}
		return v.CcReceivers
	}).(pulumi.StringArrayOutput)
}

// The name of the notification configuration
func (o NotificationEmailPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The list of the email recipients
func (o NotificationEmailPtrOutput) Receivers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationEmail) []string {
		if v == nil {
			return nil
		}
		return v.Receivers
	}).(pulumi.StringArrayOutput)
}

// The subject of the email notifications
func (o NotificationEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationEmailPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationEmail) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type NotificationHipchat struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Message string `pulumi:"message"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The URL of the HipChat WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
	Url *string `pulumi:"url"`
}

// NotificationHipchatInput is an input type that accepts NotificationHipchatArgs and NotificationHipchatOutput values.
// You can construct a concrete instance of `NotificationHipchatInput` via:
//
//	NotificationHipchatArgs{...}
type NotificationHipchatInput interface {
	pulumi.Input

	ToNotificationHipchatOutput() NotificationHipchatOutput
	ToNotificationHipchatOutputWithContext(context.Context) NotificationHipchatOutput
}

type NotificationHipchatArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The URL of the HipChat WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (NotificationHipchatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationHipchat)(nil)).Elem()
}

func (i NotificationHipchatArgs) ToNotificationHipchatOutput() NotificationHipchatOutput {
	return i.ToNotificationHipchatOutputWithContext(context.Background())
}

func (i NotificationHipchatArgs) ToNotificationHipchatOutputWithContext(ctx context.Context) NotificationHipchatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationHipchatOutput)
}

func (i NotificationHipchatArgs) ToNotificationHipchatPtrOutput() NotificationHipchatPtrOutput {
	return i.ToNotificationHipchatPtrOutputWithContext(context.Background())
}

func (i NotificationHipchatArgs) ToNotificationHipchatPtrOutputWithContext(ctx context.Context) NotificationHipchatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationHipchatOutput).ToNotificationHipchatPtrOutputWithContext(ctx)
}

// NotificationHipchatPtrInput is an input type that accepts NotificationHipchatArgs, NotificationHipchatPtr and NotificationHipchatPtrOutput values.
// You can construct a concrete instance of `NotificationHipchatPtrInput` via:
//
//	        NotificationHipchatArgs{...}
//
//	or:
//
//	        nil
type NotificationHipchatPtrInput interface {
	pulumi.Input

	ToNotificationHipchatPtrOutput() NotificationHipchatPtrOutput
	ToNotificationHipchatPtrOutputWithContext(context.Context) NotificationHipchatPtrOutput
}

type notificationHipchatPtrType NotificationHipchatArgs

func NotificationHipchatPtr(v *NotificationHipchatArgs) NotificationHipchatPtrInput {
	return (*notificationHipchatPtrType)(v)
}

func (*notificationHipchatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationHipchat)(nil)).Elem()
}

func (i *notificationHipchatPtrType) ToNotificationHipchatPtrOutput() NotificationHipchatPtrOutput {
	return i.ToNotificationHipchatPtrOutputWithContext(context.Background())
}

func (i *notificationHipchatPtrType) ToNotificationHipchatPtrOutputWithContext(ctx context.Context) NotificationHipchatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationHipchatPtrOutput)
}

type NotificationHipchatOutput struct{ *pulumi.OutputState }

func (NotificationHipchatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationHipchat)(nil)).Elem()
}

func (o NotificationHipchatOutput) ToNotificationHipchatOutput() NotificationHipchatOutput {
	return o
}

func (o NotificationHipchatOutput) ToNotificationHipchatOutputWithContext(ctx context.Context) NotificationHipchatOutput {
	return o
}

func (o NotificationHipchatOutput) ToNotificationHipchatPtrOutput() NotificationHipchatPtrOutput {
	return o.ToNotificationHipchatPtrOutputWithContext(context.Background())
}

func (o NotificationHipchatOutput) ToNotificationHipchatPtrOutputWithContext(ctx context.Context) NotificationHipchatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationHipchat) *NotificationHipchat {
		return &v
	}).(NotificationHipchatPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationHipchatOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationHipchat) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationHipchatOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationHipchat) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationHipchatOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationHipchat) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationHipchatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationHipchat) string { return v.Name }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationHipchatOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationHipchat) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The URL of the HipChat WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
func (o NotificationHipchatOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationHipchat) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type NotificationHipchatPtrOutput struct{ *pulumi.OutputState }

func (NotificationHipchatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationHipchat)(nil)).Elem()
}

func (o NotificationHipchatPtrOutput) ToNotificationHipchatPtrOutput() NotificationHipchatPtrOutput {
	return o
}

func (o NotificationHipchatPtrOutput) ToNotificationHipchatPtrOutputWithContext(ctx context.Context) NotificationHipchatPtrOutput {
	return o
}

func (o NotificationHipchatPtrOutput) Elem() NotificationHipchatOutput {
	return o.ApplyT(func(v *NotificationHipchat) NotificationHipchat {
		if v != nil {
			return *v
		}
		var ret NotificationHipchat
		return ret
	}).(NotificationHipchatOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationHipchatPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationHipchat) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationHipchatPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHipchat) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationHipchatPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHipchat) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationHipchatPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHipchat) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationHipchatPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHipchat) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The URL of the HipChat WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
func (o NotificationHipchatPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHipchat) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type NotificationJira struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
	Description string `pulumi:"description"`
	// The type of the Jira issue to be created by this notification
	IssueType string `pulumi:"issueType"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The password for the Jira profile
	Password *string `pulumi:"password"`
	// The project key of the Jira issue to be created by this notification
	ProjectKey string `pulumi:"projectKey"`
	// The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Summary string `pulumi:"summary"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The URL of the Jira API endpoint
	Url string `pulumi:"url"`
	// The username of the Jira profile
	Username string `pulumi:"username"`
}

// NotificationJiraInput is an input type that accepts NotificationJiraArgs and NotificationJiraOutput values.
// You can construct a concrete instance of `NotificationJiraInput` via:
//
//	NotificationJiraArgs{...}
type NotificationJiraInput interface {
	pulumi.Input

	ToNotificationJiraOutput() NotificationJiraOutput
	ToNotificationJiraOutputWithContext(context.Context) NotificationJiraOutput
}

type NotificationJiraArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
	Description pulumi.StringInput `pulumi:"description"`
	// The type of the Jira issue to be created by this notification
	IssueType pulumi.StringInput `pulumi:"issueType"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The password for the Jira profile
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The project key of the Jira issue to be created by this notification
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
	// The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Summary pulumi.StringInput `pulumi:"summary"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The URL of the Jira API endpoint
	Url pulumi.StringInput `pulumi:"url"`
	// The username of the Jira profile
	Username pulumi.StringInput `pulumi:"username"`
}

func (NotificationJiraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationJira)(nil)).Elem()
}

func (i NotificationJiraArgs) ToNotificationJiraOutput() NotificationJiraOutput {
	return i.ToNotificationJiraOutputWithContext(context.Background())
}

func (i NotificationJiraArgs) ToNotificationJiraOutputWithContext(ctx context.Context) NotificationJiraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationJiraOutput)
}

func (i NotificationJiraArgs) ToNotificationJiraPtrOutput() NotificationJiraPtrOutput {
	return i.ToNotificationJiraPtrOutputWithContext(context.Background())
}

func (i NotificationJiraArgs) ToNotificationJiraPtrOutputWithContext(ctx context.Context) NotificationJiraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationJiraOutput).ToNotificationJiraPtrOutputWithContext(ctx)
}

// NotificationJiraPtrInput is an input type that accepts NotificationJiraArgs, NotificationJiraPtr and NotificationJiraPtrOutput values.
// You can construct a concrete instance of `NotificationJiraPtrInput` via:
//
//	        NotificationJiraArgs{...}
//
//	or:
//
//	        nil
type NotificationJiraPtrInput interface {
	pulumi.Input

	ToNotificationJiraPtrOutput() NotificationJiraPtrOutput
	ToNotificationJiraPtrOutputWithContext(context.Context) NotificationJiraPtrOutput
}

type notificationJiraPtrType NotificationJiraArgs

func NotificationJiraPtr(v *NotificationJiraArgs) NotificationJiraPtrInput {
	return (*notificationJiraPtrType)(v)
}

func (*notificationJiraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationJira)(nil)).Elem()
}

func (i *notificationJiraPtrType) ToNotificationJiraPtrOutput() NotificationJiraPtrOutput {
	return i.ToNotificationJiraPtrOutputWithContext(context.Background())
}

func (i *notificationJiraPtrType) ToNotificationJiraPtrOutputWithContext(ctx context.Context) NotificationJiraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationJiraPtrOutput)
}

type NotificationJiraOutput struct{ *pulumi.OutputState }

func (NotificationJiraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationJira)(nil)).Elem()
}

func (o NotificationJiraOutput) ToNotificationJiraOutput() NotificationJiraOutput {
	return o
}

func (o NotificationJiraOutput) ToNotificationJiraOutputWithContext(ctx context.Context) NotificationJiraOutput {
	return o
}

func (o NotificationJiraOutput) ToNotificationJiraPtrOutput() NotificationJiraPtrOutput {
	return o.ToNotificationJiraPtrOutputWithContext(context.Background())
}

func (o NotificationJiraOutput) ToNotificationJiraPtrOutputWithContext(ctx context.Context) NotificationJiraPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationJira) *NotificationJira {
		return &v
	}).(NotificationJiraPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationJiraOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationJira) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationJiraOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
func (o NotificationJiraOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.Description }).(pulumi.StringOutput)
}

// The type of the Jira issue to be created by this notification
func (o NotificationJiraOutput) IssueType() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.IssueType }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationJiraOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.Name }).(pulumi.StringOutput)
}

// The password for the Jira profile
func (o NotificationJiraOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationJira) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The project key of the Jira issue to be created by this notification
func (o NotificationJiraOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.ProjectKey }).(pulumi.StringOutput)
}

// The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationJiraOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.Summary }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationJiraOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationJira) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The URL of the Jira API endpoint
func (o NotificationJiraOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.Url }).(pulumi.StringOutput)
}

// The username of the Jira profile
func (o NotificationJiraOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationJira) string { return v.Username }).(pulumi.StringOutput)
}

type NotificationJiraPtrOutput struct{ *pulumi.OutputState }

func (NotificationJiraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationJira)(nil)).Elem()
}

func (o NotificationJiraPtrOutput) ToNotificationJiraPtrOutput() NotificationJiraPtrOutput {
	return o
}

func (o NotificationJiraPtrOutput) ToNotificationJiraPtrOutputWithContext(ctx context.Context) NotificationJiraPtrOutput {
	return o
}

func (o NotificationJiraPtrOutput) Elem() NotificationJiraOutput {
	return o.ApplyT(func(v *NotificationJira) NotificationJira {
		if v != nil {
			return *v
		}
		var ret NotificationJira
		return ret
	}).(NotificationJiraOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationJiraPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationJiraPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
func (o NotificationJiraPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The type of the Jira issue to be created by this notification
func (o NotificationJiraPtrOutput) IssueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.IssueType
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationJiraPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The password for the Jira profile
func (o NotificationJiraPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The project key of the Jira issue to be created by this notification
func (o NotificationJiraPtrOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectKey
	}).(pulumi.StringPtrOutput)
}

// The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationJiraPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.Summary
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationJiraPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The URL of the Jira API endpoint
func (o NotificationJiraPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The username of the Jira profile
func (o NotificationJiraPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationJira) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type NotificationOpsGenie struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The API key to access OpsGenie
	ApiKey *string `pulumi:"apiKey"`
	// The region domain of the OpsGenie
	Domain string `pulumi:"domain"`
	// The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem
	Message string `pulumi:"message"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// NotificationOpsGenieInput is an input type that accepts NotificationOpsGenieArgs and NotificationOpsGenieOutput values.
// You can construct a concrete instance of `NotificationOpsGenieInput` via:
//
//	NotificationOpsGenieArgs{...}
type NotificationOpsGenieInput interface {
	pulumi.Input

	ToNotificationOpsGenieOutput() NotificationOpsGenieOutput
	ToNotificationOpsGenieOutputWithContext(context.Context) NotificationOpsGenieOutput
}

type NotificationOpsGenieArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The API key to access OpsGenie
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// The region domain of the OpsGenie
	Domain pulumi.StringInput `pulumi:"domain"`
	// The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (NotificationOpsGenieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationOpsGenie)(nil)).Elem()
}

func (i NotificationOpsGenieArgs) ToNotificationOpsGenieOutput() NotificationOpsGenieOutput {
	return i.ToNotificationOpsGenieOutputWithContext(context.Background())
}

func (i NotificationOpsGenieArgs) ToNotificationOpsGenieOutputWithContext(ctx context.Context) NotificationOpsGenieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationOpsGenieOutput)
}

func (i NotificationOpsGenieArgs) ToNotificationOpsGeniePtrOutput() NotificationOpsGeniePtrOutput {
	return i.ToNotificationOpsGeniePtrOutputWithContext(context.Background())
}

func (i NotificationOpsGenieArgs) ToNotificationOpsGeniePtrOutputWithContext(ctx context.Context) NotificationOpsGeniePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationOpsGenieOutput).ToNotificationOpsGeniePtrOutputWithContext(ctx)
}

// NotificationOpsGeniePtrInput is an input type that accepts NotificationOpsGenieArgs, NotificationOpsGeniePtr and NotificationOpsGeniePtrOutput values.
// You can construct a concrete instance of `NotificationOpsGeniePtrInput` via:
//
//	        NotificationOpsGenieArgs{...}
//
//	or:
//
//	        nil
type NotificationOpsGeniePtrInput interface {
	pulumi.Input

	ToNotificationOpsGeniePtrOutput() NotificationOpsGeniePtrOutput
	ToNotificationOpsGeniePtrOutputWithContext(context.Context) NotificationOpsGeniePtrOutput
}

type notificationOpsGeniePtrType NotificationOpsGenieArgs

func NotificationOpsGeniePtr(v *NotificationOpsGenieArgs) NotificationOpsGeniePtrInput {
	return (*notificationOpsGeniePtrType)(v)
}

func (*notificationOpsGeniePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationOpsGenie)(nil)).Elem()
}

func (i *notificationOpsGeniePtrType) ToNotificationOpsGeniePtrOutput() NotificationOpsGeniePtrOutput {
	return i.ToNotificationOpsGeniePtrOutputWithContext(context.Background())
}

func (i *notificationOpsGeniePtrType) ToNotificationOpsGeniePtrOutputWithContext(ctx context.Context) NotificationOpsGeniePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationOpsGeniePtrOutput)
}

type NotificationOpsGenieOutput struct{ *pulumi.OutputState }

func (NotificationOpsGenieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationOpsGenie)(nil)).Elem()
}

func (o NotificationOpsGenieOutput) ToNotificationOpsGenieOutput() NotificationOpsGenieOutput {
	return o
}

func (o NotificationOpsGenieOutput) ToNotificationOpsGenieOutputWithContext(ctx context.Context) NotificationOpsGenieOutput {
	return o
}

func (o NotificationOpsGenieOutput) ToNotificationOpsGeniePtrOutput() NotificationOpsGeniePtrOutput {
	return o.ToNotificationOpsGeniePtrOutputWithContext(context.Background())
}

func (o NotificationOpsGenieOutput) ToNotificationOpsGeniePtrOutputWithContext(ctx context.Context) NotificationOpsGeniePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationOpsGenie) *NotificationOpsGenie {
		return &v
	}).(NotificationOpsGeniePtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationOpsGenieOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationOpsGenie) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationOpsGenieOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationOpsGenie) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The API key to access OpsGenie
func (o NotificationOpsGenieOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationOpsGenie) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The region domain of the OpsGenie
func (o NotificationOpsGenieOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationOpsGenie) string { return v.Domain }).(pulumi.StringOutput)
}

// The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem
func (o NotificationOpsGenieOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationOpsGenie) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationOpsGenieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationOpsGenie) string { return v.Name }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationOpsGenieOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationOpsGenie) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type NotificationOpsGeniePtrOutput struct{ *pulumi.OutputState }

func (NotificationOpsGeniePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationOpsGenie)(nil)).Elem()
}

func (o NotificationOpsGeniePtrOutput) ToNotificationOpsGeniePtrOutput() NotificationOpsGeniePtrOutput {
	return o
}

func (o NotificationOpsGeniePtrOutput) ToNotificationOpsGeniePtrOutputWithContext(ctx context.Context) NotificationOpsGeniePtrOutput {
	return o
}

func (o NotificationOpsGeniePtrOutput) Elem() NotificationOpsGenieOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) NotificationOpsGenie {
		if v != nil {
			return *v
		}
		var ret NotificationOpsGenie
		return ret
	}).(NotificationOpsGenieOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationOpsGeniePtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationOpsGeniePtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The API key to access OpsGenie
func (o NotificationOpsGeniePtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The region domain of the OpsGenie
func (o NotificationOpsGeniePtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem
func (o NotificationOpsGeniePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationOpsGeniePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationOpsGeniePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationOpsGenie) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type NotificationPagerDuty struct {
	// The name of the PagerDuty account
	Account string `pulumi:"account"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The API key to access PagerDuty
	ServiceApiKey *string `pulumi:"serviceApiKey"`
	// The name of the service
	ServiceName string `pulumi:"serviceName"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// NotificationPagerDutyInput is an input type that accepts NotificationPagerDutyArgs and NotificationPagerDutyOutput values.
// You can construct a concrete instance of `NotificationPagerDutyInput` via:
//
//	NotificationPagerDutyArgs{...}
type NotificationPagerDutyInput interface {
	pulumi.Input

	ToNotificationPagerDutyOutput() NotificationPagerDutyOutput
	ToNotificationPagerDutyOutputWithContext(context.Context) NotificationPagerDutyOutput
}

type NotificationPagerDutyArgs struct {
	// The name of the PagerDuty account
	Account pulumi.StringInput `pulumi:"account"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The API key to access PagerDuty
	ServiceApiKey pulumi.StringPtrInput `pulumi:"serviceApiKey"`
	// The name of the service
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (NotificationPagerDutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPagerDuty)(nil)).Elem()
}

func (i NotificationPagerDutyArgs) ToNotificationPagerDutyOutput() NotificationPagerDutyOutput {
	return i.ToNotificationPagerDutyOutputWithContext(context.Background())
}

func (i NotificationPagerDutyArgs) ToNotificationPagerDutyOutputWithContext(ctx context.Context) NotificationPagerDutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPagerDutyOutput)
}

func (i NotificationPagerDutyArgs) ToNotificationPagerDutyPtrOutput() NotificationPagerDutyPtrOutput {
	return i.ToNotificationPagerDutyPtrOutputWithContext(context.Background())
}

func (i NotificationPagerDutyArgs) ToNotificationPagerDutyPtrOutputWithContext(ctx context.Context) NotificationPagerDutyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPagerDutyOutput).ToNotificationPagerDutyPtrOutputWithContext(ctx)
}

// NotificationPagerDutyPtrInput is an input type that accepts NotificationPagerDutyArgs, NotificationPagerDutyPtr and NotificationPagerDutyPtrOutput values.
// You can construct a concrete instance of `NotificationPagerDutyPtrInput` via:
//
//	        NotificationPagerDutyArgs{...}
//
//	or:
//
//	        nil
type NotificationPagerDutyPtrInput interface {
	pulumi.Input

	ToNotificationPagerDutyPtrOutput() NotificationPagerDutyPtrOutput
	ToNotificationPagerDutyPtrOutputWithContext(context.Context) NotificationPagerDutyPtrOutput
}

type notificationPagerDutyPtrType NotificationPagerDutyArgs

func NotificationPagerDutyPtr(v *NotificationPagerDutyArgs) NotificationPagerDutyPtrInput {
	return (*notificationPagerDutyPtrType)(v)
}

func (*notificationPagerDutyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationPagerDuty)(nil)).Elem()
}

func (i *notificationPagerDutyPtrType) ToNotificationPagerDutyPtrOutput() NotificationPagerDutyPtrOutput {
	return i.ToNotificationPagerDutyPtrOutputWithContext(context.Background())
}

func (i *notificationPagerDutyPtrType) ToNotificationPagerDutyPtrOutputWithContext(ctx context.Context) NotificationPagerDutyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPagerDutyPtrOutput)
}

type NotificationPagerDutyOutput struct{ *pulumi.OutputState }

func (NotificationPagerDutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPagerDuty)(nil)).Elem()
}

func (o NotificationPagerDutyOutput) ToNotificationPagerDutyOutput() NotificationPagerDutyOutput {
	return o
}

func (o NotificationPagerDutyOutput) ToNotificationPagerDutyOutputWithContext(ctx context.Context) NotificationPagerDutyOutput {
	return o
}

func (o NotificationPagerDutyOutput) ToNotificationPagerDutyPtrOutput() NotificationPagerDutyPtrOutput {
	return o.ToNotificationPagerDutyPtrOutputWithContext(context.Background())
}

func (o NotificationPagerDutyOutput) ToNotificationPagerDutyPtrOutputWithContext(ctx context.Context) NotificationPagerDutyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationPagerDuty) *NotificationPagerDuty {
		return &v
	}).(NotificationPagerDutyPtrOutput)
}

// The name of the PagerDuty account
func (o NotificationPagerDutyOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPagerDuty) string { return v.Account }).(pulumi.StringOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationPagerDutyOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPagerDuty) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationPagerDutyOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPagerDuty) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationPagerDutyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPagerDuty) string { return v.Name }).(pulumi.StringOutput)
}

// The API key to access PagerDuty
func (o NotificationPagerDutyOutput) ServiceApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPagerDuty) *string { return v.ServiceApiKey }).(pulumi.StringPtrOutput)
}

// The name of the service
func (o NotificationPagerDutyOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPagerDuty) string { return v.ServiceName }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationPagerDutyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPagerDuty) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type NotificationPagerDutyPtrOutput struct{ *pulumi.OutputState }

func (NotificationPagerDutyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationPagerDuty)(nil)).Elem()
}

func (o NotificationPagerDutyPtrOutput) ToNotificationPagerDutyPtrOutput() NotificationPagerDutyPtrOutput {
	return o
}

func (o NotificationPagerDutyPtrOutput) ToNotificationPagerDutyPtrOutputWithContext(ctx context.Context) NotificationPagerDutyPtrOutput {
	return o
}

func (o NotificationPagerDutyPtrOutput) Elem() NotificationPagerDutyOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) NotificationPagerDuty {
		if v != nil {
			return *v
		}
		var ret NotificationPagerDuty
		return ret
	}).(NotificationPagerDutyOutput)
}

// The name of the PagerDuty account
func (o NotificationPagerDutyPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationPagerDutyPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationPagerDutyPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationPagerDutyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The API key to access PagerDuty
func (o NotificationPagerDutyPtrOutput) ServiceApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *string {
		if v == nil {
			return nil
		}
		return v.ServiceApiKey
	}).(pulumi.StringPtrOutput)
}

// The name of the service
func (o NotificationPagerDutyPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationPagerDutyPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationPagerDuty) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type NotificationServiceNow struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them
	InstanceName *string `pulumi:"instanceName"`
	// The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Message string `pulumi:"message"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The username to the ServiceNow account
	Password *string `pulumi:"password"`
	// Send events into ServiceNow ITOM (`true`)
	SendEvents bool `pulumi:"sendEvents"`
	// Send incidents into ServiceNow ITSM (`true`)
	SendIncidents bool `pulumi:"sendIncidents"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them
	Url *string `pulumi:"url"`
	// The username of the ServiceNow account.   Make sure that your user account has the `restService`, `webRequestAdmin`, and `x_dynat_ruxit.Integration` roles
	Username string `pulumi:"username"`
}

// NotificationServiceNowInput is an input type that accepts NotificationServiceNowArgs and NotificationServiceNowOutput values.
// You can construct a concrete instance of `NotificationServiceNowInput` via:
//
//	NotificationServiceNowArgs{...}
type NotificationServiceNowInput interface {
	pulumi.Input

	ToNotificationServiceNowOutput() NotificationServiceNowOutput
	ToNotificationServiceNowOutputWithContext(context.Context) NotificationServiceNowOutput
}

type NotificationServiceNowArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The username to the ServiceNow account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Send events into ServiceNow ITOM (`true`)
	SendEvents pulumi.BoolInput `pulumi:"sendEvents"`
	// Send incidents into ServiceNow ITSM (`true`)
	SendIncidents pulumi.BoolInput `pulumi:"sendIncidents"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them
	Url pulumi.StringPtrInput `pulumi:"url"`
	// The username of the ServiceNow account.   Make sure that your user account has the `restService`, `webRequestAdmin`, and `x_dynat_ruxit.Integration` roles
	Username pulumi.StringInput `pulumi:"username"`
}

func (NotificationServiceNowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationServiceNow)(nil)).Elem()
}

func (i NotificationServiceNowArgs) ToNotificationServiceNowOutput() NotificationServiceNowOutput {
	return i.ToNotificationServiceNowOutputWithContext(context.Background())
}

func (i NotificationServiceNowArgs) ToNotificationServiceNowOutputWithContext(ctx context.Context) NotificationServiceNowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationServiceNowOutput)
}

func (i NotificationServiceNowArgs) ToNotificationServiceNowPtrOutput() NotificationServiceNowPtrOutput {
	return i.ToNotificationServiceNowPtrOutputWithContext(context.Background())
}

func (i NotificationServiceNowArgs) ToNotificationServiceNowPtrOutputWithContext(ctx context.Context) NotificationServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationServiceNowOutput).ToNotificationServiceNowPtrOutputWithContext(ctx)
}

// NotificationServiceNowPtrInput is an input type that accepts NotificationServiceNowArgs, NotificationServiceNowPtr and NotificationServiceNowPtrOutput values.
// You can construct a concrete instance of `NotificationServiceNowPtrInput` via:
//
//	        NotificationServiceNowArgs{...}
//
//	or:
//
//	        nil
type NotificationServiceNowPtrInput interface {
	pulumi.Input

	ToNotificationServiceNowPtrOutput() NotificationServiceNowPtrOutput
	ToNotificationServiceNowPtrOutputWithContext(context.Context) NotificationServiceNowPtrOutput
}

type notificationServiceNowPtrType NotificationServiceNowArgs

func NotificationServiceNowPtr(v *NotificationServiceNowArgs) NotificationServiceNowPtrInput {
	return (*notificationServiceNowPtrType)(v)
}

func (*notificationServiceNowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationServiceNow)(nil)).Elem()
}

func (i *notificationServiceNowPtrType) ToNotificationServiceNowPtrOutput() NotificationServiceNowPtrOutput {
	return i.ToNotificationServiceNowPtrOutputWithContext(context.Background())
}

func (i *notificationServiceNowPtrType) ToNotificationServiceNowPtrOutputWithContext(ctx context.Context) NotificationServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationServiceNowPtrOutput)
}

type NotificationServiceNowOutput struct{ *pulumi.OutputState }

func (NotificationServiceNowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationServiceNow)(nil)).Elem()
}

func (o NotificationServiceNowOutput) ToNotificationServiceNowOutput() NotificationServiceNowOutput {
	return o
}

func (o NotificationServiceNowOutput) ToNotificationServiceNowOutputWithContext(ctx context.Context) NotificationServiceNowOutput {
	return o
}

func (o NotificationServiceNowOutput) ToNotificationServiceNowPtrOutput() NotificationServiceNowPtrOutput {
	return o.ToNotificationServiceNowPtrOutputWithContext(context.Background())
}

func (o NotificationServiceNowOutput) ToNotificationServiceNowPtrOutputWithContext(ctx context.Context) NotificationServiceNowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationServiceNow) *NotificationServiceNow {
		return &v
	}).(NotificationServiceNowPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationServiceNowOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationServiceNow) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationServiceNowOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationServiceNow) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them
func (o NotificationServiceNowOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationServiceNow) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationServiceNowOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationServiceNow) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationServiceNowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationServiceNow) string { return v.Name }).(pulumi.StringOutput)
}

// The username to the ServiceNow account
func (o NotificationServiceNowOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationServiceNow) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Send events into ServiceNow ITOM (`true`)
func (o NotificationServiceNowOutput) SendEvents() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationServiceNow) bool { return v.SendEvents }).(pulumi.BoolOutput)
}

// Send incidents into ServiceNow ITSM (`true`)
func (o NotificationServiceNowOutput) SendIncidents() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationServiceNow) bool { return v.SendIncidents }).(pulumi.BoolOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationServiceNowOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationServiceNow) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them
func (o NotificationServiceNowOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationServiceNow) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// The username of the ServiceNow account.   Make sure that your user account has the `restService`, `webRequestAdmin`, and `x_dynat_ruxit.Integration` roles
func (o NotificationServiceNowOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationServiceNow) string { return v.Username }).(pulumi.StringOutput)
}

type NotificationServiceNowPtrOutput struct{ *pulumi.OutputState }

func (NotificationServiceNowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationServiceNow)(nil)).Elem()
}

func (o NotificationServiceNowPtrOutput) ToNotificationServiceNowPtrOutput() NotificationServiceNowPtrOutput {
	return o
}

func (o NotificationServiceNowPtrOutput) ToNotificationServiceNowPtrOutputWithContext(ctx context.Context) NotificationServiceNowPtrOutput {
	return o
}

func (o NotificationServiceNowPtrOutput) Elem() NotificationServiceNowOutput {
	return o.ApplyT(func(v *NotificationServiceNow) NotificationServiceNow {
		if v != nil {
			return *v
		}
		var ret NotificationServiceNow
		return ret
	}).(NotificationServiceNowOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationServiceNowPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationServiceNowPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them
func (o NotificationServiceNowPtrOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return v.InstanceName
	}).(pulumi.StringPtrOutput)
}

// The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationServiceNowPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationServiceNowPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The username to the ServiceNow account
func (o NotificationServiceNowPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Send events into ServiceNow ITOM (`true`)
func (o NotificationServiceNowPtrOutput) SendEvents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *bool {
		if v == nil {
			return nil
		}
		return &v.SendEvents
	}).(pulumi.BoolPtrOutput)
}

// Send incidents into ServiceNow ITSM (`true`)
func (o NotificationServiceNowPtrOutput) SendIncidents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *bool {
		if v == nil {
			return nil
		}
		return &v.SendIncidents
	}).(pulumi.BoolPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationServiceNowPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them
func (o NotificationServiceNowPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The username of the ServiceNow account.   Make sure that your user account has the `restService`, `webRequestAdmin`, and `x_dynat_ruxit.Integration` roles
func (o NotificationServiceNowPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type NotificationSlack struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to
	Channel string `pulumi:"channel"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Title string `pulumi:"title"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
	Url *string `pulumi:"url"`
}

// NotificationSlackInput is an input type that accepts NotificationSlackArgs and NotificationSlackOutput values.
// You can construct a concrete instance of `NotificationSlackInput` via:
//
//	NotificationSlackArgs{...}
type NotificationSlackInput interface {
	pulumi.Input

	ToNotificationSlackOutput() NotificationSlackOutput
	ToNotificationSlackOutputWithContext(context.Context) NotificationSlackOutput
}

type NotificationSlackArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to
	Channel pulumi.StringInput `pulumi:"channel"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Title pulumi.StringInput `pulumi:"title"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (NotificationSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSlack)(nil)).Elem()
}

func (i NotificationSlackArgs) ToNotificationSlackOutput() NotificationSlackOutput {
	return i.ToNotificationSlackOutputWithContext(context.Background())
}

func (i NotificationSlackArgs) ToNotificationSlackOutputWithContext(ctx context.Context) NotificationSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSlackOutput)
}

func (i NotificationSlackArgs) ToNotificationSlackPtrOutput() NotificationSlackPtrOutput {
	return i.ToNotificationSlackPtrOutputWithContext(context.Background())
}

func (i NotificationSlackArgs) ToNotificationSlackPtrOutputWithContext(ctx context.Context) NotificationSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSlackOutput).ToNotificationSlackPtrOutputWithContext(ctx)
}

// NotificationSlackPtrInput is an input type that accepts NotificationSlackArgs, NotificationSlackPtr and NotificationSlackPtrOutput values.
// You can construct a concrete instance of `NotificationSlackPtrInput` via:
//
//	        NotificationSlackArgs{...}
//
//	or:
//
//	        nil
type NotificationSlackPtrInput interface {
	pulumi.Input

	ToNotificationSlackPtrOutput() NotificationSlackPtrOutput
	ToNotificationSlackPtrOutputWithContext(context.Context) NotificationSlackPtrOutput
}

type notificationSlackPtrType NotificationSlackArgs

func NotificationSlackPtr(v *NotificationSlackArgs) NotificationSlackPtrInput {
	return (*notificationSlackPtrType)(v)
}

func (*notificationSlackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSlack)(nil)).Elem()
}

func (i *notificationSlackPtrType) ToNotificationSlackPtrOutput() NotificationSlackPtrOutput {
	return i.ToNotificationSlackPtrOutputWithContext(context.Background())
}

func (i *notificationSlackPtrType) ToNotificationSlackPtrOutputWithContext(ctx context.Context) NotificationSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSlackPtrOutput)
}

type NotificationSlackOutput struct{ *pulumi.OutputState }

func (NotificationSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSlack)(nil)).Elem()
}

func (o NotificationSlackOutput) ToNotificationSlackOutput() NotificationSlackOutput {
	return o
}

func (o NotificationSlackOutput) ToNotificationSlackOutputWithContext(ctx context.Context) NotificationSlackOutput {
	return o
}

func (o NotificationSlackOutput) ToNotificationSlackPtrOutput() NotificationSlackPtrOutput {
	return o.ToNotificationSlackPtrOutputWithContext(context.Background())
}

func (o NotificationSlackOutput) ToNotificationSlackPtrOutputWithContext(ctx context.Context) NotificationSlackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationSlack) *NotificationSlack {
		return &v
	}).(NotificationSlackPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationSlackOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationSlack) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationSlackOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationSlack) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to
func (o NotificationSlackOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationSlack) string { return v.Channel }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationSlackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationSlack) string { return v.Name }).(pulumi.StringOutput)
}

// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationSlackOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationSlack) string { return v.Title }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationSlackOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSlack) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
func (o NotificationSlackOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSlack) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type NotificationSlackPtrOutput struct{ *pulumi.OutputState }

func (NotificationSlackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSlack)(nil)).Elem()
}

func (o NotificationSlackPtrOutput) ToNotificationSlackPtrOutput() NotificationSlackPtrOutput {
	return o
}

func (o NotificationSlackPtrOutput) ToNotificationSlackPtrOutputWithContext(ctx context.Context) NotificationSlackPtrOutput {
	return o
}

func (o NotificationSlackPtrOutput) Elem() NotificationSlackOutput {
	return o.ApplyT(func(v *NotificationSlack) NotificationSlack {
		if v != nil {
			return *v
		}
		var ret NotificationSlack
		return ret
	}).(NotificationSlackOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationSlackPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationSlackPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to
func (o NotificationSlackPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *string {
		if v == nil {
			return nil
		}
		return &v.Channel
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationSlackPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationSlackPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationSlackPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
func (o NotificationSlackPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSlack) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type NotificationTrello struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The application key for the Trello account
	ApplicationKey string `pulumi:"applicationKey"`
	// The application token for the Trello account
	AuthorizationToken *string `pulumi:"authorizationToken"`
	// The Trello board to which the card should be assigned
	BoardId string `pulumi:"boardId"`
	// The description of the Trello card.   You can use same placeholders as in card text
	Description string `pulumi:"description"`
	// The Trello list to which the card should be assigned
	ListId string `pulumi:"listId"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The Trello list to which the card of the resolved problem should be assigned
	ResolvedListId string `pulumi:"resolvedListId"`
	// The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Text string `pulumi:"text"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// NotificationTrelloInput is an input type that accepts NotificationTrelloArgs and NotificationTrelloOutput values.
// You can construct a concrete instance of `NotificationTrelloInput` via:
//
//	NotificationTrelloArgs{...}
type NotificationTrelloInput interface {
	pulumi.Input

	ToNotificationTrelloOutput() NotificationTrelloOutput
	ToNotificationTrelloOutputWithContext(context.Context) NotificationTrelloOutput
}

type NotificationTrelloArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The application key for the Trello account
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
	// The application token for the Trello account
	AuthorizationToken pulumi.StringPtrInput `pulumi:"authorizationToken"`
	// The Trello board to which the card should be assigned
	BoardId pulumi.StringInput `pulumi:"boardId"`
	// The description of the Trello card.   You can use same placeholders as in card text
	Description pulumi.StringInput `pulumi:"description"`
	// The Trello list to which the card should be assigned
	ListId pulumi.StringInput `pulumi:"listId"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The Trello list to which the card of the resolved problem should be assigned
	ResolvedListId pulumi.StringInput `pulumi:"resolvedListId"`
	// The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Text pulumi.StringInput `pulumi:"text"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (NotificationTrelloArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationTrello)(nil)).Elem()
}

func (i NotificationTrelloArgs) ToNotificationTrelloOutput() NotificationTrelloOutput {
	return i.ToNotificationTrelloOutputWithContext(context.Background())
}

func (i NotificationTrelloArgs) ToNotificationTrelloOutputWithContext(ctx context.Context) NotificationTrelloOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationTrelloOutput)
}

func (i NotificationTrelloArgs) ToNotificationTrelloPtrOutput() NotificationTrelloPtrOutput {
	return i.ToNotificationTrelloPtrOutputWithContext(context.Background())
}

func (i NotificationTrelloArgs) ToNotificationTrelloPtrOutputWithContext(ctx context.Context) NotificationTrelloPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationTrelloOutput).ToNotificationTrelloPtrOutputWithContext(ctx)
}

// NotificationTrelloPtrInput is an input type that accepts NotificationTrelloArgs, NotificationTrelloPtr and NotificationTrelloPtrOutput values.
// You can construct a concrete instance of `NotificationTrelloPtrInput` via:
//
//	        NotificationTrelloArgs{...}
//
//	or:
//
//	        nil
type NotificationTrelloPtrInput interface {
	pulumi.Input

	ToNotificationTrelloPtrOutput() NotificationTrelloPtrOutput
	ToNotificationTrelloPtrOutputWithContext(context.Context) NotificationTrelloPtrOutput
}

type notificationTrelloPtrType NotificationTrelloArgs

func NotificationTrelloPtr(v *NotificationTrelloArgs) NotificationTrelloPtrInput {
	return (*notificationTrelloPtrType)(v)
}

func (*notificationTrelloPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationTrello)(nil)).Elem()
}

func (i *notificationTrelloPtrType) ToNotificationTrelloPtrOutput() NotificationTrelloPtrOutput {
	return i.ToNotificationTrelloPtrOutputWithContext(context.Background())
}

func (i *notificationTrelloPtrType) ToNotificationTrelloPtrOutputWithContext(ctx context.Context) NotificationTrelloPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationTrelloPtrOutput)
}

type NotificationTrelloOutput struct{ *pulumi.OutputState }

func (NotificationTrelloOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationTrello)(nil)).Elem()
}

func (o NotificationTrelloOutput) ToNotificationTrelloOutput() NotificationTrelloOutput {
	return o
}

func (o NotificationTrelloOutput) ToNotificationTrelloOutputWithContext(ctx context.Context) NotificationTrelloOutput {
	return o
}

func (o NotificationTrelloOutput) ToNotificationTrelloPtrOutput() NotificationTrelloPtrOutput {
	return o.ToNotificationTrelloPtrOutputWithContext(context.Background())
}

func (o NotificationTrelloOutput) ToNotificationTrelloPtrOutputWithContext(ctx context.Context) NotificationTrelloPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationTrello) *NotificationTrello {
		return &v
	}).(NotificationTrelloPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationTrelloOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationTrello) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationTrelloOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The application key for the Trello account
func (o NotificationTrelloOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

// The application token for the Trello account
func (o NotificationTrelloOutput) AuthorizationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationTrello) *string { return v.AuthorizationToken }).(pulumi.StringPtrOutput)
}

// The Trello board to which the card should be assigned
func (o NotificationTrelloOutput) BoardId() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.BoardId }).(pulumi.StringOutput)
}

// The description of the Trello card.   You can use same placeholders as in card text
func (o NotificationTrelloOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.Description }).(pulumi.StringOutput)
}

// The Trello list to which the card should be assigned
func (o NotificationTrelloOutput) ListId() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.ListId }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationTrelloOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.Name }).(pulumi.StringOutput)
}

// The Trello list to which the card of the resolved problem should be assigned
func (o NotificationTrelloOutput) ResolvedListId() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.ResolvedListId }).(pulumi.StringOutput)
}

// The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationTrelloOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationTrello) string { return v.Text }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationTrelloOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationTrello) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type NotificationTrelloPtrOutput struct{ *pulumi.OutputState }

func (NotificationTrelloPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationTrello)(nil)).Elem()
}

func (o NotificationTrelloPtrOutput) ToNotificationTrelloPtrOutput() NotificationTrelloPtrOutput {
	return o
}

func (o NotificationTrelloPtrOutput) ToNotificationTrelloPtrOutputWithContext(ctx context.Context) NotificationTrelloPtrOutput {
	return o
}

func (o NotificationTrelloPtrOutput) Elem() NotificationTrelloOutput {
	return o.ApplyT(func(v *NotificationTrello) NotificationTrello {
		if v != nil {
			return *v
		}
		var ret NotificationTrello
		return ret
	}).(NotificationTrelloOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationTrelloPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationTrelloPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The application key for the Trello account
func (o NotificationTrelloPtrOutput) ApplicationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationKey
	}).(pulumi.StringPtrOutput)
}

// The application token for the Trello account
func (o NotificationTrelloPtrOutput) AuthorizationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationToken
	}).(pulumi.StringPtrOutput)
}

// The Trello board to which the card should be assigned
func (o NotificationTrelloPtrOutput) BoardId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.BoardId
	}).(pulumi.StringPtrOutput)
}

// The description of the Trello card.   You can use same placeholders as in card text
func (o NotificationTrelloPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The Trello list to which the card should be assigned
func (o NotificationTrelloPtrOutput) ListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.ListId
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationTrelloPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Trello list to which the card of the resolved problem should be assigned
func (o NotificationTrelloPtrOutput) ResolvedListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.ResolvedListId
	}).(pulumi.StringPtrOutput)
}

// The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationTrelloPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationTrelloPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationTrello) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type NotificationVictorOps struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// The API key for the target VictorOps account
	ApiKey *string `pulumi:"apiKey"`
	// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`
	Message string `pulumi:"message"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The routing key, defining the group to be notified
	RoutingKey string `pulumi:"routingKey"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// NotificationVictorOpsInput is an input type that accepts NotificationVictorOpsArgs and NotificationVictorOpsOutput values.
// You can construct a concrete instance of `NotificationVictorOpsInput` via:
//
//	NotificationVictorOpsArgs{...}
type NotificationVictorOpsInput interface {
	pulumi.Input

	ToNotificationVictorOpsOutput() NotificationVictorOpsOutput
	ToNotificationVictorOpsOutputWithContext(context.Context) NotificationVictorOpsOutput
}

type NotificationVictorOpsArgs struct {
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// The API key for the target VictorOps account
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The routing key, defining the group to be notified
	RoutingKey pulumi.StringInput `pulumi:"routingKey"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (NotificationVictorOpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationVictorOps)(nil)).Elem()
}

func (i NotificationVictorOpsArgs) ToNotificationVictorOpsOutput() NotificationVictorOpsOutput {
	return i.ToNotificationVictorOpsOutputWithContext(context.Background())
}

func (i NotificationVictorOpsArgs) ToNotificationVictorOpsOutputWithContext(ctx context.Context) NotificationVictorOpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationVictorOpsOutput)
}

func (i NotificationVictorOpsArgs) ToNotificationVictorOpsPtrOutput() NotificationVictorOpsPtrOutput {
	return i.ToNotificationVictorOpsPtrOutputWithContext(context.Background())
}

func (i NotificationVictorOpsArgs) ToNotificationVictorOpsPtrOutputWithContext(ctx context.Context) NotificationVictorOpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationVictorOpsOutput).ToNotificationVictorOpsPtrOutputWithContext(ctx)
}

// NotificationVictorOpsPtrInput is an input type that accepts NotificationVictorOpsArgs, NotificationVictorOpsPtr and NotificationVictorOpsPtrOutput values.
// You can construct a concrete instance of `NotificationVictorOpsPtrInput` via:
//
//	        NotificationVictorOpsArgs{...}
//
//	or:
//
//	        nil
type NotificationVictorOpsPtrInput interface {
	pulumi.Input

	ToNotificationVictorOpsPtrOutput() NotificationVictorOpsPtrOutput
	ToNotificationVictorOpsPtrOutputWithContext(context.Context) NotificationVictorOpsPtrOutput
}

type notificationVictorOpsPtrType NotificationVictorOpsArgs

func NotificationVictorOpsPtr(v *NotificationVictorOpsArgs) NotificationVictorOpsPtrInput {
	return (*notificationVictorOpsPtrType)(v)
}

func (*notificationVictorOpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationVictorOps)(nil)).Elem()
}

func (i *notificationVictorOpsPtrType) ToNotificationVictorOpsPtrOutput() NotificationVictorOpsPtrOutput {
	return i.ToNotificationVictorOpsPtrOutputWithContext(context.Background())
}

func (i *notificationVictorOpsPtrType) ToNotificationVictorOpsPtrOutputWithContext(ctx context.Context) NotificationVictorOpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationVictorOpsPtrOutput)
}

type NotificationVictorOpsOutput struct{ *pulumi.OutputState }

func (NotificationVictorOpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationVictorOps)(nil)).Elem()
}

func (o NotificationVictorOpsOutput) ToNotificationVictorOpsOutput() NotificationVictorOpsOutput {
	return o
}

func (o NotificationVictorOpsOutput) ToNotificationVictorOpsOutputWithContext(ctx context.Context) NotificationVictorOpsOutput {
	return o
}

func (o NotificationVictorOpsOutput) ToNotificationVictorOpsPtrOutput() NotificationVictorOpsPtrOutput {
	return o.ToNotificationVictorOpsPtrOutputWithContext(context.Background())
}

func (o NotificationVictorOpsOutput) ToNotificationVictorOpsPtrOutputWithContext(ctx context.Context) NotificationVictorOpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationVictorOps) *NotificationVictorOps {
		return &v
	}).(NotificationVictorOpsPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationVictorOpsOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationVictorOps) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationVictorOpsOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationVictorOps) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// The API key for the target VictorOps account
func (o NotificationVictorOpsOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationVictorOps) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`
func (o NotificationVictorOpsOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationVictorOps) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the notification configuration
func (o NotificationVictorOpsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationVictorOps) string { return v.Name }).(pulumi.StringOutput)
}

// The routing key, defining the group to be notified
func (o NotificationVictorOpsOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationVictorOps) string { return v.RoutingKey }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationVictorOpsOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationVictorOps) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type NotificationVictorOpsPtrOutput struct{ *pulumi.OutputState }

func (NotificationVictorOpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationVictorOps)(nil)).Elem()
}

func (o NotificationVictorOpsPtrOutput) ToNotificationVictorOpsPtrOutput() NotificationVictorOpsPtrOutput {
	return o
}

func (o NotificationVictorOpsPtrOutput) ToNotificationVictorOpsPtrOutputWithContext(ctx context.Context) NotificationVictorOpsPtrOutput {
	return o
}

func (o NotificationVictorOpsPtrOutput) Elem() NotificationVictorOpsOutput {
	return o.ApplyT(func(v *NotificationVictorOps) NotificationVictorOps {
		if v != nil {
			return *v
		}
		var ret NotificationVictorOps
		return ret
	}).(NotificationVictorOpsOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationVictorOpsPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationVictorOpsPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// The API key for the target VictorOps account
func (o NotificationVictorOpsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`
func (o NotificationVictorOpsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The name of the notification configuration
func (o NotificationVictorOpsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The routing key, defining the group to be notified
func (o NotificationVictorOpsPtrOutput) RoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *string {
		if v == nil {
			return nil
		}
		return &v.RoutingKey
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationVictorOpsPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationVictorOps) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type NotificationWebHook struct {
	// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
	AcceptAnyCertificate bool `pulumi:"acceptAnyCertificate"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// A list of the additional HTTP headers
	Headers []NotificationWebHookHeader `pulumi:"headers"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// Call webhook if new events merge into existing problems
	NotifyEventMerges *bool `pulumi:"notifyEventMerges"`
	// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Payload string `pulumi:"payload"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The URL of the WebHook endpoint
	Url string `pulumi:"url"`
}

// NotificationWebHookInput is an input type that accepts NotificationWebHookArgs and NotificationWebHookOutput values.
// You can construct a concrete instance of `NotificationWebHookInput` via:
//
//	NotificationWebHookArgs{...}
type NotificationWebHookInput interface {
	pulumi.Input

	ToNotificationWebHookOutput() NotificationWebHookOutput
	ToNotificationWebHookOutputWithContext(context.Context) NotificationWebHookOutput
}

type NotificationWebHookArgs struct {
	// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
	AcceptAnyCertificate pulumi.BoolInput `pulumi:"acceptAnyCertificate"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// A list of the additional HTTP headers
	Headers NotificationWebHookHeaderArrayInput `pulumi:"headers"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// Call webhook if new events merge into existing problems
	NotifyEventMerges pulumi.BoolPtrInput `pulumi:"notifyEventMerges"`
	// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Payload pulumi.StringInput `pulumi:"payload"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The URL of the WebHook endpoint
	Url pulumi.StringInput `pulumi:"url"`
}

func (NotificationWebHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationWebHook)(nil)).Elem()
}

func (i NotificationWebHookArgs) ToNotificationWebHookOutput() NotificationWebHookOutput {
	return i.ToNotificationWebHookOutputWithContext(context.Background())
}

func (i NotificationWebHookArgs) ToNotificationWebHookOutputWithContext(ctx context.Context) NotificationWebHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationWebHookOutput)
}

func (i NotificationWebHookArgs) ToNotificationWebHookPtrOutput() NotificationWebHookPtrOutput {
	return i.ToNotificationWebHookPtrOutputWithContext(context.Background())
}

func (i NotificationWebHookArgs) ToNotificationWebHookPtrOutputWithContext(ctx context.Context) NotificationWebHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationWebHookOutput).ToNotificationWebHookPtrOutputWithContext(ctx)
}

// NotificationWebHookPtrInput is an input type that accepts NotificationWebHookArgs, NotificationWebHookPtr and NotificationWebHookPtrOutput values.
// You can construct a concrete instance of `NotificationWebHookPtrInput` via:
//
//	        NotificationWebHookArgs{...}
//
//	or:
//
//	        nil
type NotificationWebHookPtrInput interface {
	pulumi.Input

	ToNotificationWebHookPtrOutput() NotificationWebHookPtrOutput
	ToNotificationWebHookPtrOutputWithContext(context.Context) NotificationWebHookPtrOutput
}

type notificationWebHookPtrType NotificationWebHookArgs

func NotificationWebHookPtr(v *NotificationWebHookArgs) NotificationWebHookPtrInput {
	return (*notificationWebHookPtrType)(v)
}

func (*notificationWebHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationWebHook)(nil)).Elem()
}

func (i *notificationWebHookPtrType) ToNotificationWebHookPtrOutput() NotificationWebHookPtrOutput {
	return i.ToNotificationWebHookPtrOutputWithContext(context.Background())
}

func (i *notificationWebHookPtrType) ToNotificationWebHookPtrOutputWithContext(ctx context.Context) NotificationWebHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationWebHookPtrOutput)
}

type NotificationWebHookOutput struct{ *pulumi.OutputState }

func (NotificationWebHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationWebHook)(nil)).Elem()
}

func (o NotificationWebHookOutput) ToNotificationWebHookOutput() NotificationWebHookOutput {
	return o
}

func (o NotificationWebHookOutput) ToNotificationWebHookOutputWithContext(ctx context.Context) NotificationWebHookOutput {
	return o
}

func (o NotificationWebHookOutput) ToNotificationWebHookPtrOutput() NotificationWebHookPtrOutput {
	return o.ToNotificationWebHookPtrOutputWithContext(context.Background())
}

func (o NotificationWebHookOutput) ToNotificationWebHookPtrOutputWithContext(ctx context.Context) NotificationWebHookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationWebHook) *NotificationWebHook {
		return &v
	}).(NotificationWebHookPtrOutput)
}

// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
func (o NotificationWebHookOutput) AcceptAnyCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationWebHook) bool { return v.AcceptAnyCertificate }).(pulumi.BoolOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationWebHookOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationWebHook) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationWebHookOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationWebHook) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// A list of the additional HTTP headers
func (o NotificationWebHookOutput) Headers() NotificationWebHookHeaderArrayOutput {
	return o.ApplyT(func(v NotificationWebHook) []NotificationWebHookHeader { return v.Headers }).(NotificationWebHookHeaderArrayOutput)
}

// The name of the notification configuration
func (o NotificationWebHookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationWebHook) string { return v.Name }).(pulumi.StringOutput)
}

// Call webhook if new events merge into existing problems
func (o NotificationWebHookOutput) NotifyEventMerges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NotificationWebHook) *bool { return v.NotifyEventMerges }).(pulumi.BoolPtrOutput)
}

// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationWebHookOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationWebHook) string { return v.Payload }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationWebHookOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationWebHook) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The URL of the WebHook endpoint
func (o NotificationWebHookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationWebHook) string { return v.Url }).(pulumi.StringOutput)
}

type NotificationWebHookPtrOutput struct{ *pulumi.OutputState }

func (NotificationWebHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationWebHook)(nil)).Elem()
}

func (o NotificationWebHookPtrOutput) ToNotificationWebHookPtrOutput() NotificationWebHookPtrOutput {
	return o
}

func (o NotificationWebHookPtrOutput) ToNotificationWebHookPtrOutputWithContext(ctx context.Context) NotificationWebHookPtrOutput {
	return o
}

func (o NotificationWebHookPtrOutput) Elem() NotificationWebHookOutput {
	return o.ApplyT(func(v *NotificationWebHook) NotificationWebHook {
		if v != nil {
			return *v
		}
		var ret NotificationWebHook
		return ret
	}).(NotificationWebHookOutput)
}

// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
func (o NotificationWebHookPtrOutput) AcceptAnyCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *bool {
		if v == nil {
			return nil
		}
		return &v.AcceptAnyCertificate
	}).(pulumi.BoolPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationWebHookPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationWebHookPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// A list of the additional HTTP headers
func (o NotificationWebHookPtrOutput) Headers() NotificationWebHookHeaderArrayOutput {
	return o.ApplyT(func(v *NotificationWebHook) []NotificationWebHookHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(NotificationWebHookHeaderArrayOutput)
}

// The name of the notification configuration
func (o NotificationWebHookPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Call webhook if new events merge into existing problems
func (o NotificationWebHookPtrOutput) NotifyEventMerges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *bool {
		if v == nil {
			return nil
		}
		return v.NotifyEventMerges
	}).(pulumi.BoolPtrOutput)
}

// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationWebHookPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationWebHookPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The URL of the WebHook endpoint
func (o NotificationWebHookPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationWebHook) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type NotificationWebHookHeader struct {
	Name  string  `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NotificationWebHookHeaderInput is an input type that accepts NotificationWebHookHeaderArgs and NotificationWebHookHeaderOutput values.
// You can construct a concrete instance of `NotificationWebHookHeaderInput` via:
//
//	NotificationWebHookHeaderArgs{...}
type NotificationWebHookHeaderInput interface {
	pulumi.Input

	ToNotificationWebHookHeaderOutput() NotificationWebHookHeaderOutput
	ToNotificationWebHookHeaderOutputWithContext(context.Context) NotificationWebHookHeaderOutput
}

type NotificationWebHookHeaderArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NotificationWebHookHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationWebHookHeader)(nil)).Elem()
}

func (i NotificationWebHookHeaderArgs) ToNotificationWebHookHeaderOutput() NotificationWebHookHeaderOutput {
	return i.ToNotificationWebHookHeaderOutputWithContext(context.Background())
}

func (i NotificationWebHookHeaderArgs) ToNotificationWebHookHeaderOutputWithContext(ctx context.Context) NotificationWebHookHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationWebHookHeaderOutput)
}

// NotificationWebHookHeaderArrayInput is an input type that accepts NotificationWebHookHeaderArray and NotificationWebHookHeaderArrayOutput values.
// You can construct a concrete instance of `NotificationWebHookHeaderArrayInput` via:
//
//	NotificationWebHookHeaderArray{ NotificationWebHookHeaderArgs{...} }
type NotificationWebHookHeaderArrayInput interface {
	pulumi.Input

	ToNotificationWebHookHeaderArrayOutput() NotificationWebHookHeaderArrayOutput
	ToNotificationWebHookHeaderArrayOutputWithContext(context.Context) NotificationWebHookHeaderArrayOutput
}

type NotificationWebHookHeaderArray []NotificationWebHookHeaderInput

func (NotificationWebHookHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationWebHookHeader)(nil)).Elem()
}

func (i NotificationWebHookHeaderArray) ToNotificationWebHookHeaderArrayOutput() NotificationWebHookHeaderArrayOutput {
	return i.ToNotificationWebHookHeaderArrayOutputWithContext(context.Background())
}

func (i NotificationWebHookHeaderArray) ToNotificationWebHookHeaderArrayOutputWithContext(ctx context.Context) NotificationWebHookHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationWebHookHeaderArrayOutput)
}

type NotificationWebHookHeaderOutput struct{ *pulumi.OutputState }

func (NotificationWebHookHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationWebHookHeader)(nil)).Elem()
}

func (o NotificationWebHookHeaderOutput) ToNotificationWebHookHeaderOutput() NotificationWebHookHeaderOutput {
	return o
}

func (o NotificationWebHookHeaderOutput) ToNotificationWebHookHeaderOutputWithContext(ctx context.Context) NotificationWebHookHeaderOutput {
	return o
}

func (o NotificationWebHookHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationWebHookHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o NotificationWebHookHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationWebHookHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NotificationWebHookHeaderArrayOutput struct{ *pulumi.OutputState }

func (NotificationWebHookHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationWebHookHeader)(nil)).Elem()
}

func (o NotificationWebHookHeaderArrayOutput) ToNotificationWebHookHeaderArrayOutput() NotificationWebHookHeaderArrayOutput {
	return o
}

func (o NotificationWebHookHeaderArrayOutput) ToNotificationWebHookHeaderArrayOutputWithContext(ctx context.Context) NotificationWebHookHeaderArrayOutput {
	return o
}

func (o NotificationWebHookHeaderArrayOutput) Index(i pulumi.IntInput) NotificationWebHookHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationWebHookHeader {
		return vs[0].([]NotificationWebHookHeader)[vs[1].(int)]
	}).(NotificationWebHookHeaderOutput)
}

type NotificationXmatters struct {
	// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
	AcceptAnyCertificate bool `pulumi:"acceptAnyCertificate"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active bool `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile string `pulumi:"alertingProfile"`
	// A list of the additional HTTP headers
	Headers []NotificationXmattersHeader `pulumi:"headers"`
	// The name of the notification configuration
	Name string `pulumi:"name"`
	// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Payload string `pulumi:"payload"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	// The URL of the xMatters WebHook
	Url string `pulumi:"url"`
}

// NotificationXmattersInput is an input type that accepts NotificationXmattersArgs and NotificationXmattersOutput values.
// You can construct a concrete instance of `NotificationXmattersInput` via:
//
//	NotificationXmattersArgs{...}
type NotificationXmattersInput interface {
	pulumi.Input

	ToNotificationXmattersOutput() NotificationXmattersOutput
	ToNotificationXmattersOutputWithContext(context.Context) NotificationXmattersOutput
}

type NotificationXmattersArgs struct {
	// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
	AcceptAnyCertificate pulumi.BoolInput `pulumi:"acceptAnyCertificate"`
	// The configuration is enabled (`true`) or disabled (`false`)
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the associated alerting profile
	AlertingProfile pulumi.StringInput `pulumi:"alertingProfile"`
	// A list of the additional HTTP headers
	Headers NotificationXmattersHeaderArrayInput `pulumi:"headers"`
	// The name of the notification configuration
	Name pulumi.StringInput `pulumi:"name"`
	// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
	Payload pulumi.StringInput `pulumi:"payload"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The URL of the xMatters WebHook
	Url pulumi.StringInput `pulumi:"url"`
}

func (NotificationXmattersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationXmatters)(nil)).Elem()
}

func (i NotificationXmattersArgs) ToNotificationXmattersOutput() NotificationXmattersOutput {
	return i.ToNotificationXmattersOutputWithContext(context.Background())
}

func (i NotificationXmattersArgs) ToNotificationXmattersOutputWithContext(ctx context.Context) NotificationXmattersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationXmattersOutput)
}

func (i NotificationXmattersArgs) ToNotificationXmattersPtrOutput() NotificationXmattersPtrOutput {
	return i.ToNotificationXmattersPtrOutputWithContext(context.Background())
}

func (i NotificationXmattersArgs) ToNotificationXmattersPtrOutputWithContext(ctx context.Context) NotificationXmattersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationXmattersOutput).ToNotificationXmattersPtrOutputWithContext(ctx)
}

// NotificationXmattersPtrInput is an input type that accepts NotificationXmattersArgs, NotificationXmattersPtr and NotificationXmattersPtrOutput values.
// You can construct a concrete instance of `NotificationXmattersPtrInput` via:
//
//	        NotificationXmattersArgs{...}
//
//	or:
//
//	        nil
type NotificationXmattersPtrInput interface {
	pulumi.Input

	ToNotificationXmattersPtrOutput() NotificationXmattersPtrOutput
	ToNotificationXmattersPtrOutputWithContext(context.Context) NotificationXmattersPtrOutput
}

type notificationXmattersPtrType NotificationXmattersArgs

func NotificationXmattersPtr(v *NotificationXmattersArgs) NotificationXmattersPtrInput {
	return (*notificationXmattersPtrType)(v)
}

func (*notificationXmattersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationXmatters)(nil)).Elem()
}

func (i *notificationXmattersPtrType) ToNotificationXmattersPtrOutput() NotificationXmattersPtrOutput {
	return i.ToNotificationXmattersPtrOutputWithContext(context.Background())
}

func (i *notificationXmattersPtrType) ToNotificationXmattersPtrOutputWithContext(ctx context.Context) NotificationXmattersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationXmattersPtrOutput)
}

type NotificationXmattersOutput struct{ *pulumi.OutputState }

func (NotificationXmattersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationXmatters)(nil)).Elem()
}

func (o NotificationXmattersOutput) ToNotificationXmattersOutput() NotificationXmattersOutput {
	return o
}

func (o NotificationXmattersOutput) ToNotificationXmattersOutputWithContext(ctx context.Context) NotificationXmattersOutput {
	return o
}

func (o NotificationXmattersOutput) ToNotificationXmattersPtrOutput() NotificationXmattersPtrOutput {
	return o.ToNotificationXmattersPtrOutputWithContext(context.Background())
}

func (o NotificationXmattersOutput) ToNotificationXmattersPtrOutputWithContext(ctx context.Context) NotificationXmattersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationXmatters) *NotificationXmatters {
		return &v
	}).(NotificationXmattersPtrOutput)
}

// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
func (o NotificationXmattersOutput) AcceptAnyCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationXmatters) bool { return v.AcceptAnyCertificate }).(pulumi.BoolOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationXmattersOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationXmatters) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the associated alerting profile
func (o NotificationXmattersOutput) AlertingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationXmatters) string { return v.AlertingProfile }).(pulumi.StringOutput)
}

// A list of the additional HTTP headers
func (o NotificationXmattersOutput) Headers() NotificationXmattersHeaderArrayOutput {
	return o.ApplyT(func(v NotificationXmatters) []NotificationXmattersHeader { return v.Headers }).(NotificationXmattersHeaderArrayOutput)
}

// The name of the notification configuration
func (o NotificationXmattersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationXmatters) string { return v.Name }).(pulumi.StringOutput)
}

// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationXmattersOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationXmatters) string { return v.Payload }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationXmattersOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationXmatters) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The URL of the xMatters WebHook
func (o NotificationXmattersOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationXmatters) string { return v.Url }).(pulumi.StringOutput)
}

type NotificationXmattersPtrOutput struct{ *pulumi.OutputState }

func (NotificationXmattersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationXmatters)(nil)).Elem()
}

func (o NotificationXmattersPtrOutput) ToNotificationXmattersPtrOutput() NotificationXmattersPtrOutput {
	return o
}

func (o NotificationXmattersPtrOutput) ToNotificationXmattersPtrOutputWithContext(ctx context.Context) NotificationXmattersPtrOutput {
	return o
}

func (o NotificationXmattersPtrOutput) Elem() NotificationXmattersOutput {
	return o.ApplyT(func(v *NotificationXmatters) NotificationXmatters {
		if v != nil {
			return *v
		}
		var ret NotificationXmatters
		return ret
	}).(NotificationXmattersOutput)
}

// Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
func (o NotificationXmattersPtrOutput) AcceptAnyCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *bool {
		if v == nil {
			return nil
		}
		return &v.AcceptAnyCertificate
	}).(pulumi.BoolPtrOutput)
}

// The configuration is enabled (`true`) or disabled (`false`)
func (o NotificationXmattersPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *bool {
		if v == nil {
			return nil
		}
		return &v.Active
	}).(pulumi.BoolPtrOutput)
}

// The ID of the associated alerting profile
func (o NotificationXmattersPtrOutput) AlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *string {
		if v == nil {
			return nil
		}
		return &v.AlertingProfile
	}).(pulumi.StringPtrOutput)
}

// A list of the additional HTTP headers
func (o NotificationXmattersPtrOutput) Headers() NotificationXmattersHeaderArrayOutput {
	return o.ApplyT(func(v *NotificationXmatters) []NotificationXmattersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(NotificationXmattersHeaderArrayOutput)
}

// The name of the notification configuration
func (o NotificationXmattersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
func (o NotificationXmattersPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o NotificationXmattersPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The URL of the xMatters WebHook
func (o NotificationXmattersPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationXmatters) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type NotificationXmattersHeader struct {
	Name  string  `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NotificationXmattersHeaderInput is an input type that accepts NotificationXmattersHeaderArgs and NotificationXmattersHeaderOutput values.
// You can construct a concrete instance of `NotificationXmattersHeaderInput` via:
//
//	NotificationXmattersHeaderArgs{...}
type NotificationXmattersHeaderInput interface {
	pulumi.Input

	ToNotificationXmattersHeaderOutput() NotificationXmattersHeaderOutput
	ToNotificationXmattersHeaderOutputWithContext(context.Context) NotificationXmattersHeaderOutput
}

type NotificationXmattersHeaderArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NotificationXmattersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationXmattersHeader)(nil)).Elem()
}

func (i NotificationXmattersHeaderArgs) ToNotificationXmattersHeaderOutput() NotificationXmattersHeaderOutput {
	return i.ToNotificationXmattersHeaderOutputWithContext(context.Background())
}

func (i NotificationXmattersHeaderArgs) ToNotificationXmattersHeaderOutputWithContext(ctx context.Context) NotificationXmattersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationXmattersHeaderOutput)
}

// NotificationXmattersHeaderArrayInput is an input type that accepts NotificationXmattersHeaderArray and NotificationXmattersHeaderArrayOutput values.
// You can construct a concrete instance of `NotificationXmattersHeaderArrayInput` via:
//
//	NotificationXmattersHeaderArray{ NotificationXmattersHeaderArgs{...} }
type NotificationXmattersHeaderArrayInput interface {
	pulumi.Input

	ToNotificationXmattersHeaderArrayOutput() NotificationXmattersHeaderArrayOutput
	ToNotificationXmattersHeaderArrayOutputWithContext(context.Context) NotificationXmattersHeaderArrayOutput
}

type NotificationXmattersHeaderArray []NotificationXmattersHeaderInput

func (NotificationXmattersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationXmattersHeader)(nil)).Elem()
}

func (i NotificationXmattersHeaderArray) ToNotificationXmattersHeaderArrayOutput() NotificationXmattersHeaderArrayOutput {
	return i.ToNotificationXmattersHeaderArrayOutputWithContext(context.Background())
}

func (i NotificationXmattersHeaderArray) ToNotificationXmattersHeaderArrayOutputWithContext(ctx context.Context) NotificationXmattersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationXmattersHeaderArrayOutput)
}

type NotificationXmattersHeaderOutput struct{ *pulumi.OutputState }

func (NotificationXmattersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationXmattersHeader)(nil)).Elem()
}

func (o NotificationXmattersHeaderOutput) ToNotificationXmattersHeaderOutput() NotificationXmattersHeaderOutput {
	return o
}

func (o NotificationXmattersHeaderOutput) ToNotificationXmattersHeaderOutputWithContext(ctx context.Context) NotificationXmattersHeaderOutput {
	return o
}

func (o NotificationXmattersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationXmattersHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o NotificationXmattersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationXmattersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NotificationXmattersHeaderArrayOutput struct{ *pulumi.OutputState }

func (NotificationXmattersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationXmattersHeader)(nil)).Elem()
}

func (o NotificationXmattersHeaderArrayOutput) ToNotificationXmattersHeaderArrayOutput() NotificationXmattersHeaderArrayOutput {
	return o
}

func (o NotificationXmattersHeaderArrayOutput) ToNotificationXmattersHeaderArrayOutputWithContext(ctx context.Context) NotificationXmattersHeaderArrayOutput {
	return o
}

func (o NotificationXmattersHeaderArrayOutput) Index(i pulumi.IntInput) NotificationXmattersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationXmattersHeader {
		return vs[0].([]NotificationXmattersHeader)[vs[1].(int)]
	}).(NotificationXmattersHeaderOutput)
}

type ProcessgroupNamingCondition struct {
	Conditions []ProcessgroupNamingConditionCondition `pulumi:"conditions"`
}

// ProcessgroupNamingConditionInput is an input type that accepts ProcessgroupNamingConditionArgs and ProcessgroupNamingConditionOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionInput` via:
//
//	ProcessgroupNamingConditionArgs{...}
type ProcessgroupNamingConditionInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionOutput() ProcessgroupNamingConditionOutput
	ToProcessgroupNamingConditionOutputWithContext(context.Context) ProcessgroupNamingConditionOutput
}

type ProcessgroupNamingConditionArgs struct {
	Conditions ProcessgroupNamingConditionConditionArrayInput `pulumi:"conditions"`
}

func (ProcessgroupNamingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingCondition)(nil)).Elem()
}

func (i ProcessgroupNamingConditionArgs) ToProcessgroupNamingConditionOutput() ProcessgroupNamingConditionOutput {
	return i.ToProcessgroupNamingConditionOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionArgs) ToProcessgroupNamingConditionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionOutput)
}

// ProcessgroupNamingConditionArrayInput is an input type that accepts ProcessgroupNamingConditionArray and ProcessgroupNamingConditionArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionArrayInput` via:
//
//	ProcessgroupNamingConditionArray{ ProcessgroupNamingConditionArgs{...} }
type ProcessgroupNamingConditionArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionArrayOutput() ProcessgroupNamingConditionArrayOutput
	ToProcessgroupNamingConditionArrayOutputWithContext(context.Context) ProcessgroupNamingConditionArrayOutput
}

type ProcessgroupNamingConditionArray []ProcessgroupNamingConditionInput

func (ProcessgroupNamingConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingCondition)(nil)).Elem()
}

func (i ProcessgroupNamingConditionArray) ToProcessgroupNamingConditionArrayOutput() ProcessgroupNamingConditionArrayOutput {
	return i.ToProcessgroupNamingConditionArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionArray) ToProcessgroupNamingConditionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionArrayOutput)
}

type ProcessgroupNamingConditionOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingCondition)(nil)).Elem()
}

func (o ProcessgroupNamingConditionOutput) ToProcessgroupNamingConditionOutput() ProcessgroupNamingConditionOutput {
	return o
}

func (o ProcessgroupNamingConditionOutput) ToProcessgroupNamingConditionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionOutput {
	return o
}

func (o ProcessgroupNamingConditionOutput) Conditions() ProcessgroupNamingConditionConditionArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingCondition) []ProcessgroupNamingConditionCondition { return v.Conditions }).(ProcessgroupNamingConditionConditionArrayOutput)
}

type ProcessgroupNamingConditionArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingCondition)(nil)).Elem()
}

func (o ProcessgroupNamingConditionArrayOutput) ToProcessgroupNamingConditionArrayOutput() ProcessgroupNamingConditionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionArrayOutput) ToProcessgroupNamingConditionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingCondition {
		return vs[0].([]ProcessgroupNamingCondition)[vs[1].(int)]
	}).(ProcessgroupNamingConditionOutput)
}

type ProcessgroupNamingConditionCondition struct {
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons  []ProcessgroupNamingConditionConditionApplicationTypeComparison  `pulumi:"applicationTypeComparisons"`
	ApplicationTypes            []ProcessgroupNamingConditionConditionApplicationType            `pulumi:"applicationTypes"`
	AzureComputeModeComparisons []ProcessgroupNamingConditionConditionAzureComputeModeComparison `pulumi:"azureComputeModeComparisons"`
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes []ProcessgroupNamingConditionConditionAzureComputeMode `pulumi:"azureComputeModes"`
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions []ProcessgroupNamingConditionConditionAzureSkuComparision `pulumi:"azureSkuComparisions"`
	AzureSkus            []ProcessgroupNamingConditionConditionAzureSkus           `pulumi:"azureSkus"`
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics []ProcessgroupNamingConditionConditionBaseComparisonBasic `pulumi:"baseComparisonBasics"`
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys []ProcessgroupNamingConditionConditionBaseConditionKey `pulumi:"baseConditionKeys"`
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions []ProcessgroupNamingConditionConditionBitnessComparision `pulumi:"bitnessComparisions"`
	Bitnesses           []ProcessgroupNamingConditionConditionBitness            `pulumi:"bitnesses"`
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons []ProcessgroupNamingConditionConditionCloudTypeComparison `pulumi:"cloudTypeComparisons"`
	CloudTypes           []ProcessgroupNamingConditionConditionCloudType           `pulumi:"cloudTypes"`
	Comparisons          []ProcessgroupNamingConditionConditionComparison          `pulumi:"comparisons"`
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons []ProcessgroupNamingConditionConditionCustomApplicationTypeComparison `pulumi:"customApplicationTypeComparisons"`
	CustomApplicationTypes           []ProcessgroupNamingConditionConditionCustomApplicationType           `pulumi:"customApplicationTypes"`
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys []ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey `pulumi:"customHostMetadataConditionKeys"`
	CustomHostMetadatas             []ProcessgroupNamingConditionConditionCustomHostMetadata             `pulumi:"customHostMetadatas"`
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys []ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey `pulumi:"customProcessMetadataConditionKeys"`
	CustomProcessMetadatas             []ProcessgroupNamingConditionConditionCustomProcessMetadata             `pulumi:"customProcessMetadatas"`
	DatabaseTopologies                 []ProcessgroupNamingConditionConditionDatabaseTopology                  `pulumi:"databaseTopologies"`
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons []ProcessgroupNamingConditionConditionDatabaseTopologyComparison `pulumi:"databaseTopologyComparisons"`
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons []ProcessgroupNamingConditionConditionDcrumDecoderComparison `pulumi:"dcrumDecoderComparisons"`
	DcrumDecoders           []ProcessgroupNamingConditionConditionDcrumDecoder           `pulumi:"dcrumDecoders"`
	Entities                []ProcessgroupNamingConditionConditionEntity                 `pulumi:"entities"`
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons []ProcessgroupNamingConditionConditionEntityIdComparison `pulumi:"entityIdComparisons"`
	HostTeches          []ProcessgroupNamingConditionConditionHostTech           `pulumi:"hostTeches"`
	// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions []ProcessgroupNamingConditionConditionHypervisorTypeComparision `pulumi:"hypervisorTypeComparisions"`
	Hypervisors                []ProcessgroupNamingConditionConditionHypervisor                `pulumi:"hypervisors"`
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons []ProcessgroupNamingConditionConditionIndexedNameComparison `pulumi:"indexedNameComparisons"`
	IndexedNames           []ProcessgroupNamingConditionConditionIndexedName           `pulumi:"indexedNames"`
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons []ProcessgroupNamingConditionConditionIndexedStringComparison `pulumi:"indexedStringComparisons"`
	IndexedStrings           []ProcessgroupNamingConditionConditionIndexedString           `pulumi:"indexedStrings"`
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons []ProcessgroupNamingConditionConditionIndexedTagComparison `pulumi:"indexedTagComparisons"`
	IndexedTags           []ProcessgroupNamingConditionConditionIndexedTag           `pulumi:"indexedTags"`
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons []ProcessgroupNamingConditionConditionIntegerComparison `pulumi:"integerComparisons"`
	Integers           []ProcessgroupNamingConditionConditionInteger           `pulumi:"integers"`
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons []ProcessgroupNamingConditionConditionIpaddressComparison `pulumi:"ipaddressComparisons"`
	Ipaddresses          []ProcessgroupNamingConditionConditionIpaddress           `pulumi:"ipaddresses"`
	Keys                 []ProcessgroupNamingConditionConditionKey                 `pulumi:"keys"`
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons []ProcessgroupNamingConditionConditionMobilePlatformComparison `pulumi:"mobilePlatformComparisons"`
	MobilePlatforms           []ProcessgroupNamingConditionConditionMobilePlatform           `pulumi:"mobilePlatforms"`
	OsArches                  []ProcessgroupNamingConditionConditionOsArch                   `pulumi:"osArches"`
	OsTypes                   []ProcessgroupNamingConditionConditionOsType                   `pulumi:"osTypes"`
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons []ProcessgroupNamingConditionConditionOsarchitectureComparison `pulumi:"osarchitectureComparisons"`
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons []ProcessgroupNamingConditionConditionOstypeComparison `pulumi:"ostypeComparisons"`
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons []ProcessgroupNamingConditionConditionPaasTypeComparison `pulumi:"paasTypeComparisons"`
	PaasTypes           []ProcessgroupNamingConditionConditionPaasType           `pulumi:"paasTypes"`
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys []ProcessgroupNamingConditionConditionProcessMetadataConditionKey `pulumi:"processMetadataConditionKeys"`
	ProcessMetadatas             []ProcessgroupNamingConditionConditionProcessMetadata             `pulumi:"processMetadatas"`
	ServiceTopologies            []ProcessgroupNamingConditionConditionServiceTopology             `pulumi:"serviceTopologies"`
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons []ProcessgroupNamingConditionConditionServiceTopologyComparison `pulumi:"serviceTopologyComparisons"`
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons []ProcessgroupNamingConditionConditionServiceTypeComparison `pulumi:"serviceTypeComparisons"`
	ServiceTypes           []ProcessgroupNamingConditionConditionServiceType           `pulumi:"serviceTypes"`
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons []ProcessgroupNamingConditionConditionSimpleHostTechComparison `pulumi:"simpleHostTechComparisons"`
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons []ProcessgroupNamingConditionConditionSimpleTechComparison `pulumi:"simpleTechComparisons"`
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons []ProcessgroupNamingConditionConditionStringComparison `pulumi:"stringComparisons"`
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys []ProcessgroupNamingConditionConditionStringConditionKey `pulumi:"stringConditionKeys"`
	StringKeys          []ProcessgroupNamingConditionConditionStringKey          `pulumi:"stringKeys"`
	Strings             []ProcessgroupNamingConditionConditionString             `pulumi:"strings"`
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons []ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison `pulumi:"syntheticEngineTypeComparisons"`
	SyntheticEngines               []ProcessgroupNamingConditionConditionSyntheticEngine               `pulumi:"syntheticEngines"`
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons []ProcessgroupNamingConditionConditionTagComparison `pulumi:"tagComparisons"`
	Tags           []ProcessgroupNamingConditionConditionTag           `pulumi:"tags"`
	Teches         []ProcessgroupNamingConditionConditionTech          `pulumi:"teches"`
	Unknowns       *string                                             `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionInput is an input type that accepts ProcessgroupNamingConditionConditionArgs and ProcessgroupNamingConditionConditionOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionInput` via:
//
//	ProcessgroupNamingConditionConditionArgs{...}
type ProcessgroupNamingConditionConditionInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOutput() ProcessgroupNamingConditionConditionOutput
	ToProcessgroupNamingConditionConditionOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOutput
}

type ProcessgroupNamingConditionConditionArgs struct {
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons  ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayInput  `pulumi:"applicationTypeComparisons"`
	ApplicationTypes            ProcessgroupNamingConditionConditionApplicationTypeArrayInput            `pulumi:"applicationTypes"`
	AzureComputeModeComparisons ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayInput `pulumi:"azureComputeModeComparisons"`
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes ProcessgroupNamingConditionConditionAzureComputeModeArrayInput `pulumi:"azureComputeModes"`
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions ProcessgroupNamingConditionConditionAzureSkuComparisionArrayInput `pulumi:"azureSkuComparisions"`
	AzureSkus            ProcessgroupNamingConditionConditionAzureSkusArrayInput           `pulumi:"azureSkus"`
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics ProcessgroupNamingConditionConditionBaseComparisonBasicArrayInput `pulumi:"baseComparisonBasics"`
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys ProcessgroupNamingConditionConditionBaseConditionKeyArrayInput `pulumi:"baseConditionKeys"`
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions ProcessgroupNamingConditionConditionBitnessComparisionArrayInput `pulumi:"bitnessComparisions"`
	Bitnesses           ProcessgroupNamingConditionConditionBitnessArrayInput            `pulumi:"bitnesses"`
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons ProcessgroupNamingConditionConditionCloudTypeComparisonArrayInput `pulumi:"cloudTypeComparisons"`
	CloudTypes           ProcessgroupNamingConditionConditionCloudTypeArrayInput           `pulumi:"cloudTypes"`
	Comparisons          ProcessgroupNamingConditionConditionComparisonArrayInput          `pulumi:"comparisons"`
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayInput `pulumi:"customApplicationTypeComparisons"`
	CustomApplicationTypes           ProcessgroupNamingConditionConditionCustomApplicationTypeArrayInput           `pulumi:"customApplicationTypes"`
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayInput `pulumi:"customHostMetadataConditionKeys"`
	CustomHostMetadatas             ProcessgroupNamingConditionConditionCustomHostMetadataArrayInput             `pulumi:"customHostMetadatas"`
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput `pulumi:"customProcessMetadataConditionKeys"`
	CustomProcessMetadatas             ProcessgroupNamingConditionConditionCustomProcessMetadataArrayInput             `pulumi:"customProcessMetadatas"`
	DatabaseTopologies                 ProcessgroupNamingConditionConditionDatabaseTopologyArrayInput                  `pulumi:"databaseTopologies"`
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayInput `pulumi:"databaseTopologyComparisons"`
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayInput `pulumi:"dcrumDecoderComparisons"`
	DcrumDecoders           ProcessgroupNamingConditionConditionDcrumDecoderArrayInput           `pulumi:"dcrumDecoders"`
	Entities                ProcessgroupNamingConditionConditionEntityArrayInput                 `pulumi:"entities"`
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons ProcessgroupNamingConditionConditionEntityIdComparisonArrayInput `pulumi:"entityIdComparisons"`
	HostTeches          ProcessgroupNamingConditionConditionHostTechArrayInput           `pulumi:"hostTeches"`
	// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayInput `pulumi:"hypervisorTypeComparisions"`
	Hypervisors                ProcessgroupNamingConditionConditionHypervisorArrayInput                `pulumi:"hypervisors"`
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons ProcessgroupNamingConditionConditionIndexedNameComparisonArrayInput `pulumi:"indexedNameComparisons"`
	IndexedNames           ProcessgroupNamingConditionConditionIndexedNameArrayInput           `pulumi:"indexedNames"`
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons ProcessgroupNamingConditionConditionIndexedStringComparisonArrayInput `pulumi:"indexedStringComparisons"`
	IndexedStrings           ProcessgroupNamingConditionConditionIndexedStringArrayInput           `pulumi:"indexedStrings"`
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons ProcessgroupNamingConditionConditionIndexedTagComparisonArrayInput `pulumi:"indexedTagComparisons"`
	IndexedTags           ProcessgroupNamingConditionConditionIndexedTagArrayInput           `pulumi:"indexedTags"`
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons ProcessgroupNamingConditionConditionIntegerComparisonArrayInput `pulumi:"integerComparisons"`
	Integers           ProcessgroupNamingConditionConditionIntegerArrayInput           `pulumi:"integers"`
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons ProcessgroupNamingConditionConditionIpaddressComparisonArrayInput `pulumi:"ipaddressComparisons"`
	Ipaddresses          ProcessgroupNamingConditionConditionIpaddressArrayInput           `pulumi:"ipaddresses"`
	Keys                 ProcessgroupNamingConditionConditionKeyArrayInput                 `pulumi:"keys"`
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayInput `pulumi:"mobilePlatformComparisons"`
	MobilePlatforms           ProcessgroupNamingConditionConditionMobilePlatformArrayInput           `pulumi:"mobilePlatforms"`
	OsArches                  ProcessgroupNamingConditionConditionOsArchArrayInput                   `pulumi:"osArches"`
	OsTypes                   ProcessgroupNamingConditionConditionOsTypeArrayInput                   `pulumi:"osTypes"`
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayInput `pulumi:"osarchitectureComparisons"`
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons ProcessgroupNamingConditionConditionOstypeComparisonArrayInput `pulumi:"ostypeComparisons"`
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons ProcessgroupNamingConditionConditionPaasTypeComparisonArrayInput `pulumi:"paasTypeComparisons"`
	PaasTypes           ProcessgroupNamingConditionConditionPaasTypeArrayInput           `pulumi:"paasTypes"`
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayInput `pulumi:"processMetadataConditionKeys"`
	ProcessMetadatas             ProcessgroupNamingConditionConditionProcessMetadataArrayInput             `pulumi:"processMetadatas"`
	ServiceTopologies            ProcessgroupNamingConditionConditionServiceTopologyArrayInput             `pulumi:"serviceTopologies"`
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayInput `pulumi:"serviceTopologyComparisons"`
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons ProcessgroupNamingConditionConditionServiceTypeComparisonArrayInput `pulumi:"serviceTypeComparisons"`
	ServiceTypes           ProcessgroupNamingConditionConditionServiceTypeArrayInput           `pulumi:"serviceTypes"`
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayInput `pulumi:"simpleHostTechComparisons"`
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons ProcessgroupNamingConditionConditionSimpleTechComparisonArrayInput `pulumi:"simpleTechComparisons"`
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons ProcessgroupNamingConditionConditionStringComparisonArrayInput `pulumi:"stringComparisons"`
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys ProcessgroupNamingConditionConditionStringConditionKeyArrayInput `pulumi:"stringConditionKeys"`
	StringKeys          ProcessgroupNamingConditionConditionStringKeyArrayInput          `pulumi:"stringKeys"`
	Strings             ProcessgroupNamingConditionConditionStringArrayInput             `pulumi:"strings"`
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayInput `pulumi:"syntheticEngineTypeComparisons"`
	SyntheticEngines               ProcessgroupNamingConditionConditionSyntheticEngineArrayInput               `pulumi:"syntheticEngines"`
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons ProcessgroupNamingConditionConditionTagComparisonArrayInput `pulumi:"tagComparisons"`
	Tags           ProcessgroupNamingConditionConditionTagArrayInput           `pulumi:"tags"`
	Teches         ProcessgroupNamingConditionConditionTechArrayInput          `pulumi:"teches"`
	Unknowns       pulumi.StringPtrInput                                       `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionCondition)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionArgs) ToProcessgroupNamingConditionConditionOutput() ProcessgroupNamingConditionConditionOutput {
	return i.ToProcessgroupNamingConditionConditionOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionArgs) ToProcessgroupNamingConditionConditionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOutput)
}

// ProcessgroupNamingConditionConditionArrayInput is an input type that accepts ProcessgroupNamingConditionConditionArray and ProcessgroupNamingConditionConditionArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionArrayInput` via:
//
//	ProcessgroupNamingConditionConditionArray{ ProcessgroupNamingConditionConditionArgs{...} }
type ProcessgroupNamingConditionConditionArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionArrayOutput() ProcessgroupNamingConditionConditionArrayOutput
	ToProcessgroupNamingConditionConditionArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionArrayOutput
}

type ProcessgroupNamingConditionConditionArray []ProcessgroupNamingConditionConditionInput

func (ProcessgroupNamingConditionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionCondition)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionArray) ToProcessgroupNamingConditionConditionArrayOutput() ProcessgroupNamingConditionConditionArrayOutput {
	return i.ToProcessgroupNamingConditionConditionArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionArray) ToProcessgroupNamingConditionConditionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionArrayOutput)
}

type ProcessgroupNamingConditionConditionOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionCondition)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOutput) ToProcessgroupNamingConditionConditionOutput() ProcessgroupNamingConditionConditionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOutput) ToProcessgroupNamingConditionConditionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOutput {
	return o
}

// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) ApplicationTypeComparisons() ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionApplicationTypeComparison {
		return v.ApplicationTypeComparisons
	}).(ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) ApplicationTypes() ProcessgroupNamingConditionConditionApplicationTypeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionApplicationType {
		return v.ApplicationTypes
	}).(ProcessgroupNamingConditionConditionApplicationTypeArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) AzureComputeModeComparisons() ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionAzureComputeModeComparison {
		return v.AzureComputeModeComparisons
	}).(ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput)
}

// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) AzureComputeModes() ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionAzureComputeMode {
		return v.AzureComputeModes
	}).(ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput)
}

// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) AzureSkuComparisions() ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionAzureSkuComparision {
		return v.AzureSkuComparisions
	}).(ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) AzureSkus() ProcessgroupNamingConditionConditionAzureSkusArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionAzureSkus {
		return v.AzureSkus
	}).(ProcessgroupNamingConditionConditionAzureSkusArrayOutput)
}

// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) BaseComparisonBasics() ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionBaseComparisonBasic {
		return v.BaseComparisonBasics
	}).(ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput)
}

// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
func (o ProcessgroupNamingConditionConditionOutput) BaseConditionKeys() ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionBaseConditionKey {
		return v.BaseConditionKeys
	}).(ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput)
}

// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) BitnessComparisions() ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionBitnessComparision {
		return v.BitnessComparisions
	}).(ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Bitnesses() ProcessgroupNamingConditionConditionBitnessArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionBitness {
		return v.Bitnesses
	}).(ProcessgroupNamingConditionConditionBitnessArrayOutput)
}

// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) CloudTypeComparisons() ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCloudTypeComparison {
		return v.CloudTypeComparisons
	}).(ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) CloudTypes() ProcessgroupNamingConditionConditionCloudTypeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCloudType {
		return v.CloudTypes
	}).(ProcessgroupNamingConditionConditionCloudTypeArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Comparisons() ProcessgroupNamingConditionConditionComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionComparison {
		return v.Comparisons
	}).(ProcessgroupNamingConditionConditionComparisonArrayOutput)
}

// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) CustomApplicationTypeComparisons() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCustomApplicationTypeComparison {
		return v.CustomApplicationTypeComparisons
	}).(ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) CustomApplicationTypes() ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCustomApplicationType {
		return v.CustomApplicationTypes
	}).(ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput)
}

// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
func (o ProcessgroupNamingConditionConditionOutput) CustomHostMetadataConditionKeys() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey {
		return v.CustomHostMetadataConditionKeys
	}).(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) CustomHostMetadatas() ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCustomHostMetadata {
		return v.CustomHostMetadatas
	}).(ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput)
}

// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
func (o ProcessgroupNamingConditionConditionOutput) CustomProcessMetadataConditionKeys() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey {
		return v.CustomProcessMetadataConditionKeys
	}).(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) CustomProcessMetadatas() ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionCustomProcessMetadata {
		return v.CustomProcessMetadatas
	}).(ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) DatabaseTopologies() ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionDatabaseTopology {
		return v.DatabaseTopologies
	}).(ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput)
}

// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) DatabaseTopologyComparisons() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionDatabaseTopologyComparison {
		return v.DatabaseTopologyComparisons
	}).(ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput)
}

// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) DcrumDecoderComparisons() ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionDcrumDecoderComparison {
		return v.DcrumDecoderComparisons
	}).(ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) DcrumDecoders() ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionDcrumDecoder {
		return v.DcrumDecoders
	}).(ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Entities() ProcessgroupNamingConditionConditionEntityArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionEntity {
		return v.Entities
	}).(ProcessgroupNamingConditionConditionEntityArrayOutput)
}

// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) EntityIdComparisons() ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionEntityIdComparison {
		return v.EntityIdComparisons
	}).(ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) HostTeches() ProcessgroupNamingConditionConditionHostTechArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionHostTech {
		return v.HostTeches
	}).(ProcessgroupNamingConditionConditionHostTechArrayOutput)
}

// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
func (o ProcessgroupNamingConditionConditionOutput) HypervisorTypeComparisions() ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionHypervisorTypeComparision {
		return v.HypervisorTypeComparisions
	}).(ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Hypervisors() ProcessgroupNamingConditionConditionHypervisorArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionHypervisor {
		return v.Hypervisors
	}).(ProcessgroupNamingConditionConditionHypervisorArrayOutput)
}

// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) IndexedNameComparisons() ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIndexedNameComparison {
		return v.IndexedNameComparisons
	}).(ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) IndexedNames() ProcessgroupNamingConditionConditionIndexedNameArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIndexedName {
		return v.IndexedNames
	}).(ProcessgroupNamingConditionConditionIndexedNameArrayOutput)
}

// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) IndexedStringComparisons() ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIndexedStringComparison {
		return v.IndexedStringComparisons
	}).(ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) IndexedStrings() ProcessgroupNamingConditionConditionIndexedStringArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIndexedString {
		return v.IndexedStrings
	}).(ProcessgroupNamingConditionConditionIndexedStringArrayOutput)
}

// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) IndexedTagComparisons() ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIndexedTagComparison {
		return v.IndexedTagComparisons
	}).(ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) IndexedTags() ProcessgroupNamingConditionConditionIndexedTagArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIndexedTag {
		return v.IndexedTags
	}).(ProcessgroupNamingConditionConditionIndexedTagArrayOutput)
}

// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) IntegerComparisons() ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIntegerComparison {
		return v.IntegerComparisons
	}).(ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Integers() ProcessgroupNamingConditionConditionIntegerArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionInteger {
		return v.Integers
	}).(ProcessgroupNamingConditionConditionIntegerArrayOutput)
}

// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) IpaddressComparisons() ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIpaddressComparison {
		return v.IpaddressComparisons
	}).(ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Ipaddresses() ProcessgroupNamingConditionConditionIpaddressArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionIpaddress {
		return v.Ipaddresses
	}).(ProcessgroupNamingConditionConditionIpaddressArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Keys() ProcessgroupNamingConditionConditionKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionKey { return v.Keys }).(ProcessgroupNamingConditionConditionKeyArrayOutput)
}

// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) MobilePlatformComparisons() ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionMobilePlatformComparison {
		return v.MobilePlatformComparisons
	}).(ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) MobilePlatforms() ProcessgroupNamingConditionConditionMobilePlatformArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionMobilePlatform {
		return v.MobilePlatforms
	}).(ProcessgroupNamingConditionConditionMobilePlatformArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) OsArches() ProcessgroupNamingConditionConditionOsArchArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionOsArch {
		return v.OsArches
	}).(ProcessgroupNamingConditionConditionOsArchArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) OsTypes() ProcessgroupNamingConditionConditionOsTypeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionOsType {
		return v.OsTypes
	}).(ProcessgroupNamingConditionConditionOsTypeArrayOutput)
}

// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) OsarchitectureComparisons() ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionOsarchitectureComparison {
		return v.OsarchitectureComparisons
	}).(ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput)
}

// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) OstypeComparisons() ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionOstypeComparison {
		return v.OstypeComparisons
	}).(ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput)
}

// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) PaasTypeComparisons() ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionPaasTypeComparison {
		return v.PaasTypeComparisons
	}).(ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) PaasTypes() ProcessgroupNamingConditionConditionPaasTypeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionPaasType {
		return v.PaasTypes
	}).(ProcessgroupNamingConditionConditionPaasTypeArrayOutput)
}

// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
func (o ProcessgroupNamingConditionConditionOutput) ProcessMetadataConditionKeys() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionProcessMetadataConditionKey {
		return v.ProcessMetadataConditionKeys
	}).(ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) ProcessMetadatas() ProcessgroupNamingConditionConditionProcessMetadataArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionProcessMetadata {
		return v.ProcessMetadatas
	}).(ProcessgroupNamingConditionConditionProcessMetadataArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) ServiceTopologies() ProcessgroupNamingConditionConditionServiceTopologyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionServiceTopology {
		return v.ServiceTopologies
	}).(ProcessgroupNamingConditionConditionServiceTopologyArrayOutput)
}

// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) ServiceTopologyComparisons() ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionServiceTopologyComparison {
		return v.ServiceTopologyComparisons
	}).(ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput)
}

// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) ServiceTypeComparisons() ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionServiceTypeComparison {
		return v.ServiceTypeComparisons
	}).(ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) ServiceTypes() ProcessgroupNamingConditionConditionServiceTypeArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionServiceType {
		return v.ServiceTypes
	}).(ProcessgroupNamingConditionConditionServiceTypeArrayOutput)
}

// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) SimpleHostTechComparisons() ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionSimpleHostTechComparison {
		return v.SimpleHostTechComparisons
	}).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput)
}

// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) SimpleTechComparisons() ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionSimpleTechComparison {
		return v.SimpleTechComparisons
	}).(ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput)
}

// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) StringComparisons() ProcessgroupNamingConditionConditionStringComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionStringComparison {
		return v.StringComparisons
	}).(ProcessgroupNamingConditionConditionStringComparisonArrayOutput)
}

// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
func (o ProcessgroupNamingConditionConditionOutput) StringConditionKeys() ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionStringConditionKey {
		return v.StringConditionKeys
	}).(ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) StringKeys() ProcessgroupNamingConditionConditionStringKeyArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionStringKey {
		return v.StringKeys
	}).(ProcessgroupNamingConditionConditionStringKeyArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Strings() ProcessgroupNamingConditionConditionStringArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionString {
		return v.Strings
	}).(ProcessgroupNamingConditionConditionStringArrayOutput)
}

// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) SyntheticEngineTypeComparisons() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison {
		return v.SyntheticEngineTypeComparisons
	}).(ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) SyntheticEngines() ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionSyntheticEngine {
		return v.SyntheticEngines
	}).(ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput)
}

// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
func (o ProcessgroupNamingConditionConditionOutput) TagComparisons() ProcessgroupNamingConditionConditionTagComparisonArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionTagComparison {
		return v.TagComparisons
	}).(ProcessgroupNamingConditionConditionTagComparisonArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Tags() ProcessgroupNamingConditionConditionTagArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionTag { return v.Tags }).(ProcessgroupNamingConditionConditionTagArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Teches() ProcessgroupNamingConditionConditionTechArrayOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) []ProcessgroupNamingConditionConditionTech {
		return v.Teches
	}).(ProcessgroupNamingConditionConditionTechArrayOutput)
}

func (o ProcessgroupNamingConditionConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionCondition)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionArrayOutput) ToProcessgroupNamingConditionConditionArrayOutput() ProcessgroupNamingConditionConditionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionArrayOutput) ToProcessgroupNamingConditionConditionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionCondition {
		return vs[0].([]ProcessgroupNamingConditionCondition)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionOutput)
}

type ProcessgroupNamingConditionConditionApplicationType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionApplicationTypeInput is an input type that accepts ProcessgroupNamingConditionConditionApplicationTypeArgs and ProcessgroupNamingConditionConditionApplicationTypeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionApplicationTypeInput` via:
//
//	ProcessgroupNamingConditionConditionApplicationTypeArgs{...}
type ProcessgroupNamingConditionConditionApplicationTypeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionApplicationTypeOutput() ProcessgroupNamingConditionConditionApplicationTypeOutput
	ToProcessgroupNamingConditionConditionApplicationTypeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionApplicationTypeOutput
}

type ProcessgroupNamingConditionConditionApplicationTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionApplicationTypeArgs) ToProcessgroupNamingConditionConditionApplicationTypeOutput() ProcessgroupNamingConditionConditionApplicationTypeOutput {
	return i.ToProcessgroupNamingConditionConditionApplicationTypeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionApplicationTypeArgs) ToProcessgroupNamingConditionConditionApplicationTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionApplicationTypeOutput)
}

// ProcessgroupNamingConditionConditionApplicationTypeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionApplicationTypeArray and ProcessgroupNamingConditionConditionApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionApplicationTypeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionApplicationTypeArray{ ProcessgroupNamingConditionConditionApplicationTypeArgs{...} }
type ProcessgroupNamingConditionConditionApplicationTypeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionApplicationTypeArrayOutput() ProcessgroupNamingConditionConditionApplicationTypeArrayOutput
	ToProcessgroupNamingConditionConditionApplicationTypeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionApplicationTypeArrayOutput
}

type ProcessgroupNamingConditionConditionApplicationTypeArray []ProcessgroupNamingConditionConditionApplicationTypeInput

func (ProcessgroupNamingConditionConditionApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionApplicationType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionApplicationTypeArray) ToProcessgroupNamingConditionConditionApplicationTypeArrayOutput() ProcessgroupNamingConditionConditionApplicationTypeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionApplicationTypeArray) ToProcessgroupNamingConditionConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionApplicationTypeArrayOutput)
}

type ProcessgroupNamingConditionConditionApplicationTypeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionApplicationTypeOutput) ToProcessgroupNamingConditionConditionApplicationTypeOutput() ProcessgroupNamingConditionConditionApplicationTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeOutput) ToProcessgroupNamingConditionConditionApplicationTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionApplicationType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionApplicationTypeArrayOutput) ToProcessgroupNamingConditionConditionApplicationTypeArrayOutput() ProcessgroupNamingConditionConditionApplicationTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeArrayOutput) ToProcessgroupNamingConditionConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionApplicationType {
		return vs[0].([]ProcessgroupNamingConditionConditionApplicationType)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionApplicationTypeOutput)
}

type ProcessgroupNamingConditionConditionApplicationTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionApplicationTypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs and ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionApplicationTypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionApplicationTypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutput() ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput
	ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput
}

type ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs) ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutput() ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs) ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionApplicationTypeComparisonArray and ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionApplicationTypeComparisonArray{ ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionApplicationTypeComparisonArray []ProcessgroupNamingConditionConditionApplicationTypeComparisonInput

func (ProcessgroupNamingConditionConditionApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionApplicationTypeComparisonArray) ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionApplicationTypeComparisonArray) ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutput() ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) ToProcessgroupNamingConditionConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionApplicationTypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionApplicationTypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionAzureComputeMode struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionAzureComputeModeInput is an input type that accepts ProcessgroupNamingConditionConditionAzureComputeModeArgs and ProcessgroupNamingConditionConditionAzureComputeModeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureComputeModeInput` via:
//
//	ProcessgroupNamingConditionConditionAzureComputeModeArgs{...}
type ProcessgroupNamingConditionConditionAzureComputeModeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureComputeModeOutput() ProcessgroupNamingConditionConditionAzureComputeModeOutput
	ToProcessgroupNamingConditionConditionAzureComputeModeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureComputeModeOutput
}

type ProcessgroupNamingConditionConditionAzureComputeModeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionAzureComputeModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeArgs) ToProcessgroupNamingConditionConditionAzureComputeModeOutput() ProcessgroupNamingConditionConditionAzureComputeModeOutput {
	return i.ToProcessgroupNamingConditionConditionAzureComputeModeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeArgs) ToProcessgroupNamingConditionConditionAzureComputeModeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureComputeModeOutput)
}

// ProcessgroupNamingConditionConditionAzureComputeModeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionAzureComputeModeArray and ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureComputeModeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionAzureComputeModeArray{ ProcessgroupNamingConditionConditionAzureComputeModeArgs{...} }
type ProcessgroupNamingConditionConditionAzureComputeModeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutput() ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput
	ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput
}

type ProcessgroupNamingConditionConditionAzureComputeModeArray []ProcessgroupNamingConditionConditionAzureComputeModeInput

func (ProcessgroupNamingConditionConditionAzureComputeModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeArray) ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutput() ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeArray) ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput)
}

type ProcessgroupNamingConditionConditionAzureComputeModeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureComputeModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeOutput) ToProcessgroupNamingConditionConditionAzureComputeModeOutput() ProcessgroupNamingConditionConditionAzureComputeModeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeOutput) ToProcessgroupNamingConditionConditionAzureComputeModeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeMode) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeMode) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeMode) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeMode) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput) ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutput() ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput) ToProcessgroupNamingConditionConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionAzureComputeModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionAzureComputeMode {
		return vs[0].([]ProcessgroupNamingConditionConditionAzureComputeMode)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionAzureComputeModeOutput)
}

type ProcessgroupNamingConditionConditionAzureComputeModeComparison struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionAzureComputeModeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs and ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureComputeModeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs{...}
type ProcessgroupNamingConditionConditionAzureComputeModeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput() ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput
	ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput
}

type ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput() ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput)
}

// ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray and ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray{ ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput() ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray []ProcessgroupNamingConditionConditionAzureComputeModeComparisonInput

func (ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput() ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput() ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeModeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeModeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeModeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureComputeModeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput() ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput) ToProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionAzureComputeModeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionAzureComputeModeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput)
}

type ProcessgroupNamingConditionConditionAzureSkuComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionAzureSkuComparisionInput is an input type that accepts ProcessgroupNamingConditionConditionAzureSkuComparisionArgs and ProcessgroupNamingConditionConditionAzureSkuComparisionOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureSkuComparisionInput` via:
//
//	ProcessgroupNamingConditionConditionAzureSkuComparisionArgs{...}
type ProcessgroupNamingConditionConditionAzureSkuComparisionInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureSkuComparisionOutput() ProcessgroupNamingConditionConditionAzureSkuComparisionOutput
	ToProcessgroupNamingConditionConditionAzureSkuComparisionOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureSkuComparisionOutput
}

type ProcessgroupNamingConditionConditionAzureSkuComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionAzureSkuComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureSkuComparisionArgs) ToProcessgroupNamingConditionConditionAzureSkuComparisionOutput() ProcessgroupNamingConditionConditionAzureSkuComparisionOutput {
	return i.ToProcessgroupNamingConditionConditionAzureSkuComparisionOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureSkuComparisionArgs) ToProcessgroupNamingConditionConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkuComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureSkuComparisionOutput)
}

// ProcessgroupNamingConditionConditionAzureSkuComparisionArrayInput is an input type that accepts ProcessgroupNamingConditionConditionAzureSkuComparisionArray and ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureSkuComparisionArrayInput` via:
//
//	ProcessgroupNamingConditionConditionAzureSkuComparisionArray{ ProcessgroupNamingConditionConditionAzureSkuComparisionArgs{...} }
type ProcessgroupNamingConditionConditionAzureSkuComparisionArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput() ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput
	ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput
}

type ProcessgroupNamingConditionConditionAzureSkuComparisionArray []ProcessgroupNamingConditionConditionAzureSkuComparisionInput

func (ProcessgroupNamingConditionConditionAzureSkuComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureSkuComparisionArray) ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput() ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput {
	return i.ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureSkuComparisionArray) ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput)
}

type ProcessgroupNamingConditionConditionAzureSkuComparisionOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) ToProcessgroupNamingConditionConditionAzureSkuComparisionOutput() ProcessgroupNamingConditionConditionAzureSkuComparisionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) ToProcessgroupNamingConditionConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkuComparisionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkuComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkuComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkuComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkuComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkuComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput) ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput() ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput) ToProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionAzureSkuComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionAzureSkuComparision {
		return vs[0].([]ProcessgroupNamingConditionConditionAzureSkuComparision)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionAzureSkuComparisionOutput)
}

type ProcessgroupNamingConditionConditionAzureSkus struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionAzureSkusInput is an input type that accepts ProcessgroupNamingConditionConditionAzureSkusArgs and ProcessgroupNamingConditionConditionAzureSkusOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureSkusInput` via:
//
//	ProcessgroupNamingConditionConditionAzureSkusArgs{...}
type ProcessgroupNamingConditionConditionAzureSkusInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureSkusOutput() ProcessgroupNamingConditionConditionAzureSkusOutput
	ToProcessgroupNamingConditionConditionAzureSkusOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureSkusOutput
}

type ProcessgroupNamingConditionConditionAzureSkusArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionAzureSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureSkusArgs) ToProcessgroupNamingConditionConditionAzureSkusOutput() ProcessgroupNamingConditionConditionAzureSkusOutput {
	return i.ToProcessgroupNamingConditionConditionAzureSkusOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureSkusArgs) ToProcessgroupNamingConditionConditionAzureSkusOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureSkusOutput)
}

// ProcessgroupNamingConditionConditionAzureSkusArrayInput is an input type that accepts ProcessgroupNamingConditionConditionAzureSkusArray and ProcessgroupNamingConditionConditionAzureSkusArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionAzureSkusArrayInput` via:
//
//	ProcessgroupNamingConditionConditionAzureSkusArray{ ProcessgroupNamingConditionConditionAzureSkusArgs{...} }
type ProcessgroupNamingConditionConditionAzureSkusArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionAzureSkusArrayOutput() ProcessgroupNamingConditionConditionAzureSkusArrayOutput
	ToProcessgroupNamingConditionConditionAzureSkusArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionAzureSkusArrayOutput
}

type ProcessgroupNamingConditionConditionAzureSkusArray []ProcessgroupNamingConditionConditionAzureSkusInput

func (ProcessgroupNamingConditionConditionAzureSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionAzureSkusArray) ToProcessgroupNamingConditionConditionAzureSkusArrayOutput() ProcessgroupNamingConditionConditionAzureSkusArrayOutput {
	return i.ToProcessgroupNamingConditionConditionAzureSkusArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionAzureSkusArray) ToProcessgroupNamingConditionConditionAzureSkusArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionAzureSkusArrayOutput)
}

type ProcessgroupNamingConditionConditionAzureSkusOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureSkusOutput) ToProcessgroupNamingConditionConditionAzureSkusOutput() ProcessgroupNamingConditionConditionAzureSkusOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkusOutput) ToProcessgroupNamingConditionConditionAzureSkusOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkusOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkusOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkus) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureSkusOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkus) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionAzureSkusOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkus) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionAzureSkusOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionAzureSkus) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionAzureSkusArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionAzureSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionAzureSkusArrayOutput) ToProcessgroupNamingConditionConditionAzureSkusArrayOutput() ProcessgroupNamingConditionConditionAzureSkusArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkusArrayOutput) ToProcessgroupNamingConditionConditionAzureSkusArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionAzureSkusArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionAzureSkusArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionAzureSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionAzureSkus {
		return vs[0].([]ProcessgroupNamingConditionConditionAzureSkus)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionAzureSkusOutput)
}

type ProcessgroupNamingConditionConditionBaseComparisonBasic struct {
	Negate   *bool   `pulumi:"negate"`
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionBaseComparisonBasicInput is an input type that accepts ProcessgroupNamingConditionConditionBaseComparisonBasicArgs and ProcessgroupNamingConditionConditionBaseComparisonBasicOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBaseComparisonBasicInput` via:
//
//	ProcessgroupNamingConditionConditionBaseComparisonBasicArgs{...}
type ProcessgroupNamingConditionConditionBaseComparisonBasicInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBaseComparisonBasicOutput() ProcessgroupNamingConditionConditionBaseComparisonBasicOutput
	ToProcessgroupNamingConditionConditionBaseComparisonBasicOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBaseComparisonBasicOutput
}

type ProcessgroupNamingConditionConditionBaseComparisonBasicArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionBaseComparisonBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBaseComparisonBasicArgs) ToProcessgroupNamingConditionConditionBaseComparisonBasicOutput() ProcessgroupNamingConditionConditionBaseComparisonBasicOutput {
	return i.ToProcessgroupNamingConditionConditionBaseComparisonBasicOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBaseComparisonBasicArgs) ToProcessgroupNamingConditionConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseComparisonBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBaseComparisonBasicOutput)
}

// ProcessgroupNamingConditionConditionBaseComparisonBasicArrayInput is an input type that accepts ProcessgroupNamingConditionConditionBaseComparisonBasicArray and ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBaseComparisonBasicArrayInput` via:
//
//	ProcessgroupNamingConditionConditionBaseComparisonBasicArray{ ProcessgroupNamingConditionConditionBaseComparisonBasicArgs{...} }
type ProcessgroupNamingConditionConditionBaseComparisonBasicArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput() ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput
	ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput
}

type ProcessgroupNamingConditionConditionBaseComparisonBasicArray []ProcessgroupNamingConditionConditionBaseComparisonBasicInput

func (ProcessgroupNamingConditionConditionBaseComparisonBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBaseComparisonBasicArray) ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput() ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput {
	return i.ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBaseComparisonBasicArray) ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput)
}

type ProcessgroupNamingConditionConditionBaseComparisonBasicOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBaseComparisonBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicOutput) ToProcessgroupNamingConditionConditionBaseComparisonBasicOutput() ProcessgroupNamingConditionConditionBaseComparisonBasicOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicOutput) ToProcessgroupNamingConditionConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseComparisonBasicOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBaseComparisonBasic) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBaseComparisonBasic) string { return v.Type }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBaseComparisonBasic) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput) ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput() ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput) ToProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionBaseComparisonBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionBaseComparisonBasic {
		return vs[0].([]ProcessgroupNamingConditionConditionBaseComparisonBasic)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionBaseComparisonBasicOutput)
}

type ProcessgroupNamingConditionConditionBaseConditionKey struct {
	Attribute string  `pulumi:"attribute"`
	Type      *string `pulumi:"type"`
	Unknowns  *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionBaseConditionKeyInput is an input type that accepts ProcessgroupNamingConditionConditionBaseConditionKeyArgs and ProcessgroupNamingConditionConditionBaseConditionKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBaseConditionKeyInput` via:
//
//	ProcessgroupNamingConditionConditionBaseConditionKeyArgs{...}
type ProcessgroupNamingConditionConditionBaseConditionKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBaseConditionKeyOutput() ProcessgroupNamingConditionConditionBaseConditionKeyOutput
	ToProcessgroupNamingConditionConditionBaseConditionKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBaseConditionKeyOutput
}

type ProcessgroupNamingConditionConditionBaseConditionKeyArgs struct {
	Attribute pulumi.StringInput    `pulumi:"attribute"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Unknowns  pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionBaseConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBaseConditionKeyArgs) ToProcessgroupNamingConditionConditionBaseConditionKeyOutput() ProcessgroupNamingConditionConditionBaseConditionKeyOutput {
	return i.ToProcessgroupNamingConditionConditionBaseConditionKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBaseConditionKeyArgs) ToProcessgroupNamingConditionConditionBaseConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBaseConditionKeyOutput)
}

// ProcessgroupNamingConditionConditionBaseConditionKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionBaseConditionKeyArray and ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBaseConditionKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionBaseConditionKeyArray{ ProcessgroupNamingConditionConditionBaseConditionKeyArgs{...} }
type ProcessgroupNamingConditionConditionBaseConditionKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput() ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput
	ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput
}

type ProcessgroupNamingConditionConditionBaseConditionKeyArray []ProcessgroupNamingConditionConditionBaseConditionKeyInput

func (ProcessgroupNamingConditionConditionBaseConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBaseConditionKeyArray) ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput() ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBaseConditionKeyArray) ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionBaseConditionKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBaseConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyOutput) ToProcessgroupNamingConditionConditionBaseConditionKeyOutput() ProcessgroupNamingConditionConditionBaseConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyOutput) ToProcessgroupNamingConditionConditionBaseConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBaseConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBaseConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBaseConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput() ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionBaseConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionBaseConditionKey {
		return vs[0].([]ProcessgroupNamingConditionConditionBaseConditionKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionBaseConditionKeyOutput)
}

type ProcessgroupNamingConditionConditionBitness struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionBitnessInput is an input type that accepts ProcessgroupNamingConditionConditionBitnessArgs and ProcessgroupNamingConditionConditionBitnessOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBitnessInput` via:
//
//	ProcessgroupNamingConditionConditionBitnessArgs{...}
type ProcessgroupNamingConditionConditionBitnessInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBitnessOutput() ProcessgroupNamingConditionConditionBitnessOutput
	ToProcessgroupNamingConditionConditionBitnessOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBitnessOutput
}

type ProcessgroupNamingConditionConditionBitnessArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionBitnessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBitness)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBitnessArgs) ToProcessgroupNamingConditionConditionBitnessOutput() ProcessgroupNamingConditionConditionBitnessOutput {
	return i.ToProcessgroupNamingConditionConditionBitnessOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBitnessArgs) ToProcessgroupNamingConditionConditionBitnessOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBitnessOutput)
}

// ProcessgroupNamingConditionConditionBitnessArrayInput is an input type that accepts ProcessgroupNamingConditionConditionBitnessArray and ProcessgroupNamingConditionConditionBitnessArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBitnessArrayInput` via:
//
//	ProcessgroupNamingConditionConditionBitnessArray{ ProcessgroupNamingConditionConditionBitnessArgs{...} }
type ProcessgroupNamingConditionConditionBitnessArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBitnessArrayOutput() ProcessgroupNamingConditionConditionBitnessArrayOutput
	ToProcessgroupNamingConditionConditionBitnessArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBitnessArrayOutput
}

type ProcessgroupNamingConditionConditionBitnessArray []ProcessgroupNamingConditionConditionBitnessInput

func (ProcessgroupNamingConditionConditionBitnessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBitness)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBitnessArray) ToProcessgroupNamingConditionConditionBitnessArrayOutput() ProcessgroupNamingConditionConditionBitnessArrayOutput {
	return i.ToProcessgroupNamingConditionConditionBitnessArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBitnessArray) ToProcessgroupNamingConditionConditionBitnessArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBitnessArrayOutput)
}

type ProcessgroupNamingConditionConditionBitnessOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBitnessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBitness)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBitnessOutput) ToProcessgroupNamingConditionConditionBitnessOutput() ProcessgroupNamingConditionConditionBitnessOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessOutput) ToProcessgroupNamingConditionConditionBitnessOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitness) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBitnessOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitness) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionBitnessOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitness) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBitnessOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitness) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionBitnessArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBitnessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBitness)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBitnessArrayOutput) ToProcessgroupNamingConditionConditionBitnessArrayOutput() ProcessgroupNamingConditionConditionBitnessArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessArrayOutput) ToProcessgroupNamingConditionConditionBitnessArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionBitnessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionBitness {
		return vs[0].([]ProcessgroupNamingConditionConditionBitness)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionBitnessOutput)
}

type ProcessgroupNamingConditionConditionBitnessComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionBitnessComparisionInput is an input type that accepts ProcessgroupNamingConditionConditionBitnessComparisionArgs and ProcessgroupNamingConditionConditionBitnessComparisionOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBitnessComparisionInput` via:
//
//	ProcessgroupNamingConditionConditionBitnessComparisionArgs{...}
type ProcessgroupNamingConditionConditionBitnessComparisionInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBitnessComparisionOutput() ProcessgroupNamingConditionConditionBitnessComparisionOutput
	ToProcessgroupNamingConditionConditionBitnessComparisionOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBitnessComparisionOutput
}

type ProcessgroupNamingConditionConditionBitnessComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionBitnessComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBitnessComparisionArgs) ToProcessgroupNamingConditionConditionBitnessComparisionOutput() ProcessgroupNamingConditionConditionBitnessComparisionOutput {
	return i.ToProcessgroupNamingConditionConditionBitnessComparisionOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBitnessComparisionArgs) ToProcessgroupNamingConditionConditionBitnessComparisionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBitnessComparisionOutput)
}

// ProcessgroupNamingConditionConditionBitnessComparisionArrayInput is an input type that accepts ProcessgroupNamingConditionConditionBitnessComparisionArray and ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionBitnessComparisionArrayInput` via:
//
//	ProcessgroupNamingConditionConditionBitnessComparisionArray{ ProcessgroupNamingConditionConditionBitnessComparisionArgs{...} }
type ProcessgroupNamingConditionConditionBitnessComparisionArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutput() ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput
	ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput
}

type ProcessgroupNamingConditionConditionBitnessComparisionArray []ProcessgroupNamingConditionConditionBitnessComparisionInput

func (ProcessgroupNamingConditionConditionBitnessComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionBitnessComparisionArray) ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutput() ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput {
	return i.ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionBitnessComparisionArray) ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput)
}

type ProcessgroupNamingConditionConditionBitnessComparisionOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBitnessComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) ToProcessgroupNamingConditionConditionBitnessComparisionOutput() ProcessgroupNamingConditionConditionBitnessComparisionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) ToProcessgroupNamingConditionConditionBitnessComparisionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessComparisionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitnessComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitnessComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitnessComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitnessComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionBitnessComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput) ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutput() ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput) ToProcessgroupNamingConditionConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionBitnessComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionBitnessComparision {
		return vs[0].([]ProcessgroupNamingConditionConditionBitnessComparision)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionBitnessComparisionOutput)
}

type ProcessgroupNamingConditionConditionCloudType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionCloudTypeInput is an input type that accepts ProcessgroupNamingConditionConditionCloudTypeArgs and ProcessgroupNamingConditionConditionCloudTypeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCloudTypeInput` via:
//
//	ProcessgroupNamingConditionConditionCloudTypeArgs{...}
type ProcessgroupNamingConditionConditionCloudTypeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCloudTypeOutput() ProcessgroupNamingConditionConditionCloudTypeOutput
	ToProcessgroupNamingConditionConditionCloudTypeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCloudTypeOutput
}

type ProcessgroupNamingConditionConditionCloudTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionCloudTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCloudTypeArgs) ToProcessgroupNamingConditionConditionCloudTypeOutput() ProcessgroupNamingConditionConditionCloudTypeOutput {
	return i.ToProcessgroupNamingConditionConditionCloudTypeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCloudTypeArgs) ToProcessgroupNamingConditionConditionCloudTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCloudTypeOutput)
}

// ProcessgroupNamingConditionConditionCloudTypeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCloudTypeArray and ProcessgroupNamingConditionConditionCloudTypeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCloudTypeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCloudTypeArray{ ProcessgroupNamingConditionConditionCloudTypeArgs{...} }
type ProcessgroupNamingConditionConditionCloudTypeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCloudTypeArrayOutput() ProcessgroupNamingConditionConditionCloudTypeArrayOutput
	ToProcessgroupNamingConditionConditionCloudTypeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCloudTypeArrayOutput
}

type ProcessgroupNamingConditionConditionCloudTypeArray []ProcessgroupNamingConditionConditionCloudTypeInput

func (ProcessgroupNamingConditionConditionCloudTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCloudType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCloudTypeArray) ToProcessgroupNamingConditionConditionCloudTypeArrayOutput() ProcessgroupNamingConditionConditionCloudTypeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCloudTypeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCloudTypeArray) ToProcessgroupNamingConditionConditionCloudTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCloudTypeArrayOutput)
}

type ProcessgroupNamingConditionConditionCloudTypeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCloudTypeOutput) ToProcessgroupNamingConditionConditionCloudTypeOutput() ProcessgroupNamingConditionConditionCloudTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeOutput) ToProcessgroupNamingConditionConditionCloudTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCloudTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCloudTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCloudTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCloudTypeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCloudTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCloudType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCloudTypeArrayOutput) ToProcessgroupNamingConditionConditionCloudTypeArrayOutput() ProcessgroupNamingConditionConditionCloudTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeArrayOutput) ToProcessgroupNamingConditionConditionCloudTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCloudTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCloudType {
		return vs[0].([]ProcessgroupNamingConditionConditionCloudType)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCloudTypeOutput)
}

type ProcessgroupNamingConditionConditionCloudTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionCloudTypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionCloudTypeComparisonArgs and ProcessgroupNamingConditionConditionCloudTypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCloudTypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionCloudTypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionCloudTypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCloudTypeComparisonOutput() ProcessgroupNamingConditionConditionCloudTypeComparisonOutput
	ToProcessgroupNamingConditionConditionCloudTypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCloudTypeComparisonOutput
}

type ProcessgroupNamingConditionConditionCloudTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionCloudTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCloudTypeComparisonArgs) ToProcessgroupNamingConditionConditionCloudTypeComparisonOutput() ProcessgroupNamingConditionConditionCloudTypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionCloudTypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCloudTypeComparisonArgs) ToProcessgroupNamingConditionConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCloudTypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionCloudTypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCloudTypeComparisonArray and ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCloudTypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCloudTypeComparisonArray{ ProcessgroupNamingConditionConditionCloudTypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionCloudTypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionCloudTypeComparisonArray []ProcessgroupNamingConditionConditionCloudTypeComparisonInput

func (ProcessgroupNamingConditionConditionCloudTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCloudTypeComparisonArray) ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCloudTypeComparisonArray) ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionCloudTypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) ToProcessgroupNamingConditionConditionCloudTypeComparisonOutput() ProcessgroupNamingConditionConditionCloudTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) ToProcessgroupNamingConditionConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCloudTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCloudTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCloudTypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionCloudTypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCloudTypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionComparison struct {
	Negate   *bool   `pulumi:"negate"`
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionComparisonArgs and ProcessgroupNamingConditionConditionComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionComparisonArgs{...}
type ProcessgroupNamingConditionConditionComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionComparisonOutput() ProcessgroupNamingConditionConditionComparisonOutput
	ToProcessgroupNamingConditionConditionComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionComparisonOutput
}

type ProcessgroupNamingConditionConditionComparisonArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionComparisonArgs) ToProcessgroupNamingConditionConditionComparisonOutput() ProcessgroupNamingConditionConditionComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionComparisonArgs) ToProcessgroupNamingConditionConditionComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionComparisonOutput)
}

// ProcessgroupNamingConditionConditionComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionComparisonArray and ProcessgroupNamingConditionConditionComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionComparisonArray{ ProcessgroupNamingConditionConditionComparisonArgs{...} }
type ProcessgroupNamingConditionConditionComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionComparisonArrayOutput() ProcessgroupNamingConditionConditionComparisonArrayOutput
	ToProcessgroupNamingConditionConditionComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionComparisonArray []ProcessgroupNamingConditionConditionComparisonInput

func (ProcessgroupNamingConditionConditionComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionComparisonArray) ToProcessgroupNamingConditionConditionComparisonArrayOutput() ProcessgroupNamingConditionConditionComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionComparisonArray) ToProcessgroupNamingConditionConditionComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionComparisonOutput) ToProcessgroupNamingConditionConditionComparisonOutput() ProcessgroupNamingConditionConditionComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionComparisonOutput) ToProcessgroupNamingConditionConditionComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionComparisonOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionComparison) string { return v.Type }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionComparisonArrayOutput) ToProcessgroupNamingConditionConditionComparisonArrayOutput() ProcessgroupNamingConditionConditionComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionComparisonArrayOutput) ToProcessgroupNamingConditionConditionComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionComparisonOutput)
}

type ProcessgroupNamingConditionConditionCustomApplicationType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionCustomApplicationTypeInput is an input type that accepts ProcessgroupNamingConditionConditionCustomApplicationTypeArgs and ProcessgroupNamingConditionConditionCustomApplicationTypeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomApplicationTypeInput` via:
//
//	ProcessgroupNamingConditionConditionCustomApplicationTypeArgs{...}
type ProcessgroupNamingConditionConditionCustomApplicationTypeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomApplicationTypeOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeOutput
	ToProcessgroupNamingConditionConditionCustomApplicationTypeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeOutput
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionCustomApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeArgs) ToProcessgroupNamingConditionConditionCustomApplicationTypeOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeOutput {
	return i.ToProcessgroupNamingConditionConditionCustomApplicationTypeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeArgs) ToProcessgroupNamingConditionConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomApplicationTypeOutput)
}

// ProcessgroupNamingConditionConditionCustomApplicationTypeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCustomApplicationTypeArray and ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomApplicationTypeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCustomApplicationTypeArray{ ProcessgroupNamingConditionConditionCustomApplicationTypeArgs{...} }
type ProcessgroupNamingConditionConditionCustomApplicationTypeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput
	ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeArray []ProcessgroupNamingConditionConditionCustomApplicationTypeInput

func (ProcessgroupNamingConditionConditionCustomApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeArray) ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeArray) ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput)
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCustomApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCustomApplicationType {
		return vs[0].([]ProcessgroupNamingConditionConditionCustomApplicationType)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCustomApplicationTypeOutput)
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs and ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput
	ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray and ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray{ ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray []ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonInput

func (ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCustomApplicationTypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionCustomApplicationTypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadata struct {
	Attribute  string                                                           `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey `pulumi:"dynamicKey"`
	Unknowns   *string                                                          `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomHostMetadataInput is an input type that accepts ProcessgroupNamingConditionConditionCustomHostMetadataArgs and ProcessgroupNamingConditionConditionCustomHostMetadataOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomHostMetadataInput` via:
//
//	ProcessgroupNamingConditionConditionCustomHostMetadataArgs{...}
type ProcessgroupNamingConditionConditionCustomHostMetadataInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomHostMetadataOutput() ProcessgroupNamingConditionConditionCustomHostMetadataOutput
	ToProcessgroupNamingConditionConditionCustomHostMetadataOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataOutput
}

type ProcessgroupNamingConditionConditionCustomHostMetadataArgs struct {
	Attribute  pulumi.StringInput                                                    `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput                                                 `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomHostMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataOutput() ProcessgroupNamingConditionConditionCustomHostMetadataOutput {
	return i.ToProcessgroupNamingConditionConditionCustomHostMetadataOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomHostMetadataOutput)
}

// ProcessgroupNamingConditionConditionCustomHostMetadataArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCustomHostMetadataArray and ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomHostMetadataArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCustomHostMetadataArray{ ProcessgroupNamingConditionConditionCustomHostMetadataArgs{...} }
type ProcessgroupNamingConditionConditionCustomHostMetadataArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput() ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput
	ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput
}

type ProcessgroupNamingConditionConditionCustomHostMetadataArray []ProcessgroupNamingConditionConditionCustomHostMetadataInput

func (ProcessgroupNamingConditionConditionCustomHostMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataArray) ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput() ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataArray) ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomHostMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataOutput() ProcessgroupNamingConditionConditionCustomHostMetadataOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataOutput) DynamicKey() ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadata) ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey {
		return v.DynamicKey
	}).(ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput() ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCustomHostMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCustomHostMetadata {
		return vs[0].([]ProcessgroupNamingConditionConditionCustomHostMetadata)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCustomHostMetadataOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey struct {
	Attribute  string                                                                       `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyInput is an input type that accepts ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs and ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyInput` via:
//
//	ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs{...}
type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput
	ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput                                                                `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return i.ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput)
}

// ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray and ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray{ ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs{...} }
type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput
	ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray []ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyInput

func (ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) DynamicKey() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey {
		return vs[0].([]ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput is an input type that accepts ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs and ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput` via:
//
//	ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs{...}
type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput
	ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return i.ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) string {
		return v.Source
	}).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyInput is an input type that accepts ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs and ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyInput` via:
//
//	ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs{...}
type ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput
	ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput
}

type ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return i.ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput)
}

type ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadata struct {
	Attribute  string                                                              `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey `pulumi:"dynamicKey"`
	Unknowns   *string                                                             `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomProcessMetadataInput is an input type that accepts ProcessgroupNamingConditionConditionCustomProcessMetadataArgs and ProcessgroupNamingConditionConditionCustomProcessMetadataOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomProcessMetadataInput` via:
//
//	ProcessgroupNamingConditionConditionCustomProcessMetadataArgs{...}
type ProcessgroupNamingConditionConditionCustomProcessMetadataInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomProcessMetadataOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataOutput
	ToProcessgroupNamingConditionConditionCustomProcessMetadataOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataOutput
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataArgs struct {
	Attribute  pulumi.StringInput                                                       `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput                                                    `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataOutput {
	return i.ToProcessgroupNamingConditionConditionCustomProcessMetadataOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomProcessMetadataOutput)
}

// ProcessgroupNamingConditionConditionCustomProcessMetadataArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCustomProcessMetadataArray and ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomProcessMetadataArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCustomProcessMetadataArray{ ProcessgroupNamingConditionConditionCustomProcessMetadataArgs{...} }
type ProcessgroupNamingConditionConditionCustomProcessMetadataArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput
	ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataArray []ProcessgroupNamingConditionConditionCustomProcessMetadataInput

func (ProcessgroupNamingConditionConditionCustomProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataArray) ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataArray) ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataOutput) DynamicKey() ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadata) ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey {
		return v.DynamicKey
	}).(ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCustomProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCustomProcessMetadata {
		return vs[0].([]ProcessgroupNamingConditionConditionCustomProcessMetadata)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCustomProcessMetadataOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey struct {
	Attribute  string                                                                          `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyInput is an input type that accepts ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs and ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyInput` via:
//
//	ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs{...}
type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput
	ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput                                                                   `pulumi:"attribute"`
	DynamicKey ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return i.ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput)
}

// ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray and ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray{ ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs{...} }
type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput
	ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray []ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyInput

func (ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey) string {
		return v.Attribute
	}).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) DynamicKey() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey {
		return vs[0].([]ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput is an input type that accepts ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs and ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput` via:
//
//	ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{...}
type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
	ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return i.ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) string {
		return v.Source
	}).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyInput is an input type that accepts ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs and ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyInput` via:
//
//	ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs{...}
type ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput
	ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return i.ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput)
}

type ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ToProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionDatabaseTopology struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionDatabaseTopologyInput is an input type that accepts ProcessgroupNamingConditionConditionDatabaseTopologyArgs and ProcessgroupNamingConditionConditionDatabaseTopologyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDatabaseTopologyInput` via:
//
//	ProcessgroupNamingConditionConditionDatabaseTopologyArgs{...}
type ProcessgroupNamingConditionConditionDatabaseTopologyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDatabaseTopologyOutput() ProcessgroupNamingConditionConditionDatabaseTopologyOutput
	ToProcessgroupNamingConditionConditionDatabaseTopologyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyOutput
}

type ProcessgroupNamingConditionConditionDatabaseTopologyArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionDatabaseTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyArgs) ToProcessgroupNamingConditionConditionDatabaseTopologyOutput() ProcessgroupNamingConditionConditionDatabaseTopologyOutput {
	return i.ToProcessgroupNamingConditionConditionDatabaseTopologyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyArgs) ToProcessgroupNamingConditionConditionDatabaseTopologyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDatabaseTopologyOutput)
}

// ProcessgroupNamingConditionConditionDatabaseTopologyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionDatabaseTopologyArray and ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDatabaseTopologyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionDatabaseTopologyArray{ ProcessgroupNamingConditionConditionDatabaseTopologyArgs{...} }
type ProcessgroupNamingConditionConditionDatabaseTopologyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput() ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput
	ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput
}

type ProcessgroupNamingConditionConditionDatabaseTopologyArray []ProcessgroupNamingConditionConditionDatabaseTopologyInput

func (ProcessgroupNamingConditionConditionDatabaseTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyArray) ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput() ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyArray) ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput)
}

type ProcessgroupNamingConditionConditionDatabaseTopologyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDatabaseTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyOutput() ProcessgroupNamingConditionConditionDatabaseTopologyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopology) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput() ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionDatabaseTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionDatabaseTopology {
		return vs[0].([]ProcessgroupNamingConditionConditionDatabaseTopology)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionDatabaseTopologyOutput)
}

type ProcessgroupNamingConditionConditionDatabaseTopologyComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionDatabaseTopologyComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs and ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDatabaseTopologyComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs{...}
type ProcessgroupNamingConditionConditionDatabaseTopologyComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput
	ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput
}

type ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput)
}

// ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray and ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray{ ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs{...} }
type ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput
	ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray []ProcessgroupNamingConditionConditionDatabaseTopologyComparisonInput

func (ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDatabaseTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ToProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionDatabaseTopologyComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionDatabaseTopologyComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput)
}

type ProcessgroupNamingConditionConditionDcrumDecoder struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionDcrumDecoderInput is an input type that accepts ProcessgroupNamingConditionConditionDcrumDecoderArgs and ProcessgroupNamingConditionConditionDcrumDecoderOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDcrumDecoderInput` via:
//
//	ProcessgroupNamingConditionConditionDcrumDecoderArgs{...}
type ProcessgroupNamingConditionConditionDcrumDecoderInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDcrumDecoderOutput() ProcessgroupNamingConditionConditionDcrumDecoderOutput
	ToProcessgroupNamingConditionConditionDcrumDecoderOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDcrumDecoderOutput
}

type ProcessgroupNamingConditionConditionDcrumDecoderArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionDcrumDecoderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderArgs) ToProcessgroupNamingConditionConditionDcrumDecoderOutput() ProcessgroupNamingConditionConditionDcrumDecoderOutput {
	return i.ToProcessgroupNamingConditionConditionDcrumDecoderOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderArgs) ToProcessgroupNamingConditionConditionDcrumDecoderOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDcrumDecoderOutput)
}

// ProcessgroupNamingConditionConditionDcrumDecoderArrayInput is an input type that accepts ProcessgroupNamingConditionConditionDcrumDecoderArray and ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDcrumDecoderArrayInput` via:
//
//	ProcessgroupNamingConditionConditionDcrumDecoderArray{ ProcessgroupNamingConditionConditionDcrumDecoderArgs{...} }
type ProcessgroupNamingConditionConditionDcrumDecoderArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutput() ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput
	ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput
}

type ProcessgroupNamingConditionConditionDcrumDecoderArray []ProcessgroupNamingConditionConditionDcrumDecoderInput

func (ProcessgroupNamingConditionConditionDcrumDecoderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderArray) ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutput() ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput {
	return i.ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderArray) ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput)
}

type ProcessgroupNamingConditionConditionDcrumDecoderOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDcrumDecoderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderOutput) ToProcessgroupNamingConditionConditionDcrumDecoderOutput() ProcessgroupNamingConditionConditionDcrumDecoderOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderOutput) ToProcessgroupNamingConditionConditionDcrumDecoderOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoder) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoder) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoder) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoder) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput) ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutput() ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput) ToProcessgroupNamingConditionConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionDcrumDecoderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionDcrumDecoder {
		return vs[0].([]ProcessgroupNamingConditionConditionDcrumDecoder)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionDcrumDecoderOutput)
}

type ProcessgroupNamingConditionConditionDcrumDecoderComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionDcrumDecoderComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs and ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDcrumDecoderComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs{...}
type ProcessgroupNamingConditionConditionDcrumDecoderComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput() ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput
	ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput
}

type ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput() ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput)
}

// ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray and ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray{ ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs{...} }
type ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput() ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput
	ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray []ProcessgroupNamingConditionConditionDcrumDecoderComparisonInput

func (ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput() ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput() ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoderComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoderComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoderComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoderComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionDcrumDecoderComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput() ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput) ToProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionDcrumDecoderComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionDcrumDecoderComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput)
}

type ProcessgroupNamingConditionConditionEntity struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionEntityInput is an input type that accepts ProcessgroupNamingConditionConditionEntityArgs and ProcessgroupNamingConditionConditionEntityOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionEntityInput` via:
//
//	ProcessgroupNamingConditionConditionEntityArgs{...}
type ProcessgroupNamingConditionConditionEntityInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionEntityOutput() ProcessgroupNamingConditionConditionEntityOutput
	ToProcessgroupNamingConditionConditionEntityOutputWithContext(context.Context) ProcessgroupNamingConditionConditionEntityOutput
}

type ProcessgroupNamingConditionConditionEntityArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionEntity)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionEntityArgs) ToProcessgroupNamingConditionConditionEntityOutput() ProcessgroupNamingConditionConditionEntityOutput {
	return i.ToProcessgroupNamingConditionConditionEntityOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionEntityArgs) ToProcessgroupNamingConditionConditionEntityOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionEntityOutput)
}

// ProcessgroupNamingConditionConditionEntityArrayInput is an input type that accepts ProcessgroupNamingConditionConditionEntityArray and ProcessgroupNamingConditionConditionEntityArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionEntityArrayInput` via:
//
//	ProcessgroupNamingConditionConditionEntityArray{ ProcessgroupNamingConditionConditionEntityArgs{...} }
type ProcessgroupNamingConditionConditionEntityArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionEntityArrayOutput() ProcessgroupNamingConditionConditionEntityArrayOutput
	ToProcessgroupNamingConditionConditionEntityArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionEntityArrayOutput
}

type ProcessgroupNamingConditionConditionEntityArray []ProcessgroupNamingConditionConditionEntityInput

func (ProcessgroupNamingConditionConditionEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionEntity)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionEntityArray) ToProcessgroupNamingConditionConditionEntityArrayOutput() ProcessgroupNamingConditionConditionEntityArrayOutput {
	return i.ToProcessgroupNamingConditionConditionEntityArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionEntityArray) ToProcessgroupNamingConditionConditionEntityArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionEntityArrayOutput)
}

type ProcessgroupNamingConditionConditionEntityOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionEntity)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionEntityOutput) ToProcessgroupNamingConditionConditionEntityOutput() ProcessgroupNamingConditionConditionEntityOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityOutput) ToProcessgroupNamingConditionConditionEntityOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntity) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionEntityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntity) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionEntityOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntity) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionEntityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntity) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionEntityArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionEntity)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionEntityArrayOutput) ToProcessgroupNamingConditionConditionEntityArrayOutput() ProcessgroupNamingConditionConditionEntityArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityArrayOutput) ToProcessgroupNamingConditionConditionEntityArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionEntity {
		return vs[0].([]ProcessgroupNamingConditionConditionEntity)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionEntityOutput)
}

type ProcessgroupNamingConditionConditionEntityIdComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionEntityIdComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionEntityIdComparisonArgs and ProcessgroupNamingConditionConditionEntityIdComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionEntityIdComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionEntityIdComparisonArgs{...}
type ProcessgroupNamingConditionConditionEntityIdComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionEntityIdComparisonOutput() ProcessgroupNamingConditionConditionEntityIdComparisonOutput
	ToProcessgroupNamingConditionConditionEntityIdComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionEntityIdComparisonOutput
}

type ProcessgroupNamingConditionConditionEntityIdComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionEntityIdComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionEntityIdComparisonArgs) ToProcessgroupNamingConditionConditionEntityIdComparisonOutput() ProcessgroupNamingConditionConditionEntityIdComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionEntityIdComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionEntityIdComparisonArgs) ToProcessgroupNamingConditionConditionEntityIdComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityIdComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionEntityIdComparisonOutput)
}

// ProcessgroupNamingConditionConditionEntityIdComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionEntityIdComparisonArray and ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionEntityIdComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionEntityIdComparisonArray{ ProcessgroupNamingConditionConditionEntityIdComparisonArgs{...} }
type ProcessgroupNamingConditionConditionEntityIdComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput() ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput
	ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionEntityIdComparisonArray []ProcessgroupNamingConditionConditionEntityIdComparisonInput

func (ProcessgroupNamingConditionConditionEntityIdComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionEntityIdComparisonArray) ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput() ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionEntityIdComparisonArray) ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionEntityIdComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionEntityIdComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) ToProcessgroupNamingConditionConditionEntityIdComparisonOutput() ProcessgroupNamingConditionConditionEntityIdComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) ToProcessgroupNamingConditionConditionEntityIdComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityIdComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntityIdComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntityIdComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntityIdComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntityIdComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionEntityIdComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput) ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput() ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput) ToProcessgroupNamingConditionConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionEntityIdComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionEntityIdComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionEntityIdComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionEntityIdComparisonOutput)
}

type ProcessgroupNamingConditionConditionHostTech struct {
	Negate   *bool                                              `pulumi:"negate"`
	Operator string                                             `pulumi:"operator"`
	Unknowns *string                                            `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionHostTechValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionHostTechInput is an input type that accepts ProcessgroupNamingConditionConditionHostTechArgs and ProcessgroupNamingConditionConditionHostTechOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHostTechInput` via:
//
//	ProcessgroupNamingConditionConditionHostTechArgs{...}
type ProcessgroupNamingConditionConditionHostTechInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHostTechOutput() ProcessgroupNamingConditionConditionHostTechOutput
	ToProcessgroupNamingConditionConditionHostTechOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHostTechOutput
}

type ProcessgroupNamingConditionConditionHostTechArgs struct {
	Negate   pulumi.BoolPtrInput                                       `pulumi:"negate"`
	Operator pulumi.StringInput                                        `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                     `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionHostTechValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionHostTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTech)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHostTechArgs) ToProcessgroupNamingConditionConditionHostTechOutput() ProcessgroupNamingConditionConditionHostTechOutput {
	return i.ToProcessgroupNamingConditionConditionHostTechOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHostTechArgs) ToProcessgroupNamingConditionConditionHostTechOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHostTechOutput)
}

// ProcessgroupNamingConditionConditionHostTechArrayInput is an input type that accepts ProcessgroupNamingConditionConditionHostTechArray and ProcessgroupNamingConditionConditionHostTechArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHostTechArrayInput` via:
//
//	ProcessgroupNamingConditionConditionHostTechArray{ ProcessgroupNamingConditionConditionHostTechArgs{...} }
type ProcessgroupNamingConditionConditionHostTechArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHostTechArrayOutput() ProcessgroupNamingConditionConditionHostTechArrayOutput
	ToProcessgroupNamingConditionConditionHostTechArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHostTechArrayOutput
}

type ProcessgroupNamingConditionConditionHostTechArray []ProcessgroupNamingConditionConditionHostTechInput

func (ProcessgroupNamingConditionConditionHostTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionHostTech)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHostTechArray) ToProcessgroupNamingConditionConditionHostTechArrayOutput() ProcessgroupNamingConditionConditionHostTechArrayOutput {
	return i.ToProcessgroupNamingConditionConditionHostTechArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHostTechArray) ToProcessgroupNamingConditionConditionHostTechArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHostTechArrayOutput)
}

type ProcessgroupNamingConditionConditionHostTechOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHostTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTech)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHostTechOutput) ToProcessgroupNamingConditionConditionHostTechOutput() ProcessgroupNamingConditionConditionHostTechOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechOutput) ToProcessgroupNamingConditionConditionHostTechOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTech) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechOutput) Value() ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTech) *ProcessgroupNamingConditionConditionHostTechValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionHostTechValuePtrOutput)
}

type ProcessgroupNamingConditionConditionHostTechArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHostTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionHostTech)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHostTechArrayOutput) ToProcessgroupNamingConditionConditionHostTechArrayOutput() ProcessgroupNamingConditionConditionHostTechArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechArrayOutput) ToProcessgroupNamingConditionConditionHostTechArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionHostTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionHostTech {
		return vs[0].([]ProcessgroupNamingConditionConditionHostTech)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionHostTechOutput)
}

type ProcessgroupNamingConditionConditionHostTechValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ProcessgroupNamingConditionConditionHostTechValueInput is an input type that accepts ProcessgroupNamingConditionConditionHostTechValueArgs and ProcessgroupNamingConditionConditionHostTechValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHostTechValueInput` via:
//
//	ProcessgroupNamingConditionConditionHostTechValueArgs{...}
type ProcessgroupNamingConditionConditionHostTechValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHostTechValueOutput() ProcessgroupNamingConditionConditionHostTechValueOutput
	ToProcessgroupNamingConditionConditionHostTechValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHostTechValueOutput
}

type ProcessgroupNamingConditionConditionHostTechValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ProcessgroupNamingConditionConditionHostTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHostTechValueArgs) ToProcessgroupNamingConditionConditionHostTechValueOutput() ProcessgroupNamingConditionConditionHostTechValueOutput {
	return i.ToProcessgroupNamingConditionConditionHostTechValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHostTechValueArgs) ToProcessgroupNamingConditionConditionHostTechValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHostTechValueOutput)
}

func (i ProcessgroupNamingConditionConditionHostTechValueArgs) ToProcessgroupNamingConditionConditionHostTechValuePtrOutput() ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHostTechValueArgs) ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHostTechValueOutput).ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionHostTechValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionHostTechValueArgs, ProcessgroupNamingConditionConditionHostTechValuePtr and ProcessgroupNamingConditionConditionHostTechValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHostTechValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionHostTechValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionHostTechValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHostTechValuePtrOutput() ProcessgroupNamingConditionConditionHostTechValuePtrOutput
	ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHostTechValuePtrOutput
}

type processgroupNamingConditionConditionHostTechValuePtrType ProcessgroupNamingConditionConditionHostTechValueArgs

func ProcessgroupNamingConditionConditionHostTechValuePtr(v *ProcessgroupNamingConditionConditionHostTechValueArgs) ProcessgroupNamingConditionConditionHostTechValuePtrInput {
	return (*processgroupNamingConditionConditionHostTechValuePtrType)(v)
}

func (*processgroupNamingConditionConditionHostTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionHostTechValuePtrType) ToProcessgroupNamingConditionConditionHostTechValuePtrOutput() ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionHostTechValuePtrType) ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHostTechValuePtrOutput)
}

type ProcessgroupNamingConditionConditionHostTechValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHostTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) ToProcessgroupNamingConditionConditionHostTechValueOutput() ProcessgroupNamingConditionConditionHostTechValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) ToProcessgroupNamingConditionConditionHostTechValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) ToProcessgroupNamingConditionConditionHostTechValuePtrOutput() ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionHostTechValue) *ProcessgroupNamingConditionConditionHostTechValue {
		return &v
	}).(ProcessgroupNamingConditionConditionHostTechValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHostTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionHostTechValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHostTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHostTechValuePtrOutput) ToProcessgroupNamingConditionConditionHostTechValuePtrOutput() ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechValuePtrOutput) ToProcessgroupNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHostTechValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHostTechValuePtrOutput) Elem() ProcessgroupNamingConditionConditionHostTechValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionHostTechValue) ProcessgroupNamingConditionConditionHostTechValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionHostTechValue
		return ret
	}).(ProcessgroupNamingConditionConditionHostTechValueOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHostTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionHypervisor struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionHypervisorInput is an input type that accepts ProcessgroupNamingConditionConditionHypervisorArgs and ProcessgroupNamingConditionConditionHypervisorOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHypervisorInput` via:
//
//	ProcessgroupNamingConditionConditionHypervisorArgs{...}
type ProcessgroupNamingConditionConditionHypervisorInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHypervisorOutput() ProcessgroupNamingConditionConditionHypervisorOutput
	ToProcessgroupNamingConditionConditionHypervisorOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHypervisorOutput
}

type ProcessgroupNamingConditionConditionHypervisorArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionHypervisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisor)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHypervisorArgs) ToProcessgroupNamingConditionConditionHypervisorOutput() ProcessgroupNamingConditionConditionHypervisorOutput {
	return i.ToProcessgroupNamingConditionConditionHypervisorOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHypervisorArgs) ToProcessgroupNamingConditionConditionHypervisorOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHypervisorOutput)
}

// ProcessgroupNamingConditionConditionHypervisorArrayInput is an input type that accepts ProcessgroupNamingConditionConditionHypervisorArray and ProcessgroupNamingConditionConditionHypervisorArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHypervisorArrayInput` via:
//
//	ProcessgroupNamingConditionConditionHypervisorArray{ ProcessgroupNamingConditionConditionHypervisorArgs{...} }
type ProcessgroupNamingConditionConditionHypervisorArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHypervisorArrayOutput() ProcessgroupNamingConditionConditionHypervisorArrayOutput
	ToProcessgroupNamingConditionConditionHypervisorArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHypervisorArrayOutput
}

type ProcessgroupNamingConditionConditionHypervisorArray []ProcessgroupNamingConditionConditionHypervisorInput

func (ProcessgroupNamingConditionConditionHypervisorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionHypervisor)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHypervisorArray) ToProcessgroupNamingConditionConditionHypervisorArrayOutput() ProcessgroupNamingConditionConditionHypervisorArrayOutput {
	return i.ToProcessgroupNamingConditionConditionHypervisorArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHypervisorArray) ToProcessgroupNamingConditionConditionHypervisorArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHypervisorArrayOutput)
}

type ProcessgroupNamingConditionConditionHypervisorOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHypervisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisor)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHypervisorOutput) ToProcessgroupNamingConditionConditionHypervisorOutput() ProcessgroupNamingConditionConditionHypervisorOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorOutput) ToProcessgroupNamingConditionConditionHypervisorOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisor) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHypervisorOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisor) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionHypervisorOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisor) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHypervisorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisor) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionHypervisorArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHypervisorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionHypervisor)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHypervisorArrayOutput) ToProcessgroupNamingConditionConditionHypervisorArrayOutput() ProcessgroupNamingConditionConditionHypervisorArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorArrayOutput) ToProcessgroupNamingConditionConditionHypervisorArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionHypervisorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionHypervisor {
		return vs[0].([]ProcessgroupNamingConditionConditionHypervisor)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionHypervisorOutput)
}

type ProcessgroupNamingConditionConditionHypervisorTypeComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionHypervisorTypeComparisionInput is an input type that accepts ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs and ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHypervisorTypeComparisionInput` via:
//
//	ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs{...}
type ProcessgroupNamingConditionConditionHypervisorTypeComparisionInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput() ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput
	ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput
}

type ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput() ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput {
	return i.ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput)
}

// ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayInput is an input type that accepts ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray and ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayInput` via:
//
//	ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray{ ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs{...} }
type ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput() ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput
	ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput
}

type ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray []ProcessgroupNamingConditionConditionHypervisorTypeComparisionInput

func (ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput() ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return i.ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput)
}

type ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput() ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisorTypeComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisorTypeComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisorTypeComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisorTypeComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionHypervisorTypeComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput() ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput) ToProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionHypervisorTypeComparision {
		return vs[0].([]ProcessgroupNamingConditionConditionHypervisorTypeComparision)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput)
}

type ProcessgroupNamingConditionConditionIndexedName struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedNameInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedNameArgs and ProcessgroupNamingConditionConditionIndexedNameOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedNameInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedNameArgs{...}
type ProcessgroupNamingConditionConditionIndexedNameInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedNameOutput() ProcessgroupNamingConditionConditionIndexedNameOutput
	ToProcessgroupNamingConditionConditionIndexedNameOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedNameOutput
}

type ProcessgroupNamingConditionConditionIndexedNameArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedName)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedNameArgs) ToProcessgroupNamingConditionConditionIndexedNameOutput() ProcessgroupNamingConditionConditionIndexedNameOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedNameOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedNameArgs) ToProcessgroupNamingConditionConditionIndexedNameOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedNameOutput)
}

// ProcessgroupNamingConditionConditionIndexedNameArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedNameArray and ProcessgroupNamingConditionConditionIndexedNameArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedNameArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedNameArray{ ProcessgroupNamingConditionConditionIndexedNameArgs{...} }
type ProcessgroupNamingConditionConditionIndexedNameArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedNameArrayOutput() ProcessgroupNamingConditionConditionIndexedNameArrayOutput
	ToProcessgroupNamingConditionConditionIndexedNameArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedNameArrayOutput
}

type ProcessgroupNamingConditionConditionIndexedNameArray []ProcessgroupNamingConditionConditionIndexedNameInput

func (ProcessgroupNamingConditionConditionIndexedNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedName)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedNameArray) ToProcessgroupNamingConditionConditionIndexedNameArrayOutput() ProcessgroupNamingConditionConditionIndexedNameArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedNameArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedNameArray) ToProcessgroupNamingConditionConditionIndexedNameArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedNameArrayOutput)
}

type ProcessgroupNamingConditionConditionIndexedNameOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedName)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedNameOutput) ToProcessgroupNamingConditionConditionIndexedNameOutput() ProcessgroupNamingConditionConditionIndexedNameOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameOutput) ToProcessgroupNamingConditionConditionIndexedNameOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedName) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedNameOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedName) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedNameOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedName) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedNameOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedName) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedNameArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedName)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedNameArrayOutput) ToProcessgroupNamingConditionConditionIndexedNameArrayOutput() ProcessgroupNamingConditionConditionIndexedNameArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameArrayOutput) ToProcessgroupNamingConditionConditionIndexedNameArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIndexedNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIndexedName {
		return vs[0].([]ProcessgroupNamingConditionConditionIndexedName)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIndexedNameOutput)
}

type ProcessgroupNamingConditionConditionIndexedNameComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedNameComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedNameComparisonArgs and ProcessgroupNamingConditionConditionIndexedNameComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedNameComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedNameComparisonArgs{...}
type ProcessgroupNamingConditionConditionIndexedNameComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedNameComparisonOutput() ProcessgroupNamingConditionConditionIndexedNameComparisonOutput
	ToProcessgroupNamingConditionConditionIndexedNameComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedNameComparisonOutput
}

type ProcessgroupNamingConditionConditionIndexedNameComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedNameComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedNameComparisonArgs) ToProcessgroupNamingConditionConditionIndexedNameComparisonOutput() ProcessgroupNamingConditionConditionIndexedNameComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedNameComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedNameComparisonArgs) ToProcessgroupNamingConditionConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedNameComparisonOutput)
}

// ProcessgroupNamingConditionConditionIndexedNameComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedNameComparisonArray and ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedNameComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedNameComparisonArray{ ProcessgroupNamingConditionConditionIndexedNameComparisonArgs{...} }
type ProcessgroupNamingConditionConditionIndexedNameComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput
	ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionIndexedNameComparisonArray []ProcessgroupNamingConditionConditionIndexedNameComparisonInput

func (ProcessgroupNamingConditionConditionIndexedNameComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedNameComparisonArray) ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedNameComparisonArray) ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionIndexedNameComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) ToProcessgroupNamingConditionConditionIndexedNameComparisonOutput() ProcessgroupNamingConditionConditionIndexedNameComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) ToProcessgroupNamingConditionConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedNameComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedNameComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedNameComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedNameComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedNameComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput) ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput) ToProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIndexedNameComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIndexedNameComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionIndexedNameComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIndexedNameComparisonOutput)
}

type ProcessgroupNamingConditionConditionIndexedString struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedStringInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedStringArgs and ProcessgroupNamingConditionConditionIndexedStringOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedStringInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedStringArgs{...}
type ProcessgroupNamingConditionConditionIndexedStringInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedStringOutput() ProcessgroupNamingConditionConditionIndexedStringOutput
	ToProcessgroupNamingConditionConditionIndexedStringOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedStringOutput
}

type ProcessgroupNamingConditionConditionIndexedStringArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedString)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedStringArgs) ToProcessgroupNamingConditionConditionIndexedStringOutput() ProcessgroupNamingConditionConditionIndexedStringOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedStringOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedStringArgs) ToProcessgroupNamingConditionConditionIndexedStringOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedStringOutput)
}

// ProcessgroupNamingConditionConditionIndexedStringArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedStringArray and ProcessgroupNamingConditionConditionIndexedStringArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedStringArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedStringArray{ ProcessgroupNamingConditionConditionIndexedStringArgs{...} }
type ProcessgroupNamingConditionConditionIndexedStringArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedStringArrayOutput() ProcessgroupNamingConditionConditionIndexedStringArrayOutput
	ToProcessgroupNamingConditionConditionIndexedStringArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedStringArrayOutput
}

type ProcessgroupNamingConditionConditionIndexedStringArray []ProcessgroupNamingConditionConditionIndexedStringInput

func (ProcessgroupNamingConditionConditionIndexedStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedString)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedStringArray) ToProcessgroupNamingConditionConditionIndexedStringArrayOutput() ProcessgroupNamingConditionConditionIndexedStringArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedStringArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedStringArray) ToProcessgroupNamingConditionConditionIndexedStringArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedStringArrayOutput)
}

type ProcessgroupNamingConditionConditionIndexedStringOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedString)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedStringOutput) ToProcessgroupNamingConditionConditionIndexedStringOutput() ProcessgroupNamingConditionConditionIndexedStringOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringOutput) ToProcessgroupNamingConditionConditionIndexedStringOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedString) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedStringArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedString)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedStringArrayOutput) ToProcessgroupNamingConditionConditionIndexedStringArrayOutput() ProcessgroupNamingConditionConditionIndexedStringArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringArrayOutput) ToProcessgroupNamingConditionConditionIndexedStringArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIndexedStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIndexedString {
		return vs[0].([]ProcessgroupNamingConditionConditionIndexedString)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIndexedStringOutput)
}

type ProcessgroupNamingConditionConditionIndexedStringComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedStringComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedStringComparisonArgs and ProcessgroupNamingConditionConditionIndexedStringComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedStringComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedStringComparisonArgs{...}
type ProcessgroupNamingConditionConditionIndexedStringComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedStringComparisonOutput() ProcessgroupNamingConditionConditionIndexedStringComparisonOutput
	ToProcessgroupNamingConditionConditionIndexedStringComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedStringComparisonOutput
}

type ProcessgroupNamingConditionConditionIndexedStringComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedStringComparisonArgs) ToProcessgroupNamingConditionConditionIndexedStringComparisonOutput() ProcessgroupNamingConditionConditionIndexedStringComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedStringComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedStringComparisonArgs) ToProcessgroupNamingConditionConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedStringComparisonOutput)
}

// ProcessgroupNamingConditionConditionIndexedStringComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedStringComparisonArray and ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedStringComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedStringComparisonArray{ ProcessgroupNamingConditionConditionIndexedStringComparisonArgs{...} }
type ProcessgroupNamingConditionConditionIndexedStringComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput
	ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionIndexedStringComparisonArray []ProcessgroupNamingConditionConditionIndexedStringComparisonInput

func (ProcessgroupNamingConditionConditionIndexedStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedStringComparisonArray) ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedStringComparisonArray) ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionIndexedStringComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) ToProcessgroupNamingConditionConditionIndexedStringComparisonOutput() ProcessgroupNamingConditionConditionIndexedStringComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) ToProcessgroupNamingConditionConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput) ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput) ToProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIndexedStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIndexedStringComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionIndexedStringComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIndexedStringComparisonOutput)
}

type ProcessgroupNamingConditionConditionIndexedTag struct {
	Negate   *bool                                                `pulumi:"negate"`
	Operator string                                               `pulumi:"operator"`
	Unknowns *string                                              `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionIndexedTagValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedTagInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagArgs and ProcessgroupNamingConditionConditionIndexedTagOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedTagArgs{...}
type ProcessgroupNamingConditionConditionIndexedTagInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagOutput() ProcessgroupNamingConditionConditionIndexedTagOutput
	ToProcessgroupNamingConditionConditionIndexedTagOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagOutput
}

type ProcessgroupNamingConditionConditionIndexedTagArgs struct {
	Negate   pulumi.BoolPtrInput                                         `pulumi:"negate"`
	Operator pulumi.StringInput                                          `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                       `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionIndexedTagValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedTagArgs) ToProcessgroupNamingConditionConditionIndexedTagOutput() ProcessgroupNamingConditionConditionIndexedTagOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagArgs) ToProcessgroupNamingConditionConditionIndexedTagOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagOutput)
}

// ProcessgroupNamingConditionConditionIndexedTagArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagArray and ProcessgroupNamingConditionConditionIndexedTagArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedTagArray{ ProcessgroupNamingConditionConditionIndexedTagArgs{...} }
type ProcessgroupNamingConditionConditionIndexedTagArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagArrayOutput() ProcessgroupNamingConditionConditionIndexedTagArrayOutput
	ToProcessgroupNamingConditionConditionIndexedTagArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagArrayOutput
}

type ProcessgroupNamingConditionConditionIndexedTagArray []ProcessgroupNamingConditionConditionIndexedTagInput

func (ProcessgroupNamingConditionConditionIndexedTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedTagArray) ToProcessgroupNamingConditionConditionIndexedTagArrayOutput() ProcessgroupNamingConditionConditionIndexedTagArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagArray) ToProcessgroupNamingConditionConditionIndexedTagArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagArrayOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagOutput) ToProcessgroupNamingConditionConditionIndexedTagOutput() ProcessgroupNamingConditionConditionIndexedTagOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagOutput) ToProcessgroupNamingConditionConditionIndexedTagOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTag) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagOutput) Value() ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTag) *ProcessgroupNamingConditionConditionIndexedTagValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagArrayOutput) ToProcessgroupNamingConditionConditionIndexedTagArrayOutput() ProcessgroupNamingConditionConditionIndexedTagArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagArrayOutput) ToProcessgroupNamingConditionConditionIndexedTagArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIndexedTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIndexedTag {
		return vs[0].([]ProcessgroupNamingConditionConditionIndexedTag)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIndexedTagOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                        `pulumi:"type"`
	Unknowns *string                                                        `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionIndexedTagComparisonValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedTagComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagComparisonArgs and ProcessgroupNamingConditionConditionIndexedTagComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedTagComparisonArgs{...}
type ProcessgroupNamingConditionConditionIndexedTagComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagComparisonOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonOutput
	ToProcessgroupNamingConditionConditionIndexedTagComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonOutput
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                                 `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                                 `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonArgs) ToProcessgroupNamingConditionConditionIndexedTagComparisonOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonArgs) ToProcessgroupNamingConditionConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagComparisonOutput)
}

// ProcessgroupNamingConditionConditionIndexedTagComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagComparisonArray and ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedTagComparisonArray{ ProcessgroupNamingConditionConditionIndexedTagComparisonArgs{...} }
type ProcessgroupNamingConditionConditionIndexedTagComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput
	ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonArray []ProcessgroupNamingConditionConditionIndexedTagComparisonInput

func (ProcessgroupNamingConditionConditionIndexedTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonArray) ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonArray) ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonOutput) Value() ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparison) *ProcessgroupNamingConditionConditionIndexedTagComparisonValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIndexedTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIndexedTagComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionIndexedTagComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIndexedTagComparisonOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedTagComparisonValueInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs and ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagComparisonValueInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs{...}
type ProcessgroupNamingConditionConditionIndexedTagComparisonValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput
	ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs) ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs) ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput)
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput).ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs, ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtr and ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput
	ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput
}

type processgroupNamingConditionConditionIndexedTagComparisonValuePtrType ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs

func ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtr(v *ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs) ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrInput {
	return (*processgroupNamingConditionConditionIndexedTagComparisonValuePtrType)(v)
}

func (*processgroupNamingConditionConditionIndexedTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionIndexedTagComparisonValuePtrType) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionIndexedTagComparisonValuePtrType) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *ProcessgroupNamingConditionConditionIndexedTagComparisonValue {
		return &v
	}).(ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) Elem() ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagComparisonValue) ProcessgroupNamingConditionConditionIndexedTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionIndexedTagComparisonValue
		return ret
	}).(ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIndexedTagValueInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagValueArgs and ProcessgroupNamingConditionConditionIndexedTagValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagValueInput` via:
//
//	ProcessgroupNamingConditionConditionIndexedTagValueArgs{...}
type ProcessgroupNamingConditionConditionIndexedTagValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagValueOutput() ProcessgroupNamingConditionConditionIndexedTagValueOutput
	ToProcessgroupNamingConditionConditionIndexedTagValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagValueOutput
}

type ProcessgroupNamingConditionConditionIndexedTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIndexedTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIndexedTagValueArgs) ToProcessgroupNamingConditionConditionIndexedTagValueOutput() ProcessgroupNamingConditionConditionIndexedTagValueOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagValueArgs) ToProcessgroupNamingConditionConditionIndexedTagValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagValueOutput)
}

func (i ProcessgroupNamingConditionConditionIndexedTagValueArgs) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIndexedTagValueArgs) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagValueOutput).ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionIndexedTagValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionIndexedTagValueArgs, ProcessgroupNamingConditionConditionIndexedTagValuePtr and ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIndexedTagValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionIndexedTagValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionIndexedTagValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput
	ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput
}

type processgroupNamingConditionConditionIndexedTagValuePtrType ProcessgroupNamingConditionConditionIndexedTagValueArgs

func ProcessgroupNamingConditionConditionIndexedTagValuePtr(v *ProcessgroupNamingConditionConditionIndexedTagValueArgs) ProcessgroupNamingConditionConditionIndexedTagValuePtrInput {
	return (*processgroupNamingConditionConditionIndexedTagValuePtrType)(v)
}

func (*processgroupNamingConditionConditionIndexedTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionIndexedTagValuePtrType) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionIndexedTagValuePtrType) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) ToProcessgroupNamingConditionConditionIndexedTagValueOutput() ProcessgroupNamingConditionConditionIndexedTagValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) ToProcessgroupNamingConditionConditionIndexedTagValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionIndexedTagValue) *ProcessgroupNamingConditionConditionIndexedTagValue {
		return &v
	}).(ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIndexedTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutput() ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) ToProcessgroupNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) Elem() ProcessgroupNamingConditionConditionIndexedTagValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagValue) ProcessgroupNamingConditionConditionIndexedTagValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionIndexedTagValue
		return ret
	}).(ProcessgroupNamingConditionConditionIndexedTagValueOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionInteger struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *int    `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIntegerInput is an input type that accepts ProcessgroupNamingConditionConditionIntegerArgs and ProcessgroupNamingConditionConditionIntegerOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIntegerInput` via:
//
//	ProcessgroupNamingConditionConditionIntegerArgs{...}
type ProcessgroupNamingConditionConditionIntegerInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIntegerOutput() ProcessgroupNamingConditionConditionIntegerOutput
	ToProcessgroupNamingConditionConditionIntegerOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIntegerOutput
}

type ProcessgroupNamingConditionConditionIntegerArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.IntPtrInput    `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIntegerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionInteger)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIntegerArgs) ToProcessgroupNamingConditionConditionIntegerOutput() ProcessgroupNamingConditionConditionIntegerOutput {
	return i.ToProcessgroupNamingConditionConditionIntegerOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIntegerArgs) ToProcessgroupNamingConditionConditionIntegerOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIntegerOutput)
}

// ProcessgroupNamingConditionConditionIntegerArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIntegerArray and ProcessgroupNamingConditionConditionIntegerArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIntegerArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIntegerArray{ ProcessgroupNamingConditionConditionIntegerArgs{...} }
type ProcessgroupNamingConditionConditionIntegerArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIntegerArrayOutput() ProcessgroupNamingConditionConditionIntegerArrayOutput
	ToProcessgroupNamingConditionConditionIntegerArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIntegerArrayOutput
}

type ProcessgroupNamingConditionConditionIntegerArray []ProcessgroupNamingConditionConditionIntegerInput

func (ProcessgroupNamingConditionConditionIntegerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionInteger)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIntegerArray) ToProcessgroupNamingConditionConditionIntegerArrayOutput() ProcessgroupNamingConditionConditionIntegerArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIntegerArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIntegerArray) ToProcessgroupNamingConditionConditionIntegerArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIntegerArrayOutput)
}

type ProcessgroupNamingConditionConditionIntegerOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIntegerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionInteger)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIntegerOutput) ToProcessgroupNamingConditionConditionIntegerOutput() ProcessgroupNamingConditionConditionIntegerOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerOutput) ToProcessgroupNamingConditionConditionIntegerOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionInteger) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIntegerOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionInteger) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIntegerOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionInteger) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIntegerOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionInteger) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ProcessgroupNamingConditionConditionIntegerArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIntegerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionInteger)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIntegerArrayOutput) ToProcessgroupNamingConditionConditionIntegerArrayOutput() ProcessgroupNamingConditionConditionIntegerArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerArrayOutput) ToProcessgroupNamingConditionConditionIntegerArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIntegerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionInteger {
		return vs[0].([]ProcessgroupNamingConditionConditionInteger)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIntegerOutput)
}

type ProcessgroupNamingConditionConditionIntegerComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *int    `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIntegerComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionIntegerComparisonArgs and ProcessgroupNamingConditionConditionIntegerComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIntegerComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionIntegerComparisonArgs{...}
type ProcessgroupNamingConditionConditionIntegerComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIntegerComparisonOutput() ProcessgroupNamingConditionConditionIntegerComparisonOutput
	ToProcessgroupNamingConditionConditionIntegerComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIntegerComparisonOutput
}

type ProcessgroupNamingConditionConditionIntegerComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.IntPtrInput    `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIntegerComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIntegerComparisonArgs) ToProcessgroupNamingConditionConditionIntegerComparisonOutput() ProcessgroupNamingConditionConditionIntegerComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionIntegerComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIntegerComparisonArgs) ToProcessgroupNamingConditionConditionIntegerComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIntegerComparisonOutput)
}

// ProcessgroupNamingConditionConditionIntegerComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIntegerComparisonArray and ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIntegerComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIntegerComparisonArray{ ProcessgroupNamingConditionConditionIntegerComparisonArgs{...} }
type ProcessgroupNamingConditionConditionIntegerComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutput() ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput
	ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionIntegerComparisonArray []ProcessgroupNamingConditionConditionIntegerComparisonInput

func (ProcessgroupNamingConditionConditionIntegerComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIntegerComparisonArray) ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutput() ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIntegerComparisonArray) ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionIntegerComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIntegerComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) ToProcessgroupNamingConditionConditionIntegerComparisonOutput() ProcessgroupNamingConditionConditionIntegerComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) ToProcessgroupNamingConditionConditionIntegerComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIntegerComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIntegerComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIntegerComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIntegerComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIntegerComparison) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput) ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutput() ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput) ToProcessgroupNamingConditionConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIntegerComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIntegerComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionIntegerComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIntegerComparisonOutput)
}

type ProcessgroupNamingConditionConditionIpaddress struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Negate        *bool   `pulumi:"negate"`
	Operator      string  `pulumi:"operator"`
	Unknowns      *string `pulumi:"unknowns"`
	Value         *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIpaddressInput is an input type that accepts ProcessgroupNamingConditionConditionIpaddressArgs and ProcessgroupNamingConditionConditionIpaddressOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIpaddressInput` via:
//
//	ProcessgroupNamingConditionConditionIpaddressArgs{...}
type ProcessgroupNamingConditionConditionIpaddressInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIpaddressOutput() ProcessgroupNamingConditionConditionIpaddressOutput
	ToProcessgroupNamingConditionConditionIpaddressOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIpaddressOutput
}

type ProcessgroupNamingConditionConditionIpaddressArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator      pulumi.StringInput    `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIpaddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddress)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIpaddressArgs) ToProcessgroupNamingConditionConditionIpaddressOutput() ProcessgroupNamingConditionConditionIpaddressOutput {
	return i.ToProcessgroupNamingConditionConditionIpaddressOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIpaddressArgs) ToProcessgroupNamingConditionConditionIpaddressOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIpaddressOutput)
}

// ProcessgroupNamingConditionConditionIpaddressArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIpaddressArray and ProcessgroupNamingConditionConditionIpaddressArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIpaddressArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIpaddressArray{ ProcessgroupNamingConditionConditionIpaddressArgs{...} }
type ProcessgroupNamingConditionConditionIpaddressArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIpaddressArrayOutput() ProcessgroupNamingConditionConditionIpaddressArrayOutput
	ToProcessgroupNamingConditionConditionIpaddressArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIpaddressArrayOutput
}

type ProcessgroupNamingConditionConditionIpaddressArray []ProcessgroupNamingConditionConditionIpaddressInput

func (ProcessgroupNamingConditionConditionIpaddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIpaddress)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIpaddressArray) ToProcessgroupNamingConditionConditionIpaddressArrayOutput() ProcessgroupNamingConditionConditionIpaddressArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIpaddressArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIpaddressArray) ToProcessgroupNamingConditionConditionIpaddressArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIpaddressArrayOutput)
}

type ProcessgroupNamingConditionConditionIpaddressOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIpaddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddress)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) ToProcessgroupNamingConditionConditionIpaddressOutput() ProcessgroupNamingConditionConditionIpaddressOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) ToProcessgroupNamingConditionConditionIpaddressOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddress) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddress) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddress) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddress) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIpaddressArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIpaddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIpaddress)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIpaddressArrayOutput) ToProcessgroupNamingConditionConditionIpaddressArrayOutput() ProcessgroupNamingConditionConditionIpaddressArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressArrayOutput) ToProcessgroupNamingConditionConditionIpaddressArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIpaddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIpaddress {
		return vs[0].([]ProcessgroupNamingConditionConditionIpaddress)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIpaddressOutput)
}

type ProcessgroupNamingConditionConditionIpaddressComparison struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Negate        *bool  `pulumi:"negate"`
	Operator      string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionIpaddressComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionIpaddressComparisonArgs and ProcessgroupNamingConditionConditionIpaddressComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIpaddressComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionIpaddressComparisonArgs{...}
type ProcessgroupNamingConditionConditionIpaddressComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIpaddressComparisonOutput() ProcessgroupNamingConditionConditionIpaddressComparisonOutput
	ToProcessgroupNamingConditionConditionIpaddressComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIpaddressComparisonOutput
}

type ProcessgroupNamingConditionConditionIpaddressComparisonArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput `pulumi:"negate"`
	Operator      pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionIpaddressComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIpaddressComparisonArgs) ToProcessgroupNamingConditionConditionIpaddressComparisonOutput() ProcessgroupNamingConditionConditionIpaddressComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionIpaddressComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIpaddressComparisonArgs) ToProcessgroupNamingConditionConditionIpaddressComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIpaddressComparisonOutput)
}

// ProcessgroupNamingConditionConditionIpaddressComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionIpaddressComparisonArray and ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionIpaddressComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionIpaddressComparisonArray{ ProcessgroupNamingConditionConditionIpaddressComparisonArgs{...} }
type ProcessgroupNamingConditionConditionIpaddressComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput() ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput
	ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionIpaddressComparisonArray []ProcessgroupNamingConditionConditionIpaddressComparisonInput

func (ProcessgroupNamingConditionConditionIpaddressComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionIpaddressComparisonArray) ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput() ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionIpaddressComparisonArray) ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionIpaddressComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIpaddressComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) ToProcessgroupNamingConditionConditionIpaddressComparisonOutput() ProcessgroupNamingConditionConditionIpaddressComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) ToProcessgroupNamingConditionConditionIpaddressComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddressComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddressComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddressComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddressComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddressComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionIpaddressComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput) ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput() ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput) ToProcessgroupNamingConditionConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionIpaddressComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionIpaddressComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionIpaddressComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionIpaddressComparisonOutput)
}

type ProcessgroupNamingConditionConditionKey struct {
	Attribute string  `pulumi:"attribute"`
	Type      *string `pulumi:"type"`
	Unknowns  *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionKeyInput is an input type that accepts ProcessgroupNamingConditionConditionKeyArgs and ProcessgroupNamingConditionConditionKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionKeyInput` via:
//
//	ProcessgroupNamingConditionConditionKeyArgs{...}
type ProcessgroupNamingConditionConditionKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionKeyOutput() ProcessgroupNamingConditionConditionKeyOutput
	ToProcessgroupNamingConditionConditionKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionKeyOutput
}

type ProcessgroupNamingConditionConditionKeyArgs struct {
	Attribute pulumi.StringInput    `pulumi:"attribute"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Unknowns  pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionKeyArgs) ToProcessgroupNamingConditionConditionKeyOutput() ProcessgroupNamingConditionConditionKeyOutput {
	return i.ToProcessgroupNamingConditionConditionKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionKeyArgs) ToProcessgroupNamingConditionConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionKeyOutput)
}

// ProcessgroupNamingConditionConditionKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionKeyArray and ProcessgroupNamingConditionConditionKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionKeyArray{ ProcessgroupNamingConditionConditionKeyArgs{...} }
type ProcessgroupNamingConditionConditionKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionKeyArrayOutput() ProcessgroupNamingConditionConditionKeyArrayOutput
	ToProcessgroupNamingConditionConditionKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionKeyArrayOutput
}

type ProcessgroupNamingConditionConditionKeyArray []ProcessgroupNamingConditionConditionKeyInput

func (ProcessgroupNamingConditionConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionKeyArray) ToProcessgroupNamingConditionConditionKeyArrayOutput() ProcessgroupNamingConditionConditionKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionKeyArray) ToProcessgroupNamingConditionConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionKeyOutput) ToProcessgroupNamingConditionConditionKeyOutput() ProcessgroupNamingConditionConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionKeyOutput) ToProcessgroupNamingConditionConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionKeyArrayOutput() ProcessgroupNamingConditionConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionKey {
		return vs[0].([]ProcessgroupNamingConditionConditionKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionKeyOutput)
}

type ProcessgroupNamingConditionConditionMobilePlatform struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionMobilePlatformInput is an input type that accepts ProcessgroupNamingConditionConditionMobilePlatformArgs and ProcessgroupNamingConditionConditionMobilePlatformOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionMobilePlatformInput` via:
//
//	ProcessgroupNamingConditionConditionMobilePlatformArgs{...}
type ProcessgroupNamingConditionConditionMobilePlatformInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionMobilePlatformOutput() ProcessgroupNamingConditionConditionMobilePlatformOutput
	ToProcessgroupNamingConditionConditionMobilePlatformOutputWithContext(context.Context) ProcessgroupNamingConditionConditionMobilePlatformOutput
}

type ProcessgroupNamingConditionConditionMobilePlatformArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionMobilePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionMobilePlatformArgs) ToProcessgroupNamingConditionConditionMobilePlatformOutput() ProcessgroupNamingConditionConditionMobilePlatformOutput {
	return i.ToProcessgroupNamingConditionConditionMobilePlatformOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionMobilePlatformArgs) ToProcessgroupNamingConditionConditionMobilePlatformOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionMobilePlatformOutput)
}

// ProcessgroupNamingConditionConditionMobilePlatformArrayInput is an input type that accepts ProcessgroupNamingConditionConditionMobilePlatformArray and ProcessgroupNamingConditionConditionMobilePlatformArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionMobilePlatformArrayInput` via:
//
//	ProcessgroupNamingConditionConditionMobilePlatformArray{ ProcessgroupNamingConditionConditionMobilePlatformArgs{...} }
type ProcessgroupNamingConditionConditionMobilePlatformArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionMobilePlatformArrayOutput() ProcessgroupNamingConditionConditionMobilePlatformArrayOutput
	ToProcessgroupNamingConditionConditionMobilePlatformArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionMobilePlatformArrayOutput
}

type ProcessgroupNamingConditionConditionMobilePlatformArray []ProcessgroupNamingConditionConditionMobilePlatformInput

func (ProcessgroupNamingConditionConditionMobilePlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionMobilePlatformArray) ToProcessgroupNamingConditionConditionMobilePlatformArrayOutput() ProcessgroupNamingConditionConditionMobilePlatformArrayOutput {
	return i.ToProcessgroupNamingConditionConditionMobilePlatformArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionMobilePlatformArray) ToProcessgroupNamingConditionConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionMobilePlatformArrayOutput)
}

type ProcessgroupNamingConditionConditionMobilePlatformOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionMobilePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionMobilePlatformOutput) ToProcessgroupNamingConditionConditionMobilePlatformOutput() ProcessgroupNamingConditionConditionMobilePlatformOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformOutput) ToProcessgroupNamingConditionConditionMobilePlatformOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatform) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionMobilePlatformOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatform) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionMobilePlatformOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatform) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionMobilePlatformOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatform) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionMobilePlatformArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionMobilePlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionMobilePlatformArrayOutput) ToProcessgroupNamingConditionConditionMobilePlatformArrayOutput() ProcessgroupNamingConditionConditionMobilePlatformArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformArrayOutput) ToProcessgroupNamingConditionConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionMobilePlatformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionMobilePlatform {
		return vs[0].([]ProcessgroupNamingConditionConditionMobilePlatform)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionMobilePlatformOutput)
}

type ProcessgroupNamingConditionConditionMobilePlatformComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionMobilePlatformComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs and ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionMobilePlatformComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs{...}
type ProcessgroupNamingConditionConditionMobilePlatformComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutput() ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput
	ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput
}

type ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs) ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutput() ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs) ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput)
}

// ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionMobilePlatformComparisonArray and ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionMobilePlatformComparisonArray{ ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs{...} }
type ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput() ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput
	ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionMobilePlatformComparisonArray []ProcessgroupNamingConditionConditionMobilePlatformComparisonInput

func (ProcessgroupNamingConditionConditionMobilePlatformComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionMobilePlatformComparisonArray) ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput() ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionMobilePlatformComparisonArray) ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutput() ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) ToProcessgroupNamingConditionConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatformComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatformComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatformComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatformComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionMobilePlatformComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput) ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput() ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput) ToProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionMobilePlatformComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionMobilePlatformComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput)
}

type ProcessgroupNamingConditionConditionOsArch struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionOsArchInput is an input type that accepts ProcessgroupNamingConditionConditionOsArchArgs and ProcessgroupNamingConditionConditionOsArchOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOsArchInput` via:
//
//	ProcessgroupNamingConditionConditionOsArchArgs{...}
type ProcessgroupNamingConditionConditionOsArchInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOsArchOutput() ProcessgroupNamingConditionConditionOsArchOutput
	ToProcessgroupNamingConditionConditionOsArchOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOsArchOutput
}

type ProcessgroupNamingConditionConditionOsArchArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionOsArchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOsArch)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOsArchArgs) ToProcessgroupNamingConditionConditionOsArchOutput() ProcessgroupNamingConditionConditionOsArchOutput {
	return i.ToProcessgroupNamingConditionConditionOsArchOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOsArchArgs) ToProcessgroupNamingConditionConditionOsArchOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsArchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOsArchOutput)
}

// ProcessgroupNamingConditionConditionOsArchArrayInput is an input type that accepts ProcessgroupNamingConditionConditionOsArchArray and ProcessgroupNamingConditionConditionOsArchArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOsArchArrayInput` via:
//
//	ProcessgroupNamingConditionConditionOsArchArray{ ProcessgroupNamingConditionConditionOsArchArgs{...} }
type ProcessgroupNamingConditionConditionOsArchArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOsArchArrayOutput() ProcessgroupNamingConditionConditionOsArchArrayOutput
	ToProcessgroupNamingConditionConditionOsArchArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOsArchArrayOutput
}

type ProcessgroupNamingConditionConditionOsArchArray []ProcessgroupNamingConditionConditionOsArchInput

func (ProcessgroupNamingConditionConditionOsArchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOsArch)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOsArchArray) ToProcessgroupNamingConditionConditionOsArchArrayOutput() ProcessgroupNamingConditionConditionOsArchArrayOutput {
	return i.ToProcessgroupNamingConditionConditionOsArchArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOsArchArray) ToProcessgroupNamingConditionConditionOsArchArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsArchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOsArchArrayOutput)
}

type ProcessgroupNamingConditionConditionOsArchOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOsArchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOsArch)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOsArchOutput) ToProcessgroupNamingConditionConditionOsArchOutput() ProcessgroupNamingConditionConditionOsArchOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsArchOutput) ToProcessgroupNamingConditionConditionOsArchOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsArchOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsArchOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsArch) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsArchOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsArch) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionOsArchOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsArch) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsArchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsArch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionOsArchArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOsArchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOsArch)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOsArchArrayOutput) ToProcessgroupNamingConditionConditionOsArchArrayOutput() ProcessgroupNamingConditionConditionOsArchArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsArchArrayOutput) ToProcessgroupNamingConditionConditionOsArchArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsArchArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsArchArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionOsArchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionOsArch {
		return vs[0].([]ProcessgroupNamingConditionConditionOsArch)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionOsArchOutput)
}

type ProcessgroupNamingConditionConditionOsType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionOsTypeInput is an input type that accepts ProcessgroupNamingConditionConditionOsTypeArgs and ProcessgroupNamingConditionConditionOsTypeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOsTypeInput` via:
//
//	ProcessgroupNamingConditionConditionOsTypeArgs{...}
type ProcessgroupNamingConditionConditionOsTypeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOsTypeOutput() ProcessgroupNamingConditionConditionOsTypeOutput
	ToProcessgroupNamingConditionConditionOsTypeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOsTypeOutput
}

type ProcessgroupNamingConditionConditionOsTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionOsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOsType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOsTypeArgs) ToProcessgroupNamingConditionConditionOsTypeOutput() ProcessgroupNamingConditionConditionOsTypeOutput {
	return i.ToProcessgroupNamingConditionConditionOsTypeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOsTypeArgs) ToProcessgroupNamingConditionConditionOsTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOsTypeOutput)
}

// ProcessgroupNamingConditionConditionOsTypeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionOsTypeArray and ProcessgroupNamingConditionConditionOsTypeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOsTypeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionOsTypeArray{ ProcessgroupNamingConditionConditionOsTypeArgs{...} }
type ProcessgroupNamingConditionConditionOsTypeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOsTypeArrayOutput() ProcessgroupNamingConditionConditionOsTypeArrayOutput
	ToProcessgroupNamingConditionConditionOsTypeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOsTypeArrayOutput
}

type ProcessgroupNamingConditionConditionOsTypeArray []ProcessgroupNamingConditionConditionOsTypeInput

func (ProcessgroupNamingConditionConditionOsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOsType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOsTypeArray) ToProcessgroupNamingConditionConditionOsTypeArrayOutput() ProcessgroupNamingConditionConditionOsTypeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionOsTypeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOsTypeArray) ToProcessgroupNamingConditionConditionOsTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOsTypeArrayOutput)
}

type ProcessgroupNamingConditionConditionOsTypeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOsType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOsTypeOutput) ToProcessgroupNamingConditionConditionOsTypeOutput() ProcessgroupNamingConditionConditionOsTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsTypeOutput) ToProcessgroupNamingConditionConditionOsTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionOsTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionOsTypeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOsType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOsTypeArrayOutput) ToProcessgroupNamingConditionConditionOsTypeArrayOutput() ProcessgroupNamingConditionConditionOsTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsTypeArrayOutput) ToProcessgroupNamingConditionConditionOsTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsTypeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionOsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionOsType {
		return vs[0].([]ProcessgroupNamingConditionConditionOsType)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionOsTypeOutput)
}

type ProcessgroupNamingConditionConditionOsarchitectureComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionOsarchitectureComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs and ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOsarchitectureComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs{...}
type ProcessgroupNamingConditionConditionOsarchitectureComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutput() ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput
	ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput
}

type ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs) ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutput() ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs) ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput)
}

// ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionOsarchitectureComparisonArray and ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionOsarchitectureComparisonArray{ ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs{...} }
type ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput() ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput
	ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionOsarchitectureComparisonArray []ProcessgroupNamingConditionConditionOsarchitectureComparisonInput

func (ProcessgroupNamingConditionConditionOsarchitectureComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOsarchitectureComparisonArray) ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput() ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOsarchitectureComparisonArray) ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutput() ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) ToProcessgroupNamingConditionConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsarchitectureComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsarchitectureComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsarchitectureComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsarchitectureComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOsarchitectureComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput) ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput() ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput) ToProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionOsarchitectureComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionOsarchitectureComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput)
}

type ProcessgroupNamingConditionConditionOstypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionOstypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionOstypeComparisonArgs and ProcessgroupNamingConditionConditionOstypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOstypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionOstypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionOstypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOstypeComparisonOutput() ProcessgroupNamingConditionConditionOstypeComparisonOutput
	ToProcessgroupNamingConditionConditionOstypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOstypeComparisonOutput
}

type ProcessgroupNamingConditionConditionOstypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionOstypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOstypeComparisonArgs) ToProcessgroupNamingConditionConditionOstypeComparisonOutput() ProcessgroupNamingConditionConditionOstypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionOstypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOstypeComparisonArgs) ToProcessgroupNamingConditionConditionOstypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOstypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOstypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionOstypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionOstypeComparisonArray and ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionOstypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionOstypeComparisonArray{ ProcessgroupNamingConditionConditionOstypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionOstypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutput() ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionOstypeComparisonArray []ProcessgroupNamingConditionConditionOstypeComparisonInput

func (ProcessgroupNamingConditionConditionOstypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionOstypeComparisonArray) ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutput() ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionOstypeComparisonArray) ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionOstypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOstypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) ToProcessgroupNamingConditionConditionOstypeComparisonOutput() ProcessgroupNamingConditionConditionOstypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) ToProcessgroupNamingConditionConditionOstypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOstypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOstypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOstypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOstypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOstypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionOstypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutput() ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionOstypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionOstypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionOstypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionOstypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionPaasType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionPaasTypeInput is an input type that accepts ProcessgroupNamingConditionConditionPaasTypeArgs and ProcessgroupNamingConditionConditionPaasTypeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionPaasTypeInput` via:
//
//	ProcessgroupNamingConditionConditionPaasTypeArgs{...}
type ProcessgroupNamingConditionConditionPaasTypeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionPaasTypeOutput() ProcessgroupNamingConditionConditionPaasTypeOutput
	ToProcessgroupNamingConditionConditionPaasTypeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionPaasTypeOutput
}

type ProcessgroupNamingConditionConditionPaasTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionPaasTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionPaasTypeArgs) ToProcessgroupNamingConditionConditionPaasTypeOutput() ProcessgroupNamingConditionConditionPaasTypeOutput {
	return i.ToProcessgroupNamingConditionConditionPaasTypeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionPaasTypeArgs) ToProcessgroupNamingConditionConditionPaasTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionPaasTypeOutput)
}

// ProcessgroupNamingConditionConditionPaasTypeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionPaasTypeArray and ProcessgroupNamingConditionConditionPaasTypeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionPaasTypeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionPaasTypeArray{ ProcessgroupNamingConditionConditionPaasTypeArgs{...} }
type ProcessgroupNamingConditionConditionPaasTypeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionPaasTypeArrayOutput() ProcessgroupNamingConditionConditionPaasTypeArrayOutput
	ToProcessgroupNamingConditionConditionPaasTypeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionPaasTypeArrayOutput
}

type ProcessgroupNamingConditionConditionPaasTypeArray []ProcessgroupNamingConditionConditionPaasTypeInput

func (ProcessgroupNamingConditionConditionPaasTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionPaasType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionPaasTypeArray) ToProcessgroupNamingConditionConditionPaasTypeArrayOutput() ProcessgroupNamingConditionConditionPaasTypeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionPaasTypeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionPaasTypeArray) ToProcessgroupNamingConditionConditionPaasTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionPaasTypeArrayOutput)
}

type ProcessgroupNamingConditionConditionPaasTypeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionPaasTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionPaasTypeOutput) ToProcessgroupNamingConditionConditionPaasTypeOutput() ProcessgroupNamingConditionConditionPaasTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeOutput) ToProcessgroupNamingConditionConditionPaasTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionPaasTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionPaasTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionPaasTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionPaasTypeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionPaasTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionPaasType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionPaasTypeArrayOutput) ToProcessgroupNamingConditionConditionPaasTypeArrayOutput() ProcessgroupNamingConditionConditionPaasTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeArrayOutput) ToProcessgroupNamingConditionConditionPaasTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionPaasTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionPaasType {
		return vs[0].([]ProcessgroupNamingConditionConditionPaasType)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionPaasTypeOutput)
}

type ProcessgroupNamingConditionConditionPaasTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionPaasTypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionPaasTypeComparisonArgs and ProcessgroupNamingConditionConditionPaasTypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionPaasTypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionPaasTypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionPaasTypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionPaasTypeComparisonOutput() ProcessgroupNamingConditionConditionPaasTypeComparisonOutput
	ToProcessgroupNamingConditionConditionPaasTypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionPaasTypeComparisonOutput
}

type ProcessgroupNamingConditionConditionPaasTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionPaasTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionPaasTypeComparisonArgs) ToProcessgroupNamingConditionConditionPaasTypeComparisonOutput() ProcessgroupNamingConditionConditionPaasTypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionPaasTypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionPaasTypeComparisonArgs) ToProcessgroupNamingConditionConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionPaasTypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionPaasTypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionPaasTypeComparisonArray and ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionPaasTypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionPaasTypeComparisonArray{ ProcessgroupNamingConditionConditionPaasTypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionPaasTypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionPaasTypeComparisonArray []ProcessgroupNamingConditionConditionPaasTypeComparisonInput

func (ProcessgroupNamingConditionConditionPaasTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionPaasTypeComparisonArray) ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionPaasTypeComparisonArray) ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionPaasTypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) ToProcessgroupNamingConditionConditionPaasTypeComparisonOutput() ProcessgroupNamingConditionConditionPaasTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) ToProcessgroupNamingConditionConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionPaasTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionPaasTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionPaasTypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionPaasTypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionPaasTypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionProcessMetadata struct {
	Attribute  string  `pulumi:"attribute"`
	DynamicKey string  `pulumi:"dynamicKey"`
	Unknowns   *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionProcessMetadataInput is an input type that accepts ProcessgroupNamingConditionConditionProcessMetadataArgs and ProcessgroupNamingConditionConditionProcessMetadataOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionProcessMetadataInput` via:
//
//	ProcessgroupNamingConditionConditionProcessMetadataArgs{...}
type ProcessgroupNamingConditionConditionProcessMetadataInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionProcessMetadataOutput() ProcessgroupNamingConditionConditionProcessMetadataOutput
	ToProcessgroupNamingConditionConditionProcessMetadataOutputWithContext(context.Context) ProcessgroupNamingConditionConditionProcessMetadataOutput
}

type ProcessgroupNamingConditionConditionProcessMetadataArgs struct {
	Attribute  pulumi.StringInput    `pulumi:"attribute"`
	DynamicKey pulumi.StringInput    `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionProcessMetadataArgs) ToProcessgroupNamingConditionConditionProcessMetadataOutput() ProcessgroupNamingConditionConditionProcessMetadataOutput {
	return i.ToProcessgroupNamingConditionConditionProcessMetadataOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionProcessMetadataArgs) ToProcessgroupNamingConditionConditionProcessMetadataOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionProcessMetadataOutput)
}

// ProcessgroupNamingConditionConditionProcessMetadataArrayInput is an input type that accepts ProcessgroupNamingConditionConditionProcessMetadataArray and ProcessgroupNamingConditionConditionProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionProcessMetadataArrayInput` via:
//
//	ProcessgroupNamingConditionConditionProcessMetadataArray{ ProcessgroupNamingConditionConditionProcessMetadataArgs{...} }
type ProcessgroupNamingConditionConditionProcessMetadataArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionProcessMetadataArrayOutput() ProcessgroupNamingConditionConditionProcessMetadataArrayOutput
	ToProcessgroupNamingConditionConditionProcessMetadataArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionProcessMetadataArrayOutput
}

type ProcessgroupNamingConditionConditionProcessMetadataArray []ProcessgroupNamingConditionConditionProcessMetadataInput

func (ProcessgroupNamingConditionConditionProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionProcessMetadataArray) ToProcessgroupNamingConditionConditionProcessMetadataArrayOutput() ProcessgroupNamingConditionConditionProcessMetadataArrayOutput {
	return i.ToProcessgroupNamingConditionConditionProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionProcessMetadataArray) ToProcessgroupNamingConditionConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionProcessMetadataArrayOutput)
}

type ProcessgroupNamingConditionConditionProcessMetadataOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionProcessMetadataOutput) ToProcessgroupNamingConditionConditionProcessMetadataOutput() ProcessgroupNamingConditionConditionProcessMetadataOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataOutput) ToProcessgroupNamingConditionConditionProcessMetadataOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionProcessMetadataOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadata) string { return v.DynamicKey }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionProcessMetadataArrayOutput) ToProcessgroupNamingConditionConditionProcessMetadataArrayOutput() ProcessgroupNamingConditionConditionProcessMetadataArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataArrayOutput) ToProcessgroupNamingConditionConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionProcessMetadata {
		return vs[0].([]ProcessgroupNamingConditionConditionProcessMetadata)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionProcessMetadataOutput)
}

type ProcessgroupNamingConditionConditionProcessMetadataConditionKey struct {
	Attribute  string `pulumi:"attribute"`
	DynamicKey string `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionProcessMetadataConditionKeyInput is an input type that accepts ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs and ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionProcessMetadataConditionKeyInput` via:
//
//	ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs{...}
type ProcessgroupNamingConditionConditionProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput
	ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput
}

type ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput `pulumi:"attribute"`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput {
	return i.ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput)
}

// ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray and ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray{ ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs{...} }
type ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput
	ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput
}

type ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray []ProcessgroupNamingConditionConditionProcessMetadataConditionKeyInput

func (ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadataConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionProcessMetadataConditionKey {
		return vs[0].([]ProcessgroupNamingConditionConditionProcessMetadataConditionKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput)
}

type ProcessgroupNamingConditionConditionServiceTopology struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionServiceTopologyInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTopologyArgs and ProcessgroupNamingConditionConditionServiceTopologyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTopologyInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTopologyArgs{...}
type ProcessgroupNamingConditionConditionServiceTopologyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTopologyOutput() ProcessgroupNamingConditionConditionServiceTopologyOutput
	ToProcessgroupNamingConditionConditionServiceTopologyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTopologyOutput
}

type ProcessgroupNamingConditionConditionServiceTopologyArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionServiceTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTopologyArgs) ToProcessgroupNamingConditionConditionServiceTopologyOutput() ProcessgroupNamingConditionConditionServiceTopologyOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTopologyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTopologyArgs) ToProcessgroupNamingConditionConditionServiceTopologyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTopologyOutput)
}

// ProcessgroupNamingConditionConditionServiceTopologyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTopologyArray and ProcessgroupNamingConditionConditionServiceTopologyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTopologyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTopologyArray{ ProcessgroupNamingConditionConditionServiceTopologyArgs{...} }
type ProcessgroupNamingConditionConditionServiceTopologyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTopologyArrayOutput() ProcessgroupNamingConditionConditionServiceTopologyArrayOutput
	ToProcessgroupNamingConditionConditionServiceTopologyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTopologyArrayOutput
}

type ProcessgroupNamingConditionConditionServiceTopologyArray []ProcessgroupNamingConditionConditionServiceTopologyInput

func (ProcessgroupNamingConditionConditionServiceTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTopologyArray) ToProcessgroupNamingConditionConditionServiceTopologyArrayOutput() ProcessgroupNamingConditionConditionServiceTopologyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTopologyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTopologyArray) ToProcessgroupNamingConditionConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTopologyArrayOutput)
}

type ProcessgroupNamingConditionConditionServiceTopologyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTopologyOutput) ToProcessgroupNamingConditionConditionServiceTopologyOutput() ProcessgroupNamingConditionConditionServiceTopologyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyOutput) ToProcessgroupNamingConditionConditionServiceTopologyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopology) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionServiceTopologyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTopologyArrayOutput) ToProcessgroupNamingConditionConditionServiceTopologyArrayOutput() ProcessgroupNamingConditionConditionServiceTopologyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyArrayOutput) ToProcessgroupNamingConditionConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionServiceTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionServiceTopology {
		return vs[0].([]ProcessgroupNamingConditionConditionServiceTopology)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionServiceTopologyOutput)
}

type ProcessgroupNamingConditionConditionServiceTopologyComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionServiceTopologyComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs and ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTopologyComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs{...}
type ProcessgroupNamingConditionConditionServiceTopologyComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutput() ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput
	ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput
}

type ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs) ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutput() ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs) ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput)
}

// ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTopologyComparisonArray and ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTopologyComparisonArray{ ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs{...} }
type ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput() ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput
	ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionServiceTopologyComparisonArray []ProcessgroupNamingConditionConditionServiceTopologyComparisonInput

func (ProcessgroupNamingConditionConditionServiceTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTopologyComparisonArray) ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput() ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTopologyComparisonArray) ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutput() ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) ToProcessgroupNamingConditionConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput) ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput() ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput) ToProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionServiceTopologyComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionServiceTopologyComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput)
}

type ProcessgroupNamingConditionConditionServiceType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionServiceTypeInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTypeArgs and ProcessgroupNamingConditionConditionServiceTypeOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTypeInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTypeArgs{...}
type ProcessgroupNamingConditionConditionServiceTypeInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTypeOutput() ProcessgroupNamingConditionConditionServiceTypeOutput
	ToProcessgroupNamingConditionConditionServiceTypeOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTypeOutput
}

type ProcessgroupNamingConditionConditionServiceTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTypeArgs) ToProcessgroupNamingConditionConditionServiceTypeOutput() ProcessgroupNamingConditionConditionServiceTypeOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTypeOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTypeArgs) ToProcessgroupNamingConditionConditionServiceTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTypeOutput)
}

// ProcessgroupNamingConditionConditionServiceTypeArrayInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTypeArray and ProcessgroupNamingConditionConditionServiceTypeArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTypeArrayInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTypeArray{ ProcessgroupNamingConditionConditionServiceTypeArgs{...} }
type ProcessgroupNamingConditionConditionServiceTypeArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTypeArrayOutput() ProcessgroupNamingConditionConditionServiceTypeArrayOutput
	ToProcessgroupNamingConditionConditionServiceTypeArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTypeArrayOutput
}

type ProcessgroupNamingConditionConditionServiceTypeArray []ProcessgroupNamingConditionConditionServiceTypeInput

func (ProcessgroupNamingConditionConditionServiceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceType)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTypeArray) ToProcessgroupNamingConditionConditionServiceTypeArrayOutput() ProcessgroupNamingConditionConditionServiceTypeArrayOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTypeArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTypeArray) ToProcessgroupNamingConditionConditionServiceTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTypeArrayOutput)
}

type ProcessgroupNamingConditionConditionServiceTypeOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTypeOutput) ToProcessgroupNamingConditionConditionServiceTypeOutput() ProcessgroupNamingConditionConditionServiceTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeOutput) ToProcessgroupNamingConditionConditionServiceTypeOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionServiceTypeArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceType)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTypeArrayOutput) ToProcessgroupNamingConditionConditionServiceTypeArrayOutput() ProcessgroupNamingConditionConditionServiceTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeArrayOutput) ToProcessgroupNamingConditionConditionServiceTypeArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionServiceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionServiceType {
		return vs[0].([]ProcessgroupNamingConditionConditionServiceType)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionServiceTypeOutput)
}

type ProcessgroupNamingConditionConditionServiceTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionServiceTypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTypeComparisonArgs and ProcessgroupNamingConditionConditionServiceTypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionServiceTypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTypeComparisonOutput() ProcessgroupNamingConditionConditionServiceTypeComparisonOutput
	ToProcessgroupNamingConditionConditionServiceTypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTypeComparisonOutput
}

type ProcessgroupNamingConditionConditionServiceTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionServiceTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTypeComparisonArgs) ToProcessgroupNamingConditionConditionServiceTypeComparisonOutput() ProcessgroupNamingConditionConditionServiceTypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTypeComparisonArgs) ToProcessgroupNamingConditionConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionServiceTypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionServiceTypeComparisonArray and ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionServiceTypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionServiceTypeComparisonArray{ ProcessgroupNamingConditionConditionServiceTypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionServiceTypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionServiceTypeComparisonArray []ProcessgroupNamingConditionConditionServiceTypeComparisonInput

func (ProcessgroupNamingConditionConditionServiceTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionServiceTypeComparisonArray) ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionServiceTypeComparisonArray) ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionServiceTypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) ToProcessgroupNamingConditionConditionServiceTypeComparisonOutput() ProcessgroupNamingConditionConditionServiceTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) ToProcessgroupNamingConditionConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionServiceTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionServiceTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionServiceTypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionServiceTypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionServiceTypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                            `pulumi:"type"`
	Unknowns *string                                                            `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionSimpleHostTechComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs and ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleHostTechComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs{...}
type ProcessgroupNamingConditionConditionSimpleHostTechComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput
	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                                     `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                                     `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput)
}

// ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray and ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray{ ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs{...} }
type ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput
	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray []ProcessgroupNamingConditionConditionSimpleHostTechComparisonInput

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput) Value() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparison) *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionSimpleHostTechComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionSimpleHostTechComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput)
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs and ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueInput` via:
//
//	ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs{...}
type ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput
	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput)
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput).ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs, ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtr and ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput
	ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput
}

type processgroupNamingConditionConditionSimpleHostTechComparisonValuePtrType ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs

func ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtr(v *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrInput {
	return (*processgroupNamingConditionConditionSimpleHostTechComparisonValuePtrType)(v)
}

func (*processgroupNamingConditionConditionSimpleHostTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionSimpleHostTechComparisonValuePtrType) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionSimpleHostTechComparisonValuePtrType) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue {
		return &v
	}).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *string {
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Elem() ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue
		return ret
	}).(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleTechComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                        `pulumi:"type"`
	Unknowns *string                                                        `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionSimpleTechComparisonValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionSimpleTechComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleTechComparisonArgs and ProcessgroupNamingConditionConditionSimpleTechComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleTechComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionSimpleTechComparisonArgs{...}
type ProcessgroupNamingConditionConditionSimpleTechComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleTechComparisonOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonOutput
	ToProcessgroupNamingConditionConditionSimpleTechComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonOutput
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                                 `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                                 `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionSimpleTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonArgs) ToProcessgroupNamingConditionConditionSimpleTechComparisonOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleTechComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonArgs) ToProcessgroupNamingConditionConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleTechComparisonOutput)
}

// ProcessgroupNamingConditionConditionSimpleTechComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleTechComparisonArray and ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleTechComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionSimpleTechComparisonArray{ ProcessgroupNamingConditionConditionSimpleTechComparisonArgs{...} }
type ProcessgroupNamingConditionConditionSimpleTechComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput
	ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonArray []ProcessgroupNamingConditionConditionSimpleTechComparisonInput

func (ProcessgroupNamingConditionConditionSimpleTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonArray) ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonArray) ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonOutput) Value() ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparison) *ProcessgroupNamingConditionConditionSimpleTechComparisonValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionSimpleTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionSimpleTechComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionSimpleTechComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionSimpleTechComparisonOutput)
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ProcessgroupNamingConditionConditionSimpleTechComparisonValueInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs and ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleTechComparisonValueInput` via:
//
//	ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs{...}
type ProcessgroupNamingConditionConditionSimpleTechComparisonValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput
	ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput)
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput).ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs, ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtr and ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput
	ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput
}

type processgroupNamingConditionConditionSimpleTechComparisonValuePtrType ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs

func ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtr(v *ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs) ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrInput {
	return (*processgroupNamingConditionConditionSimpleTechComparisonValuePtrType)(v)
}

func (*processgroupNamingConditionConditionSimpleTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionSimpleTechComparisonValuePtrType) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionSimpleTechComparisonValuePtrType) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *ProcessgroupNamingConditionConditionSimpleTechComparisonValue {
		return &v
	}).(ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput() ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) Elem() ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleTechComparisonValue) ProcessgroupNamingConditionConditionSimpleTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionSimpleTechComparisonValue
		return ret
	}).(ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionString struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Negate        *bool   `pulumi:"negate"`
	Operator      string  `pulumi:"operator"`
	Unknowns      *string `pulumi:"unknowns"`
	Value         *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionStringInput is an input type that accepts ProcessgroupNamingConditionConditionStringArgs and ProcessgroupNamingConditionConditionStringOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringInput` via:
//
//	ProcessgroupNamingConditionConditionStringArgs{...}
type ProcessgroupNamingConditionConditionStringInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringOutput() ProcessgroupNamingConditionConditionStringOutput
	ToProcessgroupNamingConditionConditionStringOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringOutput
}

type ProcessgroupNamingConditionConditionStringArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator      pulumi.StringInput    `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionString)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringArgs) ToProcessgroupNamingConditionConditionStringOutput() ProcessgroupNamingConditionConditionStringOutput {
	return i.ToProcessgroupNamingConditionConditionStringOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringArgs) ToProcessgroupNamingConditionConditionStringOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringOutput)
}

// ProcessgroupNamingConditionConditionStringArrayInput is an input type that accepts ProcessgroupNamingConditionConditionStringArray and ProcessgroupNamingConditionConditionStringArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringArrayInput` via:
//
//	ProcessgroupNamingConditionConditionStringArray{ ProcessgroupNamingConditionConditionStringArgs{...} }
type ProcessgroupNamingConditionConditionStringArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringArrayOutput() ProcessgroupNamingConditionConditionStringArrayOutput
	ToProcessgroupNamingConditionConditionStringArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringArrayOutput
}

type ProcessgroupNamingConditionConditionStringArray []ProcessgroupNamingConditionConditionStringInput

func (ProcessgroupNamingConditionConditionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionString)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringArray) ToProcessgroupNamingConditionConditionStringArrayOutput() ProcessgroupNamingConditionConditionStringArrayOutput {
	return i.ToProcessgroupNamingConditionConditionStringArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringArray) ToProcessgroupNamingConditionConditionStringArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringArrayOutput)
}

type ProcessgroupNamingConditionConditionStringOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionString)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringOutput) ToProcessgroupNamingConditionConditionStringOutput() ProcessgroupNamingConditionConditionStringOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringOutput) ToProcessgroupNamingConditionConditionStringOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionString) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionString) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionStringArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionString)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringArrayOutput) ToProcessgroupNamingConditionConditionStringArrayOutput() ProcessgroupNamingConditionConditionStringArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringArrayOutput) ToProcessgroupNamingConditionConditionStringArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionString {
		return vs[0].([]ProcessgroupNamingConditionConditionString)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionStringOutput)
}

type ProcessgroupNamingConditionConditionStringComparison struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Negate        *bool  `pulumi:"negate"`
	Operator      string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionStringComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionStringComparisonArgs and ProcessgroupNamingConditionConditionStringComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionStringComparisonArgs{...}
type ProcessgroupNamingConditionConditionStringComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringComparisonOutput() ProcessgroupNamingConditionConditionStringComparisonOutput
	ToProcessgroupNamingConditionConditionStringComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringComparisonOutput
}

type ProcessgroupNamingConditionConditionStringComparisonArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput `pulumi:"negate"`
	Operator      pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionStringComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringComparisonArgs) ToProcessgroupNamingConditionConditionStringComparisonOutput() ProcessgroupNamingConditionConditionStringComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionStringComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringComparisonArgs) ToProcessgroupNamingConditionConditionStringComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringComparisonOutput)
}

// ProcessgroupNamingConditionConditionStringComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionStringComparisonArray and ProcessgroupNamingConditionConditionStringComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionStringComparisonArray{ ProcessgroupNamingConditionConditionStringComparisonArgs{...} }
type ProcessgroupNamingConditionConditionStringComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringComparisonArrayOutput() ProcessgroupNamingConditionConditionStringComparisonArrayOutput
	ToProcessgroupNamingConditionConditionStringComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionStringComparisonArray []ProcessgroupNamingConditionConditionStringComparisonInput

func (ProcessgroupNamingConditionConditionStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionStringComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringComparisonArray) ToProcessgroupNamingConditionConditionStringComparisonArrayOutput() ProcessgroupNamingConditionConditionStringComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionStringComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringComparisonArray) ToProcessgroupNamingConditionConditionStringComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionStringComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionStringComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) ToProcessgroupNamingConditionConditionStringComparisonOutput() ProcessgroupNamingConditionConditionStringComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) ToProcessgroupNamingConditionConditionStringComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionStringComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringComparisonArrayOutput) ToProcessgroupNamingConditionConditionStringComparisonArrayOutput() ProcessgroupNamingConditionConditionStringComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringComparisonArrayOutput) ToProcessgroupNamingConditionConditionStringComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionStringComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionStringComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionStringComparisonOutput)
}

type ProcessgroupNamingConditionConditionStringConditionKey struct {
	Attribute  string `pulumi:"attribute"`
	DynamicKey string `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionStringConditionKeyInput is an input type that accepts ProcessgroupNamingConditionConditionStringConditionKeyArgs and ProcessgroupNamingConditionConditionStringConditionKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringConditionKeyInput` via:
//
//	ProcessgroupNamingConditionConditionStringConditionKeyArgs{...}
type ProcessgroupNamingConditionConditionStringConditionKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringConditionKeyOutput() ProcessgroupNamingConditionConditionStringConditionKeyOutput
	ToProcessgroupNamingConditionConditionStringConditionKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringConditionKeyOutput
}

type ProcessgroupNamingConditionConditionStringConditionKeyArgs struct {
	Attribute  pulumi.StringInput `pulumi:"attribute"`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionStringConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringConditionKeyArgs) ToProcessgroupNamingConditionConditionStringConditionKeyOutput() ProcessgroupNamingConditionConditionStringConditionKeyOutput {
	return i.ToProcessgroupNamingConditionConditionStringConditionKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringConditionKeyArgs) ToProcessgroupNamingConditionConditionStringConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringConditionKeyOutput)
}

// ProcessgroupNamingConditionConditionStringConditionKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionStringConditionKeyArray and ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringConditionKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionStringConditionKeyArray{ ProcessgroupNamingConditionConditionStringConditionKeyArgs{...} }
type ProcessgroupNamingConditionConditionStringConditionKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutput() ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput
	ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput
}

type ProcessgroupNamingConditionConditionStringConditionKeyArray []ProcessgroupNamingConditionConditionStringConditionKeyInput

func (ProcessgroupNamingConditionConditionStringConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringConditionKeyArray) ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutput() ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringConditionKeyArray) ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionStringConditionKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyOutput) ToProcessgroupNamingConditionConditionStringConditionKeyOutput() ProcessgroupNamingConditionConditionStringConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyOutput) ToProcessgroupNamingConditionConditionStringConditionKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringConditionKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionStringConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutput() ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput) ToProcessgroupNamingConditionConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionStringConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionStringConditionKey {
		return vs[0].([]ProcessgroupNamingConditionConditionStringConditionKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionStringConditionKeyOutput)
}

type ProcessgroupNamingConditionConditionStringKey struct {
	Attribute  string  `pulumi:"attribute"`
	DynamicKey string  `pulumi:"dynamicKey"`
	Unknowns   *string `pulumi:"unknowns"`
}

// ProcessgroupNamingConditionConditionStringKeyInput is an input type that accepts ProcessgroupNamingConditionConditionStringKeyArgs and ProcessgroupNamingConditionConditionStringKeyOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringKeyInput` via:
//
//	ProcessgroupNamingConditionConditionStringKeyArgs{...}
type ProcessgroupNamingConditionConditionStringKeyInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringKeyOutput() ProcessgroupNamingConditionConditionStringKeyOutput
	ToProcessgroupNamingConditionConditionStringKeyOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringKeyOutput
}

type ProcessgroupNamingConditionConditionStringKeyArgs struct {
	Attribute  pulumi.StringInput    `pulumi:"attribute"`
	DynamicKey pulumi.StringInput    `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ProcessgroupNamingConditionConditionStringKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionStringKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringKeyArgs) ToProcessgroupNamingConditionConditionStringKeyOutput() ProcessgroupNamingConditionConditionStringKeyOutput {
	return i.ToProcessgroupNamingConditionConditionStringKeyOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringKeyArgs) ToProcessgroupNamingConditionConditionStringKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringKeyOutput)
}

// ProcessgroupNamingConditionConditionStringKeyArrayInput is an input type that accepts ProcessgroupNamingConditionConditionStringKeyArray and ProcessgroupNamingConditionConditionStringKeyArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionStringKeyArrayInput` via:
//
//	ProcessgroupNamingConditionConditionStringKeyArray{ ProcessgroupNamingConditionConditionStringKeyArgs{...} }
type ProcessgroupNamingConditionConditionStringKeyArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionStringKeyArrayOutput() ProcessgroupNamingConditionConditionStringKeyArrayOutput
	ToProcessgroupNamingConditionConditionStringKeyArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionStringKeyArrayOutput
}

type ProcessgroupNamingConditionConditionStringKeyArray []ProcessgroupNamingConditionConditionStringKeyInput

func (ProcessgroupNamingConditionConditionStringKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionStringKey)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionStringKeyArray) ToProcessgroupNamingConditionConditionStringKeyArrayOutput() ProcessgroupNamingConditionConditionStringKeyArrayOutput {
	return i.ToProcessgroupNamingConditionConditionStringKeyArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionStringKeyArray) ToProcessgroupNamingConditionConditionStringKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionStringKeyArrayOutput)
}

type ProcessgroupNamingConditionConditionStringKeyOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionStringKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringKeyOutput) ToProcessgroupNamingConditionConditionStringKeyOutput() ProcessgroupNamingConditionConditionStringKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringKeyOutput) ToProcessgroupNamingConditionConditionStringKeyOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringKeyOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionStringKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionStringKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionStringKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionStringKeyArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionStringKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionStringKey)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionStringKeyArrayOutput) ToProcessgroupNamingConditionConditionStringKeyArrayOutput() ProcessgroupNamingConditionConditionStringKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringKeyArrayOutput) ToProcessgroupNamingConditionConditionStringKeyArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionStringKeyArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionStringKeyArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionStringKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionStringKey {
		return vs[0].([]ProcessgroupNamingConditionConditionStringKey)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionStringKeyOutput)
}

type ProcessgroupNamingConditionConditionSyntheticEngine struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionSyntheticEngineInput is an input type that accepts ProcessgroupNamingConditionConditionSyntheticEngineArgs and ProcessgroupNamingConditionConditionSyntheticEngineOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSyntheticEngineInput` via:
//
//	ProcessgroupNamingConditionConditionSyntheticEngineArgs{...}
type ProcessgroupNamingConditionConditionSyntheticEngineInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSyntheticEngineOutput() ProcessgroupNamingConditionConditionSyntheticEngineOutput
	ToProcessgroupNamingConditionConditionSyntheticEngineOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSyntheticEngineOutput
}

type ProcessgroupNamingConditionConditionSyntheticEngineArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionSyntheticEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineArgs) ToProcessgroupNamingConditionConditionSyntheticEngineOutput() ProcessgroupNamingConditionConditionSyntheticEngineOutput {
	return i.ToProcessgroupNamingConditionConditionSyntheticEngineOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineArgs) ToProcessgroupNamingConditionConditionSyntheticEngineOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSyntheticEngineOutput)
}

// ProcessgroupNamingConditionConditionSyntheticEngineArrayInput is an input type that accepts ProcessgroupNamingConditionConditionSyntheticEngineArray and ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSyntheticEngineArrayInput` via:
//
//	ProcessgroupNamingConditionConditionSyntheticEngineArray{ ProcessgroupNamingConditionConditionSyntheticEngineArgs{...} }
type ProcessgroupNamingConditionConditionSyntheticEngineArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutput() ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput
	ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput
}

type ProcessgroupNamingConditionConditionSyntheticEngineArray []ProcessgroupNamingConditionConditionSyntheticEngineInput

func (ProcessgroupNamingConditionConditionSyntheticEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineArray) ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutput() ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput {
	return i.ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineArray) ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput)
}

type ProcessgroupNamingConditionConditionSyntheticEngineOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSyntheticEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineOutput) ToProcessgroupNamingConditionConditionSyntheticEngineOutput() ProcessgroupNamingConditionConditionSyntheticEngineOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineOutput) ToProcessgroupNamingConditionConditionSyntheticEngineOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngine) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngine) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngine) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngine) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput) ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutput() ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput) ToProcessgroupNamingConditionConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionSyntheticEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionSyntheticEngine {
		return vs[0].([]ProcessgroupNamingConditionConditionSyntheticEngine)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionSyntheticEngineOutput)
}

type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs and ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs{...}
type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput
	ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput
}

type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput)
}

// ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray and ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray{ ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs{...} }
type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput
	ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray []ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonInput

func (ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ToProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput)
}

type ProcessgroupNamingConditionConditionTag struct {
	Negate   *bool                                         `pulumi:"negate"`
	Operator string                                        `pulumi:"operator"`
	Unknowns *string                                       `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionTagValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionTagInput is an input type that accepts ProcessgroupNamingConditionConditionTagArgs and ProcessgroupNamingConditionConditionTagOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagInput` via:
//
//	ProcessgroupNamingConditionConditionTagArgs{...}
type ProcessgroupNamingConditionConditionTagInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagOutput() ProcessgroupNamingConditionConditionTagOutput
	ToProcessgroupNamingConditionConditionTagOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagOutput
}

type ProcessgroupNamingConditionConditionTagArgs struct {
	Negate   pulumi.BoolPtrInput                                  `pulumi:"negate"`
	Operator pulumi.StringInput                                   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionTagValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTag)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTagArgs) ToProcessgroupNamingConditionConditionTagOutput() ProcessgroupNamingConditionConditionTagOutput {
	return i.ToProcessgroupNamingConditionConditionTagOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagArgs) ToProcessgroupNamingConditionConditionTagOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagOutput)
}

// ProcessgroupNamingConditionConditionTagArrayInput is an input type that accepts ProcessgroupNamingConditionConditionTagArray and ProcessgroupNamingConditionConditionTagArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagArrayInput` via:
//
//	ProcessgroupNamingConditionConditionTagArray{ ProcessgroupNamingConditionConditionTagArgs{...} }
type ProcessgroupNamingConditionConditionTagArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagArrayOutput() ProcessgroupNamingConditionConditionTagArrayOutput
	ToProcessgroupNamingConditionConditionTagArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagArrayOutput
}

type ProcessgroupNamingConditionConditionTagArray []ProcessgroupNamingConditionConditionTagInput

func (ProcessgroupNamingConditionConditionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionTag)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTagArray) ToProcessgroupNamingConditionConditionTagArrayOutput() ProcessgroupNamingConditionConditionTagArrayOutput {
	return i.ToProcessgroupNamingConditionConditionTagArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagArray) ToProcessgroupNamingConditionConditionTagArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagArrayOutput)
}

type ProcessgroupNamingConditionConditionTagOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTag)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagOutput) ToProcessgroupNamingConditionConditionTagOutput() ProcessgroupNamingConditionConditionTagOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagOutput) ToProcessgroupNamingConditionConditionTagOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTag) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagOutput) Value() ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTag) *ProcessgroupNamingConditionConditionTagValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionTagValuePtrOutput)
}

type ProcessgroupNamingConditionConditionTagArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionTag)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagArrayOutput) ToProcessgroupNamingConditionConditionTagArrayOutput() ProcessgroupNamingConditionConditionTagArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagArrayOutput) ToProcessgroupNamingConditionConditionTagArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionTag {
		return vs[0].([]ProcessgroupNamingConditionConditionTag)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionTagOutput)
}

type ProcessgroupNamingConditionConditionTagComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                 `pulumi:"type"`
	Unknowns *string                                                 `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionTagComparisonValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionTagComparisonInput is an input type that accepts ProcessgroupNamingConditionConditionTagComparisonArgs and ProcessgroupNamingConditionConditionTagComparisonOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagComparisonInput` via:
//
//	ProcessgroupNamingConditionConditionTagComparisonArgs{...}
type ProcessgroupNamingConditionConditionTagComparisonInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagComparisonOutput() ProcessgroupNamingConditionConditionTagComparisonOutput
	ToProcessgroupNamingConditionConditionTagComparisonOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagComparisonOutput
}

type ProcessgroupNamingConditionConditionTagComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                          `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                          `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionTagComparisonValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTagComparisonArgs) ToProcessgroupNamingConditionConditionTagComparisonOutput() ProcessgroupNamingConditionConditionTagComparisonOutput {
	return i.ToProcessgroupNamingConditionConditionTagComparisonOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagComparisonArgs) ToProcessgroupNamingConditionConditionTagComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagComparisonOutput)
}

// ProcessgroupNamingConditionConditionTagComparisonArrayInput is an input type that accepts ProcessgroupNamingConditionConditionTagComparisonArray and ProcessgroupNamingConditionConditionTagComparisonArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagComparisonArrayInput` via:
//
//	ProcessgroupNamingConditionConditionTagComparisonArray{ ProcessgroupNamingConditionConditionTagComparisonArgs{...} }
type ProcessgroupNamingConditionConditionTagComparisonArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagComparisonArrayOutput() ProcessgroupNamingConditionConditionTagComparisonArrayOutput
	ToProcessgroupNamingConditionConditionTagComparisonArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagComparisonArrayOutput
}

type ProcessgroupNamingConditionConditionTagComparisonArray []ProcessgroupNamingConditionConditionTagComparisonInput

func (ProcessgroupNamingConditionConditionTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionTagComparison)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTagComparisonArray) ToProcessgroupNamingConditionConditionTagComparisonArrayOutput() ProcessgroupNamingConditionConditionTagComparisonArrayOutput {
	return i.ToProcessgroupNamingConditionConditionTagComparisonArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagComparisonArray) ToProcessgroupNamingConditionConditionTagComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagComparisonArrayOutput)
}

type ProcessgroupNamingConditionConditionTagComparisonOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagComparisonOutput) ToProcessgroupNamingConditionConditionTagComparisonOutput() ProcessgroupNamingConditionConditionTagComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonOutput) ToProcessgroupNamingConditionConditionTagComparisonOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ProcessgroupNamingConditionConditionTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonOutput) Value() ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparison) *ProcessgroupNamingConditionConditionTagComparisonValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionTagComparison)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagComparisonArrayOutput) ToProcessgroupNamingConditionConditionTagComparisonArrayOutput() ProcessgroupNamingConditionConditionTagComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonArrayOutput) ToProcessgroupNamingConditionConditionTagComparisonArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionTagComparison {
		return vs[0].([]ProcessgroupNamingConditionConditionTagComparison)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionTagComparisonOutput)
}

type ProcessgroupNamingConditionConditionTagComparisonValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionTagComparisonValueInput is an input type that accepts ProcessgroupNamingConditionConditionTagComparisonValueArgs and ProcessgroupNamingConditionConditionTagComparisonValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagComparisonValueInput` via:
//
//	ProcessgroupNamingConditionConditionTagComparisonValueArgs{...}
type ProcessgroupNamingConditionConditionTagComparisonValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagComparisonValueOutput() ProcessgroupNamingConditionConditionTagComparisonValueOutput
	ToProcessgroupNamingConditionConditionTagComparisonValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagComparisonValueOutput
}

type ProcessgroupNamingConditionConditionTagComparisonValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTagComparisonValueArgs) ToProcessgroupNamingConditionConditionTagComparisonValueOutput() ProcessgroupNamingConditionConditionTagComparisonValueOutput {
	return i.ToProcessgroupNamingConditionConditionTagComparisonValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagComparisonValueArgs) ToProcessgroupNamingConditionConditionTagComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagComparisonValueOutput)
}

func (i ProcessgroupNamingConditionConditionTagComparisonValueArgs) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagComparisonValueArgs) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagComparisonValueOutput).ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionTagComparisonValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionTagComparisonValueArgs, ProcessgroupNamingConditionConditionTagComparisonValuePtr and ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagComparisonValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionTagComparisonValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput
	ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput
}

type processgroupNamingConditionConditionTagComparisonValuePtrType ProcessgroupNamingConditionConditionTagComparisonValueArgs

func ProcessgroupNamingConditionConditionTagComparisonValuePtr(v *ProcessgroupNamingConditionConditionTagComparisonValueArgs) ProcessgroupNamingConditionConditionTagComparisonValuePtrInput {
	return (*processgroupNamingConditionConditionTagComparisonValuePtrType)(v)
}

func (*processgroupNamingConditionConditionTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionTagComparisonValuePtrType) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionTagComparisonValuePtrType) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput)
}

type ProcessgroupNamingConditionConditionTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) ToProcessgroupNamingConditionConditionTagComparisonValueOutput() ProcessgroupNamingConditionConditionTagComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) ToProcessgroupNamingConditionConditionTagComparisonValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionTagComparisonValue) *ProcessgroupNamingConditionConditionTagComparisonValue {
		return &v
	}).(ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutput() ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) ToProcessgroupNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) Elem() ProcessgroupNamingConditionConditionTagComparisonValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagComparisonValue) ProcessgroupNamingConditionConditionTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionTagComparisonValue
		return ret
	}).(ProcessgroupNamingConditionConditionTagComparisonValueOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionTagValueInput is an input type that accepts ProcessgroupNamingConditionConditionTagValueArgs and ProcessgroupNamingConditionConditionTagValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagValueInput` via:
//
//	ProcessgroupNamingConditionConditionTagValueArgs{...}
type ProcessgroupNamingConditionConditionTagValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagValueOutput() ProcessgroupNamingConditionConditionTagValueOutput
	ToProcessgroupNamingConditionConditionTagValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagValueOutput
}

type ProcessgroupNamingConditionConditionTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTagValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTagValueArgs) ToProcessgroupNamingConditionConditionTagValueOutput() ProcessgroupNamingConditionConditionTagValueOutput {
	return i.ToProcessgroupNamingConditionConditionTagValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagValueArgs) ToProcessgroupNamingConditionConditionTagValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagValueOutput)
}

func (i ProcessgroupNamingConditionConditionTagValueArgs) ToProcessgroupNamingConditionConditionTagValuePtrOutput() ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTagValueArgs) ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagValueOutput).ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionTagValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionTagValueArgs, ProcessgroupNamingConditionConditionTagValuePtr and ProcessgroupNamingConditionConditionTagValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTagValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionTagValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionTagValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTagValuePtrOutput() ProcessgroupNamingConditionConditionTagValuePtrOutput
	ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTagValuePtrOutput
}

type processgroupNamingConditionConditionTagValuePtrType ProcessgroupNamingConditionConditionTagValueArgs

func ProcessgroupNamingConditionConditionTagValuePtr(v *ProcessgroupNamingConditionConditionTagValueArgs) ProcessgroupNamingConditionConditionTagValuePtrInput {
	return (*processgroupNamingConditionConditionTagValuePtrType)(v)
}

func (*processgroupNamingConditionConditionTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionTagValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionTagValuePtrType) ToProcessgroupNamingConditionConditionTagValuePtrOutput() ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionTagValuePtrType) ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTagValuePtrOutput)
}

type ProcessgroupNamingConditionConditionTagValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTagValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) ToProcessgroupNamingConditionConditionTagValueOutput() ProcessgroupNamingConditionConditionTagValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) ToProcessgroupNamingConditionConditionTagValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) ToProcessgroupNamingConditionConditionTagValuePtrOutput() ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionTagValue) *ProcessgroupNamingConditionConditionTagValue {
		return &v
	}).(ProcessgroupNamingConditionConditionTagValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionTagValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionTagValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) ToProcessgroupNamingConditionConditionTagValuePtrOutput() ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) ToProcessgroupNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTagValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) Elem() ProcessgroupNamingConditionConditionTagValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagValue) ProcessgroupNamingConditionConditionTagValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionTagValue
		return ret
	}).(ProcessgroupNamingConditionConditionTagValueOutput)
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionTech struct {
	Negate   *bool                                          `pulumi:"negate"`
	Operator string                                         `pulumi:"operator"`
	Unknowns *string                                        `pulumi:"unknowns"`
	Value    *ProcessgroupNamingConditionConditionTechValue `pulumi:"value"`
}

// ProcessgroupNamingConditionConditionTechInput is an input type that accepts ProcessgroupNamingConditionConditionTechArgs and ProcessgroupNamingConditionConditionTechOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTechInput` via:
//
//	ProcessgroupNamingConditionConditionTechArgs{...}
type ProcessgroupNamingConditionConditionTechInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTechOutput() ProcessgroupNamingConditionConditionTechOutput
	ToProcessgroupNamingConditionConditionTechOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTechOutput
}

type ProcessgroupNamingConditionConditionTechArgs struct {
	Negate   pulumi.BoolPtrInput                                   `pulumi:"negate"`
	Operator pulumi.StringInput                                    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                 `pulumi:"unknowns"`
	Value    ProcessgroupNamingConditionConditionTechValuePtrInput `pulumi:"value"`
}

func (ProcessgroupNamingConditionConditionTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTech)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTechArgs) ToProcessgroupNamingConditionConditionTechOutput() ProcessgroupNamingConditionConditionTechOutput {
	return i.ToProcessgroupNamingConditionConditionTechOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTechArgs) ToProcessgroupNamingConditionConditionTechOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTechOutput)
}

// ProcessgroupNamingConditionConditionTechArrayInput is an input type that accepts ProcessgroupNamingConditionConditionTechArray and ProcessgroupNamingConditionConditionTechArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTechArrayInput` via:
//
//	ProcessgroupNamingConditionConditionTechArray{ ProcessgroupNamingConditionConditionTechArgs{...} }
type ProcessgroupNamingConditionConditionTechArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTechArrayOutput() ProcessgroupNamingConditionConditionTechArrayOutput
	ToProcessgroupNamingConditionConditionTechArrayOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTechArrayOutput
}

type ProcessgroupNamingConditionConditionTechArray []ProcessgroupNamingConditionConditionTechInput

func (ProcessgroupNamingConditionConditionTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionTech)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTechArray) ToProcessgroupNamingConditionConditionTechArrayOutput() ProcessgroupNamingConditionConditionTechArrayOutput {
	return i.ToProcessgroupNamingConditionConditionTechArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTechArray) ToProcessgroupNamingConditionConditionTechArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTechArrayOutput)
}

type ProcessgroupNamingConditionConditionTechOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTech)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTechOutput) ToProcessgroupNamingConditionConditionTechOutput() ProcessgroupNamingConditionConditionTechOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechOutput) ToProcessgroupNamingConditionConditionTechOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTech) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ProcessgroupNamingConditionConditionTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechOutput) Value() ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTech) *ProcessgroupNamingConditionConditionTechValue {
		return v.Value
	}).(ProcessgroupNamingConditionConditionTechValuePtrOutput)
}

type ProcessgroupNamingConditionConditionTechArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessgroupNamingConditionConditionTech)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTechArrayOutput) ToProcessgroupNamingConditionConditionTechArrayOutput() ProcessgroupNamingConditionConditionTechArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechArrayOutput) ToProcessgroupNamingConditionConditionTechArrayOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechArrayOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingConditionConditionTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessgroupNamingConditionConditionTech {
		return vs[0].([]ProcessgroupNamingConditionConditionTech)[vs[1].(int)]
	}).(ProcessgroupNamingConditionConditionTechOutput)
}

type ProcessgroupNamingConditionConditionTechValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ProcessgroupNamingConditionConditionTechValueInput is an input type that accepts ProcessgroupNamingConditionConditionTechValueArgs and ProcessgroupNamingConditionConditionTechValueOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTechValueInput` via:
//
//	ProcessgroupNamingConditionConditionTechValueArgs{...}
type ProcessgroupNamingConditionConditionTechValueInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTechValueOutput() ProcessgroupNamingConditionConditionTechValueOutput
	ToProcessgroupNamingConditionConditionTechValueOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTechValueOutput
}

type ProcessgroupNamingConditionConditionTechValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ProcessgroupNamingConditionConditionTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTechValue)(nil)).Elem()
}

func (i ProcessgroupNamingConditionConditionTechValueArgs) ToProcessgroupNamingConditionConditionTechValueOutput() ProcessgroupNamingConditionConditionTechValueOutput {
	return i.ToProcessgroupNamingConditionConditionTechValueOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTechValueArgs) ToProcessgroupNamingConditionConditionTechValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTechValueOutput)
}

func (i ProcessgroupNamingConditionConditionTechValueArgs) ToProcessgroupNamingConditionConditionTechValuePtrOutput() ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (i ProcessgroupNamingConditionConditionTechValueArgs) ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTechValueOutput).ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(ctx)
}

// ProcessgroupNamingConditionConditionTechValuePtrInput is an input type that accepts ProcessgroupNamingConditionConditionTechValueArgs, ProcessgroupNamingConditionConditionTechValuePtr and ProcessgroupNamingConditionConditionTechValuePtrOutput values.
// You can construct a concrete instance of `ProcessgroupNamingConditionConditionTechValuePtrInput` via:
//
//	        ProcessgroupNamingConditionConditionTechValueArgs{...}
//
//	or:
//
//	        nil
type ProcessgroupNamingConditionConditionTechValuePtrInput interface {
	pulumi.Input

	ToProcessgroupNamingConditionConditionTechValuePtrOutput() ProcessgroupNamingConditionConditionTechValuePtrOutput
	ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(context.Context) ProcessgroupNamingConditionConditionTechValuePtrOutput
}

type processgroupNamingConditionConditionTechValuePtrType ProcessgroupNamingConditionConditionTechValueArgs

func ProcessgroupNamingConditionConditionTechValuePtr(v *ProcessgroupNamingConditionConditionTechValueArgs) ProcessgroupNamingConditionConditionTechValuePtrInput {
	return (*processgroupNamingConditionConditionTechValuePtrType)(v)
}

func (*processgroupNamingConditionConditionTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionTechValue)(nil)).Elem()
}

func (i *processgroupNamingConditionConditionTechValuePtrType) ToProcessgroupNamingConditionConditionTechValuePtrOutput() ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return i.ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (i *processgroupNamingConditionConditionTechValuePtrType) ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingConditionConditionTechValuePtrOutput)
}

type ProcessgroupNamingConditionConditionTechValueOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessgroupNamingConditionConditionTechValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) ToProcessgroupNamingConditionConditionTechValueOutput() ProcessgroupNamingConditionConditionTechValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) ToProcessgroupNamingConditionConditionTechValueOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechValueOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) ToProcessgroupNamingConditionConditionTechValuePtrOutput() ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return o.ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessgroupNamingConditionConditionTechValue) *ProcessgroupNamingConditionConditionTechValue {
		return &v
	}).(ProcessgroupNamingConditionConditionTechValuePtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessgroupNamingConditionConditionTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ProcessgroupNamingConditionConditionTechValuePtrOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingConditionConditionTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingConditionConditionTechValue)(nil)).Elem()
}

func (o ProcessgroupNamingConditionConditionTechValuePtrOutput) ToProcessgroupNamingConditionConditionTechValuePtrOutput() ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechValuePtrOutput) ToProcessgroupNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ProcessgroupNamingConditionConditionTechValuePtrOutput {
	return o
}

func (o ProcessgroupNamingConditionConditionTechValuePtrOutput) Elem() ProcessgroupNamingConditionConditionTechValueOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTechValue) ProcessgroupNamingConditionConditionTechValue {
		if v != nil {
			return *v
		}
		var ret ProcessgroupNamingConditionConditionTechValue
		return ret
	}).(ProcessgroupNamingConditionConditionTechValueOutput)
}

func (o ProcessgroupNamingConditionConditionTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ProcessgroupNamingConditionConditionTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessgroupNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type QueueManagerAliasQueue struct {
	// Alias queue definitions for queue manager
	AliasQueues []QueueManagerAliasQueueAliasQueue `pulumi:"aliasQueues"`
}

// QueueManagerAliasQueueInput is an input type that accepts QueueManagerAliasQueueArgs and QueueManagerAliasQueueOutput values.
// You can construct a concrete instance of `QueueManagerAliasQueueInput` via:
//
//	QueueManagerAliasQueueArgs{...}
type QueueManagerAliasQueueInput interface {
	pulumi.Input

	ToQueueManagerAliasQueueOutput() QueueManagerAliasQueueOutput
	ToQueueManagerAliasQueueOutputWithContext(context.Context) QueueManagerAliasQueueOutput
}

type QueueManagerAliasQueueArgs struct {
	// Alias queue definitions for queue manager
	AliasQueues QueueManagerAliasQueueAliasQueueArrayInput `pulumi:"aliasQueues"`
}

func (QueueManagerAliasQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerAliasQueue)(nil)).Elem()
}

func (i QueueManagerAliasQueueArgs) ToQueueManagerAliasQueueOutput() QueueManagerAliasQueueOutput {
	return i.ToQueueManagerAliasQueueOutputWithContext(context.Background())
}

func (i QueueManagerAliasQueueArgs) ToQueueManagerAliasQueueOutputWithContext(ctx context.Context) QueueManagerAliasQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerAliasQueueOutput)
}

// QueueManagerAliasQueueArrayInput is an input type that accepts QueueManagerAliasQueueArray and QueueManagerAliasQueueArrayOutput values.
// You can construct a concrete instance of `QueueManagerAliasQueueArrayInput` via:
//
//	QueueManagerAliasQueueArray{ QueueManagerAliasQueueArgs{...} }
type QueueManagerAliasQueueArrayInput interface {
	pulumi.Input

	ToQueueManagerAliasQueueArrayOutput() QueueManagerAliasQueueArrayOutput
	ToQueueManagerAliasQueueArrayOutputWithContext(context.Context) QueueManagerAliasQueueArrayOutput
}

type QueueManagerAliasQueueArray []QueueManagerAliasQueueInput

func (QueueManagerAliasQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerAliasQueue)(nil)).Elem()
}

func (i QueueManagerAliasQueueArray) ToQueueManagerAliasQueueArrayOutput() QueueManagerAliasQueueArrayOutput {
	return i.ToQueueManagerAliasQueueArrayOutputWithContext(context.Background())
}

func (i QueueManagerAliasQueueArray) ToQueueManagerAliasQueueArrayOutputWithContext(ctx context.Context) QueueManagerAliasQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerAliasQueueArrayOutput)
}

type QueueManagerAliasQueueOutput struct{ *pulumi.OutputState }

func (QueueManagerAliasQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerAliasQueue)(nil)).Elem()
}

func (o QueueManagerAliasQueueOutput) ToQueueManagerAliasQueueOutput() QueueManagerAliasQueueOutput {
	return o
}

func (o QueueManagerAliasQueueOutput) ToQueueManagerAliasQueueOutputWithContext(ctx context.Context) QueueManagerAliasQueueOutput {
	return o
}

// Alias queue definitions for queue manager
func (o QueueManagerAliasQueueOutput) AliasQueues() QueueManagerAliasQueueAliasQueueArrayOutput {
	return o.ApplyT(func(v QueueManagerAliasQueue) []QueueManagerAliasQueueAliasQueue { return v.AliasQueues }).(QueueManagerAliasQueueAliasQueueArrayOutput)
}

type QueueManagerAliasQueueArrayOutput struct{ *pulumi.OutputState }

func (QueueManagerAliasQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerAliasQueue)(nil)).Elem()
}

func (o QueueManagerAliasQueueArrayOutput) ToQueueManagerAliasQueueArrayOutput() QueueManagerAliasQueueArrayOutput {
	return o
}

func (o QueueManagerAliasQueueArrayOutput) ToQueueManagerAliasQueueArrayOutputWithContext(ctx context.Context) QueueManagerAliasQueueArrayOutput {
	return o
}

func (o QueueManagerAliasQueueArrayOutput) Index(i pulumi.IntInput) QueueManagerAliasQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueManagerAliasQueue {
		return vs[0].([]QueueManagerAliasQueue)[vs[1].(int)]
	}).(QueueManagerAliasQueueOutput)
}

type QueueManagerAliasQueueAliasQueue struct {
	AliasQueueName      string   `pulumi:"aliasQueueName"`
	BaseQueueName       string   `pulumi:"baseQueueName"`
	ClusterVisibilities []string `pulumi:"clusterVisibilities"`
}

// QueueManagerAliasQueueAliasQueueInput is an input type that accepts QueueManagerAliasQueueAliasQueueArgs and QueueManagerAliasQueueAliasQueueOutput values.
// You can construct a concrete instance of `QueueManagerAliasQueueAliasQueueInput` via:
//
//	QueueManagerAliasQueueAliasQueueArgs{...}
type QueueManagerAliasQueueAliasQueueInput interface {
	pulumi.Input

	ToQueueManagerAliasQueueAliasQueueOutput() QueueManagerAliasQueueAliasQueueOutput
	ToQueueManagerAliasQueueAliasQueueOutputWithContext(context.Context) QueueManagerAliasQueueAliasQueueOutput
}

type QueueManagerAliasQueueAliasQueueArgs struct {
	AliasQueueName      pulumi.StringInput      `pulumi:"aliasQueueName"`
	BaseQueueName       pulumi.StringInput      `pulumi:"baseQueueName"`
	ClusterVisibilities pulumi.StringArrayInput `pulumi:"clusterVisibilities"`
}

func (QueueManagerAliasQueueAliasQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerAliasQueueAliasQueue)(nil)).Elem()
}

func (i QueueManagerAliasQueueAliasQueueArgs) ToQueueManagerAliasQueueAliasQueueOutput() QueueManagerAliasQueueAliasQueueOutput {
	return i.ToQueueManagerAliasQueueAliasQueueOutputWithContext(context.Background())
}

func (i QueueManagerAliasQueueAliasQueueArgs) ToQueueManagerAliasQueueAliasQueueOutputWithContext(ctx context.Context) QueueManagerAliasQueueAliasQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerAliasQueueAliasQueueOutput)
}

// QueueManagerAliasQueueAliasQueueArrayInput is an input type that accepts QueueManagerAliasQueueAliasQueueArray and QueueManagerAliasQueueAliasQueueArrayOutput values.
// You can construct a concrete instance of `QueueManagerAliasQueueAliasQueueArrayInput` via:
//
//	QueueManagerAliasQueueAliasQueueArray{ QueueManagerAliasQueueAliasQueueArgs{...} }
type QueueManagerAliasQueueAliasQueueArrayInput interface {
	pulumi.Input

	ToQueueManagerAliasQueueAliasQueueArrayOutput() QueueManagerAliasQueueAliasQueueArrayOutput
	ToQueueManagerAliasQueueAliasQueueArrayOutputWithContext(context.Context) QueueManagerAliasQueueAliasQueueArrayOutput
}

type QueueManagerAliasQueueAliasQueueArray []QueueManagerAliasQueueAliasQueueInput

func (QueueManagerAliasQueueAliasQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerAliasQueueAliasQueue)(nil)).Elem()
}

func (i QueueManagerAliasQueueAliasQueueArray) ToQueueManagerAliasQueueAliasQueueArrayOutput() QueueManagerAliasQueueAliasQueueArrayOutput {
	return i.ToQueueManagerAliasQueueAliasQueueArrayOutputWithContext(context.Background())
}

func (i QueueManagerAliasQueueAliasQueueArray) ToQueueManagerAliasQueueAliasQueueArrayOutputWithContext(ctx context.Context) QueueManagerAliasQueueAliasQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerAliasQueueAliasQueueArrayOutput)
}

type QueueManagerAliasQueueAliasQueueOutput struct{ *pulumi.OutputState }

func (QueueManagerAliasQueueAliasQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerAliasQueueAliasQueue)(nil)).Elem()
}

func (o QueueManagerAliasQueueAliasQueueOutput) ToQueueManagerAliasQueueAliasQueueOutput() QueueManagerAliasQueueAliasQueueOutput {
	return o
}

func (o QueueManagerAliasQueueAliasQueueOutput) ToQueueManagerAliasQueueAliasQueueOutputWithContext(ctx context.Context) QueueManagerAliasQueueAliasQueueOutput {
	return o
}

func (o QueueManagerAliasQueueAliasQueueOutput) AliasQueueName() pulumi.StringOutput {
	return o.ApplyT(func(v QueueManagerAliasQueueAliasQueue) string { return v.AliasQueueName }).(pulumi.StringOutput)
}

func (o QueueManagerAliasQueueAliasQueueOutput) BaseQueueName() pulumi.StringOutput {
	return o.ApplyT(func(v QueueManagerAliasQueueAliasQueue) string { return v.BaseQueueName }).(pulumi.StringOutput)
}

func (o QueueManagerAliasQueueAliasQueueOutput) ClusterVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueueManagerAliasQueueAliasQueue) []string { return v.ClusterVisibilities }).(pulumi.StringArrayOutput)
}

type QueueManagerAliasQueueAliasQueueArrayOutput struct{ *pulumi.OutputState }

func (QueueManagerAliasQueueAliasQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerAliasQueueAliasQueue)(nil)).Elem()
}

func (o QueueManagerAliasQueueAliasQueueArrayOutput) ToQueueManagerAliasQueueAliasQueueArrayOutput() QueueManagerAliasQueueAliasQueueArrayOutput {
	return o
}

func (o QueueManagerAliasQueueAliasQueueArrayOutput) ToQueueManagerAliasQueueAliasQueueArrayOutputWithContext(ctx context.Context) QueueManagerAliasQueueAliasQueueArrayOutput {
	return o
}

func (o QueueManagerAliasQueueAliasQueueArrayOutput) Index(i pulumi.IntInput) QueueManagerAliasQueueAliasQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueManagerAliasQueueAliasQueue {
		return vs[0].([]QueueManagerAliasQueueAliasQueue)[vs[1].(int)]
	}).(QueueManagerAliasQueueAliasQueueOutput)
}

type QueueManagerClusterQueue struct {
	// Cluster queue definitions for queue manager
	ClusterQueues []QueueManagerClusterQueueClusterQueue `pulumi:"clusterQueues"`
}

// QueueManagerClusterQueueInput is an input type that accepts QueueManagerClusterQueueArgs and QueueManagerClusterQueueOutput values.
// You can construct a concrete instance of `QueueManagerClusterQueueInput` via:
//
//	QueueManagerClusterQueueArgs{...}
type QueueManagerClusterQueueInput interface {
	pulumi.Input

	ToQueueManagerClusterQueueOutput() QueueManagerClusterQueueOutput
	ToQueueManagerClusterQueueOutputWithContext(context.Context) QueueManagerClusterQueueOutput
}

type QueueManagerClusterQueueArgs struct {
	// Cluster queue definitions for queue manager
	ClusterQueues QueueManagerClusterQueueClusterQueueArrayInput `pulumi:"clusterQueues"`
}

func (QueueManagerClusterQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerClusterQueue)(nil)).Elem()
}

func (i QueueManagerClusterQueueArgs) ToQueueManagerClusterQueueOutput() QueueManagerClusterQueueOutput {
	return i.ToQueueManagerClusterQueueOutputWithContext(context.Background())
}

func (i QueueManagerClusterQueueArgs) ToQueueManagerClusterQueueOutputWithContext(ctx context.Context) QueueManagerClusterQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerClusterQueueOutput)
}

// QueueManagerClusterQueueArrayInput is an input type that accepts QueueManagerClusterQueueArray and QueueManagerClusterQueueArrayOutput values.
// You can construct a concrete instance of `QueueManagerClusterQueueArrayInput` via:
//
//	QueueManagerClusterQueueArray{ QueueManagerClusterQueueArgs{...} }
type QueueManagerClusterQueueArrayInput interface {
	pulumi.Input

	ToQueueManagerClusterQueueArrayOutput() QueueManagerClusterQueueArrayOutput
	ToQueueManagerClusterQueueArrayOutputWithContext(context.Context) QueueManagerClusterQueueArrayOutput
}

type QueueManagerClusterQueueArray []QueueManagerClusterQueueInput

func (QueueManagerClusterQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerClusterQueue)(nil)).Elem()
}

func (i QueueManagerClusterQueueArray) ToQueueManagerClusterQueueArrayOutput() QueueManagerClusterQueueArrayOutput {
	return i.ToQueueManagerClusterQueueArrayOutputWithContext(context.Background())
}

func (i QueueManagerClusterQueueArray) ToQueueManagerClusterQueueArrayOutputWithContext(ctx context.Context) QueueManagerClusterQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerClusterQueueArrayOutput)
}

type QueueManagerClusterQueueOutput struct{ *pulumi.OutputState }

func (QueueManagerClusterQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerClusterQueue)(nil)).Elem()
}

func (o QueueManagerClusterQueueOutput) ToQueueManagerClusterQueueOutput() QueueManagerClusterQueueOutput {
	return o
}

func (o QueueManagerClusterQueueOutput) ToQueueManagerClusterQueueOutputWithContext(ctx context.Context) QueueManagerClusterQueueOutput {
	return o
}

// Cluster queue definitions for queue manager
func (o QueueManagerClusterQueueOutput) ClusterQueues() QueueManagerClusterQueueClusterQueueArrayOutput {
	return o.ApplyT(func(v QueueManagerClusterQueue) []QueueManagerClusterQueueClusterQueue { return v.ClusterQueues }).(QueueManagerClusterQueueClusterQueueArrayOutput)
}

type QueueManagerClusterQueueArrayOutput struct{ *pulumi.OutputState }

func (QueueManagerClusterQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerClusterQueue)(nil)).Elem()
}

func (o QueueManagerClusterQueueArrayOutput) ToQueueManagerClusterQueueArrayOutput() QueueManagerClusterQueueArrayOutput {
	return o
}

func (o QueueManagerClusterQueueArrayOutput) ToQueueManagerClusterQueueArrayOutputWithContext(ctx context.Context) QueueManagerClusterQueueArrayOutput {
	return o
}

func (o QueueManagerClusterQueueArrayOutput) Index(i pulumi.IntInput) QueueManagerClusterQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueManagerClusterQueue {
		return vs[0].([]QueueManagerClusterQueue)[vs[1].(int)]
	}).(QueueManagerClusterQueueOutput)
}

type QueueManagerClusterQueueClusterQueue struct {
	ClusterVisibilities []string `pulumi:"clusterVisibilities"`
	LocalQueueName      string   `pulumi:"localQueueName"`
}

// QueueManagerClusterQueueClusterQueueInput is an input type that accepts QueueManagerClusterQueueClusterQueueArgs and QueueManagerClusterQueueClusterQueueOutput values.
// You can construct a concrete instance of `QueueManagerClusterQueueClusterQueueInput` via:
//
//	QueueManagerClusterQueueClusterQueueArgs{...}
type QueueManagerClusterQueueClusterQueueInput interface {
	pulumi.Input

	ToQueueManagerClusterQueueClusterQueueOutput() QueueManagerClusterQueueClusterQueueOutput
	ToQueueManagerClusterQueueClusterQueueOutputWithContext(context.Context) QueueManagerClusterQueueClusterQueueOutput
}

type QueueManagerClusterQueueClusterQueueArgs struct {
	ClusterVisibilities pulumi.StringArrayInput `pulumi:"clusterVisibilities"`
	LocalQueueName      pulumi.StringInput      `pulumi:"localQueueName"`
}

func (QueueManagerClusterQueueClusterQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerClusterQueueClusterQueue)(nil)).Elem()
}

func (i QueueManagerClusterQueueClusterQueueArgs) ToQueueManagerClusterQueueClusterQueueOutput() QueueManagerClusterQueueClusterQueueOutput {
	return i.ToQueueManagerClusterQueueClusterQueueOutputWithContext(context.Background())
}

func (i QueueManagerClusterQueueClusterQueueArgs) ToQueueManagerClusterQueueClusterQueueOutputWithContext(ctx context.Context) QueueManagerClusterQueueClusterQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerClusterQueueClusterQueueOutput)
}

// QueueManagerClusterQueueClusterQueueArrayInput is an input type that accepts QueueManagerClusterQueueClusterQueueArray and QueueManagerClusterQueueClusterQueueArrayOutput values.
// You can construct a concrete instance of `QueueManagerClusterQueueClusterQueueArrayInput` via:
//
//	QueueManagerClusterQueueClusterQueueArray{ QueueManagerClusterQueueClusterQueueArgs{...} }
type QueueManagerClusterQueueClusterQueueArrayInput interface {
	pulumi.Input

	ToQueueManagerClusterQueueClusterQueueArrayOutput() QueueManagerClusterQueueClusterQueueArrayOutput
	ToQueueManagerClusterQueueClusterQueueArrayOutputWithContext(context.Context) QueueManagerClusterQueueClusterQueueArrayOutput
}

type QueueManagerClusterQueueClusterQueueArray []QueueManagerClusterQueueClusterQueueInput

func (QueueManagerClusterQueueClusterQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerClusterQueueClusterQueue)(nil)).Elem()
}

func (i QueueManagerClusterQueueClusterQueueArray) ToQueueManagerClusterQueueClusterQueueArrayOutput() QueueManagerClusterQueueClusterQueueArrayOutput {
	return i.ToQueueManagerClusterQueueClusterQueueArrayOutputWithContext(context.Background())
}

func (i QueueManagerClusterQueueClusterQueueArray) ToQueueManagerClusterQueueClusterQueueArrayOutputWithContext(ctx context.Context) QueueManagerClusterQueueClusterQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerClusterQueueClusterQueueArrayOutput)
}

type QueueManagerClusterQueueClusterQueueOutput struct{ *pulumi.OutputState }

func (QueueManagerClusterQueueClusterQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerClusterQueueClusterQueue)(nil)).Elem()
}

func (o QueueManagerClusterQueueClusterQueueOutput) ToQueueManagerClusterQueueClusterQueueOutput() QueueManagerClusterQueueClusterQueueOutput {
	return o
}

func (o QueueManagerClusterQueueClusterQueueOutput) ToQueueManagerClusterQueueClusterQueueOutputWithContext(ctx context.Context) QueueManagerClusterQueueClusterQueueOutput {
	return o
}

func (o QueueManagerClusterQueueClusterQueueOutput) ClusterVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueueManagerClusterQueueClusterQueue) []string { return v.ClusterVisibilities }).(pulumi.StringArrayOutput)
}

func (o QueueManagerClusterQueueClusterQueueOutput) LocalQueueName() pulumi.StringOutput {
	return o.ApplyT(func(v QueueManagerClusterQueueClusterQueue) string { return v.LocalQueueName }).(pulumi.StringOutput)
}

type QueueManagerClusterQueueClusterQueueArrayOutput struct{ *pulumi.OutputState }

func (QueueManagerClusterQueueClusterQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerClusterQueueClusterQueue)(nil)).Elem()
}

func (o QueueManagerClusterQueueClusterQueueArrayOutput) ToQueueManagerClusterQueueClusterQueueArrayOutput() QueueManagerClusterQueueClusterQueueArrayOutput {
	return o
}

func (o QueueManagerClusterQueueClusterQueueArrayOutput) ToQueueManagerClusterQueueClusterQueueArrayOutputWithContext(ctx context.Context) QueueManagerClusterQueueClusterQueueArrayOutput {
	return o
}

func (o QueueManagerClusterQueueClusterQueueArrayOutput) Index(i pulumi.IntInput) QueueManagerClusterQueueClusterQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueManagerClusterQueueClusterQueue {
		return vs[0].([]QueueManagerClusterQueueClusterQueue)[vs[1].(int)]
	}).(QueueManagerClusterQueueClusterQueueOutput)
}

type QueueManagerRemoteQueue struct {
	// Remote queue definitions for queue manager
	RemoteQueues []QueueManagerRemoteQueueRemoteQueue `pulumi:"remoteQueues"`
}

// QueueManagerRemoteQueueInput is an input type that accepts QueueManagerRemoteQueueArgs and QueueManagerRemoteQueueOutput values.
// You can construct a concrete instance of `QueueManagerRemoteQueueInput` via:
//
//	QueueManagerRemoteQueueArgs{...}
type QueueManagerRemoteQueueInput interface {
	pulumi.Input

	ToQueueManagerRemoteQueueOutput() QueueManagerRemoteQueueOutput
	ToQueueManagerRemoteQueueOutputWithContext(context.Context) QueueManagerRemoteQueueOutput
}

type QueueManagerRemoteQueueArgs struct {
	// Remote queue definitions for queue manager
	RemoteQueues QueueManagerRemoteQueueRemoteQueueArrayInput `pulumi:"remoteQueues"`
}

func (QueueManagerRemoteQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerRemoteQueue)(nil)).Elem()
}

func (i QueueManagerRemoteQueueArgs) ToQueueManagerRemoteQueueOutput() QueueManagerRemoteQueueOutput {
	return i.ToQueueManagerRemoteQueueOutputWithContext(context.Background())
}

func (i QueueManagerRemoteQueueArgs) ToQueueManagerRemoteQueueOutputWithContext(ctx context.Context) QueueManagerRemoteQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerRemoteQueueOutput)
}

// QueueManagerRemoteQueueArrayInput is an input type that accepts QueueManagerRemoteQueueArray and QueueManagerRemoteQueueArrayOutput values.
// You can construct a concrete instance of `QueueManagerRemoteQueueArrayInput` via:
//
//	QueueManagerRemoteQueueArray{ QueueManagerRemoteQueueArgs{...} }
type QueueManagerRemoteQueueArrayInput interface {
	pulumi.Input

	ToQueueManagerRemoteQueueArrayOutput() QueueManagerRemoteQueueArrayOutput
	ToQueueManagerRemoteQueueArrayOutputWithContext(context.Context) QueueManagerRemoteQueueArrayOutput
}

type QueueManagerRemoteQueueArray []QueueManagerRemoteQueueInput

func (QueueManagerRemoteQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerRemoteQueue)(nil)).Elem()
}

func (i QueueManagerRemoteQueueArray) ToQueueManagerRemoteQueueArrayOutput() QueueManagerRemoteQueueArrayOutput {
	return i.ToQueueManagerRemoteQueueArrayOutputWithContext(context.Background())
}

func (i QueueManagerRemoteQueueArray) ToQueueManagerRemoteQueueArrayOutputWithContext(ctx context.Context) QueueManagerRemoteQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerRemoteQueueArrayOutput)
}

type QueueManagerRemoteQueueOutput struct{ *pulumi.OutputState }

func (QueueManagerRemoteQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerRemoteQueue)(nil)).Elem()
}

func (o QueueManagerRemoteQueueOutput) ToQueueManagerRemoteQueueOutput() QueueManagerRemoteQueueOutput {
	return o
}

func (o QueueManagerRemoteQueueOutput) ToQueueManagerRemoteQueueOutputWithContext(ctx context.Context) QueueManagerRemoteQueueOutput {
	return o
}

// Remote queue definitions for queue manager
func (o QueueManagerRemoteQueueOutput) RemoteQueues() QueueManagerRemoteQueueRemoteQueueArrayOutput {
	return o.ApplyT(func(v QueueManagerRemoteQueue) []QueueManagerRemoteQueueRemoteQueue { return v.RemoteQueues }).(QueueManagerRemoteQueueRemoteQueueArrayOutput)
}

type QueueManagerRemoteQueueArrayOutput struct{ *pulumi.OutputState }

func (QueueManagerRemoteQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerRemoteQueue)(nil)).Elem()
}

func (o QueueManagerRemoteQueueArrayOutput) ToQueueManagerRemoteQueueArrayOutput() QueueManagerRemoteQueueArrayOutput {
	return o
}

func (o QueueManagerRemoteQueueArrayOutput) ToQueueManagerRemoteQueueArrayOutputWithContext(ctx context.Context) QueueManagerRemoteQueueArrayOutput {
	return o
}

func (o QueueManagerRemoteQueueArrayOutput) Index(i pulumi.IntInput) QueueManagerRemoteQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueManagerRemoteQueue {
		return vs[0].([]QueueManagerRemoteQueue)[vs[1].(int)]
	}).(QueueManagerRemoteQueueOutput)
}

type QueueManagerRemoteQueueRemoteQueue struct {
	ClusterVisibilities []string `pulumi:"clusterVisibilities"`
	LocalQueueName      string   `pulumi:"localQueueName"`
	RemoteQueueManager  string   `pulumi:"remoteQueueManager"`
	RemoteQueueName     string   `pulumi:"remoteQueueName"`
}

// QueueManagerRemoteQueueRemoteQueueInput is an input type that accepts QueueManagerRemoteQueueRemoteQueueArgs and QueueManagerRemoteQueueRemoteQueueOutput values.
// You can construct a concrete instance of `QueueManagerRemoteQueueRemoteQueueInput` via:
//
//	QueueManagerRemoteQueueRemoteQueueArgs{...}
type QueueManagerRemoteQueueRemoteQueueInput interface {
	pulumi.Input

	ToQueueManagerRemoteQueueRemoteQueueOutput() QueueManagerRemoteQueueRemoteQueueOutput
	ToQueueManagerRemoteQueueRemoteQueueOutputWithContext(context.Context) QueueManagerRemoteQueueRemoteQueueOutput
}

type QueueManagerRemoteQueueRemoteQueueArgs struct {
	ClusterVisibilities pulumi.StringArrayInput `pulumi:"clusterVisibilities"`
	LocalQueueName      pulumi.StringInput      `pulumi:"localQueueName"`
	RemoteQueueManager  pulumi.StringInput      `pulumi:"remoteQueueManager"`
	RemoteQueueName     pulumi.StringInput      `pulumi:"remoteQueueName"`
}

func (QueueManagerRemoteQueueRemoteQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerRemoteQueueRemoteQueue)(nil)).Elem()
}

func (i QueueManagerRemoteQueueRemoteQueueArgs) ToQueueManagerRemoteQueueRemoteQueueOutput() QueueManagerRemoteQueueRemoteQueueOutput {
	return i.ToQueueManagerRemoteQueueRemoteQueueOutputWithContext(context.Background())
}

func (i QueueManagerRemoteQueueRemoteQueueArgs) ToQueueManagerRemoteQueueRemoteQueueOutputWithContext(ctx context.Context) QueueManagerRemoteQueueRemoteQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerRemoteQueueRemoteQueueOutput)
}

// QueueManagerRemoteQueueRemoteQueueArrayInput is an input type that accepts QueueManagerRemoteQueueRemoteQueueArray and QueueManagerRemoteQueueRemoteQueueArrayOutput values.
// You can construct a concrete instance of `QueueManagerRemoteQueueRemoteQueueArrayInput` via:
//
//	QueueManagerRemoteQueueRemoteQueueArray{ QueueManagerRemoteQueueRemoteQueueArgs{...} }
type QueueManagerRemoteQueueRemoteQueueArrayInput interface {
	pulumi.Input

	ToQueueManagerRemoteQueueRemoteQueueArrayOutput() QueueManagerRemoteQueueRemoteQueueArrayOutput
	ToQueueManagerRemoteQueueRemoteQueueArrayOutputWithContext(context.Context) QueueManagerRemoteQueueRemoteQueueArrayOutput
}

type QueueManagerRemoteQueueRemoteQueueArray []QueueManagerRemoteQueueRemoteQueueInput

func (QueueManagerRemoteQueueRemoteQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerRemoteQueueRemoteQueue)(nil)).Elem()
}

func (i QueueManagerRemoteQueueRemoteQueueArray) ToQueueManagerRemoteQueueRemoteQueueArrayOutput() QueueManagerRemoteQueueRemoteQueueArrayOutput {
	return i.ToQueueManagerRemoteQueueRemoteQueueArrayOutputWithContext(context.Background())
}

func (i QueueManagerRemoteQueueRemoteQueueArray) ToQueueManagerRemoteQueueRemoteQueueArrayOutputWithContext(ctx context.Context) QueueManagerRemoteQueueRemoteQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueManagerRemoteQueueRemoteQueueArrayOutput)
}

type QueueManagerRemoteQueueRemoteQueueOutput struct{ *pulumi.OutputState }

func (QueueManagerRemoteQueueRemoteQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueManagerRemoteQueueRemoteQueue)(nil)).Elem()
}

func (o QueueManagerRemoteQueueRemoteQueueOutput) ToQueueManagerRemoteQueueRemoteQueueOutput() QueueManagerRemoteQueueRemoteQueueOutput {
	return o
}

func (o QueueManagerRemoteQueueRemoteQueueOutput) ToQueueManagerRemoteQueueRemoteQueueOutputWithContext(ctx context.Context) QueueManagerRemoteQueueRemoteQueueOutput {
	return o
}

func (o QueueManagerRemoteQueueRemoteQueueOutput) ClusterVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueueManagerRemoteQueueRemoteQueue) []string { return v.ClusterVisibilities }).(pulumi.StringArrayOutput)
}

func (o QueueManagerRemoteQueueRemoteQueueOutput) LocalQueueName() pulumi.StringOutput {
	return o.ApplyT(func(v QueueManagerRemoteQueueRemoteQueue) string { return v.LocalQueueName }).(pulumi.StringOutput)
}

func (o QueueManagerRemoteQueueRemoteQueueOutput) RemoteQueueManager() pulumi.StringOutput {
	return o.ApplyT(func(v QueueManagerRemoteQueueRemoteQueue) string { return v.RemoteQueueManager }).(pulumi.StringOutput)
}

func (o QueueManagerRemoteQueueRemoteQueueOutput) RemoteQueueName() pulumi.StringOutput {
	return o.ApplyT(func(v QueueManagerRemoteQueueRemoteQueue) string { return v.RemoteQueueName }).(pulumi.StringOutput)
}

type QueueManagerRemoteQueueRemoteQueueArrayOutput struct{ *pulumi.OutputState }

func (QueueManagerRemoteQueueRemoteQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueManagerRemoteQueueRemoteQueue)(nil)).Elem()
}

func (o QueueManagerRemoteQueueRemoteQueueArrayOutput) ToQueueManagerRemoteQueueRemoteQueueArrayOutput() QueueManagerRemoteQueueRemoteQueueArrayOutput {
	return o
}

func (o QueueManagerRemoteQueueRemoteQueueArrayOutput) ToQueueManagerRemoteQueueRemoteQueueArrayOutputWithContext(ctx context.Context) QueueManagerRemoteQueueRemoteQueueArrayOutput {
	return o
}

func (o QueueManagerRemoteQueueRemoteQueueArrayOutput) Index(i pulumi.IntInput) QueueManagerRemoteQueueRemoteQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueManagerRemoteQueueRemoteQueue {
		return vs[0].([]QueueManagerRemoteQueueRemoteQueue)[vs[1].(int)]
	}).(QueueManagerRemoteQueueRemoteQueueOutput)
}

type RequestAttributeDataSource struct {
	// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
	CapturingAndStorageLocation *string `pulumi:"capturingAndStorageLocation"`
	// IBM integration bus label node name condition for which the value is captured
	CicsSdkMethodNodeCondition *RequestAttributeDataSourceCicsSdkMethodNodeCondition `pulumi:"cicsSdkMethodNodeCondition"`
	// The data source is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// IBM integration bus label node name condition for which the value is captured
	IibLabelMethodNodeCondition *RequestAttributeDataSourceIibLabelMethodNodeCondition `pulumi:"iibLabelMethodNodeCondition"`
	// IBM integration bus label node name condition for which the value is captured
	IibMethodNodeCondition *RequestAttributeDataSourceIibMethodNodeCondition `pulumi:"iibMethodNodeCondition"`
	// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
	IibNodeType *string `pulumi:"iibNodeType"`
	// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
	Methods []RequestAttributeDataSourceMethod `pulumi:"methods"`
	// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
	ParameterName *string `pulumi:"parameterName"`
	// Conditions for data capturing
	Scope *RequestAttributeDataSourceScope `pulumi:"scope"`
	// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
	SessionAttributeTechnology *string `pulumi:"sessionAttributeTechnology"`
	// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
	Source     string  `pulumi:"source"`
	Technology *string `pulumi:"technology"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns        *string                                    `pulumi:"unknowns"`
	ValueProcessing *RequestAttributeDataSourceValueProcessing `pulumi:"valueProcessing"`
}

// RequestAttributeDataSourceInput is an input type that accepts RequestAttributeDataSourceArgs and RequestAttributeDataSourceOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceInput` via:
//
//	RequestAttributeDataSourceArgs{...}
type RequestAttributeDataSourceInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceOutput() RequestAttributeDataSourceOutput
	ToRequestAttributeDataSourceOutputWithContext(context.Context) RequestAttributeDataSourceOutput
}

type RequestAttributeDataSourceArgs struct {
	// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
	CapturingAndStorageLocation pulumi.StringPtrInput `pulumi:"capturingAndStorageLocation"`
	// IBM integration bus label node name condition for which the value is captured
	CicsSdkMethodNodeCondition RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrInput `pulumi:"cicsSdkMethodNodeCondition"`
	// The data source is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// IBM integration bus label node name condition for which the value is captured
	IibLabelMethodNodeCondition RequestAttributeDataSourceIibLabelMethodNodeConditionPtrInput `pulumi:"iibLabelMethodNodeCondition"`
	// IBM integration bus label node name condition for which the value is captured
	IibMethodNodeCondition RequestAttributeDataSourceIibMethodNodeConditionPtrInput `pulumi:"iibMethodNodeCondition"`
	// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
	IibNodeType pulumi.StringPtrInput `pulumi:"iibNodeType"`
	// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
	Methods RequestAttributeDataSourceMethodArrayInput `pulumi:"methods"`
	// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
	ParameterName pulumi.StringPtrInput `pulumi:"parameterName"`
	// Conditions for data capturing
	Scope RequestAttributeDataSourceScopePtrInput `pulumi:"scope"`
	// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
	SessionAttributeTechnology pulumi.StringPtrInput `pulumi:"sessionAttributeTechnology"`
	// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
	Source     pulumi.StringInput    `pulumi:"source"`
	Technology pulumi.StringPtrInput `pulumi:"technology"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns        pulumi.StringPtrInput                             `pulumi:"unknowns"`
	ValueProcessing RequestAttributeDataSourceValueProcessingPtrInput `pulumi:"valueProcessing"`
}

func (RequestAttributeDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSource)(nil)).Elem()
}

func (i RequestAttributeDataSourceArgs) ToRequestAttributeDataSourceOutput() RequestAttributeDataSourceOutput {
	return i.ToRequestAttributeDataSourceOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceArgs) ToRequestAttributeDataSourceOutputWithContext(ctx context.Context) RequestAttributeDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceOutput)
}

// RequestAttributeDataSourceArrayInput is an input type that accepts RequestAttributeDataSourceArray and RequestAttributeDataSourceArrayOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceArrayInput` via:
//
//	RequestAttributeDataSourceArray{ RequestAttributeDataSourceArgs{...} }
type RequestAttributeDataSourceArrayInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceArrayOutput() RequestAttributeDataSourceArrayOutput
	ToRequestAttributeDataSourceArrayOutputWithContext(context.Context) RequestAttributeDataSourceArrayOutput
}

type RequestAttributeDataSourceArray []RequestAttributeDataSourceInput

func (RequestAttributeDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAttributeDataSource)(nil)).Elem()
}

func (i RequestAttributeDataSourceArray) ToRequestAttributeDataSourceArrayOutput() RequestAttributeDataSourceArrayOutput {
	return i.ToRequestAttributeDataSourceArrayOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceArray) ToRequestAttributeDataSourceArrayOutputWithContext(ctx context.Context) RequestAttributeDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceArrayOutput)
}

type RequestAttributeDataSourceOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSource)(nil)).Elem()
}

func (o RequestAttributeDataSourceOutput) ToRequestAttributeDataSourceOutput() RequestAttributeDataSourceOutput {
	return o
}

func (o RequestAttributeDataSourceOutput) ToRequestAttributeDataSourceOutputWithContext(ctx context.Context) RequestAttributeDataSourceOutput {
	return o
}

// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
func (o RequestAttributeDataSourceOutput) CapturingAndStorageLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *string { return v.CapturingAndStorageLocation }).(pulumi.StringPtrOutput)
}

// IBM integration bus label node name condition for which the value is captured
func (o RequestAttributeDataSourceOutput) CicsSdkMethodNodeCondition() RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *RequestAttributeDataSourceCicsSdkMethodNodeCondition {
		return v.CicsSdkMethodNodeCondition
	}).(RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput)
}

// The data source is enabled (`true`) or disabled (`false`)
func (o RequestAttributeDataSourceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// IBM integration bus label node name condition for which the value is captured
func (o RequestAttributeDataSourceOutput) IibLabelMethodNodeCondition() RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *RequestAttributeDataSourceIibLabelMethodNodeCondition {
		return v.IibLabelMethodNodeCondition
	}).(RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput)
}

// IBM integration bus label node name condition for which the value is captured
func (o RequestAttributeDataSourceOutput) IibMethodNodeCondition() RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *RequestAttributeDataSourceIibMethodNodeCondition {
		return v.IibMethodNodeCondition
	}).(RequestAttributeDataSourceIibMethodNodeConditionPtrOutput)
}

// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
func (o RequestAttributeDataSourceOutput) IibNodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *string { return v.IibNodeType }).(pulumi.StringPtrOutput)
}

// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
func (o RequestAttributeDataSourceOutput) Methods() RequestAttributeDataSourceMethodArrayOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) []RequestAttributeDataSourceMethod { return v.Methods }).(RequestAttributeDataSourceMethodArrayOutput)
}

// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
func (o RequestAttributeDataSourceOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

// Conditions for data capturing
func (o RequestAttributeDataSourceOutput) Scope() RequestAttributeDataSourceScopePtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *RequestAttributeDataSourceScope { return v.Scope }).(RequestAttributeDataSourceScopePtrOutput)
}

// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
func (o RequestAttributeDataSourceOutput) SessionAttributeTechnology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *string { return v.SessionAttributeTechnology }).(pulumi.StringPtrOutput)
}

// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
func (o RequestAttributeDataSourceOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) string { return v.Source }).(pulumi.StringOutput)
}

func (o RequestAttributeDataSourceOutput) Technology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *string { return v.Technology }).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceOutput) ValueProcessing() RequestAttributeDataSourceValueProcessingPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSource) *RequestAttributeDataSourceValueProcessing {
		return v.ValueProcessing
	}).(RequestAttributeDataSourceValueProcessingPtrOutput)
}

type RequestAttributeDataSourceArrayOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAttributeDataSource)(nil)).Elem()
}

func (o RequestAttributeDataSourceArrayOutput) ToRequestAttributeDataSourceArrayOutput() RequestAttributeDataSourceArrayOutput {
	return o
}

func (o RequestAttributeDataSourceArrayOutput) ToRequestAttributeDataSourceArrayOutputWithContext(ctx context.Context) RequestAttributeDataSourceArrayOutput {
	return o
}

func (o RequestAttributeDataSourceArrayOutput) Index(i pulumi.IntInput) RequestAttributeDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAttributeDataSource {
		return vs[0].([]RequestAttributeDataSource)[vs[1].(int)]
	}).(RequestAttributeDataSourceOutput)
}

type RequestAttributeDataSourceCicsSdkMethodNodeCondition struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	Value    string  `pulumi:"value"`
}

// RequestAttributeDataSourceCicsSdkMethodNodeConditionInput is an input type that accepts RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs and RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceCicsSdkMethodNodeConditionInput` via:
//
//	RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs{...}
type RequestAttributeDataSourceCicsSdkMethodNodeConditionInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput
	ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutputWithContext(context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput
}

type RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringInput    `pulumi:"value"`
}

func (RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceCicsSdkMethodNodeCondition)(nil)).Elem()
}

func (i RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput {
	return i.ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput)
}

func (i RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return i.ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput).ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrInput is an input type that accepts RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs, RequestAttributeDataSourceCicsSdkMethodNodeConditionPtr and RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrInput` via:
//
//	        RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput
	ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput
}

type requestAttributeDataSourceCicsSdkMethodNodeConditionPtrType RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs

func RequestAttributeDataSourceCicsSdkMethodNodeConditionPtr(v *RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs) RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrInput {
	return (*requestAttributeDataSourceCicsSdkMethodNodeConditionPtrType)(v)
}

func (*requestAttributeDataSourceCicsSdkMethodNodeConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceCicsSdkMethodNodeCondition)(nil)).Elem()
}

func (i *requestAttributeDataSourceCicsSdkMethodNodeConditionPtrType) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return i.ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceCicsSdkMethodNodeConditionPtrType) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput)
}

type RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceCicsSdkMethodNodeCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput {
	return o
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput {
	return o
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return o.ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceCicsSdkMethodNodeCondition) *RequestAttributeDataSourceCicsSdkMethodNodeCondition {
		return &v
	}).(RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput)
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceCicsSdkMethodNodeCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceCicsSdkMethodNodeCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceCicsSdkMethodNodeCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceCicsSdkMethodNodeCondition) string { return v.Value }).(pulumi.StringOutput)
}

type RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceCicsSdkMethodNodeCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput() RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) ToRequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) Elem() RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceCicsSdkMethodNodeCondition) RequestAttributeDataSourceCicsSdkMethodNodeCondition {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceCicsSdkMethodNodeCondition
		return ret
	}).(RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput)
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceCicsSdkMethodNodeCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Negate
	}).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceCicsSdkMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceCicsSdkMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceCicsSdkMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceIibLabelMethodNodeCondition struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	Value    string  `pulumi:"value"`
}

// RequestAttributeDataSourceIibLabelMethodNodeConditionInput is an input type that accepts RequestAttributeDataSourceIibLabelMethodNodeConditionArgs and RequestAttributeDataSourceIibLabelMethodNodeConditionOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceIibLabelMethodNodeConditionInput` via:
//
//	RequestAttributeDataSourceIibLabelMethodNodeConditionArgs{...}
type RequestAttributeDataSourceIibLabelMethodNodeConditionInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionOutput
	ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutputWithContext(context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionOutput
}

type RequestAttributeDataSourceIibLabelMethodNodeConditionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringInput    `pulumi:"value"`
}

func (RequestAttributeDataSourceIibLabelMethodNodeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceIibLabelMethodNodeCondition)(nil)).Elem()
}

func (i RequestAttributeDataSourceIibLabelMethodNodeConditionArgs) ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionOutput {
	return i.ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceIibLabelMethodNodeConditionArgs) ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceIibLabelMethodNodeConditionOutput)
}

func (i RequestAttributeDataSourceIibLabelMethodNodeConditionArgs) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return i.ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceIibLabelMethodNodeConditionArgs) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceIibLabelMethodNodeConditionOutput).ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceIibLabelMethodNodeConditionPtrInput is an input type that accepts RequestAttributeDataSourceIibLabelMethodNodeConditionArgs, RequestAttributeDataSourceIibLabelMethodNodeConditionPtr and RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceIibLabelMethodNodeConditionPtrInput` via:
//
//	        RequestAttributeDataSourceIibLabelMethodNodeConditionArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceIibLabelMethodNodeConditionPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput
	ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput
}

type requestAttributeDataSourceIibLabelMethodNodeConditionPtrType RequestAttributeDataSourceIibLabelMethodNodeConditionArgs

func RequestAttributeDataSourceIibLabelMethodNodeConditionPtr(v *RequestAttributeDataSourceIibLabelMethodNodeConditionArgs) RequestAttributeDataSourceIibLabelMethodNodeConditionPtrInput {
	return (*requestAttributeDataSourceIibLabelMethodNodeConditionPtrType)(v)
}

func (*requestAttributeDataSourceIibLabelMethodNodeConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceIibLabelMethodNodeCondition)(nil)).Elem()
}

func (i *requestAttributeDataSourceIibLabelMethodNodeConditionPtrType) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return i.ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceIibLabelMethodNodeConditionPtrType) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput)
}

type RequestAttributeDataSourceIibLabelMethodNodeConditionOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceIibLabelMethodNodeCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionOutput {
	return o
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) ToRequestAttributeDataSourceIibLabelMethodNodeConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionOutput {
	return o
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return o.ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceIibLabelMethodNodeCondition) *RequestAttributeDataSourceIibLabelMethodNodeCondition {
		return &v
	}).(RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput)
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibLabelMethodNodeCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibLabelMethodNodeCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibLabelMethodNodeCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibLabelMethodNodeCondition) string { return v.Value }).(pulumi.StringOutput)
}

type RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceIibLabelMethodNodeCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) ToRequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) Elem() RequestAttributeDataSourceIibLabelMethodNodeConditionOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibLabelMethodNodeCondition) RequestAttributeDataSourceIibLabelMethodNodeCondition {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceIibLabelMethodNodeCondition
		return ret
	}).(RequestAttributeDataSourceIibLabelMethodNodeConditionOutput)
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibLabelMethodNodeCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Negate
	}).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibLabelMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibLabelMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibLabelMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceIibMethodNodeCondition struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	Value    string  `pulumi:"value"`
}

// RequestAttributeDataSourceIibMethodNodeConditionInput is an input type that accepts RequestAttributeDataSourceIibMethodNodeConditionArgs and RequestAttributeDataSourceIibMethodNodeConditionOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceIibMethodNodeConditionInput` via:
//
//	RequestAttributeDataSourceIibMethodNodeConditionArgs{...}
type RequestAttributeDataSourceIibMethodNodeConditionInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceIibMethodNodeConditionOutput() RequestAttributeDataSourceIibMethodNodeConditionOutput
	ToRequestAttributeDataSourceIibMethodNodeConditionOutputWithContext(context.Context) RequestAttributeDataSourceIibMethodNodeConditionOutput
}

type RequestAttributeDataSourceIibMethodNodeConditionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringInput    `pulumi:"value"`
}

func (RequestAttributeDataSourceIibMethodNodeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceIibMethodNodeCondition)(nil)).Elem()
}

func (i RequestAttributeDataSourceIibMethodNodeConditionArgs) ToRequestAttributeDataSourceIibMethodNodeConditionOutput() RequestAttributeDataSourceIibMethodNodeConditionOutput {
	return i.ToRequestAttributeDataSourceIibMethodNodeConditionOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceIibMethodNodeConditionArgs) ToRequestAttributeDataSourceIibMethodNodeConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibMethodNodeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceIibMethodNodeConditionOutput)
}

func (i RequestAttributeDataSourceIibMethodNodeConditionArgs) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return i.ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceIibMethodNodeConditionArgs) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceIibMethodNodeConditionOutput).ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceIibMethodNodeConditionPtrInput is an input type that accepts RequestAttributeDataSourceIibMethodNodeConditionArgs, RequestAttributeDataSourceIibMethodNodeConditionPtr and RequestAttributeDataSourceIibMethodNodeConditionPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceIibMethodNodeConditionPtrInput` via:
//
//	        RequestAttributeDataSourceIibMethodNodeConditionArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceIibMethodNodeConditionPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibMethodNodeConditionPtrOutput
	ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(context.Context) RequestAttributeDataSourceIibMethodNodeConditionPtrOutput
}

type requestAttributeDataSourceIibMethodNodeConditionPtrType RequestAttributeDataSourceIibMethodNodeConditionArgs

func RequestAttributeDataSourceIibMethodNodeConditionPtr(v *RequestAttributeDataSourceIibMethodNodeConditionArgs) RequestAttributeDataSourceIibMethodNodeConditionPtrInput {
	return (*requestAttributeDataSourceIibMethodNodeConditionPtrType)(v)
}

func (*requestAttributeDataSourceIibMethodNodeConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceIibMethodNodeCondition)(nil)).Elem()
}

func (i *requestAttributeDataSourceIibMethodNodeConditionPtrType) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return i.ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceIibMethodNodeConditionPtrType) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceIibMethodNodeConditionPtrOutput)
}

type RequestAttributeDataSourceIibMethodNodeConditionOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceIibMethodNodeConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceIibMethodNodeCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) ToRequestAttributeDataSourceIibMethodNodeConditionOutput() RequestAttributeDataSourceIibMethodNodeConditionOutput {
	return o
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) ToRequestAttributeDataSourceIibMethodNodeConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibMethodNodeConditionOutput {
	return o
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return o.ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceIibMethodNodeCondition) *RequestAttributeDataSourceIibMethodNodeCondition {
		return &v
	}).(RequestAttributeDataSourceIibMethodNodeConditionPtrOutput)
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibMethodNodeCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibMethodNodeCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibMethodNodeCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceIibMethodNodeConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceIibMethodNodeCondition) string { return v.Value }).(pulumi.StringOutput)
}

type RequestAttributeDataSourceIibMethodNodeConditionPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceIibMethodNodeCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutput() RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) ToRequestAttributeDataSourceIibMethodNodeConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceIibMethodNodeConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) Elem() RequestAttributeDataSourceIibMethodNodeConditionOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibMethodNodeCondition) RequestAttributeDataSourceIibMethodNodeCondition {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceIibMethodNodeCondition
		return ret
	}).(RequestAttributeDataSourceIibMethodNodeConditionOutput)
}

func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibMethodNodeCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Negate
	}).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceIibMethodNodeConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceIibMethodNodeCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceMethod struct {
	ArgumentIndex    *int                                    `pulumi:"argumentIndex"`
	Capture          string                                  `pulumi:"capture"`
	DeepObjectAccess *string                                 `pulumi:"deepObjectAccess"`
	Method           *RequestAttributeDataSourceMethodMethod `pulumi:"method"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// RequestAttributeDataSourceMethodInput is an input type that accepts RequestAttributeDataSourceMethodArgs and RequestAttributeDataSourceMethodOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceMethodInput` via:
//
//	RequestAttributeDataSourceMethodArgs{...}
type RequestAttributeDataSourceMethodInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceMethodOutput() RequestAttributeDataSourceMethodOutput
	ToRequestAttributeDataSourceMethodOutputWithContext(context.Context) RequestAttributeDataSourceMethodOutput
}

type RequestAttributeDataSourceMethodArgs struct {
	ArgumentIndex    pulumi.IntPtrInput                             `pulumi:"argumentIndex"`
	Capture          pulumi.StringInput                             `pulumi:"capture"`
	DeepObjectAccess pulumi.StringPtrInput                          `pulumi:"deepObjectAccess"`
	Method           RequestAttributeDataSourceMethodMethodPtrInput `pulumi:"method"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (RequestAttributeDataSourceMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceMethod)(nil)).Elem()
}

func (i RequestAttributeDataSourceMethodArgs) ToRequestAttributeDataSourceMethodOutput() RequestAttributeDataSourceMethodOutput {
	return i.ToRequestAttributeDataSourceMethodOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceMethodArgs) ToRequestAttributeDataSourceMethodOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceMethodOutput)
}

// RequestAttributeDataSourceMethodArrayInput is an input type that accepts RequestAttributeDataSourceMethodArray and RequestAttributeDataSourceMethodArrayOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceMethodArrayInput` via:
//
//	RequestAttributeDataSourceMethodArray{ RequestAttributeDataSourceMethodArgs{...} }
type RequestAttributeDataSourceMethodArrayInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceMethodArrayOutput() RequestAttributeDataSourceMethodArrayOutput
	ToRequestAttributeDataSourceMethodArrayOutputWithContext(context.Context) RequestAttributeDataSourceMethodArrayOutput
}

type RequestAttributeDataSourceMethodArray []RequestAttributeDataSourceMethodInput

func (RequestAttributeDataSourceMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAttributeDataSourceMethod)(nil)).Elem()
}

func (i RequestAttributeDataSourceMethodArray) ToRequestAttributeDataSourceMethodArrayOutput() RequestAttributeDataSourceMethodArrayOutput {
	return i.ToRequestAttributeDataSourceMethodArrayOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceMethodArray) ToRequestAttributeDataSourceMethodArrayOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceMethodArrayOutput)
}

type RequestAttributeDataSourceMethodOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceMethod)(nil)).Elem()
}

func (o RequestAttributeDataSourceMethodOutput) ToRequestAttributeDataSourceMethodOutput() RequestAttributeDataSourceMethodOutput {
	return o
}

func (o RequestAttributeDataSourceMethodOutput) ToRequestAttributeDataSourceMethodOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodOutput {
	return o
}

func (o RequestAttributeDataSourceMethodOutput) ArgumentIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethod) *int { return v.ArgumentIndex }).(pulumi.IntPtrOutput)
}

func (o RequestAttributeDataSourceMethodOutput) Capture() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethod) string { return v.Capture }).(pulumi.StringOutput)
}

func (o RequestAttributeDataSourceMethodOutput) DeepObjectAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethod) *string { return v.DeepObjectAccess }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodOutput) Method() RequestAttributeDataSourceMethodMethodPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethod) *RequestAttributeDataSourceMethodMethod { return v.Method }).(RequestAttributeDataSourceMethodMethodPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceMethodOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethod) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceMethodArrayOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAttributeDataSourceMethod)(nil)).Elem()
}

func (o RequestAttributeDataSourceMethodArrayOutput) ToRequestAttributeDataSourceMethodArrayOutput() RequestAttributeDataSourceMethodArrayOutput {
	return o
}

func (o RequestAttributeDataSourceMethodArrayOutput) ToRequestAttributeDataSourceMethodArrayOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodArrayOutput {
	return o
}

func (o RequestAttributeDataSourceMethodArrayOutput) Index(i pulumi.IntInput) RequestAttributeDataSourceMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAttributeDataSourceMethod {
		return vs[0].([]RequestAttributeDataSourceMethod)[vs[1].(int)]
	}).(RequestAttributeDataSourceMethodOutput)
}

type RequestAttributeDataSourceMethodMethod struct {
	ArgumentTypes   []string `pulumi:"argumentTypes"`
	ClassName       *string  `pulumi:"className"`
	FileName        *string  `pulumi:"fileName"`
	FileNameMatcher *string  `pulumi:"fileNameMatcher"`
	MethodName      string   `pulumi:"methodName"`
	Modifiers       []string `pulumi:"modifiers"`
	ReturnType      string   `pulumi:"returnType"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns   *string `pulumi:"unknowns"`
	Visibility string  `pulumi:"visibility"`
}

// RequestAttributeDataSourceMethodMethodInput is an input type that accepts RequestAttributeDataSourceMethodMethodArgs and RequestAttributeDataSourceMethodMethodOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceMethodMethodInput` via:
//
//	RequestAttributeDataSourceMethodMethodArgs{...}
type RequestAttributeDataSourceMethodMethodInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceMethodMethodOutput() RequestAttributeDataSourceMethodMethodOutput
	ToRequestAttributeDataSourceMethodMethodOutputWithContext(context.Context) RequestAttributeDataSourceMethodMethodOutput
}

type RequestAttributeDataSourceMethodMethodArgs struct {
	ArgumentTypes   pulumi.StringArrayInput `pulumi:"argumentTypes"`
	ClassName       pulumi.StringPtrInput   `pulumi:"className"`
	FileName        pulumi.StringPtrInput   `pulumi:"fileName"`
	FileNameMatcher pulumi.StringPtrInput   `pulumi:"fileNameMatcher"`
	MethodName      pulumi.StringInput      `pulumi:"methodName"`
	Modifiers       pulumi.StringArrayInput `pulumi:"modifiers"`
	ReturnType      pulumi.StringInput      `pulumi:"returnType"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
	Visibility pulumi.StringInput    `pulumi:"visibility"`
}

func (RequestAttributeDataSourceMethodMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceMethodMethod)(nil)).Elem()
}

func (i RequestAttributeDataSourceMethodMethodArgs) ToRequestAttributeDataSourceMethodMethodOutput() RequestAttributeDataSourceMethodMethodOutput {
	return i.ToRequestAttributeDataSourceMethodMethodOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceMethodMethodArgs) ToRequestAttributeDataSourceMethodMethodOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceMethodMethodOutput)
}

func (i RequestAttributeDataSourceMethodMethodArgs) ToRequestAttributeDataSourceMethodMethodPtrOutput() RequestAttributeDataSourceMethodMethodPtrOutput {
	return i.ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceMethodMethodArgs) ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceMethodMethodOutput).ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceMethodMethodPtrInput is an input type that accepts RequestAttributeDataSourceMethodMethodArgs, RequestAttributeDataSourceMethodMethodPtr and RequestAttributeDataSourceMethodMethodPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceMethodMethodPtrInput` via:
//
//	        RequestAttributeDataSourceMethodMethodArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceMethodMethodPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceMethodMethodPtrOutput() RequestAttributeDataSourceMethodMethodPtrOutput
	ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(context.Context) RequestAttributeDataSourceMethodMethodPtrOutput
}

type requestAttributeDataSourceMethodMethodPtrType RequestAttributeDataSourceMethodMethodArgs

func RequestAttributeDataSourceMethodMethodPtr(v *RequestAttributeDataSourceMethodMethodArgs) RequestAttributeDataSourceMethodMethodPtrInput {
	return (*requestAttributeDataSourceMethodMethodPtrType)(v)
}

func (*requestAttributeDataSourceMethodMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceMethodMethod)(nil)).Elem()
}

func (i *requestAttributeDataSourceMethodMethodPtrType) ToRequestAttributeDataSourceMethodMethodPtrOutput() RequestAttributeDataSourceMethodMethodPtrOutput {
	return i.ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceMethodMethodPtrType) ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceMethodMethodPtrOutput)
}

type RequestAttributeDataSourceMethodMethodOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceMethodMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceMethodMethod)(nil)).Elem()
}

func (o RequestAttributeDataSourceMethodMethodOutput) ToRequestAttributeDataSourceMethodMethodOutput() RequestAttributeDataSourceMethodMethodOutput {
	return o
}

func (o RequestAttributeDataSourceMethodMethodOutput) ToRequestAttributeDataSourceMethodMethodOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodMethodOutput {
	return o
}

func (o RequestAttributeDataSourceMethodMethodOutput) ToRequestAttributeDataSourceMethodMethodPtrOutput() RequestAttributeDataSourceMethodMethodPtrOutput {
	return o.ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceMethodMethodOutput) ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceMethodMethod) *RequestAttributeDataSourceMethodMethod {
		return &v
	}).(RequestAttributeDataSourceMethodMethodPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) ArgumentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) []string { return v.ArgumentTypes }).(pulumi.StringArrayOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) *string { return v.ClassName }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) FileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) *string { return v.FileName }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) FileNameMatcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) *string { return v.FileNameMatcher }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) MethodName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) string { return v.MethodName }).(pulumi.StringOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) Modifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) []string { return v.Modifiers }).(pulumi.StringArrayOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) ReturnType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) string { return v.ReturnType }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceMethodMethodOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceMethodMethod) string { return v.Visibility }).(pulumi.StringOutput)
}

type RequestAttributeDataSourceMethodMethodPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceMethodMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceMethodMethod)(nil)).Elem()
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) ToRequestAttributeDataSourceMethodMethodPtrOutput() RequestAttributeDataSourceMethodMethodPtrOutput {
	return o
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) ToRequestAttributeDataSourceMethodMethodPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceMethodMethodPtrOutput {
	return o
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) Elem() RequestAttributeDataSourceMethodMethodOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) RequestAttributeDataSourceMethodMethod {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceMethodMethod
		return ret
	}).(RequestAttributeDataSourceMethodMethodOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) ArgumentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) []string {
		if v == nil {
			return nil
		}
		return v.ArgumentTypes
	}).(pulumi.StringArrayOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return v.ClassName
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) FileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return v.FileName
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) FileNameMatcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return v.FileNameMatcher
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return &v.MethodName
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) Modifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) []string {
		if v == nil {
			return nil
		}
		return v.Modifiers
	}).(pulumi.StringArrayOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) ReturnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return &v.ReturnType
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceMethodMethodPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceMethodMethodPtrOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceMethodMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Visibility
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceScope struct {
	HostGroup         *string `pulumi:"hostGroup"`
	ProcessGroup      *string `pulumi:"processGroup"`
	ServiceTechnology *string `pulumi:"serviceTechnology"`
	TagOfProcessGroup *string `pulumi:"tagOfProcessGroup"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// RequestAttributeDataSourceScopeInput is an input type that accepts RequestAttributeDataSourceScopeArgs and RequestAttributeDataSourceScopeOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceScopeInput` via:
//
//	RequestAttributeDataSourceScopeArgs{...}
type RequestAttributeDataSourceScopeInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceScopeOutput() RequestAttributeDataSourceScopeOutput
	ToRequestAttributeDataSourceScopeOutputWithContext(context.Context) RequestAttributeDataSourceScopeOutput
}

type RequestAttributeDataSourceScopeArgs struct {
	HostGroup         pulumi.StringPtrInput `pulumi:"hostGroup"`
	ProcessGroup      pulumi.StringPtrInput `pulumi:"processGroup"`
	ServiceTechnology pulumi.StringPtrInput `pulumi:"serviceTechnology"`
	TagOfProcessGroup pulumi.StringPtrInput `pulumi:"tagOfProcessGroup"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (RequestAttributeDataSourceScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceScope)(nil)).Elem()
}

func (i RequestAttributeDataSourceScopeArgs) ToRequestAttributeDataSourceScopeOutput() RequestAttributeDataSourceScopeOutput {
	return i.ToRequestAttributeDataSourceScopeOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceScopeArgs) ToRequestAttributeDataSourceScopeOutputWithContext(ctx context.Context) RequestAttributeDataSourceScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceScopeOutput)
}

func (i RequestAttributeDataSourceScopeArgs) ToRequestAttributeDataSourceScopePtrOutput() RequestAttributeDataSourceScopePtrOutput {
	return i.ToRequestAttributeDataSourceScopePtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceScopeArgs) ToRequestAttributeDataSourceScopePtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceScopeOutput).ToRequestAttributeDataSourceScopePtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceScopePtrInput is an input type that accepts RequestAttributeDataSourceScopeArgs, RequestAttributeDataSourceScopePtr and RequestAttributeDataSourceScopePtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceScopePtrInput` via:
//
//	        RequestAttributeDataSourceScopeArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceScopePtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceScopePtrOutput() RequestAttributeDataSourceScopePtrOutput
	ToRequestAttributeDataSourceScopePtrOutputWithContext(context.Context) RequestAttributeDataSourceScopePtrOutput
}

type requestAttributeDataSourceScopePtrType RequestAttributeDataSourceScopeArgs

func RequestAttributeDataSourceScopePtr(v *RequestAttributeDataSourceScopeArgs) RequestAttributeDataSourceScopePtrInput {
	return (*requestAttributeDataSourceScopePtrType)(v)
}

func (*requestAttributeDataSourceScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceScope)(nil)).Elem()
}

func (i *requestAttributeDataSourceScopePtrType) ToRequestAttributeDataSourceScopePtrOutput() RequestAttributeDataSourceScopePtrOutput {
	return i.ToRequestAttributeDataSourceScopePtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceScopePtrType) ToRequestAttributeDataSourceScopePtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceScopePtrOutput)
}

type RequestAttributeDataSourceScopeOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceScope)(nil)).Elem()
}

func (o RequestAttributeDataSourceScopeOutput) ToRequestAttributeDataSourceScopeOutput() RequestAttributeDataSourceScopeOutput {
	return o
}

func (o RequestAttributeDataSourceScopeOutput) ToRequestAttributeDataSourceScopeOutputWithContext(ctx context.Context) RequestAttributeDataSourceScopeOutput {
	return o
}

func (o RequestAttributeDataSourceScopeOutput) ToRequestAttributeDataSourceScopePtrOutput() RequestAttributeDataSourceScopePtrOutput {
	return o.ToRequestAttributeDataSourceScopePtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceScopeOutput) ToRequestAttributeDataSourceScopePtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceScope) *RequestAttributeDataSourceScope {
		return &v
	}).(RequestAttributeDataSourceScopePtrOutput)
}

func (o RequestAttributeDataSourceScopeOutput) HostGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceScope) *string { return v.HostGroup }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceScopeOutput) ProcessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceScope) *string { return v.ProcessGroup }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceScopeOutput) ServiceTechnology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceScope) *string { return v.ServiceTechnology }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceScopeOutput) TagOfProcessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceScope) *string { return v.TagOfProcessGroup }).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceScopeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceScope) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceScopePtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceScope)(nil)).Elem()
}

func (o RequestAttributeDataSourceScopePtrOutput) ToRequestAttributeDataSourceScopePtrOutput() RequestAttributeDataSourceScopePtrOutput {
	return o
}

func (o RequestAttributeDataSourceScopePtrOutput) ToRequestAttributeDataSourceScopePtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceScopePtrOutput {
	return o
}

func (o RequestAttributeDataSourceScopePtrOutput) Elem() RequestAttributeDataSourceScopeOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceScope) RequestAttributeDataSourceScope {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceScope
		return ret
	}).(RequestAttributeDataSourceScopeOutput)
}

func (o RequestAttributeDataSourceScopePtrOutput) HostGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceScope) *string {
		if v == nil {
			return nil
		}
		return v.HostGroup
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceScopePtrOutput) ProcessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceScope) *string {
		if v == nil {
			return nil
		}
		return v.ProcessGroup
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceScopePtrOutput) ServiceTechnology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceScope) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTechnology
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceScopePtrOutput) TagOfProcessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceScope) *string {
		if v == nil {
			return nil
		}
		return v.TagOfProcessGroup
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceScopePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceScope) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceValueProcessing struct {
	ExtractSubstring *RequestAttributeDataSourceValueProcessingExtractSubstring `pulumi:"extractSubstring"`
	SplitAt          *string                                                    `pulumi:"splitAt"`
	Trim             *bool                                                      `pulumi:"trim"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns            *string                                                  `pulumi:"unknowns"`
	ValueCondition      *RequestAttributeDataSourceValueProcessingValueCondition `pulumi:"valueCondition"`
	ValueExtractorRegex *string                                                  `pulumi:"valueExtractorRegex"`
}

// RequestAttributeDataSourceValueProcessingInput is an input type that accepts RequestAttributeDataSourceValueProcessingArgs and RequestAttributeDataSourceValueProcessingOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceValueProcessingInput` via:
//
//	RequestAttributeDataSourceValueProcessingArgs{...}
type RequestAttributeDataSourceValueProcessingInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceValueProcessingOutput() RequestAttributeDataSourceValueProcessingOutput
	ToRequestAttributeDataSourceValueProcessingOutputWithContext(context.Context) RequestAttributeDataSourceValueProcessingOutput
}

type RequestAttributeDataSourceValueProcessingArgs struct {
	ExtractSubstring RequestAttributeDataSourceValueProcessingExtractSubstringPtrInput `pulumi:"extractSubstring"`
	SplitAt          pulumi.StringPtrInput                                             `pulumi:"splitAt"`
	Trim             pulumi.BoolPtrInput                                               `pulumi:"trim"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns            pulumi.StringPtrInput                                           `pulumi:"unknowns"`
	ValueCondition      RequestAttributeDataSourceValueProcessingValueConditionPtrInput `pulumi:"valueCondition"`
	ValueExtractorRegex pulumi.StringPtrInput                                           `pulumi:"valueExtractorRegex"`
}

func (RequestAttributeDataSourceValueProcessingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceValueProcessing)(nil)).Elem()
}

func (i RequestAttributeDataSourceValueProcessingArgs) ToRequestAttributeDataSourceValueProcessingOutput() RequestAttributeDataSourceValueProcessingOutput {
	return i.ToRequestAttributeDataSourceValueProcessingOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceValueProcessingArgs) ToRequestAttributeDataSourceValueProcessingOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingOutput)
}

func (i RequestAttributeDataSourceValueProcessingArgs) ToRequestAttributeDataSourceValueProcessingPtrOutput() RequestAttributeDataSourceValueProcessingPtrOutput {
	return i.ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceValueProcessingArgs) ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingOutput).ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceValueProcessingPtrInput is an input type that accepts RequestAttributeDataSourceValueProcessingArgs, RequestAttributeDataSourceValueProcessingPtr and RequestAttributeDataSourceValueProcessingPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceValueProcessingPtrInput` via:
//
//	        RequestAttributeDataSourceValueProcessingArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceValueProcessingPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceValueProcessingPtrOutput() RequestAttributeDataSourceValueProcessingPtrOutput
	ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(context.Context) RequestAttributeDataSourceValueProcessingPtrOutput
}

type requestAttributeDataSourceValueProcessingPtrType RequestAttributeDataSourceValueProcessingArgs

func RequestAttributeDataSourceValueProcessingPtr(v *RequestAttributeDataSourceValueProcessingArgs) RequestAttributeDataSourceValueProcessingPtrInput {
	return (*requestAttributeDataSourceValueProcessingPtrType)(v)
}

func (*requestAttributeDataSourceValueProcessingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceValueProcessing)(nil)).Elem()
}

func (i *requestAttributeDataSourceValueProcessingPtrType) ToRequestAttributeDataSourceValueProcessingPtrOutput() RequestAttributeDataSourceValueProcessingPtrOutput {
	return i.ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceValueProcessingPtrType) ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingPtrOutput)
}

type RequestAttributeDataSourceValueProcessingOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceValueProcessingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceValueProcessing)(nil)).Elem()
}

func (o RequestAttributeDataSourceValueProcessingOutput) ToRequestAttributeDataSourceValueProcessingOutput() RequestAttributeDataSourceValueProcessingOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingOutput) ToRequestAttributeDataSourceValueProcessingOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingOutput) ToRequestAttributeDataSourceValueProcessingPtrOutput() RequestAttributeDataSourceValueProcessingPtrOutput {
	return o.ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceValueProcessingOutput) ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceValueProcessing) *RequestAttributeDataSourceValueProcessing {
		return &v
	}).(RequestAttributeDataSourceValueProcessingPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingOutput) ExtractSubstring() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessing) *RequestAttributeDataSourceValueProcessingExtractSubstring {
		return v.ExtractSubstring
	}).(RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingOutput) SplitAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessing) *string { return v.SplitAt }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingOutput) Trim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessing) *bool { return v.Trim }).(pulumi.BoolPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceValueProcessingOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessing) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingOutput) ValueCondition() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessing) *RequestAttributeDataSourceValueProcessingValueCondition {
		return v.ValueCondition
	}).(RequestAttributeDataSourceValueProcessingValueConditionPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingOutput) ValueExtractorRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessing) *string { return v.ValueExtractorRegex }).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceValueProcessingPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceValueProcessingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceValueProcessing)(nil)).Elem()
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) ToRequestAttributeDataSourceValueProcessingPtrOutput() RequestAttributeDataSourceValueProcessingPtrOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) ToRequestAttributeDataSourceValueProcessingPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingPtrOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) Elem() RequestAttributeDataSourceValueProcessingOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) RequestAttributeDataSourceValueProcessing {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceValueProcessing
		return ret
	}).(RequestAttributeDataSourceValueProcessingOutput)
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) ExtractSubstring() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) *RequestAttributeDataSourceValueProcessingExtractSubstring {
		if v == nil {
			return nil
		}
		return v.ExtractSubstring
	}).(RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) SplitAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) *string {
		if v == nil {
			return nil
		}
		return v.SplitAt
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) Trim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) *bool {
		if v == nil {
			return nil
		}
		return v.Trim
	}).(pulumi.BoolPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceValueProcessingPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) ValueCondition() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) *RequestAttributeDataSourceValueProcessingValueCondition {
		if v == nil {
			return nil
		}
		return v.ValueCondition
	}).(RequestAttributeDataSourceValueProcessingValueConditionPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingPtrOutput) ValueExtractorRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessing) *string {
		if v == nil {
			return nil
		}
		return v.ValueExtractorRegex
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceValueProcessingExtractSubstring struct {
	Delimiter    string  `pulumi:"delimiter"`
	EndDelimiter *string `pulumi:"endDelimiter"`
	Position     string  `pulumi:"position"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// RequestAttributeDataSourceValueProcessingExtractSubstringInput is an input type that accepts RequestAttributeDataSourceValueProcessingExtractSubstringArgs and RequestAttributeDataSourceValueProcessingExtractSubstringOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceValueProcessingExtractSubstringInput` via:
//
//	RequestAttributeDataSourceValueProcessingExtractSubstringArgs{...}
type RequestAttributeDataSourceValueProcessingExtractSubstringInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceValueProcessingExtractSubstringOutput() RequestAttributeDataSourceValueProcessingExtractSubstringOutput
	ToRequestAttributeDataSourceValueProcessingExtractSubstringOutputWithContext(context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringOutput
}

type RequestAttributeDataSourceValueProcessingExtractSubstringArgs struct {
	Delimiter    pulumi.StringInput    `pulumi:"delimiter"`
	EndDelimiter pulumi.StringPtrInput `pulumi:"endDelimiter"`
	Position     pulumi.StringInput    `pulumi:"position"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (RequestAttributeDataSourceValueProcessingExtractSubstringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceValueProcessingExtractSubstring)(nil)).Elem()
}

func (i RequestAttributeDataSourceValueProcessingExtractSubstringArgs) ToRequestAttributeDataSourceValueProcessingExtractSubstringOutput() RequestAttributeDataSourceValueProcessingExtractSubstringOutput {
	return i.ToRequestAttributeDataSourceValueProcessingExtractSubstringOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceValueProcessingExtractSubstringArgs) ToRequestAttributeDataSourceValueProcessingExtractSubstringOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingExtractSubstringOutput)
}

func (i RequestAttributeDataSourceValueProcessingExtractSubstringArgs) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return i.ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceValueProcessingExtractSubstringArgs) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingExtractSubstringOutput).ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceValueProcessingExtractSubstringPtrInput is an input type that accepts RequestAttributeDataSourceValueProcessingExtractSubstringArgs, RequestAttributeDataSourceValueProcessingExtractSubstringPtr and RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceValueProcessingExtractSubstringPtrInput` via:
//
//	        RequestAttributeDataSourceValueProcessingExtractSubstringArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceValueProcessingExtractSubstringPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput
	ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput
}

type requestAttributeDataSourceValueProcessingExtractSubstringPtrType RequestAttributeDataSourceValueProcessingExtractSubstringArgs

func RequestAttributeDataSourceValueProcessingExtractSubstringPtr(v *RequestAttributeDataSourceValueProcessingExtractSubstringArgs) RequestAttributeDataSourceValueProcessingExtractSubstringPtrInput {
	return (*requestAttributeDataSourceValueProcessingExtractSubstringPtrType)(v)
}

func (*requestAttributeDataSourceValueProcessingExtractSubstringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceValueProcessingExtractSubstring)(nil)).Elem()
}

func (i *requestAttributeDataSourceValueProcessingExtractSubstringPtrType) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return i.ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceValueProcessingExtractSubstringPtrType) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput)
}

type RequestAttributeDataSourceValueProcessingExtractSubstringOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceValueProcessingExtractSubstringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceValueProcessingExtractSubstring)(nil)).Elem()
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) ToRequestAttributeDataSourceValueProcessingExtractSubstringOutput() RequestAttributeDataSourceValueProcessingExtractSubstringOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) ToRequestAttributeDataSourceValueProcessingExtractSubstringOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return o.ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceValueProcessingExtractSubstring) *RequestAttributeDataSourceValueProcessingExtractSubstring {
		return &v
	}).(RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingExtractSubstring) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) EndDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingExtractSubstring) *string { return v.EndDelimiter }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingExtractSubstring) string { return v.Position }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceValueProcessingExtractSubstringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingExtractSubstring) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceValueProcessingExtractSubstring)(nil)).Elem()
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput() RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) ToRequestAttributeDataSourceValueProcessingExtractSubstringPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) Elem() RequestAttributeDataSourceValueProcessingExtractSubstringOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingExtractSubstring) RequestAttributeDataSourceValueProcessingExtractSubstring {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceValueProcessingExtractSubstring
		return ret
	}).(RequestAttributeDataSourceValueProcessingExtractSubstringOutput)
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingExtractSubstring) *string {
		if v == nil {
			return nil
		}
		return &v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) EndDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingExtractSubstring) *string {
		if v == nil {
			return nil
		}
		return v.EndDelimiter
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) Position() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingExtractSubstring) *string {
		if v == nil {
			return nil
		}
		return &v.Position
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingExtractSubstring) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestAttributeDataSourceValueProcessingValueCondition struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
	Value    string  `pulumi:"value"`
}

// RequestAttributeDataSourceValueProcessingValueConditionInput is an input type that accepts RequestAttributeDataSourceValueProcessingValueConditionArgs and RequestAttributeDataSourceValueProcessingValueConditionOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceValueProcessingValueConditionInput` via:
//
//	RequestAttributeDataSourceValueProcessingValueConditionArgs{...}
type RequestAttributeDataSourceValueProcessingValueConditionInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceValueProcessingValueConditionOutput() RequestAttributeDataSourceValueProcessingValueConditionOutput
	ToRequestAttributeDataSourceValueProcessingValueConditionOutputWithContext(context.Context) RequestAttributeDataSourceValueProcessingValueConditionOutput
}

type RequestAttributeDataSourceValueProcessingValueConditionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringInput    `pulumi:"value"`
}

func (RequestAttributeDataSourceValueProcessingValueConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceValueProcessingValueCondition)(nil)).Elem()
}

func (i RequestAttributeDataSourceValueProcessingValueConditionArgs) ToRequestAttributeDataSourceValueProcessingValueConditionOutput() RequestAttributeDataSourceValueProcessingValueConditionOutput {
	return i.ToRequestAttributeDataSourceValueProcessingValueConditionOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceValueProcessingValueConditionArgs) ToRequestAttributeDataSourceValueProcessingValueConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingValueConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingValueConditionOutput)
}

func (i RequestAttributeDataSourceValueProcessingValueConditionArgs) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutput() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return i.ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(context.Background())
}

func (i RequestAttributeDataSourceValueProcessingValueConditionArgs) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingValueConditionOutput).ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(ctx)
}

// RequestAttributeDataSourceValueProcessingValueConditionPtrInput is an input type that accepts RequestAttributeDataSourceValueProcessingValueConditionArgs, RequestAttributeDataSourceValueProcessingValueConditionPtr and RequestAttributeDataSourceValueProcessingValueConditionPtrOutput values.
// You can construct a concrete instance of `RequestAttributeDataSourceValueProcessingValueConditionPtrInput` via:
//
//	        RequestAttributeDataSourceValueProcessingValueConditionArgs{...}
//
//	or:
//
//	        nil
type RequestAttributeDataSourceValueProcessingValueConditionPtrInput interface {
	pulumi.Input

	ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutput() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput
	ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(context.Context) RequestAttributeDataSourceValueProcessingValueConditionPtrOutput
}

type requestAttributeDataSourceValueProcessingValueConditionPtrType RequestAttributeDataSourceValueProcessingValueConditionArgs

func RequestAttributeDataSourceValueProcessingValueConditionPtr(v *RequestAttributeDataSourceValueProcessingValueConditionArgs) RequestAttributeDataSourceValueProcessingValueConditionPtrInput {
	return (*requestAttributeDataSourceValueProcessingValueConditionPtrType)(v)
}

func (*requestAttributeDataSourceValueProcessingValueConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceValueProcessingValueCondition)(nil)).Elem()
}

func (i *requestAttributeDataSourceValueProcessingValueConditionPtrType) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutput() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return i.ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(context.Background())
}

func (i *requestAttributeDataSourceValueProcessingValueConditionPtrType) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeDataSourceValueProcessingValueConditionPtrOutput)
}

type RequestAttributeDataSourceValueProcessingValueConditionOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceValueProcessingValueConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAttributeDataSourceValueProcessingValueCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) ToRequestAttributeDataSourceValueProcessingValueConditionOutput() RequestAttributeDataSourceValueProcessingValueConditionOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) ToRequestAttributeDataSourceValueProcessingValueConditionOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingValueConditionOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutput() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return o.ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(context.Background())
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAttributeDataSourceValueProcessingValueCondition) *RequestAttributeDataSourceValueProcessingValueCondition {
		return &v
	}).(RequestAttributeDataSourceValueProcessingValueConditionPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingValueCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingValueCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingValueCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingValueConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAttributeDataSourceValueProcessingValueCondition) string { return v.Value }).(pulumi.StringOutput)
}

type RequestAttributeDataSourceValueProcessingValueConditionPtrOutput struct{ *pulumi.OutputState }

func (RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttributeDataSourceValueProcessingValueCondition)(nil)).Elem()
}

func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutput() RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) ToRequestAttributeDataSourceValueProcessingValueConditionPtrOutputWithContext(ctx context.Context) RequestAttributeDataSourceValueProcessingValueConditionPtrOutput {
	return o
}

func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) Elem() RequestAttributeDataSourceValueProcessingValueConditionOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingValueCondition) RequestAttributeDataSourceValueProcessingValueCondition {
		if v != nil {
			return *v
		}
		var ret RequestAttributeDataSourceValueProcessingValueCondition
		return ret
	}).(RequestAttributeDataSourceValueProcessingValueConditionOutput)
}

func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingValueCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Negate
	}).(pulumi.BoolPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingValueCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingValueCondition) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestAttributeDataSourceValueProcessingValueConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttributeDataSourceValueProcessingValueCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditions struct {
	Conditions []RequestNamingConditionsCondition `pulumi:"conditions"`
}

// RequestNamingConditionsInput is an input type that accepts RequestNamingConditionsArgs and RequestNamingConditionsOutput values.
// You can construct a concrete instance of `RequestNamingConditionsInput` via:
//
//	RequestNamingConditionsArgs{...}
type RequestNamingConditionsInput interface {
	pulumi.Input

	ToRequestNamingConditionsOutput() RequestNamingConditionsOutput
	ToRequestNamingConditionsOutputWithContext(context.Context) RequestNamingConditionsOutput
}

type RequestNamingConditionsArgs struct {
	Conditions RequestNamingConditionsConditionArrayInput `pulumi:"conditions"`
}

func (RequestNamingConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditions)(nil)).Elem()
}

func (i RequestNamingConditionsArgs) ToRequestNamingConditionsOutput() RequestNamingConditionsOutput {
	return i.ToRequestNamingConditionsOutputWithContext(context.Background())
}

func (i RequestNamingConditionsArgs) ToRequestNamingConditionsOutputWithContext(ctx context.Context) RequestNamingConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsOutput)
}

func (i RequestNamingConditionsArgs) ToRequestNamingConditionsPtrOutput() RequestNamingConditionsPtrOutput {
	return i.ToRequestNamingConditionsPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsArgs) ToRequestNamingConditionsPtrOutputWithContext(ctx context.Context) RequestNamingConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsOutput).ToRequestNamingConditionsPtrOutputWithContext(ctx)
}

// RequestNamingConditionsPtrInput is an input type that accepts RequestNamingConditionsArgs, RequestNamingConditionsPtr and RequestNamingConditionsPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsPtrInput` via:
//
//	        RequestNamingConditionsArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsPtrOutput() RequestNamingConditionsPtrOutput
	ToRequestNamingConditionsPtrOutputWithContext(context.Context) RequestNamingConditionsPtrOutput
}

type requestNamingConditionsPtrType RequestNamingConditionsArgs

func RequestNamingConditionsPtr(v *RequestNamingConditionsArgs) RequestNamingConditionsPtrInput {
	return (*requestNamingConditionsPtrType)(v)
}

func (*requestNamingConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditions)(nil)).Elem()
}

func (i *requestNamingConditionsPtrType) ToRequestNamingConditionsPtrOutput() RequestNamingConditionsPtrOutput {
	return i.ToRequestNamingConditionsPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsPtrType) ToRequestNamingConditionsPtrOutputWithContext(ctx context.Context) RequestNamingConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsPtrOutput)
}

type RequestNamingConditionsOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditions)(nil)).Elem()
}

func (o RequestNamingConditionsOutput) ToRequestNamingConditionsOutput() RequestNamingConditionsOutput {
	return o
}

func (o RequestNamingConditionsOutput) ToRequestNamingConditionsOutputWithContext(ctx context.Context) RequestNamingConditionsOutput {
	return o
}

func (o RequestNamingConditionsOutput) ToRequestNamingConditionsPtrOutput() RequestNamingConditionsPtrOutput {
	return o.ToRequestNamingConditionsPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsOutput) ToRequestNamingConditionsPtrOutputWithContext(ctx context.Context) RequestNamingConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditions) *RequestNamingConditions {
		return &v
	}).(RequestNamingConditionsPtrOutput)
}

func (o RequestNamingConditionsOutput) Conditions() RequestNamingConditionsConditionArrayOutput {
	return o.ApplyT(func(v RequestNamingConditions) []RequestNamingConditionsCondition { return v.Conditions }).(RequestNamingConditionsConditionArrayOutput)
}

type RequestNamingConditionsPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditions)(nil)).Elem()
}

func (o RequestNamingConditionsPtrOutput) ToRequestNamingConditionsPtrOutput() RequestNamingConditionsPtrOutput {
	return o
}

func (o RequestNamingConditionsPtrOutput) ToRequestNamingConditionsPtrOutputWithContext(ctx context.Context) RequestNamingConditionsPtrOutput {
	return o
}

func (o RequestNamingConditionsPtrOutput) Elem() RequestNamingConditionsOutput {
	return o.ApplyT(func(v *RequestNamingConditions) RequestNamingConditions {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditions
		return ret
	}).(RequestNamingConditionsOutput)
}

func (o RequestNamingConditionsPtrOutput) Conditions() RequestNamingConditionsConditionArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditions) []RequestNamingConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(RequestNamingConditionsConditionArrayOutput)
}

type RequestNamingConditionsCondition struct {
	Attribute  string                                     `pulumi:"attribute"`
	Comparison RequestNamingConditionsConditionComparison `pulumi:"comparison"`
}

// RequestNamingConditionsConditionInput is an input type that accepts RequestNamingConditionsConditionArgs and RequestNamingConditionsConditionOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionInput` via:
//
//	RequestNamingConditionsConditionArgs{...}
type RequestNamingConditionsConditionInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionOutput() RequestNamingConditionsConditionOutput
	ToRequestNamingConditionsConditionOutputWithContext(context.Context) RequestNamingConditionsConditionOutput
}

type RequestNamingConditionsConditionArgs struct {
	Attribute  pulumi.StringInput                              `pulumi:"attribute"`
	Comparison RequestNamingConditionsConditionComparisonInput `pulumi:"comparison"`
}

func (RequestNamingConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsCondition)(nil)).Elem()
}

func (i RequestNamingConditionsConditionArgs) ToRequestNamingConditionsConditionOutput() RequestNamingConditionsConditionOutput {
	return i.ToRequestNamingConditionsConditionOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionArgs) ToRequestNamingConditionsConditionOutputWithContext(ctx context.Context) RequestNamingConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionOutput)
}

// RequestNamingConditionsConditionArrayInput is an input type that accepts RequestNamingConditionsConditionArray and RequestNamingConditionsConditionArrayOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionArrayInput` via:
//
//	RequestNamingConditionsConditionArray{ RequestNamingConditionsConditionArgs{...} }
type RequestNamingConditionsConditionArrayInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionArrayOutput() RequestNamingConditionsConditionArrayOutput
	ToRequestNamingConditionsConditionArrayOutputWithContext(context.Context) RequestNamingConditionsConditionArrayOutput
}

type RequestNamingConditionsConditionArray []RequestNamingConditionsConditionInput

func (RequestNamingConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestNamingConditionsCondition)(nil)).Elem()
}

func (i RequestNamingConditionsConditionArray) ToRequestNamingConditionsConditionArrayOutput() RequestNamingConditionsConditionArrayOutput {
	return i.ToRequestNamingConditionsConditionArrayOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionArray) ToRequestNamingConditionsConditionArrayOutputWithContext(ctx context.Context) RequestNamingConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionArrayOutput)
}

type RequestNamingConditionsConditionOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsCondition)(nil)).Elem()
}

func (o RequestNamingConditionsConditionOutput) ToRequestNamingConditionsConditionOutput() RequestNamingConditionsConditionOutput {
	return o
}

func (o RequestNamingConditionsConditionOutput) ToRequestNamingConditionsConditionOutputWithContext(ctx context.Context) RequestNamingConditionsConditionOutput {
	return o
}

func (o RequestNamingConditionsConditionOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsCondition) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionOutput) Comparison() RequestNamingConditionsConditionComparisonOutput {
	return o.ApplyT(func(v RequestNamingConditionsCondition) RequestNamingConditionsConditionComparison {
		return v.Comparison
	}).(RequestNamingConditionsConditionComparisonOutput)
}

type RequestNamingConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestNamingConditionsCondition)(nil)).Elem()
}

func (o RequestNamingConditionsConditionArrayOutput) ToRequestNamingConditionsConditionArrayOutput() RequestNamingConditionsConditionArrayOutput {
	return o
}

func (o RequestNamingConditionsConditionArrayOutput) ToRequestNamingConditionsConditionArrayOutputWithContext(ctx context.Context) RequestNamingConditionsConditionArrayOutput {
	return o
}

func (o RequestNamingConditionsConditionArrayOutput) Index(i pulumi.IntInput) RequestNamingConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestNamingConditionsCondition {
		return vs[0].([]RequestNamingConditionsCondition)[vs[1].(int)]
	}).(RequestNamingConditionsConditionOutput)
}

type RequestNamingConditionsConditionComparison struct {
	Boolean                *RequestNamingConditionsConditionComparisonBoolean                `pulumi:"boolean"`
	EsbInputNodeType       *RequestNamingConditionsConditionComparisonEsbInputNodeType       `pulumi:"esbInputNodeType"`
	FailedState            *RequestNamingConditionsConditionComparisonFailedState            `pulumi:"failedState"`
	FailureReason          *RequestNamingConditionsConditionComparisonFailureReason          `pulumi:"failureReason"`
	FastString             *RequestNamingConditionsConditionComparisonFastString             `pulumi:"fastString"`
	FlawState              *RequestNamingConditionsConditionComparisonFlawState              `pulumi:"flawState"`
	Generic                *RequestNamingConditionsConditionComparisonGeneric                `pulumi:"generic"`
	HttpMethod             *RequestNamingConditionsConditionComparisonHttpMethod             `pulumi:"httpMethod"`
	HttpStatusClass        *RequestNamingConditionsConditionComparisonHttpStatusClass        `pulumi:"httpStatusClass"`
	IibInputNodeType       *RequestNamingConditionsConditionComparisonIibInputNodeType       `pulumi:"iibInputNodeType"`
	Negate                 *bool                                                             `pulumi:"negate"`
	Number                 *RequestNamingConditionsConditionComparisonNumber                 `pulumi:"number"`
	NumberRequestAttribute *RequestNamingConditionsConditionComparisonNumberRequestAttribute `pulumi:"numberRequestAttribute"`
	ServiceType            *RequestNamingConditionsConditionComparisonServiceType            `pulumi:"serviceType"`
	String                 *RequestNamingConditionsConditionComparisonString                 `pulumi:"string"`
	StringRequestAttribute *RequestNamingConditionsConditionComparisonStringRequestAttribute `pulumi:"stringRequestAttribute"`
	Tag                    *RequestNamingConditionsConditionComparisonTag                    `pulumi:"tag"`
	ZosCallType            *RequestNamingConditionsConditionComparisonZosCallType            `pulumi:"zosCallType"`
}

// RequestNamingConditionsConditionComparisonInput is an input type that accepts RequestNamingConditionsConditionComparisonArgs and RequestNamingConditionsConditionComparisonOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonInput` via:
//
//	RequestNamingConditionsConditionComparisonArgs{...}
type RequestNamingConditionsConditionComparisonInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonOutput() RequestNamingConditionsConditionComparisonOutput
	ToRequestNamingConditionsConditionComparisonOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonOutput
}

type RequestNamingConditionsConditionComparisonArgs struct {
	Boolean                RequestNamingConditionsConditionComparisonBooleanPtrInput                `pulumi:"boolean"`
	EsbInputNodeType       RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrInput       `pulumi:"esbInputNodeType"`
	FailedState            RequestNamingConditionsConditionComparisonFailedStatePtrInput            `pulumi:"failedState"`
	FailureReason          RequestNamingConditionsConditionComparisonFailureReasonPtrInput          `pulumi:"failureReason"`
	FastString             RequestNamingConditionsConditionComparisonFastStringPtrInput             `pulumi:"fastString"`
	FlawState              RequestNamingConditionsConditionComparisonFlawStatePtrInput              `pulumi:"flawState"`
	Generic                RequestNamingConditionsConditionComparisonGenericPtrInput                `pulumi:"generic"`
	HttpMethod             RequestNamingConditionsConditionComparisonHttpMethodPtrInput             `pulumi:"httpMethod"`
	HttpStatusClass        RequestNamingConditionsConditionComparisonHttpStatusClassPtrInput        `pulumi:"httpStatusClass"`
	IibInputNodeType       RequestNamingConditionsConditionComparisonIibInputNodeTypePtrInput       `pulumi:"iibInputNodeType"`
	Negate                 pulumi.BoolPtrInput                                                      `pulumi:"negate"`
	Number                 RequestNamingConditionsConditionComparisonNumberPtrInput                 `pulumi:"number"`
	NumberRequestAttribute RequestNamingConditionsConditionComparisonNumberRequestAttributePtrInput `pulumi:"numberRequestAttribute"`
	ServiceType            RequestNamingConditionsConditionComparisonServiceTypePtrInput            `pulumi:"serviceType"`
	String                 RequestNamingConditionsConditionComparisonStringPtrInput                 `pulumi:"string"`
	StringRequestAttribute RequestNamingConditionsConditionComparisonStringRequestAttributePtrInput `pulumi:"stringRequestAttribute"`
	Tag                    RequestNamingConditionsConditionComparisonTagPtrInput                    `pulumi:"tag"`
	ZosCallType            RequestNamingConditionsConditionComparisonZosCallTypePtrInput            `pulumi:"zosCallType"`
}

func (RequestNamingConditionsConditionComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparison)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonArgs) ToRequestNamingConditionsConditionComparisonOutput() RequestNamingConditionsConditionComparisonOutput {
	return i.ToRequestNamingConditionsConditionComparisonOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonArgs) ToRequestNamingConditionsConditionComparisonOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonOutput)
}

type RequestNamingConditionsConditionComparisonOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparison)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonOutput) ToRequestNamingConditionsConditionComparisonOutput() RequestNamingConditionsConditionComparisonOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonOutput) ToRequestNamingConditionsConditionComparisonOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonOutput) Boolean() RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonBoolean {
		return v.Boolean
	}).(RequestNamingConditionsConditionComparisonBooleanPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) EsbInputNodeType() RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonEsbInputNodeType {
		return v.EsbInputNodeType
	}).(RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) FailedState() RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonFailedState {
		return v.FailedState
	}).(RequestNamingConditionsConditionComparisonFailedStatePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) FailureReason() RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonFailureReason {
		return v.FailureReason
	}).(RequestNamingConditionsConditionComparisonFailureReasonPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) FastString() RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonFastString {
		return v.FastString
	}).(RequestNamingConditionsConditionComparisonFastStringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) FlawState() RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonFlawState {
		return v.FlawState
	}).(RequestNamingConditionsConditionComparisonFlawStatePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) Generic() RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonGeneric {
		return v.Generic
	}).(RequestNamingConditionsConditionComparisonGenericPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) HttpMethod() RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonHttpMethod {
		return v.HttpMethod
	}).(RequestNamingConditionsConditionComparisonHttpMethodPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) HttpStatusClass() RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonHttpStatusClass {
		return v.HttpStatusClass
	}).(RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) IibInputNodeType() RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonIibInputNodeType {
		return v.IibInputNodeType
	}).(RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) Number() RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonNumber {
		return v.Number
	}).(RequestNamingConditionsConditionComparisonNumberPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) NumberRequestAttribute() RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonNumberRequestAttribute {
		return v.NumberRequestAttribute
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) ServiceType() RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonServiceType {
		return v.ServiceType
	}).(RequestNamingConditionsConditionComparisonServiceTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) String() RequestNamingConditionsConditionComparisonStringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonString {
		return v.String
	}).(RequestNamingConditionsConditionComparisonStringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) StringRequestAttribute() RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonStringRequestAttribute {
		return v.StringRequestAttribute
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) Tag() RequestNamingConditionsConditionComparisonTagPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonTag {
		return v.Tag
	}).(RequestNamingConditionsConditionComparisonTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonOutput) ZosCallType() RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparison) *RequestNamingConditionsConditionComparisonZosCallType {
		return v.ZosCallType
	}).(RequestNamingConditionsConditionComparisonZosCallTypePtrOutput)
}

type RequestNamingConditionsConditionComparisonBoolean struct {
	Operator *string `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *bool   `pulumi:"value"`
	Values   []bool  `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonBooleanInput is an input type that accepts RequestNamingConditionsConditionComparisonBooleanArgs and RequestNamingConditionsConditionComparisonBooleanOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonBooleanInput` via:
//
//	RequestNamingConditionsConditionComparisonBooleanArgs{...}
type RequestNamingConditionsConditionComparisonBooleanInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonBooleanOutput() RequestNamingConditionsConditionComparisonBooleanOutput
	ToRequestNamingConditionsConditionComparisonBooleanOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonBooleanOutput
}

type RequestNamingConditionsConditionComparisonBooleanArgs struct {
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.BoolPtrInput   `pulumi:"value"`
	Values   pulumi.BoolArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonBooleanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonBoolean)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonBooleanArgs) ToRequestNamingConditionsConditionComparisonBooleanOutput() RequestNamingConditionsConditionComparisonBooleanOutput {
	return i.ToRequestNamingConditionsConditionComparisonBooleanOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonBooleanArgs) ToRequestNamingConditionsConditionComparisonBooleanOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonBooleanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonBooleanOutput)
}

func (i RequestNamingConditionsConditionComparisonBooleanArgs) ToRequestNamingConditionsConditionComparisonBooleanPtrOutput() RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonBooleanArgs) ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonBooleanOutput).ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonBooleanPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonBooleanArgs, RequestNamingConditionsConditionComparisonBooleanPtr and RequestNamingConditionsConditionComparisonBooleanPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonBooleanPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonBooleanArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonBooleanPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonBooleanPtrOutput() RequestNamingConditionsConditionComparisonBooleanPtrOutput
	ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonBooleanPtrOutput
}

type requestNamingConditionsConditionComparisonBooleanPtrType RequestNamingConditionsConditionComparisonBooleanArgs

func RequestNamingConditionsConditionComparisonBooleanPtr(v *RequestNamingConditionsConditionComparisonBooleanArgs) RequestNamingConditionsConditionComparisonBooleanPtrInput {
	return (*requestNamingConditionsConditionComparisonBooleanPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonBooleanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonBoolean)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonBooleanPtrType) ToRequestNamingConditionsConditionComparisonBooleanPtrOutput() RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonBooleanPtrType) ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonBooleanPtrOutput)
}

type RequestNamingConditionsConditionComparisonBooleanOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonBooleanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonBoolean)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) ToRequestNamingConditionsConditionComparisonBooleanOutput() RequestNamingConditionsConditionComparisonBooleanOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) ToRequestNamingConditionsConditionComparisonBooleanOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonBooleanOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) ToRequestNamingConditionsConditionComparisonBooleanPtrOutput() RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonBoolean) *RequestNamingConditionsConditionComparisonBoolean {
		return &v
	}).(RequestNamingConditionsConditionComparisonBooleanPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonBoolean) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonBoolean) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) Value() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonBoolean) *bool { return v.Value }).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanOutput) Values() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonBoolean) []bool { return v.Values }).(pulumi.BoolArrayOutput)
}

type RequestNamingConditionsConditionComparisonBooleanPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonBooleanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonBoolean)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) ToRequestNamingConditionsConditionComparisonBooleanPtrOutput() RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) ToRequestNamingConditionsConditionComparisonBooleanPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonBooleanPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) Elem() RequestNamingConditionsConditionComparisonBooleanOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonBoolean) RequestNamingConditionsConditionComparisonBoolean {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonBoolean
		return ret
	}).(RequestNamingConditionsConditionComparisonBooleanOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonBoolean) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonBoolean) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) Value() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonBoolean) *bool {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonBooleanPtrOutput) Values() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonBoolean) []bool {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.BoolArrayOutput)
}

type RequestNamingConditionsConditionComparisonEsbInputNodeType struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonEsbInputNodeTypeInput is an input type that accepts RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs and RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonEsbInputNodeTypeInput` via:
//
//	RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs{...}
type RequestNamingConditionsConditionComparisonEsbInputNodeTypeInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput
	ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput
}

type RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonEsbInputNodeType)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput {
	return i.ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput)
}

func (i RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput).ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs, RequestNamingConditionsConditionComparisonEsbInputNodeTypePtr and RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput
	ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput
}

type requestNamingConditionsConditionComparisonEsbInputNodeTypePtrType RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs

func RequestNamingConditionsConditionComparisonEsbInputNodeTypePtr(v *RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs) RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrInput {
	return (*requestNamingConditionsConditionComparisonEsbInputNodeTypePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonEsbInputNodeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonEsbInputNodeType)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonEsbInputNodeTypePtrType) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonEsbInputNodeTypePtrType) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput)
}

type RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonEsbInputNodeType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonEsbInputNodeType) *RequestNamingConditionsConditionComparisonEsbInputNodeType {
		return &v
	}).(RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonEsbInputNodeType) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonEsbInputNodeType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonEsbInputNodeType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonEsbInputNodeType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonEsbInputNodeType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) ToRequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) Elem() RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonEsbInputNodeType) RequestNamingConditionsConditionComparisonEsbInputNodeType {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonEsbInputNodeType
		return ret
	}).(RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonEsbInputNodeType) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonEsbInputNodeType) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonEsbInputNodeType) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonEsbInputNodeType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFailedState struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonFailedStateInput is an input type that accepts RequestNamingConditionsConditionComparisonFailedStateArgs and RequestNamingConditionsConditionComparisonFailedStateOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFailedStateInput` via:
//
//	RequestNamingConditionsConditionComparisonFailedStateArgs{...}
type RequestNamingConditionsConditionComparisonFailedStateInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFailedStateOutput() RequestNamingConditionsConditionComparisonFailedStateOutput
	ToRequestNamingConditionsConditionComparisonFailedStateOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFailedStateOutput
}

type RequestNamingConditionsConditionComparisonFailedStateArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonFailedStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailedState)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonFailedStateArgs) ToRequestNamingConditionsConditionComparisonFailedStateOutput() RequestNamingConditionsConditionComparisonFailedStateOutput {
	return i.ToRequestNamingConditionsConditionComparisonFailedStateOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFailedStateArgs) ToRequestNamingConditionsConditionComparisonFailedStateOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailedStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFailedStateOutput)
}

func (i RequestNamingConditionsConditionComparisonFailedStateArgs) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutput() RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFailedStateArgs) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFailedStateOutput).ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonFailedStatePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonFailedStateArgs, RequestNamingConditionsConditionComparisonFailedStatePtr and RequestNamingConditionsConditionComparisonFailedStatePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFailedStatePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonFailedStateArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonFailedStatePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFailedStatePtrOutput() RequestNamingConditionsConditionComparisonFailedStatePtrOutput
	ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFailedStatePtrOutput
}

type requestNamingConditionsConditionComparisonFailedStatePtrType RequestNamingConditionsConditionComparisonFailedStateArgs

func RequestNamingConditionsConditionComparisonFailedStatePtr(v *RequestNamingConditionsConditionComparisonFailedStateArgs) RequestNamingConditionsConditionComparisonFailedStatePtrInput {
	return (*requestNamingConditionsConditionComparisonFailedStatePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonFailedStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFailedState)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonFailedStatePtrType) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutput() RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonFailedStatePtrType) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFailedStatePtrOutput)
}

type RequestNamingConditionsConditionComparisonFailedStateOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFailedStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailedState)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) ToRequestNamingConditionsConditionComparisonFailedStateOutput() RequestNamingConditionsConditionComparisonFailedStateOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) ToRequestNamingConditionsConditionComparisonFailedStateOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailedStateOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutput() RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonFailedState) *RequestNamingConditionsConditionComparisonFailedState {
		return &v
	}).(RequestNamingConditionsConditionComparisonFailedStatePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailedState) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailedState) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailedState) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStateOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailedState) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFailedStatePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFailedStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFailedState)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutput() RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) ToRequestNamingConditionsConditionComparisonFailedStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailedStatePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) Elem() RequestNamingConditionsConditionComparisonFailedStateOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailedState) RequestNamingConditionsConditionComparisonFailedState {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonFailedState
		return ret
	}).(RequestNamingConditionsConditionComparisonFailedStateOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailedState) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailedState) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailedState) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailedStatePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailedState) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFailureReason struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonFailureReasonInput is an input type that accepts RequestNamingConditionsConditionComparisonFailureReasonArgs and RequestNamingConditionsConditionComparisonFailureReasonOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFailureReasonInput` via:
//
//	RequestNamingConditionsConditionComparisonFailureReasonArgs{...}
type RequestNamingConditionsConditionComparisonFailureReasonInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFailureReasonOutput() RequestNamingConditionsConditionComparisonFailureReasonOutput
	ToRequestNamingConditionsConditionComparisonFailureReasonOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFailureReasonOutput
}

type RequestNamingConditionsConditionComparisonFailureReasonArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonFailureReasonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailureReason)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonFailureReasonArgs) ToRequestNamingConditionsConditionComparisonFailureReasonOutput() RequestNamingConditionsConditionComparisonFailureReasonOutput {
	return i.ToRequestNamingConditionsConditionComparisonFailureReasonOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFailureReasonArgs) ToRequestNamingConditionsConditionComparisonFailureReasonOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailureReasonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFailureReasonOutput)
}

func (i RequestNamingConditionsConditionComparisonFailureReasonArgs) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutput() RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFailureReasonArgs) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFailureReasonOutput).ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonFailureReasonPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonFailureReasonArgs, RequestNamingConditionsConditionComparisonFailureReasonPtr and RequestNamingConditionsConditionComparisonFailureReasonPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFailureReasonPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonFailureReasonArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonFailureReasonPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutput() RequestNamingConditionsConditionComparisonFailureReasonPtrOutput
	ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFailureReasonPtrOutput
}

type requestNamingConditionsConditionComparisonFailureReasonPtrType RequestNamingConditionsConditionComparisonFailureReasonArgs

func RequestNamingConditionsConditionComparisonFailureReasonPtr(v *RequestNamingConditionsConditionComparisonFailureReasonArgs) RequestNamingConditionsConditionComparisonFailureReasonPtrInput {
	return (*requestNamingConditionsConditionComparisonFailureReasonPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonFailureReasonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFailureReason)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonFailureReasonPtrType) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutput() RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonFailureReasonPtrType) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFailureReasonPtrOutput)
}

type RequestNamingConditionsConditionComparisonFailureReasonOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFailureReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailureReason)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) ToRequestNamingConditionsConditionComparisonFailureReasonOutput() RequestNamingConditionsConditionComparisonFailureReasonOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) ToRequestNamingConditionsConditionComparisonFailureReasonOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailureReasonOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutput() RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonFailureReason) *RequestNamingConditionsConditionComparisonFailureReason {
		return &v
	}).(RequestNamingConditionsConditionComparisonFailureReasonPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailureReason) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailureReason) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailureReason) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFailureReason) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFailureReasonPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFailureReason)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutput() RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) ToRequestNamingConditionsConditionComparisonFailureReasonPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFailureReasonPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) Elem() RequestNamingConditionsConditionComparisonFailureReasonOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailureReason) RequestNamingConditionsConditionComparisonFailureReason {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonFailureReason
		return ret
	}).(RequestNamingConditionsConditionComparisonFailureReasonOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailureReason) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailureReason) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailureReason) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFailureReasonPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFailureReason) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFastString struct {
	CaseSensitive *bool    `pulumi:"caseSensitive"`
	Operator      *string  `pulumi:"operator"`
	Unknowns      *string  `pulumi:"unknowns"`
	Value         *string  `pulumi:"value"`
	Values        []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonFastStringInput is an input type that accepts RequestNamingConditionsConditionComparisonFastStringArgs and RequestNamingConditionsConditionComparisonFastStringOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFastStringInput` via:
//
//	RequestNamingConditionsConditionComparisonFastStringArgs{...}
type RequestNamingConditionsConditionComparisonFastStringInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFastStringOutput() RequestNamingConditionsConditionComparisonFastStringOutput
	ToRequestNamingConditionsConditionComparisonFastStringOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFastStringOutput
}

type RequestNamingConditionsConditionComparisonFastStringArgs struct {
	CaseSensitive pulumi.BoolPtrInput     `pulumi:"caseSensitive"`
	Operator      pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput   `pulumi:"value"`
	Values        pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonFastStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFastString)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonFastStringArgs) ToRequestNamingConditionsConditionComparisonFastStringOutput() RequestNamingConditionsConditionComparisonFastStringOutput {
	return i.ToRequestNamingConditionsConditionComparisonFastStringOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFastStringArgs) ToRequestNamingConditionsConditionComparisonFastStringOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFastStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFastStringOutput)
}

func (i RequestNamingConditionsConditionComparisonFastStringArgs) ToRequestNamingConditionsConditionComparisonFastStringPtrOutput() RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFastStringArgs) ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFastStringOutput).ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonFastStringPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonFastStringArgs, RequestNamingConditionsConditionComparisonFastStringPtr and RequestNamingConditionsConditionComparisonFastStringPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFastStringPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonFastStringArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonFastStringPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFastStringPtrOutput() RequestNamingConditionsConditionComparisonFastStringPtrOutput
	ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFastStringPtrOutput
}

type requestNamingConditionsConditionComparisonFastStringPtrType RequestNamingConditionsConditionComparisonFastStringArgs

func RequestNamingConditionsConditionComparisonFastStringPtr(v *RequestNamingConditionsConditionComparisonFastStringArgs) RequestNamingConditionsConditionComparisonFastStringPtrInput {
	return (*requestNamingConditionsConditionComparisonFastStringPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonFastStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFastString)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonFastStringPtrType) ToRequestNamingConditionsConditionComparisonFastStringPtrOutput() RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonFastStringPtrType) ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFastStringPtrOutput)
}

type RequestNamingConditionsConditionComparisonFastStringOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFastStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFastString)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) ToRequestNamingConditionsConditionComparisonFastStringOutput() RequestNamingConditionsConditionComparisonFastStringOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) ToRequestNamingConditionsConditionComparisonFastStringOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFastStringOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) ToRequestNamingConditionsConditionComparisonFastStringPtrOutput() RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonFastString) *RequestNamingConditionsConditionComparisonFastString {
		return &v
	}).(RequestNamingConditionsConditionComparisonFastStringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFastString) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFastString) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFastString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFastString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFastString) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFastStringPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFastStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFastString)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) ToRequestNamingConditionsConditionComparisonFastStringPtrOutput() RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) ToRequestNamingConditionsConditionComparisonFastStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFastStringPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) Elem() RequestNamingConditionsConditionComparisonFastStringOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFastString) RequestNamingConditionsConditionComparisonFastString {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonFastString
		return ret
	}).(RequestNamingConditionsConditionComparisonFastStringOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFastString) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFastString) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFastString) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFastString) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFastStringPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFastString) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFlawState struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonFlawStateInput is an input type that accepts RequestNamingConditionsConditionComparisonFlawStateArgs and RequestNamingConditionsConditionComparisonFlawStateOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFlawStateInput` via:
//
//	RequestNamingConditionsConditionComparisonFlawStateArgs{...}
type RequestNamingConditionsConditionComparisonFlawStateInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFlawStateOutput() RequestNamingConditionsConditionComparisonFlawStateOutput
	ToRequestNamingConditionsConditionComparisonFlawStateOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFlawStateOutput
}

type RequestNamingConditionsConditionComparisonFlawStateArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonFlawStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFlawState)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonFlawStateArgs) ToRequestNamingConditionsConditionComparisonFlawStateOutput() RequestNamingConditionsConditionComparisonFlawStateOutput {
	return i.ToRequestNamingConditionsConditionComparisonFlawStateOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFlawStateArgs) ToRequestNamingConditionsConditionComparisonFlawStateOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFlawStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFlawStateOutput)
}

func (i RequestNamingConditionsConditionComparisonFlawStateArgs) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutput() RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonFlawStateArgs) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFlawStateOutput).ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonFlawStatePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonFlawStateArgs, RequestNamingConditionsConditionComparisonFlawStatePtr and RequestNamingConditionsConditionComparisonFlawStatePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonFlawStatePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonFlawStateArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonFlawStatePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonFlawStatePtrOutput() RequestNamingConditionsConditionComparisonFlawStatePtrOutput
	ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonFlawStatePtrOutput
}

type requestNamingConditionsConditionComparisonFlawStatePtrType RequestNamingConditionsConditionComparisonFlawStateArgs

func RequestNamingConditionsConditionComparisonFlawStatePtr(v *RequestNamingConditionsConditionComparisonFlawStateArgs) RequestNamingConditionsConditionComparisonFlawStatePtrInput {
	return (*requestNamingConditionsConditionComparisonFlawStatePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonFlawStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFlawState)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonFlawStatePtrType) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutput() RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonFlawStatePtrType) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonFlawStatePtrOutput)
}

type RequestNamingConditionsConditionComparisonFlawStateOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFlawStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonFlawState)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) ToRequestNamingConditionsConditionComparisonFlawStateOutput() RequestNamingConditionsConditionComparisonFlawStateOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) ToRequestNamingConditionsConditionComparisonFlawStateOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFlawStateOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutput() RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonFlawState) *RequestNamingConditionsConditionComparisonFlawState {
		return &v
	}).(RequestNamingConditionsConditionComparisonFlawStatePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFlawState) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFlawState) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFlawState) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStateOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonFlawState) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonFlawStatePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonFlawStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonFlawState)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutput() RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) ToRequestNamingConditionsConditionComparisonFlawStatePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonFlawStatePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) Elem() RequestNamingConditionsConditionComparisonFlawStateOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFlawState) RequestNamingConditionsConditionComparisonFlawState {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonFlawState
		return ret
	}).(RequestNamingConditionsConditionComparisonFlawStateOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFlawState) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFlawState) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFlawState) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonFlawStatePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonFlawState) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonGeneric struct {
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// RequestNamingConditionsConditionComparisonGenericInput is an input type that accepts RequestNamingConditionsConditionComparisonGenericArgs and RequestNamingConditionsConditionComparisonGenericOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonGenericInput` via:
//
//	RequestNamingConditionsConditionComparisonGenericArgs{...}
type RequestNamingConditionsConditionComparisonGenericInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonGenericOutput() RequestNamingConditionsConditionComparisonGenericOutput
	ToRequestNamingConditionsConditionComparisonGenericOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonGenericOutput
}

type RequestNamingConditionsConditionComparisonGenericArgs struct {
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (RequestNamingConditionsConditionComparisonGenericArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonGeneric)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonGenericArgs) ToRequestNamingConditionsConditionComparisonGenericOutput() RequestNamingConditionsConditionComparisonGenericOutput {
	return i.ToRequestNamingConditionsConditionComparisonGenericOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonGenericArgs) ToRequestNamingConditionsConditionComparisonGenericOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonGenericOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonGenericOutput)
}

func (i RequestNamingConditionsConditionComparisonGenericArgs) ToRequestNamingConditionsConditionComparisonGenericPtrOutput() RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonGenericArgs) ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonGenericOutput).ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonGenericPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonGenericArgs, RequestNamingConditionsConditionComparisonGenericPtr and RequestNamingConditionsConditionComparisonGenericPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonGenericPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonGenericArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonGenericPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonGenericPtrOutput() RequestNamingConditionsConditionComparisonGenericPtrOutput
	ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonGenericPtrOutput
}

type requestNamingConditionsConditionComparisonGenericPtrType RequestNamingConditionsConditionComparisonGenericArgs

func RequestNamingConditionsConditionComparisonGenericPtr(v *RequestNamingConditionsConditionComparisonGenericArgs) RequestNamingConditionsConditionComparisonGenericPtrInput {
	return (*requestNamingConditionsConditionComparisonGenericPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonGenericPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonGeneric)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonGenericPtrType) ToRequestNamingConditionsConditionComparisonGenericPtrOutput() RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonGenericPtrType) ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonGenericPtrOutput)
}

type RequestNamingConditionsConditionComparisonGenericOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonGenericOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonGeneric)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonGenericOutput) ToRequestNamingConditionsConditionComparisonGenericOutput() RequestNamingConditionsConditionComparisonGenericOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonGenericOutput) ToRequestNamingConditionsConditionComparisonGenericOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonGenericOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonGenericOutput) ToRequestNamingConditionsConditionComparisonGenericPtrOutput() RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonGenericOutput) ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonGeneric) *RequestNamingConditionsConditionComparisonGeneric {
		return &v
	}).(RequestNamingConditionsConditionComparisonGenericPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonGenericOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonGeneric) string { return v.Type }).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonGenericOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonGeneric) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonGenericPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonGenericPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonGeneric)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonGenericPtrOutput) ToRequestNamingConditionsConditionComparisonGenericPtrOutput() RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonGenericPtrOutput) ToRequestNamingConditionsConditionComparisonGenericPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonGenericPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonGenericPtrOutput) Elem() RequestNamingConditionsConditionComparisonGenericOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonGeneric) RequestNamingConditionsConditionComparisonGeneric {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonGeneric
		return ret
	}).(RequestNamingConditionsConditionComparisonGenericOutput)
}

func (o RequestNamingConditionsConditionComparisonGenericPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonGenericPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonGeneric) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonHttpMethod struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonHttpMethodInput is an input type that accepts RequestNamingConditionsConditionComparisonHttpMethodArgs and RequestNamingConditionsConditionComparisonHttpMethodOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonHttpMethodInput` via:
//
//	RequestNamingConditionsConditionComparisonHttpMethodArgs{...}
type RequestNamingConditionsConditionComparisonHttpMethodInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonHttpMethodOutput() RequestNamingConditionsConditionComparisonHttpMethodOutput
	ToRequestNamingConditionsConditionComparisonHttpMethodOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonHttpMethodOutput
}

type RequestNamingConditionsConditionComparisonHttpMethodArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonHttpMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpMethod)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonHttpMethodArgs) ToRequestNamingConditionsConditionComparisonHttpMethodOutput() RequestNamingConditionsConditionComparisonHttpMethodOutput {
	return i.ToRequestNamingConditionsConditionComparisonHttpMethodOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonHttpMethodArgs) ToRequestNamingConditionsConditionComparisonHttpMethodOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonHttpMethodOutput)
}

func (i RequestNamingConditionsConditionComparisonHttpMethodArgs) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutput() RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonHttpMethodArgs) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonHttpMethodOutput).ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonHttpMethodPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonHttpMethodArgs, RequestNamingConditionsConditionComparisonHttpMethodPtr and RequestNamingConditionsConditionComparisonHttpMethodPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonHttpMethodPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonHttpMethodArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonHttpMethodPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutput() RequestNamingConditionsConditionComparisonHttpMethodPtrOutput
	ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonHttpMethodPtrOutput
}

type requestNamingConditionsConditionComparisonHttpMethodPtrType RequestNamingConditionsConditionComparisonHttpMethodArgs

func RequestNamingConditionsConditionComparisonHttpMethodPtr(v *RequestNamingConditionsConditionComparisonHttpMethodArgs) RequestNamingConditionsConditionComparisonHttpMethodPtrInput {
	return (*requestNamingConditionsConditionComparisonHttpMethodPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonHttpMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonHttpMethod)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonHttpMethodPtrType) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutput() RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonHttpMethodPtrType) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonHttpMethodPtrOutput)
}

type RequestNamingConditionsConditionComparisonHttpMethodOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonHttpMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpMethod)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) ToRequestNamingConditionsConditionComparisonHttpMethodOutput() RequestNamingConditionsConditionComparisonHttpMethodOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) ToRequestNamingConditionsConditionComparisonHttpMethodOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpMethodOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutput() RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonHttpMethod) *RequestNamingConditionsConditionComparisonHttpMethod {
		return &v
	}).(RequestNamingConditionsConditionComparisonHttpMethodPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpMethod) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpMethod) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpMethod) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpMethod) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonHttpMethodPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonHttpMethod)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutput() RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) ToRequestNamingConditionsConditionComparisonHttpMethodPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpMethodPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) Elem() RequestNamingConditionsConditionComparisonHttpMethodOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpMethod) RequestNamingConditionsConditionComparisonHttpMethod {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonHttpMethod
		return ret
	}).(RequestNamingConditionsConditionComparisonHttpMethodOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpMethod) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpMethod) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpMethod) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpMethodPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpMethod) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonHttpStatusClass struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonHttpStatusClassInput is an input type that accepts RequestNamingConditionsConditionComparisonHttpStatusClassArgs and RequestNamingConditionsConditionComparisonHttpStatusClassOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonHttpStatusClassInput` via:
//
//	RequestNamingConditionsConditionComparisonHttpStatusClassArgs{...}
type RequestNamingConditionsConditionComparisonHttpStatusClassInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonHttpStatusClassOutput() RequestNamingConditionsConditionComparisonHttpStatusClassOutput
	ToRequestNamingConditionsConditionComparisonHttpStatusClassOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassOutput
}

type RequestNamingConditionsConditionComparisonHttpStatusClassArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonHttpStatusClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpStatusClass)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonHttpStatusClassArgs) ToRequestNamingConditionsConditionComparisonHttpStatusClassOutput() RequestNamingConditionsConditionComparisonHttpStatusClassOutput {
	return i.ToRequestNamingConditionsConditionComparisonHttpStatusClassOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonHttpStatusClassArgs) ToRequestNamingConditionsConditionComparisonHttpStatusClassOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonHttpStatusClassOutput)
}

func (i RequestNamingConditionsConditionComparisonHttpStatusClassArgs) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput() RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonHttpStatusClassArgs) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonHttpStatusClassOutput).ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonHttpStatusClassPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonHttpStatusClassArgs, RequestNamingConditionsConditionComparisonHttpStatusClassPtr and RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonHttpStatusClassPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonHttpStatusClassArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonHttpStatusClassPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput() RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput
	ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput
}

type requestNamingConditionsConditionComparisonHttpStatusClassPtrType RequestNamingConditionsConditionComparisonHttpStatusClassArgs

func RequestNamingConditionsConditionComparisonHttpStatusClassPtr(v *RequestNamingConditionsConditionComparisonHttpStatusClassArgs) RequestNamingConditionsConditionComparisonHttpStatusClassPtrInput {
	return (*requestNamingConditionsConditionComparisonHttpStatusClassPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonHttpStatusClassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonHttpStatusClass)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonHttpStatusClassPtrType) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput() RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonHttpStatusClassPtrType) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput)
}

type RequestNamingConditionsConditionComparisonHttpStatusClassOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonHttpStatusClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpStatusClass)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) ToRequestNamingConditionsConditionComparisonHttpStatusClassOutput() RequestNamingConditionsConditionComparisonHttpStatusClassOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) ToRequestNamingConditionsConditionComparisonHttpStatusClassOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput() RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonHttpStatusClass) *RequestNamingConditionsConditionComparisonHttpStatusClass {
		return &v
	}).(RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpStatusClass) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpStatusClass) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpStatusClass) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonHttpStatusClass) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonHttpStatusClass)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput() RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) ToRequestNamingConditionsConditionComparisonHttpStatusClassPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) Elem() RequestNamingConditionsConditionComparisonHttpStatusClassOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpStatusClass) RequestNamingConditionsConditionComparisonHttpStatusClass {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonHttpStatusClass
		return ret
	}).(RequestNamingConditionsConditionComparisonHttpStatusClassOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpStatusClass) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpStatusClass) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpStatusClass) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonHttpStatusClass) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonIibInputNodeType struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonIibInputNodeTypeInput is an input type that accepts RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs and RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonIibInputNodeTypeInput` via:
//
//	RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs{...}
type RequestNamingConditionsConditionComparisonIibInputNodeTypeInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput
	ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput
}

type RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonIibInputNodeType)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput {
	return i.ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput)
}

func (i RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput).ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonIibInputNodeTypePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs, RequestNamingConditionsConditionComparisonIibInputNodeTypePtr and RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonIibInputNodeTypePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonIibInputNodeTypePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput
	ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput
}

type requestNamingConditionsConditionComparisonIibInputNodeTypePtrType RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs

func RequestNamingConditionsConditionComparisonIibInputNodeTypePtr(v *RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs) RequestNamingConditionsConditionComparisonIibInputNodeTypePtrInput {
	return (*requestNamingConditionsConditionComparisonIibInputNodeTypePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonIibInputNodeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonIibInputNodeType)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonIibInputNodeTypePtrType) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonIibInputNodeTypePtrType) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput)
}

type RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonIibInputNodeType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonIibInputNodeTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonIibInputNodeType) *RequestNamingConditionsConditionComparisonIibInputNodeType {
		return &v
	}).(RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonIibInputNodeType) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonIibInputNodeType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonIibInputNodeType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonIibInputNodeType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonIibInputNodeType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput() RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) ToRequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) Elem() RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonIibInputNodeType) RequestNamingConditionsConditionComparisonIibInputNodeType {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonIibInputNodeType
		return ret
	}).(RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonIibInputNodeType) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonIibInputNodeType) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonIibInputNodeType) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonIibInputNodeType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonNumber struct {
	Operator *string   `pulumi:"operator"`
	Unknowns *string   `pulumi:"unknowns"`
	Value    *float64  `pulumi:"value"`
	Values   []float64 `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonNumberInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberArgs and RequestNamingConditionsConditionComparisonNumberOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberInput` via:
//
//	RequestNamingConditionsConditionComparisonNumberArgs{...}
type RequestNamingConditionsConditionComparisonNumberInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberOutput() RequestNamingConditionsConditionComparisonNumberOutput
	ToRequestNamingConditionsConditionComparisonNumberOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberOutput
}

type RequestNamingConditionsConditionComparisonNumberArgs struct {
	Operator pulumi.StringPtrInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput    `pulumi:"unknowns"`
	Value    pulumi.Float64PtrInput   `pulumi:"value"`
	Values   pulumi.Float64ArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumber)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonNumberArgs) ToRequestNamingConditionsConditionComparisonNumberOutput() RequestNamingConditionsConditionComparisonNumberOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberArgs) ToRequestNamingConditionsConditionComparisonNumberOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberOutput)
}

func (i RequestNamingConditionsConditionComparisonNumberArgs) ToRequestNamingConditionsConditionComparisonNumberPtrOutput() RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberArgs) ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberOutput).ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonNumberPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberArgs, RequestNamingConditionsConditionComparisonNumberPtr and RequestNamingConditionsConditionComparisonNumberPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonNumberArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonNumberPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberPtrOutput() RequestNamingConditionsConditionComparisonNumberPtrOutput
	ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberPtrOutput
}

type requestNamingConditionsConditionComparisonNumberPtrType RequestNamingConditionsConditionComparisonNumberArgs

func RequestNamingConditionsConditionComparisonNumberPtr(v *RequestNamingConditionsConditionComparisonNumberArgs) RequestNamingConditionsConditionComparisonNumberPtrInput {
	return (*requestNamingConditionsConditionComparisonNumberPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonNumberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumber)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonNumberPtrType) ToRequestNamingConditionsConditionComparisonNumberPtrOutput() RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonNumberPtrType) ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumber)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) ToRequestNamingConditionsConditionComparisonNumberOutput() RequestNamingConditionsConditionComparisonNumberOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) ToRequestNamingConditionsConditionComparisonNumberOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) ToRequestNamingConditionsConditionComparisonNumberPtrOutput() RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonNumber) *RequestNamingConditionsConditionComparisonNumber {
		return &v
	}).(RequestNamingConditionsConditionComparisonNumberPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumber) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumber) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumber) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumber) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type RequestNamingConditionsConditionComparisonNumberPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumber)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) ToRequestNamingConditionsConditionComparisonNumberPtrOutput() RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) ToRequestNamingConditionsConditionComparisonNumberPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) Elem() RequestNamingConditionsConditionComparisonNumberOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumber) RequestNamingConditionsConditionComparisonNumber {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonNumber
		return ret
	}).(RequestNamingConditionsConditionComparisonNumberOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumber) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumber) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumber) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberPtrOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumber) []float64 {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.Float64ArrayOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttribute struct {
	MatchOnChildCalls *bool                                                                   `pulumi:"matchOnChildCalls"`
	Operator          *string                                                                 `pulumi:"operator"`
	RequestAttribute  string                                                                  `pulumi:"requestAttribute"`
	Source            *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource `pulumi:"source"`
	Unknowns          *string                                                                 `pulumi:"unknowns"`
	Value             *float64                                                                `pulumi:"value"`
	Values            []float64                                                               `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs and RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeInput` via:
//
//	RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs{...}
type RequestNamingConditionsConditionComparisonNumberRequestAttributeInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs struct {
	MatchOnChildCalls pulumi.BoolPtrInput                                                            `pulumi:"matchOnChildCalls"`
	Operator          pulumi.StringPtrInput                                                          `pulumi:"operator"`
	RequestAttribute  pulumi.StringInput                                                             `pulumi:"requestAttribute"`
	Source            RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrInput `pulumi:"source"`
	Unknowns          pulumi.StringPtrInput                                                          `pulumi:"unknowns"`
	Value             pulumi.Float64PtrInput                                                         `pulumi:"value"`
	Values            pulumi.Float64ArrayInput                                                       `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttribute)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput)
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput).ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs, RequestNamingConditionsConditionComparisonNumberRequestAttributePtr and RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonNumberRequestAttributePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput
}

type requestNamingConditionsConditionComparisonNumberRequestAttributePtrType RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs

func RequestNamingConditionsConditionComparisonNumberRequestAttributePtr(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs) RequestNamingConditionsConditionComparisonNumberRequestAttributePtrInput {
	return (*requestNamingConditionsConditionComparisonNumberRequestAttributePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonNumberRequestAttributePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttribute)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributePtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributePtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttribute)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonNumberRequestAttribute) *RequestNamingConditionsConditionComparisonNumberRequestAttribute {
		return &v
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) MatchOnChildCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) *bool {
		return v.MatchOnChildCalls
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) RequestAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) string {
		return v.RequestAttribute
	}).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) Source() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource {
		return v.Source
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttribute) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttribute)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) Elem() RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) RequestNamingConditionsConditionComparisonNumberRequestAttribute {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonNumberRequestAttribute
		return ret
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) MatchOnChildCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) *bool {
		if v == nil {
			return nil
		}
		return v.MatchOnChildCalls
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) RequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return &v.RequestAttribute
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) Source() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttribute) []float64 {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.Float64ArrayOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSource struct {
	ManagementZone *string                                                                           `pulumi:"managementZone"`
	ServiceTag     *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag `pulumi:"serviceTag"`
	Unknowns       *string                                                                           `pulumi:"unknowns"`
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs and RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceInput` via:
//
//	RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs{...}
type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs struct {
	ManagementZone pulumi.StringPtrInput                                                                    `pulumi:"managementZone"`
	ServiceTag     RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrInput `pulumi:"serviceTag"`
	Unknowns       pulumi.StringPtrInput                                                                    `pulumi:"unknowns"`
}

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSource)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput)
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput).ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs, RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtr and RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput
}

type requestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrType RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs

func RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtr(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrInput {
	return (*requestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttributeSource)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSource)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource {
		return &v
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ManagementZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *string {
		return v.ManagementZone
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) ServiceTag() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag {
		return v.ServiceTag
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttributeSource)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) Elem() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) RequestNamingConditionsConditionComparisonNumberRequestAttributeSource {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonNumberRequestAttributeSource
		return ret
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) ManagementZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *string {
		if v == nil {
			return nil
		}
		return v.ManagementZone
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) ServiceTag() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag {
		if v == nil {
			return nil
		}
		return v.ServiceTag
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSource) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag struct {
	Context *string                                                                                 `pulumi:"context"`
	Key     string                                                                                  `pulumi:"key"`
	TagKey  *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey `pulumi:"tagKey"`
	Value   *string                                                                                 `pulumi:"value"`
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs and RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagInput` via:
//
//	RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs{...}
type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs struct {
	Context pulumi.StringPtrInput                                                                          `pulumi:"context"`
	Key     pulumi.StringInput                                                                             `pulumi:"key"`
	TagKey  RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrInput `pulumi:"tagKey"`
	Value   pulumi.StringPtrInput                                                                          `pulumi:"value"`
}

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput)
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput).ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs, RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtr and RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput
}

type requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrType RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs

func RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtr(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrInput {
	return (*requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag {
		return &v
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *string {
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) TagKey() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey {
		return v.TagKey
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) Elem() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag
		return ret
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) TagKey() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey {
		if v == nil {
			return nil
		}
		return v.TagKey
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey struct {
	Context *string `pulumi:"context"`
	Key     *string `pulumi:"key"`
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs and RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyInput` via:
//
//	RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs{...}
type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs struct {
	Context pulumi.StringPtrInput `pulumi:"context"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
}

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput)
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput).ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs, RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtr and RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput
	ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput
}

type requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrType RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs

func RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtr(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrInput {
	return (*requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrType) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey) *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey {
		return &v
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey) *string {
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput) ToRequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput) Elem() RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey) RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey
		return ret
	}).(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonServiceType struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonServiceTypeInput is an input type that accepts RequestNamingConditionsConditionComparisonServiceTypeArgs and RequestNamingConditionsConditionComparisonServiceTypeOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonServiceTypeInput` via:
//
//	RequestNamingConditionsConditionComparisonServiceTypeArgs{...}
type RequestNamingConditionsConditionComparisonServiceTypeInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonServiceTypeOutput() RequestNamingConditionsConditionComparisonServiceTypeOutput
	ToRequestNamingConditionsConditionComparisonServiceTypeOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonServiceTypeOutput
}

type RequestNamingConditionsConditionComparisonServiceTypeArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonServiceType)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonServiceTypeArgs) ToRequestNamingConditionsConditionComparisonServiceTypeOutput() RequestNamingConditionsConditionComparisonServiceTypeOutput {
	return i.ToRequestNamingConditionsConditionComparisonServiceTypeOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonServiceTypeArgs) ToRequestNamingConditionsConditionComparisonServiceTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonServiceTypeOutput)
}

func (i RequestNamingConditionsConditionComparisonServiceTypeArgs) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutput() RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonServiceTypeArgs) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonServiceTypeOutput).ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonServiceTypePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonServiceTypeArgs, RequestNamingConditionsConditionComparisonServiceTypePtr and RequestNamingConditionsConditionComparisonServiceTypePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonServiceTypePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonServiceTypeArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonServiceTypePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonServiceTypePtrOutput() RequestNamingConditionsConditionComparisonServiceTypePtrOutput
	ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonServiceTypePtrOutput
}

type requestNamingConditionsConditionComparisonServiceTypePtrType RequestNamingConditionsConditionComparisonServiceTypeArgs

func RequestNamingConditionsConditionComparisonServiceTypePtr(v *RequestNamingConditionsConditionComparisonServiceTypeArgs) RequestNamingConditionsConditionComparisonServiceTypePtrInput {
	return (*requestNamingConditionsConditionComparisonServiceTypePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonServiceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonServiceType)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonServiceTypePtrType) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutput() RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonServiceTypePtrType) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonServiceTypePtrOutput)
}

type RequestNamingConditionsConditionComparisonServiceTypeOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonServiceType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) ToRequestNamingConditionsConditionComparisonServiceTypeOutput() RequestNamingConditionsConditionComparisonServiceTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) ToRequestNamingConditionsConditionComparisonServiceTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonServiceTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutput() RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonServiceType) *RequestNamingConditionsConditionComparisonServiceType {
		return &v
	}).(RequestNamingConditionsConditionComparisonServiceTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonServiceType) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonServiceType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonServiceType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonServiceType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonServiceTypePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonServiceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonServiceType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutput() RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) ToRequestNamingConditionsConditionComparisonServiceTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonServiceTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) Elem() RequestNamingConditionsConditionComparisonServiceTypeOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonServiceType) RequestNamingConditionsConditionComparisonServiceType {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonServiceType
		return ret
	}).(RequestNamingConditionsConditionComparisonServiceTypeOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonServiceType) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonServiceType) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonServiceType) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonServiceTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonServiceType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonString struct {
	CaseSensitive *bool    `pulumi:"caseSensitive"`
	Operator      *string  `pulumi:"operator"`
	Unknowns      *string  `pulumi:"unknowns"`
	Value         *string  `pulumi:"value"`
	Values        []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonStringInput is an input type that accepts RequestNamingConditionsConditionComparisonStringArgs and RequestNamingConditionsConditionComparisonStringOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringInput` via:
//
//	RequestNamingConditionsConditionComparisonStringArgs{...}
type RequestNamingConditionsConditionComparisonStringInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringOutput() RequestNamingConditionsConditionComparisonStringOutput
	ToRequestNamingConditionsConditionComparisonStringOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringOutput
}

type RequestNamingConditionsConditionComparisonStringArgs struct {
	CaseSensitive pulumi.BoolPtrInput     `pulumi:"caseSensitive"`
	Operator      pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput   `pulumi:"value"`
	Values        pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonString)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonStringArgs) ToRequestNamingConditionsConditionComparisonStringOutput() RequestNamingConditionsConditionComparisonStringOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringArgs) ToRequestNamingConditionsConditionComparisonStringOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringOutput)
}

func (i RequestNamingConditionsConditionComparisonStringArgs) ToRequestNamingConditionsConditionComparisonStringPtrOutput() RequestNamingConditionsConditionComparisonStringPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringArgs) ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringOutput).ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonStringPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonStringArgs, RequestNamingConditionsConditionComparisonStringPtr and RequestNamingConditionsConditionComparisonStringPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonStringArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonStringPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringPtrOutput() RequestNamingConditionsConditionComparisonStringPtrOutput
	ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringPtrOutput
}

type requestNamingConditionsConditionComparisonStringPtrType RequestNamingConditionsConditionComparisonStringArgs

func RequestNamingConditionsConditionComparisonStringPtr(v *RequestNamingConditionsConditionComparisonStringArgs) RequestNamingConditionsConditionComparisonStringPtrInput {
	return (*requestNamingConditionsConditionComparisonStringPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonString)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonStringPtrType) ToRequestNamingConditionsConditionComparisonStringPtrOutput() RequestNamingConditionsConditionComparisonStringPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonStringPtrType) ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonString)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringOutput) ToRequestNamingConditionsConditionComparisonStringOutput() RequestNamingConditionsConditionComparisonStringOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringOutput) ToRequestNamingConditionsConditionComparisonStringOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringOutput) ToRequestNamingConditionsConditionComparisonStringPtrOutput() RequestNamingConditionsConditionComparisonStringPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonStringOutput) ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonString) *RequestNamingConditionsConditionComparisonString {
		return &v
	}).(RequestNamingConditionsConditionComparisonStringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonString) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonString) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonString) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonStringPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonString)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) ToRequestNamingConditionsConditionComparisonStringPtrOutput() RequestNamingConditionsConditionComparisonStringPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) ToRequestNamingConditionsConditionComparisonStringPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) Elem() RequestNamingConditionsConditionComparisonStringOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonString) RequestNamingConditionsConditionComparisonString {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonString
		return ret
	}).(RequestNamingConditionsConditionComparisonStringOutput)
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonString) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonString) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonString) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonString) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonString) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttribute struct {
	CaseSensitive     *bool                                                                   `pulumi:"caseSensitive"`
	MatchOnChildCalls *bool                                                                   `pulumi:"matchOnChildCalls"`
	Operator          *string                                                                 `pulumi:"operator"`
	RequestAttribute  string                                                                  `pulumi:"requestAttribute"`
	Source            *RequestNamingConditionsConditionComparisonStringRequestAttributeSource `pulumi:"source"`
	Unknowns          *string                                                                 `pulumi:"unknowns"`
	Value             *string                                                                 `pulumi:"value"`
	Values            []string                                                                `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeArgs and RequestNamingConditionsConditionComparisonStringRequestAttributeOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeInput` via:
//
//	RequestNamingConditionsConditionComparisonStringRequestAttributeArgs{...}
type RequestNamingConditionsConditionComparisonStringRequestAttributeInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeOutput
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeArgs struct {
	CaseSensitive     pulumi.BoolPtrInput                                                            `pulumi:"caseSensitive"`
	MatchOnChildCalls pulumi.BoolPtrInput                                                            `pulumi:"matchOnChildCalls"`
	Operator          pulumi.StringPtrInput                                                          `pulumi:"operator"`
	RequestAttribute  pulumi.StringInput                                                             `pulumi:"requestAttribute"`
	Source            RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrInput `pulumi:"source"`
	Unknowns          pulumi.StringPtrInput                                                          `pulumi:"unknowns"`
	Value             pulumi.StringPtrInput                                                          `pulumi:"value"`
	Values            pulumi.StringArrayInput                                                        `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonStringRequestAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttribute)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeOutput)
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeOutput).ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonStringRequestAttributePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeArgs, RequestNamingConditionsConditionComparisonStringRequestAttributePtr and RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonStringRequestAttributeArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonStringRequestAttributePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput
}

type requestNamingConditionsConditionComparisonStringRequestAttributePtrType RequestNamingConditionsConditionComparisonStringRequestAttributeArgs

func RequestNamingConditionsConditionComparisonStringRequestAttributePtr(v *RequestNamingConditionsConditionComparisonStringRequestAttributeArgs) RequestNamingConditionsConditionComparisonStringRequestAttributePtrInput {
	return (*requestNamingConditionsConditionComparisonStringRequestAttributePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonStringRequestAttributePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttribute)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributePtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributePtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttribute)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonStringRequestAttribute) *RequestNamingConditionsConditionComparisonStringRequestAttribute {
		return &v
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) MatchOnChildCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) *bool {
		return v.MatchOnChildCalls
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) RequestAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) string {
		return v.RequestAttribute
	}).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) Source() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) *RequestNamingConditionsConditionComparisonStringRequestAttributeSource {
		return v.Source
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttribute) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttribute)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) Elem() RequestNamingConditionsConditionComparisonStringRequestAttributeOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) RequestNamingConditionsConditionComparisonStringRequestAttribute {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonStringRequestAttribute
		return ret
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) MatchOnChildCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *bool {
		if v == nil {
			return nil
		}
		return v.MatchOnChildCalls
	}).(pulumi.BoolPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) RequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return &v.RequestAttribute
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) Source() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *RequestNamingConditionsConditionComparisonStringRequestAttributeSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttribute) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSource struct {
	ManagementZone *string                                                                           `pulumi:"managementZone"`
	ServiceTag     *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag `pulumi:"serviceTag"`
	Unknowns       *string                                                                           `pulumi:"unknowns"`
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeSourceInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs and RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeSourceInput` via:
//
//	RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs{...}
type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs struct {
	ManagementZone pulumi.StringPtrInput                                                                    `pulumi:"managementZone"`
	ServiceTag     RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrInput `pulumi:"serviceTag"`
	Unknowns       pulumi.StringPtrInput                                                                    `pulumi:"unknowns"`
}

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSource)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput)
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput).ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs, RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtr and RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput
}

type requestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrType RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs

func RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtr(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs) RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrInput {
	return (*requestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttributeSource)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSource)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *RequestNamingConditionsConditionComparisonStringRequestAttributeSource {
		return &v
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ManagementZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *string {
		return v.ManagementZone
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) ServiceTag() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag {
		return v.ServiceTag
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttributeSource)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) Elem() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSource) RequestNamingConditionsConditionComparisonStringRequestAttributeSource {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonStringRequestAttributeSource
		return ret
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) ManagementZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *string {
		if v == nil {
			return nil
		}
		return v.ManagementZone
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) ServiceTag() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag {
		if v == nil {
			return nil
		}
		return v.ServiceTag
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSource) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag struct {
	Context *string                                                                                 `pulumi:"context"`
	Key     string                                                                                  `pulumi:"key"`
	TagKey  *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey `pulumi:"tagKey"`
	Value   *string                                                                                 `pulumi:"value"`
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs and RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagInput` via:
//
//	RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs{...}
type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs struct {
	Context pulumi.StringPtrInput                                                                          `pulumi:"context"`
	Key     pulumi.StringInput                                                                             `pulumi:"key"`
	TagKey  RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrInput `pulumi:"tagKey"`
	Value   pulumi.StringPtrInput                                                                          `pulumi:"value"`
}

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput)
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput).ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs, RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtr and RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput
}

type requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrType RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs

func RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtr(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrInput {
	return (*requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag {
		return &v
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *string {
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) TagKey() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey {
		return v.TagKey
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) Elem() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag
		return ret
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) TagKey() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey {
		if v == nil {
			return nil
		}
		return v.TagKey
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey struct {
	Context *string `pulumi:"context"`
	Key     *string `pulumi:"key"`
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs and RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyInput` via:
//
//	RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs{...}
type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs struct {
	Context pulumi.StringPtrInput `pulumi:"context"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
}

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput)
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput).ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs, RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtr and RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput
	ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput
}

type requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrType RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs

func RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtr(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrInput {
	return (*requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrType) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey) *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey {
		return &v
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey) *string {
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput) ToRequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput) Elem() RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey) RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey
		return ret
	}).(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonTag struct {
	Operator *string                                              `pulumi:"operator"`
	Unknowns *string                                              `pulumi:"unknowns"`
	Value    *RequestNamingConditionsConditionComparisonTagValue  `pulumi:"value"`
	Values   *RequestNamingConditionsConditionComparisonTagValues `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonTagInput is an input type that accepts RequestNamingConditionsConditionComparisonTagArgs and RequestNamingConditionsConditionComparisonTagOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagInput` via:
//
//	RequestNamingConditionsConditionComparisonTagArgs{...}
type RequestNamingConditionsConditionComparisonTagInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagOutput() RequestNamingConditionsConditionComparisonTagOutput
	ToRequestNamingConditionsConditionComparisonTagOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagOutput
}

type RequestNamingConditionsConditionComparisonTagArgs struct {
	Operator pulumi.StringPtrInput                                       `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                       `pulumi:"unknowns"`
	Value    RequestNamingConditionsConditionComparisonTagValuePtrInput  `pulumi:"value"`
	Values   RequestNamingConditionsConditionComparisonTagValuesPtrInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTag)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonTagArgs) ToRequestNamingConditionsConditionComparisonTagOutput() RequestNamingConditionsConditionComparisonTagOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagArgs) ToRequestNamingConditionsConditionComparisonTagOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagOutput)
}

func (i RequestNamingConditionsConditionComparisonTagArgs) ToRequestNamingConditionsConditionComparisonTagPtrOutput() RequestNamingConditionsConditionComparisonTagPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagArgs) ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagOutput).ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonTagPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonTagArgs, RequestNamingConditionsConditionComparisonTagPtr and RequestNamingConditionsConditionComparisonTagPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonTagArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonTagPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagPtrOutput() RequestNamingConditionsConditionComparisonTagPtrOutput
	ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagPtrOutput
}

type requestNamingConditionsConditionComparisonTagPtrType RequestNamingConditionsConditionComparisonTagArgs

func RequestNamingConditionsConditionComparisonTagPtr(v *RequestNamingConditionsConditionComparisonTagArgs) RequestNamingConditionsConditionComparisonTagPtrInput {
	return (*requestNamingConditionsConditionComparisonTagPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonTag)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonTagPtrType) ToRequestNamingConditionsConditionComparisonTagPtrOutput() RequestNamingConditionsConditionComparisonTagPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonTagPtrType) ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTag)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagOutput) ToRequestNamingConditionsConditionComparisonTagOutput() RequestNamingConditionsConditionComparisonTagOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagOutput) ToRequestNamingConditionsConditionComparisonTagOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagOutput) ToRequestNamingConditionsConditionComparisonTagPtrOutput() RequestNamingConditionsConditionComparisonTagPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonTagOutput) ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonTag) *RequestNamingConditionsConditionComparisonTag {
		return &v
	}).(RequestNamingConditionsConditionComparisonTagPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTag) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagOutput) Value() RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTag) *RequestNamingConditionsConditionComparisonTagValue {
		return v.Value
	}).(RequestNamingConditionsConditionComparisonTagValuePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagOutput) Values() RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTag) *RequestNamingConditionsConditionComparisonTagValues {
		return v.Values
	}).(RequestNamingConditionsConditionComparisonTagValuesPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonTag)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) ToRequestNamingConditionsConditionComparisonTagPtrOutput() RequestNamingConditionsConditionComparisonTagPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) ToRequestNamingConditionsConditionComparisonTagPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) Elem() RequestNamingConditionsConditionComparisonTagOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTag) RequestNamingConditionsConditionComparisonTag {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonTag
		return ret
	}).(RequestNamingConditionsConditionComparisonTagOutput)
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTag) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTag) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) Value() RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTag) *RequestNamingConditionsConditionComparisonTagValue {
		if v == nil {
			return nil
		}
		return v.Value
	}).(RequestNamingConditionsConditionComparisonTagValuePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagPtrOutput) Values() RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTag) *RequestNamingConditionsConditionComparisonTagValues {
		if v == nil {
			return nil
		}
		return v.Values
	}).(RequestNamingConditionsConditionComparisonTagValuesPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// RequestNamingConditionsConditionComparisonTagValueInput is an input type that accepts RequestNamingConditionsConditionComparisonTagValueArgs and RequestNamingConditionsConditionComparisonTagValueOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagValueInput` via:
//
//	RequestNamingConditionsConditionComparisonTagValueArgs{...}
type RequestNamingConditionsConditionComparisonTagValueInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagValueOutput() RequestNamingConditionsConditionComparisonTagValueOutput
	ToRequestNamingConditionsConditionComparisonTagValueOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagValueOutput
}

type RequestNamingConditionsConditionComparisonTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (RequestNamingConditionsConditionComparisonTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValue)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonTagValueArgs) ToRequestNamingConditionsConditionComparisonTagValueOutput() RequestNamingConditionsConditionComparisonTagValueOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValueOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagValueArgs) ToRequestNamingConditionsConditionComparisonTagValueOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValueOutput)
}

func (i RequestNamingConditionsConditionComparisonTagValueArgs) ToRequestNamingConditionsConditionComparisonTagValuePtrOutput() RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagValueArgs) ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValueOutput).ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonTagValuePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonTagValueArgs, RequestNamingConditionsConditionComparisonTagValuePtr and RequestNamingConditionsConditionComparisonTagValuePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagValuePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonTagValueArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonTagValuePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagValuePtrOutput() RequestNamingConditionsConditionComparisonTagValuePtrOutput
	ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagValuePtrOutput
}

type requestNamingConditionsConditionComparisonTagValuePtrType RequestNamingConditionsConditionComparisonTagValueArgs

func RequestNamingConditionsConditionComparisonTagValuePtr(v *RequestNamingConditionsConditionComparisonTagValueArgs) RequestNamingConditionsConditionComparisonTagValuePtrInput {
	return (*requestNamingConditionsConditionComparisonTagValuePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonTagValue)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonTagValuePtrType) ToRequestNamingConditionsConditionComparisonTagValuePtrOutput() RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonTagValuePtrType) ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValuePtrOutput)
}

type RequestNamingConditionsConditionComparisonTagValueOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValue)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) ToRequestNamingConditionsConditionComparisonTagValueOutput() RequestNamingConditionsConditionComparisonTagValueOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) ToRequestNamingConditionsConditionComparisonTagValueOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValueOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) ToRequestNamingConditionsConditionComparisonTagValuePtrOutput() RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonTagValue) *RequestNamingConditionsConditionComparisonTagValue {
		return &v
	}).(RequestNamingConditionsConditionComparisonTagValuePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagValuePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonTagValue)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) ToRequestNamingConditionsConditionComparisonTagValuePtrOutput() RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) ToRequestNamingConditionsConditionComparisonTagValuePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) Elem() RequestNamingConditionsConditionComparisonTagValueOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValue) RequestNamingConditionsConditionComparisonTagValue {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonTagValue
		return ret
	}).(RequestNamingConditionsConditionComparisonTagValueOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagValues struct {
	Values []RequestNamingConditionsConditionComparisonTagValuesValue `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonTagValuesInput is an input type that accepts RequestNamingConditionsConditionComparisonTagValuesArgs and RequestNamingConditionsConditionComparisonTagValuesOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagValuesInput` via:
//
//	RequestNamingConditionsConditionComparisonTagValuesArgs{...}
type RequestNamingConditionsConditionComparisonTagValuesInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagValuesOutput() RequestNamingConditionsConditionComparisonTagValuesOutput
	ToRequestNamingConditionsConditionComparisonTagValuesOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagValuesOutput
}

type RequestNamingConditionsConditionComparisonTagValuesArgs struct {
	Values RequestNamingConditionsConditionComparisonTagValuesValueArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonTagValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValues)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonTagValuesArgs) ToRequestNamingConditionsConditionComparisonTagValuesOutput() RequestNamingConditionsConditionComparisonTagValuesOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuesOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagValuesArgs) ToRequestNamingConditionsConditionComparisonTagValuesOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValuesOutput)
}

func (i RequestNamingConditionsConditionComparisonTagValuesArgs) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutput() RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagValuesArgs) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValuesOutput).ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonTagValuesPtrInput is an input type that accepts RequestNamingConditionsConditionComparisonTagValuesArgs, RequestNamingConditionsConditionComparisonTagValuesPtr and RequestNamingConditionsConditionComparisonTagValuesPtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagValuesPtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonTagValuesArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonTagValuesPtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagValuesPtrOutput() RequestNamingConditionsConditionComparisonTagValuesPtrOutput
	ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagValuesPtrOutput
}

type requestNamingConditionsConditionComparisonTagValuesPtrType RequestNamingConditionsConditionComparisonTagValuesArgs

func RequestNamingConditionsConditionComparisonTagValuesPtr(v *RequestNamingConditionsConditionComparisonTagValuesArgs) RequestNamingConditionsConditionComparisonTagValuesPtrInput {
	return (*requestNamingConditionsConditionComparisonTagValuesPtrType)(v)
}

func (*requestNamingConditionsConditionComparisonTagValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonTagValues)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonTagValuesPtrType) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutput() RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonTagValuesPtrType) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValuesPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagValuesOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValues)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagValuesOutput) ToRequestNamingConditionsConditionComparisonTagValuesOutput() RequestNamingConditionsConditionComparisonTagValuesOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesOutput) ToRequestNamingConditionsConditionComparisonTagValuesOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesOutput) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutput() RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonTagValuesOutput) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonTagValues) *RequestNamingConditionsConditionComparisonTagValues {
		return &v
	}).(RequestNamingConditionsConditionComparisonTagValuesPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuesOutput) Values() RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValues) []RequestNamingConditionsConditionComparisonTagValuesValue {
		return v.Values
	}).(RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput)
}

type RequestNamingConditionsConditionComparisonTagValuesPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonTagValues)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagValuesPtrOutput) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutput() RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesPtrOutput) ToRequestNamingConditionsConditionComparisonTagValuesPtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesPtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesPtrOutput) Elem() RequestNamingConditionsConditionComparisonTagValuesOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValues) RequestNamingConditionsConditionComparisonTagValues {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonTagValues
		return ret
	}).(RequestNamingConditionsConditionComparisonTagValuesOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuesPtrOutput) Values() RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonTagValues) []RequestNamingConditionsConditionComparisonTagValuesValue {
		if v == nil {
			return nil
		}
		return v.Values
	}).(RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput)
}

type RequestNamingConditionsConditionComparisonTagValuesValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// RequestNamingConditionsConditionComparisonTagValuesValueInput is an input type that accepts RequestNamingConditionsConditionComparisonTagValuesValueArgs and RequestNamingConditionsConditionComparisonTagValuesValueOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagValuesValueInput` via:
//
//	RequestNamingConditionsConditionComparisonTagValuesValueArgs{...}
type RequestNamingConditionsConditionComparisonTagValuesValueInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagValuesValueOutput() RequestNamingConditionsConditionComparisonTagValuesValueOutput
	ToRequestNamingConditionsConditionComparisonTagValuesValueOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagValuesValueOutput
}

type RequestNamingConditionsConditionComparisonTagValuesValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (RequestNamingConditionsConditionComparisonTagValuesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuesValue)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonTagValuesValueArgs) ToRequestNamingConditionsConditionComparisonTagValuesValueOutput() RequestNamingConditionsConditionComparisonTagValuesValueOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuesValueOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagValuesValueArgs) ToRequestNamingConditionsConditionComparisonTagValuesValueOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValuesValueOutput)
}

// RequestNamingConditionsConditionComparisonTagValuesValueArrayInput is an input type that accepts RequestNamingConditionsConditionComparisonTagValuesValueArray and RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonTagValuesValueArrayInput` via:
//
//	RequestNamingConditionsConditionComparisonTagValuesValueArray{ RequestNamingConditionsConditionComparisonTagValuesValueArgs{...} }
type RequestNamingConditionsConditionComparisonTagValuesValueArrayInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutput() RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput
	ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput
}

type RequestNamingConditionsConditionComparisonTagValuesValueArray []RequestNamingConditionsConditionComparisonTagValuesValueInput

func (RequestNamingConditionsConditionComparisonTagValuesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestNamingConditionsConditionComparisonTagValuesValue)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonTagValuesValueArray) ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutput() RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput {
	return i.ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonTagValuesValueArray) ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput)
}

type RequestNamingConditionsConditionComparisonTagValuesValueOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagValuesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuesValue)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueOutput) ToRequestNamingConditionsConditionComparisonTagValuesValueOutput() RequestNamingConditionsConditionComparisonTagValuesValueOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueOutput) ToRequestNamingConditionsConditionComparisonTagValuesValueOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesValueOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValuesValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValuesValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValuesValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonTagValuesValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestNamingConditionsConditionComparisonTagValuesValue)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput) ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutput() RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput) ToRequestNamingConditionsConditionComparisonTagValuesValueArrayOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput) Index(i pulumi.IntInput) RequestNamingConditionsConditionComparisonTagValuesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestNamingConditionsConditionComparisonTagValuesValue {
		return vs[0].([]RequestNamingConditionsConditionComparisonTagValuesValue)[vs[1].(int)]
	}).(RequestNamingConditionsConditionComparisonTagValuesValueOutput)
}

type RequestNamingConditionsConditionComparisonZosCallType struct {
	Operator *string  `pulumi:"operator"`
	Unknowns *string  `pulumi:"unknowns"`
	Value    *string  `pulumi:"value"`
	Values   []string `pulumi:"values"`
}

// RequestNamingConditionsConditionComparisonZosCallTypeInput is an input type that accepts RequestNamingConditionsConditionComparisonZosCallTypeArgs and RequestNamingConditionsConditionComparisonZosCallTypeOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonZosCallTypeInput` via:
//
//	RequestNamingConditionsConditionComparisonZosCallTypeArgs{...}
type RequestNamingConditionsConditionComparisonZosCallTypeInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonZosCallTypeOutput() RequestNamingConditionsConditionComparisonZosCallTypeOutput
	ToRequestNamingConditionsConditionComparisonZosCallTypeOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonZosCallTypeOutput
}

type RequestNamingConditionsConditionComparisonZosCallTypeArgs struct {
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput   `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput   `pulumi:"value"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (RequestNamingConditionsConditionComparisonZosCallTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonZosCallType)(nil)).Elem()
}

func (i RequestNamingConditionsConditionComparisonZosCallTypeArgs) ToRequestNamingConditionsConditionComparisonZosCallTypeOutput() RequestNamingConditionsConditionComparisonZosCallTypeOutput {
	return i.ToRequestNamingConditionsConditionComparisonZosCallTypeOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonZosCallTypeArgs) ToRequestNamingConditionsConditionComparisonZosCallTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonZosCallTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonZosCallTypeOutput)
}

func (i RequestNamingConditionsConditionComparisonZosCallTypeArgs) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutput() RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(context.Background())
}

func (i RequestNamingConditionsConditionComparisonZosCallTypeArgs) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonZosCallTypeOutput).ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(ctx)
}

// RequestNamingConditionsConditionComparisonZosCallTypePtrInput is an input type that accepts RequestNamingConditionsConditionComparisonZosCallTypeArgs, RequestNamingConditionsConditionComparisonZosCallTypePtr and RequestNamingConditionsConditionComparisonZosCallTypePtrOutput values.
// You can construct a concrete instance of `RequestNamingConditionsConditionComparisonZosCallTypePtrInput` via:
//
//	        RequestNamingConditionsConditionComparisonZosCallTypeArgs{...}
//
//	or:
//
//	        nil
type RequestNamingConditionsConditionComparisonZosCallTypePtrInput interface {
	pulumi.Input

	ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutput() RequestNamingConditionsConditionComparisonZosCallTypePtrOutput
	ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(context.Context) RequestNamingConditionsConditionComparisonZosCallTypePtrOutput
}

type requestNamingConditionsConditionComparisonZosCallTypePtrType RequestNamingConditionsConditionComparisonZosCallTypeArgs

func RequestNamingConditionsConditionComparisonZosCallTypePtr(v *RequestNamingConditionsConditionComparisonZosCallTypeArgs) RequestNamingConditionsConditionComparisonZosCallTypePtrInput {
	return (*requestNamingConditionsConditionComparisonZosCallTypePtrType)(v)
}

func (*requestNamingConditionsConditionComparisonZosCallTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonZosCallType)(nil)).Elem()
}

func (i *requestNamingConditionsConditionComparisonZosCallTypePtrType) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutput() RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return i.ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(context.Background())
}

func (i *requestNamingConditionsConditionComparisonZosCallTypePtrType) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingConditionsConditionComparisonZosCallTypePtrOutput)
}

type RequestNamingConditionsConditionComparisonZosCallTypeOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonZosCallTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingConditionsConditionComparisonZosCallType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) ToRequestNamingConditionsConditionComparisonZosCallTypeOutput() RequestNamingConditionsConditionComparisonZosCallTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) ToRequestNamingConditionsConditionComparisonZosCallTypeOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonZosCallTypeOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutput() RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return o.ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(context.Background())
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingConditionsConditionComparisonZosCallType) *RequestNamingConditionsConditionComparisonZosCallType {
		return &v
	}).(RequestNamingConditionsConditionComparisonZosCallTypePtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonZosCallType) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonZosCallType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonZosCallType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestNamingConditionsConditionComparisonZosCallType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RequestNamingConditionsConditionComparisonZosCallTypePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingConditionsConditionComparisonZosCallType)(nil)).Elem()
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutput() RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) ToRequestNamingConditionsConditionComparisonZosCallTypePtrOutputWithContext(ctx context.Context) RequestNamingConditionsConditionComparisonZosCallTypePtrOutput {
	return o
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) Elem() RequestNamingConditionsConditionComparisonZosCallTypeOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonZosCallType) RequestNamingConditionsConditionComparisonZosCallType {
		if v != nil {
			return *v
		}
		var ret RequestNamingConditionsConditionComparisonZosCallType
		return ret
	}).(RequestNamingConditionsConditionComparisonZosCallTypeOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonZosCallType) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonZosCallType) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonZosCallType) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingConditionsConditionComparisonZosCallTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestNamingConditionsConditionComparisonZosCallType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type RequestNamingPlaceholders struct {
	Placeholders []RequestNamingPlaceholdersPlaceholder `pulumi:"placeholders"`
}

// RequestNamingPlaceholdersInput is an input type that accepts RequestNamingPlaceholdersArgs and RequestNamingPlaceholdersOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersInput` via:
//
//	RequestNamingPlaceholdersArgs{...}
type RequestNamingPlaceholdersInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersOutput() RequestNamingPlaceholdersOutput
	ToRequestNamingPlaceholdersOutputWithContext(context.Context) RequestNamingPlaceholdersOutput
}

type RequestNamingPlaceholdersArgs struct {
	Placeholders RequestNamingPlaceholdersPlaceholderArrayInput `pulumi:"placeholders"`
}

func (RequestNamingPlaceholdersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholders)(nil)).Elem()
}

func (i RequestNamingPlaceholdersArgs) ToRequestNamingPlaceholdersOutput() RequestNamingPlaceholdersOutput {
	return i.ToRequestNamingPlaceholdersOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersArgs) ToRequestNamingPlaceholdersOutputWithContext(ctx context.Context) RequestNamingPlaceholdersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersOutput)
}

func (i RequestNamingPlaceholdersArgs) ToRequestNamingPlaceholdersPtrOutput() RequestNamingPlaceholdersPtrOutput {
	return i.ToRequestNamingPlaceholdersPtrOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersArgs) ToRequestNamingPlaceholdersPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersOutput).ToRequestNamingPlaceholdersPtrOutputWithContext(ctx)
}

// RequestNamingPlaceholdersPtrInput is an input type that accepts RequestNamingPlaceholdersArgs, RequestNamingPlaceholdersPtr and RequestNamingPlaceholdersPtrOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPtrInput` via:
//
//	        RequestNamingPlaceholdersArgs{...}
//
//	or:
//
//	        nil
type RequestNamingPlaceholdersPtrInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPtrOutput() RequestNamingPlaceholdersPtrOutput
	ToRequestNamingPlaceholdersPtrOutputWithContext(context.Context) RequestNamingPlaceholdersPtrOutput
}

type requestNamingPlaceholdersPtrType RequestNamingPlaceholdersArgs

func RequestNamingPlaceholdersPtr(v *RequestNamingPlaceholdersArgs) RequestNamingPlaceholdersPtrInput {
	return (*requestNamingPlaceholdersPtrType)(v)
}

func (*requestNamingPlaceholdersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholders)(nil)).Elem()
}

func (i *requestNamingPlaceholdersPtrType) ToRequestNamingPlaceholdersPtrOutput() RequestNamingPlaceholdersPtrOutput {
	return i.ToRequestNamingPlaceholdersPtrOutputWithContext(context.Background())
}

func (i *requestNamingPlaceholdersPtrType) ToRequestNamingPlaceholdersPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPtrOutput)
}

type RequestNamingPlaceholdersOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholders)(nil)).Elem()
}

func (o RequestNamingPlaceholdersOutput) ToRequestNamingPlaceholdersOutput() RequestNamingPlaceholdersOutput {
	return o
}

func (o RequestNamingPlaceholdersOutput) ToRequestNamingPlaceholdersOutputWithContext(ctx context.Context) RequestNamingPlaceholdersOutput {
	return o
}

func (o RequestNamingPlaceholdersOutput) ToRequestNamingPlaceholdersPtrOutput() RequestNamingPlaceholdersPtrOutput {
	return o.ToRequestNamingPlaceholdersPtrOutputWithContext(context.Background())
}

func (o RequestNamingPlaceholdersOutput) ToRequestNamingPlaceholdersPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingPlaceholders) *RequestNamingPlaceholders {
		return &v
	}).(RequestNamingPlaceholdersPtrOutput)
}

func (o RequestNamingPlaceholdersOutput) Placeholders() RequestNamingPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v RequestNamingPlaceholders) []RequestNamingPlaceholdersPlaceholder { return v.Placeholders }).(RequestNamingPlaceholdersPlaceholderArrayOutput)
}

type RequestNamingPlaceholdersPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholders)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPtrOutput) ToRequestNamingPlaceholdersPtrOutput() RequestNamingPlaceholdersPtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPtrOutput) ToRequestNamingPlaceholdersPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPtrOutput) Elem() RequestNamingPlaceholdersOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholders) RequestNamingPlaceholders {
		if v != nil {
			return *v
		}
		var ret RequestNamingPlaceholders
		return ret
	}).(RequestNamingPlaceholdersOutput)
}

func (o RequestNamingPlaceholdersPtrOutput) Placeholders() RequestNamingPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholders) []RequestNamingPlaceholdersPlaceholder {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(RequestNamingPlaceholdersPlaceholderArrayOutput)
}

type RequestNamingPlaceholdersPlaceholder struct {
	Aggregation       *string                                     `pulumi:"aggregation"`
	Attribute         string                                      `pulumi:"attribute"`
	DelimiterOrRegex  *string                                     `pulumi:"delimiterOrRegex"`
	EndDelimiter      *string                                     `pulumi:"endDelimiter"`
	Kind              string                                      `pulumi:"kind"`
	Name              string                                      `pulumi:"name"`
	Normalization     *string                                     `pulumi:"normalization"`
	RequestAttribute  *string                                     `pulumi:"requestAttribute"`
	Source            *RequestNamingPlaceholdersPlaceholderSource `pulumi:"source"`
	Unknowns          *string                                     `pulumi:"unknowns"`
	UseFromChildCalls *bool                                       `pulumi:"useFromChildCalls"`
}

// RequestNamingPlaceholdersPlaceholderInput is an input type that accepts RequestNamingPlaceholdersPlaceholderArgs and RequestNamingPlaceholdersPlaceholderOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderInput` via:
//
//	RequestNamingPlaceholdersPlaceholderArgs{...}
type RequestNamingPlaceholdersPlaceholderInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderOutput() RequestNamingPlaceholdersPlaceholderOutput
	ToRequestNamingPlaceholdersPlaceholderOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderOutput
}

type RequestNamingPlaceholdersPlaceholderArgs struct {
	Aggregation       pulumi.StringPtrInput                              `pulumi:"aggregation"`
	Attribute         pulumi.StringInput                                 `pulumi:"attribute"`
	DelimiterOrRegex  pulumi.StringPtrInput                              `pulumi:"delimiterOrRegex"`
	EndDelimiter      pulumi.StringPtrInput                              `pulumi:"endDelimiter"`
	Kind              pulumi.StringInput                                 `pulumi:"kind"`
	Name              pulumi.StringInput                                 `pulumi:"name"`
	Normalization     pulumi.StringPtrInput                              `pulumi:"normalization"`
	RequestAttribute  pulumi.StringPtrInput                              `pulumi:"requestAttribute"`
	Source            RequestNamingPlaceholdersPlaceholderSourcePtrInput `pulumi:"source"`
	Unknowns          pulumi.StringPtrInput                              `pulumi:"unknowns"`
	UseFromChildCalls pulumi.BoolPtrInput                                `pulumi:"useFromChildCalls"`
}

func (RequestNamingPlaceholdersPlaceholderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholder)(nil)).Elem()
}

func (i RequestNamingPlaceholdersPlaceholderArgs) ToRequestNamingPlaceholdersPlaceholderOutput() RequestNamingPlaceholdersPlaceholderOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderArgs) ToRequestNamingPlaceholdersPlaceholderOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderOutput)
}

// RequestNamingPlaceholdersPlaceholderArrayInput is an input type that accepts RequestNamingPlaceholdersPlaceholderArray and RequestNamingPlaceholdersPlaceholderArrayOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderArrayInput` via:
//
//	RequestNamingPlaceholdersPlaceholderArray{ RequestNamingPlaceholdersPlaceholderArgs{...} }
type RequestNamingPlaceholdersPlaceholderArrayInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderArrayOutput() RequestNamingPlaceholdersPlaceholderArrayOutput
	ToRequestNamingPlaceholdersPlaceholderArrayOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderArrayOutput
}

type RequestNamingPlaceholdersPlaceholderArray []RequestNamingPlaceholdersPlaceholderInput

func (RequestNamingPlaceholdersPlaceholderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestNamingPlaceholdersPlaceholder)(nil)).Elem()
}

func (i RequestNamingPlaceholdersPlaceholderArray) ToRequestNamingPlaceholdersPlaceholderArrayOutput() RequestNamingPlaceholdersPlaceholderArrayOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderArrayOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderArray) ToRequestNamingPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderArrayOutput)
}

type RequestNamingPlaceholdersPlaceholderOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholder)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderOutput) ToRequestNamingPlaceholdersPlaceholderOutput() RequestNamingPlaceholdersPlaceholderOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderOutput) ToRequestNamingPlaceholdersPlaceholderOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) DelimiterOrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *string { return v.DelimiterOrRegex }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) EndDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *string { return v.EndDelimiter }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) string { return v.Kind }).(pulumi.StringOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) string { return v.Name }).(pulumi.StringOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Normalization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *string { return v.Normalization }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) RequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *string { return v.RequestAttribute }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Source() RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *RequestNamingPlaceholdersPlaceholderSource {
		return v.Source
	}).(RequestNamingPlaceholdersPlaceholderSourcePtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderOutput) UseFromChildCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholder) *bool { return v.UseFromChildCalls }).(pulumi.BoolPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderArrayOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestNamingPlaceholdersPlaceholder)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderArrayOutput) ToRequestNamingPlaceholdersPlaceholderArrayOutput() RequestNamingPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderArrayOutput) ToRequestNamingPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderArrayOutput) Index(i pulumi.IntInput) RequestNamingPlaceholdersPlaceholderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestNamingPlaceholdersPlaceholder {
		return vs[0].([]RequestNamingPlaceholdersPlaceholder)[vs[1].(int)]
	}).(RequestNamingPlaceholdersPlaceholderOutput)
}

type RequestNamingPlaceholdersPlaceholderSource struct {
	ManagementZone *string                                               `pulumi:"managementZone"`
	ServiceTag     *RequestNamingPlaceholdersPlaceholderSourceServiceTag `pulumi:"serviceTag"`
	Unknowns       *string                                               `pulumi:"unknowns"`
}

// RequestNamingPlaceholdersPlaceholderSourceInput is an input type that accepts RequestNamingPlaceholdersPlaceholderSourceArgs and RequestNamingPlaceholdersPlaceholderSourceOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderSourceInput` via:
//
//	RequestNamingPlaceholdersPlaceholderSourceArgs{...}
type RequestNamingPlaceholdersPlaceholderSourceInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderSourceOutput() RequestNamingPlaceholdersPlaceholderSourceOutput
	ToRequestNamingPlaceholdersPlaceholderSourceOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderSourceOutput
}

type RequestNamingPlaceholdersPlaceholderSourceArgs struct {
	ManagementZone pulumi.StringPtrInput                                        `pulumi:"managementZone"`
	ServiceTag     RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrInput `pulumi:"serviceTag"`
	Unknowns       pulumi.StringPtrInput                                        `pulumi:"unknowns"`
}

func (RequestNamingPlaceholdersPlaceholderSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSource)(nil)).Elem()
}

func (i RequestNamingPlaceholdersPlaceholderSourceArgs) ToRequestNamingPlaceholdersPlaceholderSourceOutput() RequestNamingPlaceholdersPlaceholderSourceOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderSourceArgs) ToRequestNamingPlaceholdersPlaceholderSourceOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceOutput)
}

func (i RequestNamingPlaceholdersPlaceholderSourceArgs) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutput() RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderSourceArgs) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceOutput).ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(ctx)
}

// RequestNamingPlaceholdersPlaceholderSourcePtrInput is an input type that accepts RequestNamingPlaceholdersPlaceholderSourceArgs, RequestNamingPlaceholdersPlaceholderSourcePtr and RequestNamingPlaceholdersPlaceholderSourcePtrOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderSourcePtrInput` via:
//
//	        RequestNamingPlaceholdersPlaceholderSourceArgs{...}
//
//	or:
//
//	        nil
type RequestNamingPlaceholdersPlaceholderSourcePtrInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderSourcePtrOutput() RequestNamingPlaceholdersPlaceholderSourcePtrOutput
	ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderSourcePtrOutput
}

type requestNamingPlaceholdersPlaceholderSourcePtrType RequestNamingPlaceholdersPlaceholderSourceArgs

func RequestNamingPlaceholdersPlaceholderSourcePtr(v *RequestNamingPlaceholdersPlaceholderSourceArgs) RequestNamingPlaceholdersPlaceholderSourcePtrInput {
	return (*requestNamingPlaceholdersPlaceholderSourcePtrType)(v)
}

func (*requestNamingPlaceholdersPlaceholderSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholdersPlaceholderSource)(nil)).Elem()
}

func (i *requestNamingPlaceholdersPlaceholderSourcePtrType) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutput() RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(context.Background())
}

func (i *requestNamingPlaceholdersPlaceholderSourcePtrType) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourcePtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSource)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) ToRequestNamingPlaceholdersPlaceholderSourceOutput() RequestNamingPlaceholdersPlaceholderSourceOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) ToRequestNamingPlaceholdersPlaceholderSourceOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutput() RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return o.ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(context.Background())
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingPlaceholdersPlaceholderSource) *RequestNamingPlaceholdersPlaceholderSource {
		return &v
	}).(RequestNamingPlaceholdersPlaceholderSourcePtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) ManagementZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSource) *string { return v.ManagementZone }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) ServiceTag() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSource) *RequestNamingPlaceholdersPlaceholderSourceServiceTag {
		return v.ServiceTag
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSource) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourcePtrOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholdersPlaceholderSource)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderSourcePtrOutput) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutput() RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourcePtrOutput) ToRequestNamingPlaceholdersPlaceholderSourcePtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourcePtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourcePtrOutput) Elem() RequestNamingPlaceholdersPlaceholderSourceOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSource) RequestNamingPlaceholdersPlaceholderSource {
		if v != nil {
			return *v
		}
		var ret RequestNamingPlaceholdersPlaceholderSource
		return ret
	}).(RequestNamingPlaceholdersPlaceholderSourceOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourcePtrOutput) ManagementZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSource) *string {
		if v == nil {
			return nil
		}
		return v.ManagementZone
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourcePtrOutput) ServiceTag() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSource) *RequestNamingPlaceholdersPlaceholderSourceServiceTag {
		if v == nil {
			return nil
		}
		return v.ServiceTag
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourcePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSource) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTag struct {
	Context *string                                                     `pulumi:"context"`
	Key     string                                                      `pulumi:"key"`
	TagKey  *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey `pulumi:"tagKey"`
	Value   *string                                                     `pulumi:"value"`
}

// RequestNamingPlaceholdersPlaceholderSourceServiceTagInput is an input type that accepts RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs and RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderSourceServiceTagInput` via:
//
//	RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs{...}
type RequestNamingPlaceholdersPlaceholderSourceServiceTagInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput
	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs struct {
	Context pulumi.StringPtrInput                                              `pulumi:"context"`
	Key     pulumi.StringInput                                                 `pulumi:"key"`
	TagKey  RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrInput `pulumi:"tagKey"`
	Value   pulumi.StringPtrInput                                              `pulumi:"value"`
}

func (RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTag)(nil)).Elem()
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput)
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput).ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(ctx)
}

// RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrInput is an input type that accepts RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs, RequestNamingPlaceholdersPlaceholderSourceServiceTagPtr and RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrInput` via:
//
//	        RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs{...}
//
//	or:
//
//	        nil
type RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput
	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput
}

type requestNamingPlaceholdersPlaceholderSourceServiceTagPtrType RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs

func RequestNamingPlaceholdersPlaceholderSourceServiceTagPtr(v *RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs) RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrInput {
	return (*requestNamingPlaceholdersPlaceholderSourceServiceTagPtrType)(v)
}

func (*requestNamingPlaceholdersPlaceholderSourceServiceTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholdersPlaceholderSourceServiceTag)(nil)).Elem()
}

func (i *requestNamingPlaceholdersPlaceholderSourceServiceTagPtrType) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(context.Background())
}

func (i *requestNamingPlaceholdersPlaceholderSourceServiceTagPtrType) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTag)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return o.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(context.Background())
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingPlaceholdersPlaceholderSourceServiceTag) *RequestNamingPlaceholdersPlaceholderSourceServiceTag {
		return &v
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSourceServiceTag) *string { return v.Context }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSourceServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) TagKey() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSourceServiceTag) *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey {
		return v.TagKey
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSourceServiceTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholdersPlaceholderSourceServiceTag)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) Elem() RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTag) RequestNamingPlaceholdersPlaceholderSourceServiceTag {
		if v != nil {
			return *v
		}
		var ret RequestNamingPlaceholdersPlaceholderSourceServiceTag
		return ret
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) TagKey() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTag) *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey {
		if v == nil {
			return nil
		}
		return v.TagKey
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTag) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey struct {
	Context *string `pulumi:"context"`
	Key     *string `pulumi:"key"`
}

// RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyInput is an input type that accepts RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs and RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyInput` via:
//
//	RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs{...}
type RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput
	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs struct {
	Context pulumi.StringPtrInput `pulumi:"context"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
}

func (RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey)(nil)).Elem()
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput)
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (i RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput).ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(ctx)
}

// RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrInput is an input type that accepts RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs, RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtr and RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput values.
// You can construct a concrete instance of `RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrInput` via:
//
//	        RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs{...}
//
//	or:
//
//	        nil
type RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrInput interface {
	pulumi.Input

	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput
	ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput
}

type requestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrType RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs

func RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtr(v *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrInput {
	return (*requestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrType)(v)
}

func (*requestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey)(nil)).Elem()
}

func (i *requestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrType) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return i.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (i *requestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrType) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return o.ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(context.Background())
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey) *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey {
		return &v
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey) *string { return v.Context }).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput struct{ *pulumi.OutputState }

func (RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey)(nil)).Elem()
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput) ToRequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutputWithContext(ctx context.Context) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput {
	return o
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput) Elem() RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey) RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey {
		if v != nil {
			return *v
		}
		var ret RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey
		return ret
	}).(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesFailureRates struct {
	// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
	Auto *ServiceAnomaliesFailureRatesAuto `pulumi:"auto"`
	// Fixed thresholds for failure rate increase detection
	Thresholds *ServiceAnomaliesFailureRatesThresholds `pulumi:"thresholds"`
}

// ServiceAnomaliesFailureRatesInput is an input type that accepts ServiceAnomaliesFailureRatesArgs and ServiceAnomaliesFailureRatesOutput values.
// You can construct a concrete instance of `ServiceAnomaliesFailureRatesInput` via:
//
//	ServiceAnomaliesFailureRatesArgs{...}
type ServiceAnomaliesFailureRatesInput interface {
	pulumi.Input

	ToServiceAnomaliesFailureRatesOutput() ServiceAnomaliesFailureRatesOutput
	ToServiceAnomaliesFailureRatesOutputWithContext(context.Context) ServiceAnomaliesFailureRatesOutput
}

type ServiceAnomaliesFailureRatesArgs struct {
	// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
	Auto ServiceAnomaliesFailureRatesAutoPtrInput `pulumi:"auto"`
	// Fixed thresholds for failure rate increase detection
	Thresholds ServiceAnomaliesFailureRatesThresholdsPtrInput `pulumi:"thresholds"`
}

func (ServiceAnomaliesFailureRatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesFailureRates)(nil)).Elem()
}

func (i ServiceAnomaliesFailureRatesArgs) ToServiceAnomaliesFailureRatesOutput() ServiceAnomaliesFailureRatesOutput {
	return i.ToServiceAnomaliesFailureRatesOutputWithContext(context.Background())
}

func (i ServiceAnomaliesFailureRatesArgs) ToServiceAnomaliesFailureRatesOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesOutput)
}

func (i ServiceAnomaliesFailureRatesArgs) ToServiceAnomaliesFailureRatesPtrOutput() ServiceAnomaliesFailureRatesPtrOutput {
	return i.ToServiceAnomaliesFailureRatesPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesFailureRatesArgs) ToServiceAnomaliesFailureRatesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesOutput).ToServiceAnomaliesFailureRatesPtrOutputWithContext(ctx)
}

// ServiceAnomaliesFailureRatesPtrInput is an input type that accepts ServiceAnomaliesFailureRatesArgs, ServiceAnomaliesFailureRatesPtr and ServiceAnomaliesFailureRatesPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesFailureRatesPtrInput` via:
//
//	        ServiceAnomaliesFailureRatesArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesFailureRatesPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesFailureRatesPtrOutput() ServiceAnomaliesFailureRatesPtrOutput
	ToServiceAnomaliesFailureRatesPtrOutputWithContext(context.Context) ServiceAnomaliesFailureRatesPtrOutput
}

type serviceAnomaliesFailureRatesPtrType ServiceAnomaliesFailureRatesArgs

func ServiceAnomaliesFailureRatesPtr(v *ServiceAnomaliesFailureRatesArgs) ServiceAnomaliesFailureRatesPtrInput {
	return (*serviceAnomaliesFailureRatesPtrType)(v)
}

func (*serviceAnomaliesFailureRatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesFailureRates)(nil)).Elem()
}

func (i *serviceAnomaliesFailureRatesPtrType) ToServiceAnomaliesFailureRatesPtrOutput() ServiceAnomaliesFailureRatesPtrOutput {
	return i.ToServiceAnomaliesFailureRatesPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesFailureRatesPtrType) ToServiceAnomaliesFailureRatesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesPtrOutput)
}

type ServiceAnomaliesFailureRatesOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesFailureRatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesFailureRates)(nil)).Elem()
}

func (o ServiceAnomaliesFailureRatesOutput) ToServiceAnomaliesFailureRatesOutput() ServiceAnomaliesFailureRatesOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesOutput) ToServiceAnomaliesFailureRatesOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesOutput) ToServiceAnomaliesFailureRatesPtrOutput() ServiceAnomaliesFailureRatesPtrOutput {
	return o.ToServiceAnomaliesFailureRatesPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesFailureRatesOutput) ToServiceAnomaliesFailureRatesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesFailureRates) *ServiceAnomaliesFailureRates {
		return &v
	}).(ServiceAnomaliesFailureRatesPtrOutput)
}

// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
func (o ServiceAnomaliesFailureRatesOutput) Auto() ServiceAnomaliesFailureRatesAutoPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRates) *ServiceAnomaliesFailureRatesAuto { return v.Auto }).(ServiceAnomaliesFailureRatesAutoPtrOutput)
}

// Fixed thresholds for failure rate increase detection
func (o ServiceAnomaliesFailureRatesOutput) Thresholds() ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRates) *ServiceAnomaliesFailureRatesThresholds { return v.Thresholds }).(ServiceAnomaliesFailureRatesThresholdsPtrOutput)
}

type ServiceAnomaliesFailureRatesPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesFailureRatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesFailureRates)(nil)).Elem()
}

func (o ServiceAnomaliesFailureRatesPtrOutput) ToServiceAnomaliesFailureRatesPtrOutput() ServiceAnomaliesFailureRatesPtrOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesPtrOutput) ToServiceAnomaliesFailureRatesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesPtrOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesPtrOutput) Elem() ServiceAnomaliesFailureRatesOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRates) ServiceAnomaliesFailureRates {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesFailureRates
		return ret
	}).(ServiceAnomaliesFailureRatesOutput)
}

// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
func (o ServiceAnomaliesFailureRatesPtrOutput) Auto() ServiceAnomaliesFailureRatesAutoPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRates) *ServiceAnomaliesFailureRatesAuto {
		if v == nil {
			return nil
		}
		return v.Auto
	}).(ServiceAnomaliesFailureRatesAutoPtrOutput)
}

// Fixed thresholds for failure rate increase detection
func (o ServiceAnomaliesFailureRatesPtrOutput) Thresholds() ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRates) *ServiceAnomaliesFailureRatesThresholds {
		if v == nil {
			return nil
		}
		return v.Thresholds
	}).(ServiceAnomaliesFailureRatesThresholdsPtrOutput)
}

type ServiceAnomaliesFailureRatesAuto struct {
	Absolute int     `pulumi:"absolute"`
	Relative int     `pulumi:"relative"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceAnomaliesFailureRatesAutoInput is an input type that accepts ServiceAnomaliesFailureRatesAutoArgs and ServiceAnomaliesFailureRatesAutoOutput values.
// You can construct a concrete instance of `ServiceAnomaliesFailureRatesAutoInput` via:
//
//	ServiceAnomaliesFailureRatesAutoArgs{...}
type ServiceAnomaliesFailureRatesAutoInput interface {
	pulumi.Input

	ToServiceAnomaliesFailureRatesAutoOutput() ServiceAnomaliesFailureRatesAutoOutput
	ToServiceAnomaliesFailureRatesAutoOutputWithContext(context.Context) ServiceAnomaliesFailureRatesAutoOutput
}

type ServiceAnomaliesFailureRatesAutoArgs struct {
	Absolute pulumi.IntInput       `pulumi:"absolute"`
	Relative pulumi.IntInput       `pulumi:"relative"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceAnomaliesFailureRatesAutoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesFailureRatesAuto)(nil)).Elem()
}

func (i ServiceAnomaliesFailureRatesAutoArgs) ToServiceAnomaliesFailureRatesAutoOutput() ServiceAnomaliesFailureRatesAutoOutput {
	return i.ToServiceAnomaliesFailureRatesAutoOutputWithContext(context.Background())
}

func (i ServiceAnomaliesFailureRatesAutoArgs) ToServiceAnomaliesFailureRatesAutoOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesAutoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesAutoOutput)
}

func (i ServiceAnomaliesFailureRatesAutoArgs) ToServiceAnomaliesFailureRatesAutoPtrOutput() ServiceAnomaliesFailureRatesAutoPtrOutput {
	return i.ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesFailureRatesAutoArgs) ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesAutoOutput).ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(ctx)
}

// ServiceAnomaliesFailureRatesAutoPtrInput is an input type that accepts ServiceAnomaliesFailureRatesAutoArgs, ServiceAnomaliesFailureRatesAutoPtr and ServiceAnomaliesFailureRatesAutoPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesFailureRatesAutoPtrInput` via:
//
//	        ServiceAnomaliesFailureRatesAutoArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesFailureRatesAutoPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesFailureRatesAutoPtrOutput() ServiceAnomaliesFailureRatesAutoPtrOutput
	ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(context.Context) ServiceAnomaliesFailureRatesAutoPtrOutput
}

type serviceAnomaliesFailureRatesAutoPtrType ServiceAnomaliesFailureRatesAutoArgs

func ServiceAnomaliesFailureRatesAutoPtr(v *ServiceAnomaliesFailureRatesAutoArgs) ServiceAnomaliesFailureRatesAutoPtrInput {
	return (*serviceAnomaliesFailureRatesAutoPtrType)(v)
}

func (*serviceAnomaliesFailureRatesAutoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesFailureRatesAuto)(nil)).Elem()
}

func (i *serviceAnomaliesFailureRatesAutoPtrType) ToServiceAnomaliesFailureRatesAutoPtrOutput() ServiceAnomaliesFailureRatesAutoPtrOutput {
	return i.ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesFailureRatesAutoPtrType) ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesAutoPtrOutput)
}

type ServiceAnomaliesFailureRatesAutoOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesFailureRatesAutoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesFailureRatesAuto)(nil)).Elem()
}

func (o ServiceAnomaliesFailureRatesAutoOutput) ToServiceAnomaliesFailureRatesAutoOutput() ServiceAnomaliesFailureRatesAutoOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesAutoOutput) ToServiceAnomaliesFailureRatesAutoOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesAutoOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesAutoOutput) ToServiceAnomaliesFailureRatesAutoPtrOutput() ServiceAnomaliesFailureRatesAutoPtrOutput {
	return o.ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesFailureRatesAutoOutput) ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesAutoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesFailureRatesAuto) *ServiceAnomaliesFailureRatesAuto {
		return &v
	}).(ServiceAnomaliesFailureRatesAutoPtrOutput)
}

func (o ServiceAnomaliesFailureRatesAutoOutput) Absolute() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRatesAuto) int { return v.Absolute }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesFailureRatesAutoOutput) Relative() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRatesAuto) int { return v.Relative }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesFailureRatesAutoOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRatesAuto) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesFailureRatesAutoPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesFailureRatesAutoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesFailureRatesAuto)(nil)).Elem()
}

func (o ServiceAnomaliesFailureRatesAutoPtrOutput) ToServiceAnomaliesFailureRatesAutoPtrOutput() ServiceAnomaliesFailureRatesAutoPtrOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesAutoPtrOutput) ToServiceAnomaliesFailureRatesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesAutoPtrOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesAutoPtrOutput) Elem() ServiceAnomaliesFailureRatesAutoOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesAuto) ServiceAnomaliesFailureRatesAuto {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesFailureRatesAuto
		return ret
	}).(ServiceAnomaliesFailureRatesAutoOutput)
}

func (o ServiceAnomaliesFailureRatesAutoPtrOutput) Absolute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesAuto) *int {
		if v == nil {
			return nil
		}
		return &v.Absolute
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesFailureRatesAutoPtrOutput) Relative() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesAuto) *int {
		if v == nil {
			return nil
		}
		return &v.Relative
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesFailureRatesAutoPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesAuto) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesFailureRatesThresholds struct {
	Sensitivity string  `pulumi:"sensitivity"`
	Threshold   int     `pulumi:"threshold"`
	Unknowns    *string `pulumi:"unknowns"`
}

// ServiceAnomaliesFailureRatesThresholdsInput is an input type that accepts ServiceAnomaliesFailureRatesThresholdsArgs and ServiceAnomaliesFailureRatesThresholdsOutput values.
// You can construct a concrete instance of `ServiceAnomaliesFailureRatesThresholdsInput` via:
//
//	ServiceAnomaliesFailureRatesThresholdsArgs{...}
type ServiceAnomaliesFailureRatesThresholdsInput interface {
	pulumi.Input

	ToServiceAnomaliesFailureRatesThresholdsOutput() ServiceAnomaliesFailureRatesThresholdsOutput
	ToServiceAnomaliesFailureRatesThresholdsOutputWithContext(context.Context) ServiceAnomaliesFailureRatesThresholdsOutput
}

type ServiceAnomaliesFailureRatesThresholdsArgs struct {
	Sensitivity pulumi.StringInput    `pulumi:"sensitivity"`
	Threshold   pulumi.IntInput       `pulumi:"threshold"`
	Unknowns    pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceAnomaliesFailureRatesThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesFailureRatesThresholds)(nil)).Elem()
}

func (i ServiceAnomaliesFailureRatesThresholdsArgs) ToServiceAnomaliesFailureRatesThresholdsOutput() ServiceAnomaliesFailureRatesThresholdsOutput {
	return i.ToServiceAnomaliesFailureRatesThresholdsOutputWithContext(context.Background())
}

func (i ServiceAnomaliesFailureRatesThresholdsArgs) ToServiceAnomaliesFailureRatesThresholdsOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesThresholdsOutput)
}

func (i ServiceAnomaliesFailureRatesThresholdsArgs) ToServiceAnomaliesFailureRatesThresholdsPtrOutput() ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return i.ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesFailureRatesThresholdsArgs) ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesThresholdsOutput).ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(ctx)
}

// ServiceAnomaliesFailureRatesThresholdsPtrInput is an input type that accepts ServiceAnomaliesFailureRatesThresholdsArgs, ServiceAnomaliesFailureRatesThresholdsPtr and ServiceAnomaliesFailureRatesThresholdsPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesFailureRatesThresholdsPtrInput` via:
//
//	        ServiceAnomaliesFailureRatesThresholdsArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesFailureRatesThresholdsPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesFailureRatesThresholdsPtrOutput() ServiceAnomaliesFailureRatesThresholdsPtrOutput
	ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(context.Context) ServiceAnomaliesFailureRatesThresholdsPtrOutput
}

type serviceAnomaliesFailureRatesThresholdsPtrType ServiceAnomaliesFailureRatesThresholdsArgs

func ServiceAnomaliesFailureRatesThresholdsPtr(v *ServiceAnomaliesFailureRatesThresholdsArgs) ServiceAnomaliesFailureRatesThresholdsPtrInput {
	return (*serviceAnomaliesFailureRatesThresholdsPtrType)(v)
}

func (*serviceAnomaliesFailureRatesThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesFailureRatesThresholds)(nil)).Elem()
}

func (i *serviceAnomaliesFailureRatesThresholdsPtrType) ToServiceAnomaliesFailureRatesThresholdsPtrOutput() ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return i.ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesFailureRatesThresholdsPtrType) ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesFailureRatesThresholdsPtrOutput)
}

type ServiceAnomaliesFailureRatesThresholdsOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesFailureRatesThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesFailureRatesThresholds)(nil)).Elem()
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) ToServiceAnomaliesFailureRatesThresholdsOutput() ServiceAnomaliesFailureRatesThresholdsOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) ToServiceAnomaliesFailureRatesThresholdsOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesThresholdsOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) ToServiceAnomaliesFailureRatesThresholdsPtrOutput() ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return o.ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesFailureRatesThresholds) *ServiceAnomaliesFailureRatesThresholds {
		return &v
	}).(ServiceAnomaliesFailureRatesThresholdsPtrOutput)
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) Sensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRatesThresholds) string { return v.Sensitivity }).(pulumi.StringOutput)
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRatesThresholds) int { return v.Threshold }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesFailureRatesThresholdsOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesFailureRatesThresholds) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesFailureRatesThresholdsPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesFailureRatesThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesFailureRatesThresholds)(nil)).Elem()
}

func (o ServiceAnomaliesFailureRatesThresholdsPtrOutput) ToServiceAnomaliesFailureRatesThresholdsPtrOutput() ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesThresholdsPtrOutput) ToServiceAnomaliesFailureRatesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesFailureRatesThresholdsPtrOutput {
	return o
}

func (o ServiceAnomaliesFailureRatesThresholdsPtrOutput) Elem() ServiceAnomaliesFailureRatesThresholdsOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesThresholds) ServiceAnomaliesFailureRatesThresholds {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesFailureRatesThresholds
		return ret
	}).(ServiceAnomaliesFailureRatesThresholdsOutput)
}

func (o ServiceAnomaliesFailureRatesThresholdsPtrOutput) Sensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesThresholds) *string {
		if v == nil {
			return nil
		}
		return &v.Sensitivity
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAnomaliesFailureRatesThresholdsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesFailureRatesThresholdsPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesFailureRatesThresholds) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesLoad struct {
	// The configuration of traffic drops detection
	Drops *ServiceAnomaliesLoadDrops `pulumi:"drops"`
	// The configuration of traffic spikes detection
	Spikes *ServiceAnomaliesLoadSpikes `pulumi:"spikes"`
}

// ServiceAnomaliesLoadInput is an input type that accepts ServiceAnomaliesLoadArgs and ServiceAnomaliesLoadOutput values.
// You can construct a concrete instance of `ServiceAnomaliesLoadInput` via:
//
//	ServiceAnomaliesLoadArgs{...}
type ServiceAnomaliesLoadInput interface {
	pulumi.Input

	ToServiceAnomaliesLoadOutput() ServiceAnomaliesLoadOutput
	ToServiceAnomaliesLoadOutputWithContext(context.Context) ServiceAnomaliesLoadOutput
}

type ServiceAnomaliesLoadArgs struct {
	// The configuration of traffic drops detection
	Drops ServiceAnomaliesLoadDropsPtrInput `pulumi:"drops"`
	// The configuration of traffic spikes detection
	Spikes ServiceAnomaliesLoadSpikesPtrInput `pulumi:"spikes"`
}

func (ServiceAnomaliesLoadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesLoad)(nil)).Elem()
}

func (i ServiceAnomaliesLoadArgs) ToServiceAnomaliesLoadOutput() ServiceAnomaliesLoadOutput {
	return i.ToServiceAnomaliesLoadOutputWithContext(context.Background())
}

func (i ServiceAnomaliesLoadArgs) ToServiceAnomaliesLoadOutputWithContext(ctx context.Context) ServiceAnomaliesLoadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadOutput)
}

func (i ServiceAnomaliesLoadArgs) ToServiceAnomaliesLoadPtrOutput() ServiceAnomaliesLoadPtrOutput {
	return i.ToServiceAnomaliesLoadPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesLoadArgs) ToServiceAnomaliesLoadPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadOutput).ToServiceAnomaliesLoadPtrOutputWithContext(ctx)
}

// ServiceAnomaliesLoadPtrInput is an input type that accepts ServiceAnomaliesLoadArgs, ServiceAnomaliesLoadPtr and ServiceAnomaliesLoadPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesLoadPtrInput` via:
//
//	        ServiceAnomaliesLoadArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesLoadPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesLoadPtrOutput() ServiceAnomaliesLoadPtrOutput
	ToServiceAnomaliesLoadPtrOutputWithContext(context.Context) ServiceAnomaliesLoadPtrOutput
}

type serviceAnomaliesLoadPtrType ServiceAnomaliesLoadArgs

func ServiceAnomaliesLoadPtr(v *ServiceAnomaliesLoadArgs) ServiceAnomaliesLoadPtrInput {
	return (*serviceAnomaliesLoadPtrType)(v)
}

func (*serviceAnomaliesLoadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesLoad)(nil)).Elem()
}

func (i *serviceAnomaliesLoadPtrType) ToServiceAnomaliesLoadPtrOutput() ServiceAnomaliesLoadPtrOutput {
	return i.ToServiceAnomaliesLoadPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesLoadPtrType) ToServiceAnomaliesLoadPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadPtrOutput)
}

type ServiceAnomaliesLoadOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesLoadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesLoad)(nil)).Elem()
}

func (o ServiceAnomaliesLoadOutput) ToServiceAnomaliesLoadOutput() ServiceAnomaliesLoadOutput {
	return o
}

func (o ServiceAnomaliesLoadOutput) ToServiceAnomaliesLoadOutputWithContext(ctx context.Context) ServiceAnomaliesLoadOutput {
	return o
}

func (o ServiceAnomaliesLoadOutput) ToServiceAnomaliesLoadPtrOutput() ServiceAnomaliesLoadPtrOutput {
	return o.ToServiceAnomaliesLoadPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesLoadOutput) ToServiceAnomaliesLoadPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesLoad) *ServiceAnomaliesLoad {
		return &v
	}).(ServiceAnomaliesLoadPtrOutput)
}

// The configuration of traffic drops detection
func (o ServiceAnomaliesLoadOutput) Drops() ServiceAnomaliesLoadDropsPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoad) *ServiceAnomaliesLoadDrops { return v.Drops }).(ServiceAnomaliesLoadDropsPtrOutput)
}

// The configuration of traffic spikes detection
func (o ServiceAnomaliesLoadOutput) Spikes() ServiceAnomaliesLoadSpikesPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoad) *ServiceAnomaliesLoadSpikes { return v.Spikes }).(ServiceAnomaliesLoadSpikesPtrOutput)
}

type ServiceAnomaliesLoadPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesLoadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesLoad)(nil)).Elem()
}

func (o ServiceAnomaliesLoadPtrOutput) ToServiceAnomaliesLoadPtrOutput() ServiceAnomaliesLoadPtrOutput {
	return o
}

func (o ServiceAnomaliesLoadPtrOutput) ToServiceAnomaliesLoadPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadPtrOutput {
	return o
}

func (o ServiceAnomaliesLoadPtrOutput) Elem() ServiceAnomaliesLoadOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoad) ServiceAnomaliesLoad {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesLoad
		return ret
	}).(ServiceAnomaliesLoadOutput)
}

// The configuration of traffic drops detection
func (o ServiceAnomaliesLoadPtrOutput) Drops() ServiceAnomaliesLoadDropsPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoad) *ServiceAnomaliesLoadDrops {
		if v == nil {
			return nil
		}
		return v.Drops
	}).(ServiceAnomaliesLoadDropsPtrOutput)
}

// The configuration of traffic spikes detection
func (o ServiceAnomaliesLoadPtrOutput) Spikes() ServiceAnomaliesLoadSpikesPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoad) *ServiceAnomaliesLoadSpikes {
		if v == nil {
			return nil
		}
		return v.Spikes
	}).(ServiceAnomaliesLoadSpikesPtrOutput)
}

type ServiceAnomaliesLoadDrops struct {
	// Alert if the service stays in abnormal state for at least *X* minutes
	Minutes *int `pulumi:"minutes"`
	// Alert if the observed load is more than *X* % of the expected value
	Percent *int `pulumi:"percent"`
}

// ServiceAnomaliesLoadDropsInput is an input type that accepts ServiceAnomaliesLoadDropsArgs and ServiceAnomaliesLoadDropsOutput values.
// You can construct a concrete instance of `ServiceAnomaliesLoadDropsInput` via:
//
//	ServiceAnomaliesLoadDropsArgs{...}
type ServiceAnomaliesLoadDropsInput interface {
	pulumi.Input

	ToServiceAnomaliesLoadDropsOutput() ServiceAnomaliesLoadDropsOutput
	ToServiceAnomaliesLoadDropsOutputWithContext(context.Context) ServiceAnomaliesLoadDropsOutput
}

type ServiceAnomaliesLoadDropsArgs struct {
	// Alert if the service stays in abnormal state for at least *X* minutes
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Alert if the observed load is more than *X* % of the expected value
	Percent pulumi.IntPtrInput `pulumi:"percent"`
}

func (ServiceAnomaliesLoadDropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesLoadDrops)(nil)).Elem()
}

func (i ServiceAnomaliesLoadDropsArgs) ToServiceAnomaliesLoadDropsOutput() ServiceAnomaliesLoadDropsOutput {
	return i.ToServiceAnomaliesLoadDropsOutputWithContext(context.Background())
}

func (i ServiceAnomaliesLoadDropsArgs) ToServiceAnomaliesLoadDropsOutputWithContext(ctx context.Context) ServiceAnomaliesLoadDropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadDropsOutput)
}

func (i ServiceAnomaliesLoadDropsArgs) ToServiceAnomaliesLoadDropsPtrOutput() ServiceAnomaliesLoadDropsPtrOutput {
	return i.ToServiceAnomaliesLoadDropsPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesLoadDropsArgs) ToServiceAnomaliesLoadDropsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadDropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadDropsOutput).ToServiceAnomaliesLoadDropsPtrOutputWithContext(ctx)
}

// ServiceAnomaliesLoadDropsPtrInput is an input type that accepts ServiceAnomaliesLoadDropsArgs, ServiceAnomaliesLoadDropsPtr and ServiceAnomaliesLoadDropsPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesLoadDropsPtrInput` via:
//
//	        ServiceAnomaliesLoadDropsArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesLoadDropsPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesLoadDropsPtrOutput() ServiceAnomaliesLoadDropsPtrOutput
	ToServiceAnomaliesLoadDropsPtrOutputWithContext(context.Context) ServiceAnomaliesLoadDropsPtrOutput
}

type serviceAnomaliesLoadDropsPtrType ServiceAnomaliesLoadDropsArgs

func ServiceAnomaliesLoadDropsPtr(v *ServiceAnomaliesLoadDropsArgs) ServiceAnomaliesLoadDropsPtrInput {
	return (*serviceAnomaliesLoadDropsPtrType)(v)
}

func (*serviceAnomaliesLoadDropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesLoadDrops)(nil)).Elem()
}

func (i *serviceAnomaliesLoadDropsPtrType) ToServiceAnomaliesLoadDropsPtrOutput() ServiceAnomaliesLoadDropsPtrOutput {
	return i.ToServiceAnomaliesLoadDropsPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesLoadDropsPtrType) ToServiceAnomaliesLoadDropsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadDropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadDropsPtrOutput)
}

type ServiceAnomaliesLoadDropsOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesLoadDropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesLoadDrops)(nil)).Elem()
}

func (o ServiceAnomaliesLoadDropsOutput) ToServiceAnomaliesLoadDropsOutput() ServiceAnomaliesLoadDropsOutput {
	return o
}

func (o ServiceAnomaliesLoadDropsOutput) ToServiceAnomaliesLoadDropsOutputWithContext(ctx context.Context) ServiceAnomaliesLoadDropsOutput {
	return o
}

func (o ServiceAnomaliesLoadDropsOutput) ToServiceAnomaliesLoadDropsPtrOutput() ServiceAnomaliesLoadDropsPtrOutput {
	return o.ToServiceAnomaliesLoadDropsPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesLoadDropsOutput) ToServiceAnomaliesLoadDropsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadDropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesLoadDrops) *ServiceAnomaliesLoadDrops {
		return &v
	}).(ServiceAnomaliesLoadDropsPtrOutput)
}

// Alert if the service stays in abnormal state for at least *X* minutes
func (o ServiceAnomaliesLoadDropsOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoadDrops) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Alert if the observed load is more than *X* % of the expected value
func (o ServiceAnomaliesLoadDropsOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoadDrops) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

type ServiceAnomaliesLoadDropsPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesLoadDropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesLoadDrops)(nil)).Elem()
}

func (o ServiceAnomaliesLoadDropsPtrOutput) ToServiceAnomaliesLoadDropsPtrOutput() ServiceAnomaliesLoadDropsPtrOutput {
	return o
}

func (o ServiceAnomaliesLoadDropsPtrOutput) ToServiceAnomaliesLoadDropsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadDropsPtrOutput {
	return o
}

func (o ServiceAnomaliesLoadDropsPtrOutput) Elem() ServiceAnomaliesLoadDropsOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadDrops) ServiceAnomaliesLoadDrops {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesLoadDrops
		return ret
	}).(ServiceAnomaliesLoadDropsOutput)
}

// Alert if the service stays in abnormal state for at least *X* minutes
func (o ServiceAnomaliesLoadDropsPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadDrops) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Alert if the observed load is more than *X* % of the expected value
func (o ServiceAnomaliesLoadDropsPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadDrops) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

type ServiceAnomaliesLoadSpikes struct {
	Minutes  *int    `pulumi:"minutes"`
	Percent  *int    `pulumi:"percent"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceAnomaliesLoadSpikesInput is an input type that accepts ServiceAnomaliesLoadSpikesArgs and ServiceAnomaliesLoadSpikesOutput values.
// You can construct a concrete instance of `ServiceAnomaliesLoadSpikesInput` via:
//
//	ServiceAnomaliesLoadSpikesArgs{...}
type ServiceAnomaliesLoadSpikesInput interface {
	pulumi.Input

	ToServiceAnomaliesLoadSpikesOutput() ServiceAnomaliesLoadSpikesOutput
	ToServiceAnomaliesLoadSpikesOutputWithContext(context.Context) ServiceAnomaliesLoadSpikesOutput
}

type ServiceAnomaliesLoadSpikesArgs struct {
	Minutes  pulumi.IntPtrInput    `pulumi:"minutes"`
	Percent  pulumi.IntPtrInput    `pulumi:"percent"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceAnomaliesLoadSpikesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesLoadSpikes)(nil)).Elem()
}

func (i ServiceAnomaliesLoadSpikesArgs) ToServiceAnomaliesLoadSpikesOutput() ServiceAnomaliesLoadSpikesOutput {
	return i.ToServiceAnomaliesLoadSpikesOutputWithContext(context.Background())
}

func (i ServiceAnomaliesLoadSpikesArgs) ToServiceAnomaliesLoadSpikesOutputWithContext(ctx context.Context) ServiceAnomaliesLoadSpikesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadSpikesOutput)
}

func (i ServiceAnomaliesLoadSpikesArgs) ToServiceAnomaliesLoadSpikesPtrOutput() ServiceAnomaliesLoadSpikesPtrOutput {
	return i.ToServiceAnomaliesLoadSpikesPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesLoadSpikesArgs) ToServiceAnomaliesLoadSpikesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadSpikesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadSpikesOutput).ToServiceAnomaliesLoadSpikesPtrOutputWithContext(ctx)
}

// ServiceAnomaliesLoadSpikesPtrInput is an input type that accepts ServiceAnomaliesLoadSpikesArgs, ServiceAnomaliesLoadSpikesPtr and ServiceAnomaliesLoadSpikesPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesLoadSpikesPtrInput` via:
//
//	        ServiceAnomaliesLoadSpikesArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesLoadSpikesPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesLoadSpikesPtrOutput() ServiceAnomaliesLoadSpikesPtrOutput
	ToServiceAnomaliesLoadSpikesPtrOutputWithContext(context.Context) ServiceAnomaliesLoadSpikesPtrOutput
}

type serviceAnomaliesLoadSpikesPtrType ServiceAnomaliesLoadSpikesArgs

func ServiceAnomaliesLoadSpikesPtr(v *ServiceAnomaliesLoadSpikesArgs) ServiceAnomaliesLoadSpikesPtrInput {
	return (*serviceAnomaliesLoadSpikesPtrType)(v)
}

func (*serviceAnomaliesLoadSpikesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesLoadSpikes)(nil)).Elem()
}

func (i *serviceAnomaliesLoadSpikesPtrType) ToServiceAnomaliesLoadSpikesPtrOutput() ServiceAnomaliesLoadSpikesPtrOutput {
	return i.ToServiceAnomaliesLoadSpikesPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesLoadSpikesPtrType) ToServiceAnomaliesLoadSpikesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadSpikesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesLoadSpikesPtrOutput)
}

type ServiceAnomaliesLoadSpikesOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesLoadSpikesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesLoadSpikes)(nil)).Elem()
}

func (o ServiceAnomaliesLoadSpikesOutput) ToServiceAnomaliesLoadSpikesOutput() ServiceAnomaliesLoadSpikesOutput {
	return o
}

func (o ServiceAnomaliesLoadSpikesOutput) ToServiceAnomaliesLoadSpikesOutputWithContext(ctx context.Context) ServiceAnomaliesLoadSpikesOutput {
	return o
}

func (o ServiceAnomaliesLoadSpikesOutput) ToServiceAnomaliesLoadSpikesPtrOutput() ServiceAnomaliesLoadSpikesPtrOutput {
	return o.ToServiceAnomaliesLoadSpikesPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesLoadSpikesOutput) ToServiceAnomaliesLoadSpikesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadSpikesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesLoadSpikes) *ServiceAnomaliesLoadSpikes {
		return &v
	}).(ServiceAnomaliesLoadSpikesPtrOutput)
}

func (o ServiceAnomaliesLoadSpikesOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoadSpikes) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesLoadSpikesOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoadSpikes) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesLoadSpikesOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesLoadSpikes) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesLoadSpikesPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesLoadSpikesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesLoadSpikes)(nil)).Elem()
}

func (o ServiceAnomaliesLoadSpikesPtrOutput) ToServiceAnomaliesLoadSpikesPtrOutput() ServiceAnomaliesLoadSpikesPtrOutput {
	return o
}

func (o ServiceAnomaliesLoadSpikesPtrOutput) ToServiceAnomaliesLoadSpikesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesLoadSpikesPtrOutput {
	return o
}

func (o ServiceAnomaliesLoadSpikesPtrOutput) Elem() ServiceAnomaliesLoadSpikesOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadSpikes) ServiceAnomaliesLoadSpikes {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesLoadSpikes
		return ret
	}).(ServiceAnomaliesLoadSpikesOutput)
}

func (o ServiceAnomaliesLoadSpikesPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadSpikes) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesLoadSpikesPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadSpikes) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesLoadSpikesPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesLoadSpikes) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesResponseTimes struct {
	// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
	Auto *ServiceAnomaliesResponseTimesAuto `pulumi:"auto"`
	// Fixed thresholds for response time degradation detection
	Thresholds *ServiceAnomaliesResponseTimesThresholds `pulumi:"thresholds"`
}

// ServiceAnomaliesResponseTimesInput is an input type that accepts ServiceAnomaliesResponseTimesArgs and ServiceAnomaliesResponseTimesOutput values.
// You can construct a concrete instance of `ServiceAnomaliesResponseTimesInput` via:
//
//	ServiceAnomaliesResponseTimesArgs{...}
type ServiceAnomaliesResponseTimesInput interface {
	pulumi.Input

	ToServiceAnomaliesResponseTimesOutput() ServiceAnomaliesResponseTimesOutput
	ToServiceAnomaliesResponseTimesOutputWithContext(context.Context) ServiceAnomaliesResponseTimesOutput
}

type ServiceAnomaliesResponseTimesArgs struct {
	// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
	Auto ServiceAnomaliesResponseTimesAutoPtrInput `pulumi:"auto"`
	// Fixed thresholds for response time degradation detection
	Thresholds ServiceAnomaliesResponseTimesThresholdsPtrInput `pulumi:"thresholds"`
}

func (ServiceAnomaliesResponseTimesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesResponseTimes)(nil)).Elem()
}

func (i ServiceAnomaliesResponseTimesArgs) ToServiceAnomaliesResponseTimesOutput() ServiceAnomaliesResponseTimesOutput {
	return i.ToServiceAnomaliesResponseTimesOutputWithContext(context.Background())
}

func (i ServiceAnomaliesResponseTimesArgs) ToServiceAnomaliesResponseTimesOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesOutput)
}

func (i ServiceAnomaliesResponseTimesArgs) ToServiceAnomaliesResponseTimesPtrOutput() ServiceAnomaliesResponseTimesPtrOutput {
	return i.ToServiceAnomaliesResponseTimesPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesResponseTimesArgs) ToServiceAnomaliesResponseTimesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesOutput).ToServiceAnomaliesResponseTimesPtrOutputWithContext(ctx)
}

// ServiceAnomaliesResponseTimesPtrInput is an input type that accepts ServiceAnomaliesResponseTimesArgs, ServiceAnomaliesResponseTimesPtr and ServiceAnomaliesResponseTimesPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesResponseTimesPtrInput` via:
//
//	        ServiceAnomaliesResponseTimesArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesResponseTimesPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesResponseTimesPtrOutput() ServiceAnomaliesResponseTimesPtrOutput
	ToServiceAnomaliesResponseTimesPtrOutputWithContext(context.Context) ServiceAnomaliesResponseTimesPtrOutput
}

type serviceAnomaliesResponseTimesPtrType ServiceAnomaliesResponseTimesArgs

func ServiceAnomaliesResponseTimesPtr(v *ServiceAnomaliesResponseTimesArgs) ServiceAnomaliesResponseTimesPtrInput {
	return (*serviceAnomaliesResponseTimesPtrType)(v)
}

func (*serviceAnomaliesResponseTimesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesResponseTimes)(nil)).Elem()
}

func (i *serviceAnomaliesResponseTimesPtrType) ToServiceAnomaliesResponseTimesPtrOutput() ServiceAnomaliesResponseTimesPtrOutput {
	return i.ToServiceAnomaliesResponseTimesPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesResponseTimesPtrType) ToServiceAnomaliesResponseTimesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesPtrOutput)
}

type ServiceAnomaliesResponseTimesOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesResponseTimesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesResponseTimes)(nil)).Elem()
}

func (o ServiceAnomaliesResponseTimesOutput) ToServiceAnomaliesResponseTimesOutput() ServiceAnomaliesResponseTimesOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesOutput) ToServiceAnomaliesResponseTimesOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesOutput) ToServiceAnomaliesResponseTimesPtrOutput() ServiceAnomaliesResponseTimesPtrOutput {
	return o.ToServiceAnomaliesResponseTimesPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesResponseTimesOutput) ToServiceAnomaliesResponseTimesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesResponseTimes) *ServiceAnomaliesResponseTimes {
		return &v
	}).(ServiceAnomaliesResponseTimesPtrOutput)
}

// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
func (o ServiceAnomaliesResponseTimesOutput) Auto() ServiceAnomaliesResponseTimesAutoPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimes) *ServiceAnomaliesResponseTimesAuto { return v.Auto }).(ServiceAnomaliesResponseTimesAutoPtrOutput)
}

// Fixed thresholds for response time degradation detection
func (o ServiceAnomaliesResponseTimesOutput) Thresholds() ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimes) *ServiceAnomaliesResponseTimesThresholds { return v.Thresholds }).(ServiceAnomaliesResponseTimesThresholdsPtrOutput)
}

type ServiceAnomaliesResponseTimesPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesResponseTimesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesResponseTimes)(nil)).Elem()
}

func (o ServiceAnomaliesResponseTimesPtrOutput) ToServiceAnomaliesResponseTimesPtrOutput() ServiceAnomaliesResponseTimesPtrOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesPtrOutput) ToServiceAnomaliesResponseTimesPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesPtrOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesPtrOutput) Elem() ServiceAnomaliesResponseTimesOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimes) ServiceAnomaliesResponseTimes {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesResponseTimes
		return ret
	}).(ServiceAnomaliesResponseTimesOutput)
}

// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
func (o ServiceAnomaliesResponseTimesPtrOutput) Auto() ServiceAnomaliesResponseTimesAutoPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimes) *ServiceAnomaliesResponseTimesAuto {
		if v == nil {
			return nil
		}
		return v.Auto
	}).(ServiceAnomaliesResponseTimesAutoPtrOutput)
}

// Fixed thresholds for response time degradation detection
func (o ServiceAnomaliesResponseTimesPtrOutput) Thresholds() ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimes) *ServiceAnomaliesResponseTimesThresholds {
		if v == nil {
			return nil
		}
		return v.Thresholds
	}).(ServiceAnomaliesResponseTimesThresholdsPtrOutput)
}

type ServiceAnomaliesResponseTimesAuto struct {
	// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
	Load                string  `pulumi:"load"`
	Milliseconds        int     `pulumi:"milliseconds"`
	Percent             int     `pulumi:"percent"`
	SlowestMilliseconds int     `pulumi:"slowestMilliseconds"`
	SlowestPercent      int     `pulumi:"slowestPercent"`
	Unknowns            *string `pulumi:"unknowns"`
}

// ServiceAnomaliesResponseTimesAutoInput is an input type that accepts ServiceAnomaliesResponseTimesAutoArgs and ServiceAnomaliesResponseTimesAutoOutput values.
// You can construct a concrete instance of `ServiceAnomaliesResponseTimesAutoInput` via:
//
//	ServiceAnomaliesResponseTimesAutoArgs{...}
type ServiceAnomaliesResponseTimesAutoInput interface {
	pulumi.Input

	ToServiceAnomaliesResponseTimesAutoOutput() ServiceAnomaliesResponseTimesAutoOutput
	ToServiceAnomaliesResponseTimesAutoOutputWithContext(context.Context) ServiceAnomaliesResponseTimesAutoOutput
}

type ServiceAnomaliesResponseTimesAutoArgs struct {
	// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
	Load                pulumi.StringInput    `pulumi:"load"`
	Milliseconds        pulumi.IntInput       `pulumi:"milliseconds"`
	Percent             pulumi.IntInput       `pulumi:"percent"`
	SlowestMilliseconds pulumi.IntInput       `pulumi:"slowestMilliseconds"`
	SlowestPercent      pulumi.IntInput       `pulumi:"slowestPercent"`
	Unknowns            pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceAnomaliesResponseTimesAutoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesResponseTimesAuto)(nil)).Elem()
}

func (i ServiceAnomaliesResponseTimesAutoArgs) ToServiceAnomaliesResponseTimesAutoOutput() ServiceAnomaliesResponseTimesAutoOutput {
	return i.ToServiceAnomaliesResponseTimesAutoOutputWithContext(context.Background())
}

func (i ServiceAnomaliesResponseTimesAutoArgs) ToServiceAnomaliesResponseTimesAutoOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesAutoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesAutoOutput)
}

func (i ServiceAnomaliesResponseTimesAutoArgs) ToServiceAnomaliesResponseTimesAutoPtrOutput() ServiceAnomaliesResponseTimesAutoPtrOutput {
	return i.ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesResponseTimesAutoArgs) ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesAutoOutput).ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(ctx)
}

// ServiceAnomaliesResponseTimesAutoPtrInput is an input type that accepts ServiceAnomaliesResponseTimesAutoArgs, ServiceAnomaliesResponseTimesAutoPtr and ServiceAnomaliesResponseTimesAutoPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesResponseTimesAutoPtrInput` via:
//
//	        ServiceAnomaliesResponseTimesAutoArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesResponseTimesAutoPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesResponseTimesAutoPtrOutput() ServiceAnomaliesResponseTimesAutoPtrOutput
	ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(context.Context) ServiceAnomaliesResponseTimesAutoPtrOutput
}

type serviceAnomaliesResponseTimesAutoPtrType ServiceAnomaliesResponseTimesAutoArgs

func ServiceAnomaliesResponseTimesAutoPtr(v *ServiceAnomaliesResponseTimesAutoArgs) ServiceAnomaliesResponseTimesAutoPtrInput {
	return (*serviceAnomaliesResponseTimesAutoPtrType)(v)
}

func (*serviceAnomaliesResponseTimesAutoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesResponseTimesAuto)(nil)).Elem()
}

func (i *serviceAnomaliesResponseTimesAutoPtrType) ToServiceAnomaliesResponseTimesAutoPtrOutput() ServiceAnomaliesResponseTimesAutoPtrOutput {
	return i.ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesResponseTimesAutoPtrType) ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesAutoPtrOutput)
}

type ServiceAnomaliesResponseTimesAutoOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesResponseTimesAutoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesResponseTimesAuto)(nil)).Elem()
}

func (o ServiceAnomaliesResponseTimesAutoOutput) ToServiceAnomaliesResponseTimesAutoOutput() ServiceAnomaliesResponseTimesAutoOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesAutoOutput) ToServiceAnomaliesResponseTimesAutoOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesAutoOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesAutoOutput) ToServiceAnomaliesResponseTimesAutoPtrOutput() ServiceAnomaliesResponseTimesAutoPtrOutput {
	return o.ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesResponseTimesAutoOutput) ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesAutoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesResponseTimesAuto) *ServiceAnomaliesResponseTimesAuto {
		return &v
	}).(ServiceAnomaliesResponseTimesAutoPtrOutput)
}

// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
func (o ServiceAnomaliesResponseTimesAutoOutput) Load() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesAuto) string { return v.Load }).(pulumi.StringOutput)
}

func (o ServiceAnomaliesResponseTimesAutoOutput) Milliseconds() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesAuto) int { return v.Milliseconds }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesResponseTimesAutoOutput) Percent() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesAuto) int { return v.Percent }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesResponseTimesAutoOutput) SlowestMilliseconds() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesAuto) int { return v.SlowestMilliseconds }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesResponseTimesAutoOutput) SlowestPercent() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesAuto) int { return v.SlowestPercent }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesResponseTimesAutoOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesAuto) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesResponseTimesAutoPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesResponseTimesAutoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesResponseTimesAuto)(nil)).Elem()
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) ToServiceAnomaliesResponseTimesAutoPtrOutput() ServiceAnomaliesResponseTimesAutoPtrOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) ToServiceAnomaliesResponseTimesAutoPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesAutoPtrOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) Elem() ServiceAnomaliesResponseTimesAutoOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) ServiceAnomaliesResponseTimesAuto {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesResponseTimesAuto
		return ret
	}).(ServiceAnomaliesResponseTimesAutoOutput)
}

// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
func (o ServiceAnomaliesResponseTimesAutoPtrOutput) Load() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) *string {
		if v == nil {
			return nil
		}
		return &v.Load
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) Milliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) *int {
		if v == nil {
			return nil
		}
		return &v.Milliseconds
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) *int {
		if v == nil {
			return nil
		}
		return &v.Percent
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) SlowestMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) *int {
		if v == nil {
			return nil
		}
		return &v.SlowestMilliseconds
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) SlowestPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) *int {
		if v == nil {
			return nil
		}
		return &v.SlowestPercent
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesResponseTimesAutoPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesAuto) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesResponseTimesThresholds struct {
	// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
	Load                string  `pulumi:"load"`
	Milliseconds        int     `pulumi:"milliseconds"`
	Sensitivity         string  `pulumi:"sensitivity"`
	SlowestMilliseconds int     `pulumi:"slowestMilliseconds"`
	Unknowns            *string `pulumi:"unknowns"`
}

// ServiceAnomaliesResponseTimesThresholdsInput is an input type that accepts ServiceAnomaliesResponseTimesThresholdsArgs and ServiceAnomaliesResponseTimesThresholdsOutput values.
// You can construct a concrete instance of `ServiceAnomaliesResponseTimesThresholdsInput` via:
//
//	ServiceAnomaliesResponseTimesThresholdsArgs{...}
type ServiceAnomaliesResponseTimesThresholdsInput interface {
	pulumi.Input

	ToServiceAnomaliesResponseTimesThresholdsOutput() ServiceAnomaliesResponseTimesThresholdsOutput
	ToServiceAnomaliesResponseTimesThresholdsOutputWithContext(context.Context) ServiceAnomaliesResponseTimesThresholdsOutput
}

type ServiceAnomaliesResponseTimesThresholdsArgs struct {
	// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
	Load                pulumi.StringInput    `pulumi:"load"`
	Milliseconds        pulumi.IntInput       `pulumi:"milliseconds"`
	Sensitivity         pulumi.StringInput    `pulumi:"sensitivity"`
	SlowestMilliseconds pulumi.IntInput       `pulumi:"slowestMilliseconds"`
	Unknowns            pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceAnomaliesResponseTimesThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesResponseTimesThresholds)(nil)).Elem()
}

func (i ServiceAnomaliesResponseTimesThresholdsArgs) ToServiceAnomaliesResponseTimesThresholdsOutput() ServiceAnomaliesResponseTimesThresholdsOutput {
	return i.ToServiceAnomaliesResponseTimesThresholdsOutputWithContext(context.Background())
}

func (i ServiceAnomaliesResponseTimesThresholdsArgs) ToServiceAnomaliesResponseTimesThresholdsOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesThresholdsOutput)
}

func (i ServiceAnomaliesResponseTimesThresholdsArgs) ToServiceAnomaliesResponseTimesThresholdsPtrOutput() ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return i.ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(context.Background())
}

func (i ServiceAnomaliesResponseTimesThresholdsArgs) ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesThresholdsOutput).ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(ctx)
}

// ServiceAnomaliesResponseTimesThresholdsPtrInput is an input type that accepts ServiceAnomaliesResponseTimesThresholdsArgs, ServiceAnomaliesResponseTimesThresholdsPtr and ServiceAnomaliesResponseTimesThresholdsPtrOutput values.
// You can construct a concrete instance of `ServiceAnomaliesResponseTimesThresholdsPtrInput` via:
//
//	        ServiceAnomaliesResponseTimesThresholdsArgs{...}
//
//	or:
//
//	        nil
type ServiceAnomaliesResponseTimesThresholdsPtrInput interface {
	pulumi.Input

	ToServiceAnomaliesResponseTimesThresholdsPtrOutput() ServiceAnomaliesResponseTimesThresholdsPtrOutput
	ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(context.Context) ServiceAnomaliesResponseTimesThresholdsPtrOutput
}

type serviceAnomaliesResponseTimesThresholdsPtrType ServiceAnomaliesResponseTimesThresholdsArgs

func ServiceAnomaliesResponseTimesThresholdsPtr(v *ServiceAnomaliesResponseTimesThresholdsArgs) ServiceAnomaliesResponseTimesThresholdsPtrInput {
	return (*serviceAnomaliesResponseTimesThresholdsPtrType)(v)
}

func (*serviceAnomaliesResponseTimesThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesResponseTimesThresholds)(nil)).Elem()
}

func (i *serviceAnomaliesResponseTimesThresholdsPtrType) ToServiceAnomaliesResponseTimesThresholdsPtrOutput() ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return i.ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(context.Background())
}

func (i *serviceAnomaliesResponseTimesThresholdsPtrType) ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAnomaliesResponseTimesThresholdsPtrOutput)
}

type ServiceAnomaliesResponseTimesThresholdsOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesResponseTimesThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAnomaliesResponseTimesThresholds)(nil)).Elem()
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) ToServiceAnomaliesResponseTimesThresholdsOutput() ServiceAnomaliesResponseTimesThresholdsOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) ToServiceAnomaliesResponseTimesThresholdsOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesThresholdsOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) ToServiceAnomaliesResponseTimesThresholdsPtrOutput() ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return o.ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(context.Background())
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAnomaliesResponseTimesThresholds) *ServiceAnomaliesResponseTimesThresholds {
		return &v
	}).(ServiceAnomaliesResponseTimesThresholdsPtrOutput)
}

// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
func (o ServiceAnomaliesResponseTimesThresholdsOutput) Load() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesThresholds) string { return v.Load }).(pulumi.StringOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) Milliseconds() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesThresholds) int { return v.Milliseconds }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) Sensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesThresholds) string { return v.Sensitivity }).(pulumi.StringOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) SlowestMilliseconds() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesThresholds) int { return v.SlowestMilliseconds }).(pulumi.IntOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAnomaliesResponseTimesThresholds) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceAnomaliesResponseTimesThresholdsPtrOutput struct{ *pulumi.OutputState }

func (ServiceAnomaliesResponseTimesThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAnomaliesResponseTimesThresholds)(nil)).Elem()
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) ToServiceAnomaliesResponseTimesThresholdsPtrOutput() ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) ToServiceAnomaliesResponseTimesThresholdsPtrOutputWithContext(ctx context.Context) ServiceAnomaliesResponseTimesThresholdsPtrOutput {
	return o
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) Elem() ServiceAnomaliesResponseTimesThresholdsOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesThresholds) ServiceAnomaliesResponseTimesThresholds {
		if v != nil {
			return *v
		}
		var ret ServiceAnomaliesResponseTimesThresholds
		return ret
	}).(ServiceAnomaliesResponseTimesThresholdsOutput)
}

// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) Load() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesThresholds) *string {
		if v == nil {
			return nil
		}
		return &v.Load
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) Milliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.Milliseconds
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) Sensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesThresholds) *string {
		if v == nil {
			return nil
		}
		return &v.Sensitivity
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) SlowestMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.SlowestMilliseconds
	}).(pulumi.IntPtrOutput)
}

func (o ServiceAnomaliesResponseTimesThresholdsPtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAnomaliesResponseTimesThresholds) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingCondition struct {
	Conditions []ServiceNamingConditionCondition `pulumi:"conditions"`
}

// ServiceNamingConditionInput is an input type that accepts ServiceNamingConditionArgs and ServiceNamingConditionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionInput` via:
//
//	ServiceNamingConditionArgs{...}
type ServiceNamingConditionInput interface {
	pulumi.Input

	ToServiceNamingConditionOutput() ServiceNamingConditionOutput
	ToServiceNamingConditionOutputWithContext(context.Context) ServiceNamingConditionOutput
}

type ServiceNamingConditionArgs struct {
	Conditions ServiceNamingConditionConditionArrayInput `pulumi:"conditions"`
}

func (ServiceNamingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingCondition)(nil)).Elem()
}

func (i ServiceNamingConditionArgs) ToServiceNamingConditionOutput() ServiceNamingConditionOutput {
	return i.ToServiceNamingConditionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionArgs) ToServiceNamingConditionOutputWithContext(ctx context.Context) ServiceNamingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionOutput)
}

// ServiceNamingConditionArrayInput is an input type that accepts ServiceNamingConditionArray and ServiceNamingConditionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionArrayInput` via:
//
//	ServiceNamingConditionArray{ ServiceNamingConditionArgs{...} }
type ServiceNamingConditionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionArrayOutput() ServiceNamingConditionArrayOutput
	ToServiceNamingConditionArrayOutputWithContext(context.Context) ServiceNamingConditionArrayOutput
}

type ServiceNamingConditionArray []ServiceNamingConditionInput

func (ServiceNamingConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingCondition)(nil)).Elem()
}

func (i ServiceNamingConditionArray) ToServiceNamingConditionArrayOutput() ServiceNamingConditionArrayOutput {
	return i.ToServiceNamingConditionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionArray) ToServiceNamingConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionArrayOutput)
}

type ServiceNamingConditionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingCondition)(nil)).Elem()
}

func (o ServiceNamingConditionOutput) ToServiceNamingConditionOutput() ServiceNamingConditionOutput {
	return o
}

func (o ServiceNamingConditionOutput) ToServiceNamingConditionOutputWithContext(ctx context.Context) ServiceNamingConditionOutput {
	return o
}

func (o ServiceNamingConditionOutput) Conditions() ServiceNamingConditionConditionArrayOutput {
	return o.ApplyT(func(v ServiceNamingCondition) []ServiceNamingConditionCondition { return v.Conditions }).(ServiceNamingConditionConditionArrayOutput)
}

type ServiceNamingConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingCondition)(nil)).Elem()
}

func (o ServiceNamingConditionArrayOutput) ToServiceNamingConditionArrayOutput() ServiceNamingConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionArrayOutput) ToServiceNamingConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingCondition {
		return vs[0].([]ServiceNamingCondition)[vs[1].(int)]
	}).(ServiceNamingConditionOutput)
}

type ServiceNamingConditionCondition struct {
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons  []ServiceNamingConditionConditionApplicationTypeComparison  `pulumi:"applicationTypeComparisons"`
	ApplicationTypes            []ServiceNamingConditionConditionApplicationType            `pulumi:"applicationTypes"`
	AzureComputeModeComparisons []ServiceNamingConditionConditionAzureComputeModeComparison `pulumi:"azureComputeModeComparisons"`
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes []ServiceNamingConditionConditionAzureComputeMode `pulumi:"azureComputeModes"`
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions []ServiceNamingConditionConditionAzureSkuComparision `pulumi:"azureSkuComparisions"`
	AzureSkus            []ServiceNamingConditionConditionAzureSkus           `pulumi:"azureSkus"`
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics []ServiceNamingConditionConditionBaseComparisonBasic `pulumi:"baseComparisonBasics"`
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys []ServiceNamingConditionConditionBaseConditionKey `pulumi:"baseConditionKeys"`
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions []ServiceNamingConditionConditionBitnessComparision `pulumi:"bitnessComparisions"`
	Bitnesses           []ServiceNamingConditionConditionBitness            `pulumi:"bitnesses"`
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons []ServiceNamingConditionConditionCloudTypeComparison `pulumi:"cloudTypeComparisons"`
	CloudTypes           []ServiceNamingConditionConditionCloudType           `pulumi:"cloudTypes"`
	Comparisons          []ServiceNamingConditionConditionComparison          `pulumi:"comparisons"`
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons []ServiceNamingConditionConditionCustomApplicationTypeComparison `pulumi:"customApplicationTypeComparisons"`
	CustomApplicationTypes           []ServiceNamingConditionConditionCustomApplicationType           `pulumi:"customApplicationTypes"`
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys []ServiceNamingConditionConditionCustomHostMetadataConditionKey `pulumi:"customHostMetadataConditionKeys"`
	CustomHostMetadatas             []ServiceNamingConditionConditionCustomHostMetadata             `pulumi:"customHostMetadatas"`
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys []ServiceNamingConditionConditionCustomProcessMetadataConditionKey `pulumi:"customProcessMetadataConditionKeys"`
	CustomProcessMetadatas             []ServiceNamingConditionConditionCustomProcessMetadata             `pulumi:"customProcessMetadatas"`
	DatabaseTopologies                 []ServiceNamingConditionConditionDatabaseTopology                  `pulumi:"databaseTopologies"`
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons []ServiceNamingConditionConditionDatabaseTopologyComparison `pulumi:"databaseTopologyComparisons"`
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons []ServiceNamingConditionConditionDcrumDecoderComparison `pulumi:"dcrumDecoderComparisons"`
	DcrumDecoders           []ServiceNamingConditionConditionDcrumDecoder           `pulumi:"dcrumDecoders"`
	Entities                []ServiceNamingConditionConditionEntity                 `pulumi:"entities"`
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons []ServiceNamingConditionConditionEntityIdComparison `pulumi:"entityIdComparisons"`
	HostTeches          []ServiceNamingConditionConditionHostTech           `pulumi:"hostTeches"`
	// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions []ServiceNamingConditionConditionHypervisorTypeComparision `pulumi:"hypervisorTypeComparisions"`
	Hypervisors                []ServiceNamingConditionConditionHypervisor                `pulumi:"hypervisors"`
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons []ServiceNamingConditionConditionIndexedNameComparison `pulumi:"indexedNameComparisons"`
	IndexedNames           []ServiceNamingConditionConditionIndexedName           `pulumi:"indexedNames"`
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons []ServiceNamingConditionConditionIndexedStringComparison `pulumi:"indexedStringComparisons"`
	IndexedStrings           []ServiceNamingConditionConditionIndexedString           `pulumi:"indexedStrings"`
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons []ServiceNamingConditionConditionIndexedTagComparison `pulumi:"indexedTagComparisons"`
	IndexedTags           []ServiceNamingConditionConditionIndexedTag           `pulumi:"indexedTags"`
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons []ServiceNamingConditionConditionIntegerComparison `pulumi:"integerComparisons"`
	Integers           []ServiceNamingConditionConditionInteger           `pulumi:"integers"`
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons []ServiceNamingConditionConditionIpaddressComparison `pulumi:"ipaddressComparisons"`
	Ipaddresses          []ServiceNamingConditionConditionIpaddress           `pulumi:"ipaddresses"`
	Keys                 []ServiceNamingConditionConditionKey                 `pulumi:"keys"`
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons []ServiceNamingConditionConditionMobilePlatformComparison `pulumi:"mobilePlatformComparisons"`
	MobilePlatforms           []ServiceNamingConditionConditionMobilePlatform           `pulumi:"mobilePlatforms"`
	OsArches                  []ServiceNamingConditionConditionOsArch                   `pulumi:"osArches"`
	OsTypes                   []ServiceNamingConditionConditionOsType                   `pulumi:"osTypes"`
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons []ServiceNamingConditionConditionOsarchitectureComparison `pulumi:"osarchitectureComparisons"`
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons []ServiceNamingConditionConditionOstypeComparison `pulumi:"ostypeComparisons"`
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons []ServiceNamingConditionConditionPaasTypeComparison `pulumi:"paasTypeComparisons"`
	PaasTypes           []ServiceNamingConditionConditionPaasType           `pulumi:"paasTypes"`
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys []ServiceNamingConditionConditionProcessMetadataConditionKey `pulumi:"processMetadataConditionKeys"`
	ProcessMetadatas             []ServiceNamingConditionConditionProcessMetadata             `pulumi:"processMetadatas"`
	ServiceTopologies            []ServiceNamingConditionConditionServiceTopology             `pulumi:"serviceTopologies"`
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons []ServiceNamingConditionConditionServiceTopologyComparison `pulumi:"serviceTopologyComparisons"`
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons []ServiceNamingConditionConditionServiceTypeComparison `pulumi:"serviceTypeComparisons"`
	ServiceTypes           []ServiceNamingConditionConditionServiceType           `pulumi:"serviceTypes"`
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons []ServiceNamingConditionConditionSimpleHostTechComparison `pulumi:"simpleHostTechComparisons"`
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons []ServiceNamingConditionConditionSimpleTechComparison `pulumi:"simpleTechComparisons"`
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons []ServiceNamingConditionConditionStringComparison `pulumi:"stringComparisons"`
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys []ServiceNamingConditionConditionStringConditionKey `pulumi:"stringConditionKeys"`
	StringKeys          []ServiceNamingConditionConditionStringKey          `pulumi:"stringKeys"`
	Strings             []ServiceNamingConditionConditionString             `pulumi:"strings"`
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons []ServiceNamingConditionConditionSyntheticEngineTypeComparison `pulumi:"syntheticEngineTypeComparisons"`
	SyntheticEngines               []ServiceNamingConditionConditionSyntheticEngine               `pulumi:"syntheticEngines"`
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons []ServiceNamingConditionConditionTagComparison `pulumi:"tagComparisons"`
	Tags           []ServiceNamingConditionConditionTag           `pulumi:"tags"`
	Teches         []ServiceNamingConditionConditionTech          `pulumi:"teches"`
	Unknowns       *string                                        `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionInput is an input type that accepts ServiceNamingConditionConditionArgs and ServiceNamingConditionConditionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionInput` via:
//
//	ServiceNamingConditionConditionArgs{...}
type ServiceNamingConditionConditionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOutput() ServiceNamingConditionConditionOutput
	ToServiceNamingConditionConditionOutputWithContext(context.Context) ServiceNamingConditionConditionOutput
}

type ServiceNamingConditionConditionArgs struct {
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons  ServiceNamingConditionConditionApplicationTypeComparisonArrayInput  `pulumi:"applicationTypeComparisons"`
	ApplicationTypes            ServiceNamingConditionConditionApplicationTypeArrayInput            `pulumi:"applicationTypes"`
	AzureComputeModeComparisons ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput `pulumi:"azureComputeModeComparisons"`
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes ServiceNamingConditionConditionAzureComputeModeArrayInput `pulumi:"azureComputeModes"`
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions ServiceNamingConditionConditionAzureSkuComparisionArrayInput `pulumi:"azureSkuComparisions"`
	AzureSkus            ServiceNamingConditionConditionAzureSkusArrayInput           `pulumi:"azureSkus"`
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics ServiceNamingConditionConditionBaseComparisonBasicArrayInput `pulumi:"baseComparisonBasics"`
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys ServiceNamingConditionConditionBaseConditionKeyArrayInput `pulumi:"baseConditionKeys"`
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions ServiceNamingConditionConditionBitnessComparisionArrayInput `pulumi:"bitnessComparisions"`
	Bitnesses           ServiceNamingConditionConditionBitnessArrayInput            `pulumi:"bitnesses"`
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons ServiceNamingConditionConditionCloudTypeComparisonArrayInput `pulumi:"cloudTypeComparisons"`
	CloudTypes           ServiceNamingConditionConditionCloudTypeArrayInput           `pulumi:"cloudTypes"`
	Comparisons          ServiceNamingConditionConditionComparisonArrayInput          `pulumi:"comparisons"`
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput `pulumi:"customApplicationTypeComparisons"`
	CustomApplicationTypes           ServiceNamingConditionConditionCustomApplicationTypeArrayInput           `pulumi:"customApplicationTypes"`
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput `pulumi:"customHostMetadataConditionKeys"`
	CustomHostMetadatas             ServiceNamingConditionConditionCustomHostMetadataArrayInput             `pulumi:"customHostMetadatas"`
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput `pulumi:"customProcessMetadataConditionKeys"`
	CustomProcessMetadatas             ServiceNamingConditionConditionCustomProcessMetadataArrayInput             `pulumi:"customProcessMetadatas"`
	DatabaseTopologies                 ServiceNamingConditionConditionDatabaseTopologyArrayInput                  `pulumi:"databaseTopologies"`
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput `pulumi:"databaseTopologyComparisons"`
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput `pulumi:"dcrumDecoderComparisons"`
	DcrumDecoders           ServiceNamingConditionConditionDcrumDecoderArrayInput           `pulumi:"dcrumDecoders"`
	Entities                ServiceNamingConditionConditionEntityArrayInput                 `pulumi:"entities"`
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons ServiceNamingConditionConditionEntityIdComparisonArrayInput `pulumi:"entityIdComparisons"`
	HostTeches          ServiceNamingConditionConditionHostTechArrayInput           `pulumi:"hostTeches"`
	// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput `pulumi:"hypervisorTypeComparisions"`
	Hypervisors                ServiceNamingConditionConditionHypervisorArrayInput                `pulumi:"hypervisors"`
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons ServiceNamingConditionConditionIndexedNameComparisonArrayInput `pulumi:"indexedNameComparisons"`
	IndexedNames           ServiceNamingConditionConditionIndexedNameArrayInput           `pulumi:"indexedNames"`
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons ServiceNamingConditionConditionIndexedStringComparisonArrayInput `pulumi:"indexedStringComparisons"`
	IndexedStrings           ServiceNamingConditionConditionIndexedStringArrayInput           `pulumi:"indexedStrings"`
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons ServiceNamingConditionConditionIndexedTagComparisonArrayInput `pulumi:"indexedTagComparisons"`
	IndexedTags           ServiceNamingConditionConditionIndexedTagArrayInput           `pulumi:"indexedTags"`
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons ServiceNamingConditionConditionIntegerComparisonArrayInput `pulumi:"integerComparisons"`
	Integers           ServiceNamingConditionConditionIntegerArrayInput           `pulumi:"integers"`
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons ServiceNamingConditionConditionIpaddressComparisonArrayInput `pulumi:"ipaddressComparisons"`
	Ipaddresses          ServiceNamingConditionConditionIpaddressArrayInput           `pulumi:"ipaddresses"`
	Keys                 ServiceNamingConditionConditionKeyArrayInput                 `pulumi:"keys"`
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons ServiceNamingConditionConditionMobilePlatformComparisonArrayInput `pulumi:"mobilePlatformComparisons"`
	MobilePlatforms           ServiceNamingConditionConditionMobilePlatformArrayInput           `pulumi:"mobilePlatforms"`
	OsArches                  ServiceNamingConditionConditionOsArchArrayInput                   `pulumi:"osArches"`
	OsTypes                   ServiceNamingConditionConditionOsTypeArrayInput                   `pulumi:"osTypes"`
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons ServiceNamingConditionConditionOsarchitectureComparisonArrayInput `pulumi:"osarchitectureComparisons"`
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons ServiceNamingConditionConditionOstypeComparisonArrayInput `pulumi:"ostypeComparisons"`
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons ServiceNamingConditionConditionPaasTypeComparisonArrayInput `pulumi:"paasTypeComparisons"`
	PaasTypes           ServiceNamingConditionConditionPaasTypeArrayInput           `pulumi:"paasTypes"`
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput `pulumi:"processMetadataConditionKeys"`
	ProcessMetadatas             ServiceNamingConditionConditionProcessMetadataArrayInput             `pulumi:"processMetadatas"`
	ServiceTopologies            ServiceNamingConditionConditionServiceTopologyArrayInput             `pulumi:"serviceTopologies"`
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons ServiceNamingConditionConditionServiceTopologyComparisonArrayInput `pulumi:"serviceTopologyComparisons"`
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons ServiceNamingConditionConditionServiceTypeComparisonArrayInput `pulumi:"serviceTypeComparisons"`
	ServiceTypes           ServiceNamingConditionConditionServiceTypeArrayInput           `pulumi:"serviceTypes"`
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput `pulumi:"simpleHostTechComparisons"`
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons ServiceNamingConditionConditionSimpleTechComparisonArrayInput `pulumi:"simpleTechComparisons"`
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons ServiceNamingConditionConditionStringComparisonArrayInput `pulumi:"stringComparisons"`
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys ServiceNamingConditionConditionStringConditionKeyArrayInput `pulumi:"stringConditionKeys"`
	StringKeys          ServiceNamingConditionConditionStringKeyArrayInput          `pulumi:"stringKeys"`
	Strings             ServiceNamingConditionConditionStringArrayInput             `pulumi:"strings"`
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput `pulumi:"syntheticEngineTypeComparisons"`
	SyntheticEngines               ServiceNamingConditionConditionSyntheticEngineArrayInput               `pulumi:"syntheticEngines"`
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons ServiceNamingConditionConditionTagComparisonArrayInput `pulumi:"tagComparisons"`
	Tags           ServiceNamingConditionConditionTagArrayInput           `pulumi:"tags"`
	Teches         ServiceNamingConditionConditionTechArrayInput          `pulumi:"teches"`
	Unknowns       pulumi.StringPtrInput                                  `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionCondition)(nil)).Elem()
}

func (i ServiceNamingConditionConditionArgs) ToServiceNamingConditionConditionOutput() ServiceNamingConditionConditionOutput {
	return i.ToServiceNamingConditionConditionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionArgs) ToServiceNamingConditionConditionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOutput)
}

// ServiceNamingConditionConditionArrayInput is an input type that accepts ServiceNamingConditionConditionArray and ServiceNamingConditionConditionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionArrayInput` via:
//
//	ServiceNamingConditionConditionArray{ ServiceNamingConditionConditionArgs{...} }
type ServiceNamingConditionConditionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionArrayOutput() ServiceNamingConditionConditionArrayOutput
	ToServiceNamingConditionConditionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionArrayOutput
}

type ServiceNamingConditionConditionArray []ServiceNamingConditionConditionInput

func (ServiceNamingConditionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionCondition)(nil)).Elem()
}

func (i ServiceNamingConditionConditionArray) ToServiceNamingConditionConditionArrayOutput() ServiceNamingConditionConditionArrayOutput {
	return i.ToServiceNamingConditionConditionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionArray) ToServiceNamingConditionConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionArrayOutput)
}

type ServiceNamingConditionConditionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionCondition)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOutput) ToServiceNamingConditionConditionOutput() ServiceNamingConditionConditionOutput {
	return o
}

func (o ServiceNamingConditionConditionOutput) ToServiceNamingConditionConditionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOutput {
	return o
}

// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) ApplicationTypeComparisons() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionApplicationTypeComparison {
		return v.ApplicationTypeComparisons
	}).(ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) ApplicationTypes() ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionApplicationType {
		return v.ApplicationTypes
	}).(ServiceNamingConditionConditionApplicationTypeArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) AzureComputeModeComparisons() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureComputeModeComparison {
		return v.AzureComputeModeComparisons
	}).(ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput)
}

// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) AzureComputeModes() ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureComputeMode {
		return v.AzureComputeModes
	}).(ServiceNamingConditionConditionAzureComputeModeArrayOutput)
}

// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) AzureSkuComparisions() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureSkuComparision {
		return v.AzureSkuComparisions
	}).(ServiceNamingConditionConditionAzureSkuComparisionArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) AzureSkus() ServiceNamingConditionConditionAzureSkusArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureSkus { return v.AzureSkus }).(ServiceNamingConditionConditionAzureSkusArrayOutput)
}

// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) BaseComparisonBasics() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBaseComparisonBasic {
		return v.BaseComparisonBasics
	}).(ServiceNamingConditionConditionBaseComparisonBasicArrayOutput)
}

// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
func (o ServiceNamingConditionConditionOutput) BaseConditionKeys() ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBaseConditionKey {
		return v.BaseConditionKeys
	}).(ServiceNamingConditionConditionBaseConditionKeyArrayOutput)
}

// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) BitnessComparisions() ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBitnessComparision {
		return v.BitnessComparisions
	}).(ServiceNamingConditionConditionBitnessComparisionArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Bitnesses() ServiceNamingConditionConditionBitnessArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBitness { return v.Bitnesses }).(ServiceNamingConditionConditionBitnessArrayOutput)
}

// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) CloudTypeComparisons() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCloudTypeComparison {
		return v.CloudTypeComparisons
	}).(ServiceNamingConditionConditionCloudTypeComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) CloudTypes() ServiceNamingConditionConditionCloudTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCloudType {
		return v.CloudTypes
	}).(ServiceNamingConditionConditionCloudTypeArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Comparisons() ServiceNamingConditionConditionComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionComparison {
		return v.Comparisons
	}).(ServiceNamingConditionConditionComparisonArrayOutput)
}

// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) CustomApplicationTypeComparisons() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomApplicationTypeComparison {
		return v.CustomApplicationTypeComparisons
	}).(ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) CustomApplicationTypes() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomApplicationType {
		return v.CustomApplicationTypes
	}).(ServiceNamingConditionConditionCustomApplicationTypeArrayOutput)
}

// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
func (o ServiceNamingConditionConditionOutput) CustomHostMetadataConditionKeys() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomHostMetadataConditionKey {
		return v.CustomHostMetadataConditionKeys
	}).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) CustomHostMetadatas() ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomHostMetadata {
		return v.CustomHostMetadatas
	}).(ServiceNamingConditionConditionCustomHostMetadataArrayOutput)
}

// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
func (o ServiceNamingConditionConditionOutput) CustomProcessMetadataConditionKeys() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomProcessMetadataConditionKey {
		return v.CustomProcessMetadataConditionKeys
	}).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) CustomProcessMetadatas() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomProcessMetadata {
		return v.CustomProcessMetadatas
	}).(ServiceNamingConditionConditionCustomProcessMetadataArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) DatabaseTopologies() ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDatabaseTopology {
		return v.DatabaseTopologies
	}).(ServiceNamingConditionConditionDatabaseTopologyArrayOutput)
}

// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) DatabaseTopologyComparisons() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDatabaseTopologyComparison {
		return v.DatabaseTopologyComparisons
	}).(ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput)
}

// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) DcrumDecoderComparisons() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDcrumDecoderComparison {
		return v.DcrumDecoderComparisons
	}).(ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) DcrumDecoders() ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDcrumDecoder {
		return v.DcrumDecoders
	}).(ServiceNamingConditionConditionDcrumDecoderArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Entities() ServiceNamingConditionConditionEntityArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionEntity { return v.Entities }).(ServiceNamingConditionConditionEntityArrayOutput)
}

// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) EntityIdComparisons() ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionEntityIdComparison {
		return v.EntityIdComparisons
	}).(ServiceNamingConditionConditionEntityIdComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) HostTeches() ServiceNamingConditionConditionHostTechArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionHostTech { return v.HostTeches }).(ServiceNamingConditionConditionHostTechArrayOutput)
}

// Deprecated: `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
func (o ServiceNamingConditionConditionOutput) HypervisorTypeComparisions() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionHypervisorTypeComparision {
		return v.HypervisorTypeComparisions
	}).(ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Hypervisors() ServiceNamingConditionConditionHypervisorArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionHypervisor {
		return v.Hypervisors
	}).(ServiceNamingConditionConditionHypervisorArrayOutput)
}

// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IndexedNameComparisons() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedNameComparison {
		return v.IndexedNameComparisons
	}).(ServiceNamingConditionConditionIndexedNameComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) IndexedNames() ServiceNamingConditionConditionIndexedNameArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedName {
		return v.IndexedNames
	}).(ServiceNamingConditionConditionIndexedNameArrayOutput)
}

// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IndexedStringComparisons() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedStringComparison {
		return v.IndexedStringComparisons
	}).(ServiceNamingConditionConditionIndexedStringComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) IndexedStrings() ServiceNamingConditionConditionIndexedStringArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedString {
		return v.IndexedStrings
	}).(ServiceNamingConditionConditionIndexedStringArrayOutput)
}

// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IndexedTagComparisons() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedTagComparison {
		return v.IndexedTagComparisons
	}).(ServiceNamingConditionConditionIndexedTagComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) IndexedTags() ServiceNamingConditionConditionIndexedTagArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedTag {
		return v.IndexedTags
	}).(ServiceNamingConditionConditionIndexedTagArrayOutput)
}

// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IntegerComparisons() ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIntegerComparison {
		return v.IntegerComparisons
	}).(ServiceNamingConditionConditionIntegerComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Integers() ServiceNamingConditionConditionIntegerArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionInteger { return v.Integers }).(ServiceNamingConditionConditionIntegerArrayOutput)
}

// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IpaddressComparisons() ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIpaddressComparison {
		return v.IpaddressComparisons
	}).(ServiceNamingConditionConditionIpaddressComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Ipaddresses() ServiceNamingConditionConditionIpaddressArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIpaddress {
		return v.Ipaddresses
	}).(ServiceNamingConditionConditionIpaddressArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Keys() ServiceNamingConditionConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionKey { return v.Keys }).(ServiceNamingConditionConditionKeyArrayOutput)
}

// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) MobilePlatformComparisons() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionMobilePlatformComparison {
		return v.MobilePlatformComparisons
	}).(ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) MobilePlatforms() ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionMobilePlatform {
		return v.MobilePlatforms
	}).(ServiceNamingConditionConditionMobilePlatformArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) OsArches() ServiceNamingConditionConditionOsArchArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOsArch { return v.OsArches }).(ServiceNamingConditionConditionOsArchArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) OsTypes() ServiceNamingConditionConditionOsTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOsType { return v.OsTypes }).(ServiceNamingConditionConditionOsTypeArrayOutput)
}

// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) OsarchitectureComparisons() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOsarchitectureComparison {
		return v.OsarchitectureComparisons
	}).(ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput)
}

// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) OstypeComparisons() ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOstypeComparison {
		return v.OstypeComparisons
	}).(ServiceNamingConditionConditionOstypeComparisonArrayOutput)
}

// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) PaasTypeComparisons() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionPaasTypeComparison {
		return v.PaasTypeComparisons
	}).(ServiceNamingConditionConditionPaasTypeComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) PaasTypes() ServiceNamingConditionConditionPaasTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionPaasType { return v.PaasTypes }).(ServiceNamingConditionConditionPaasTypeArrayOutput)
}

// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
func (o ServiceNamingConditionConditionOutput) ProcessMetadataConditionKeys() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionProcessMetadataConditionKey {
		return v.ProcessMetadataConditionKeys
	}).(ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) ProcessMetadatas() ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionProcessMetadata {
		return v.ProcessMetadatas
	}).(ServiceNamingConditionConditionProcessMetadataArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) ServiceTopologies() ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceTopology {
		return v.ServiceTopologies
	}).(ServiceNamingConditionConditionServiceTopologyArrayOutput)
}

// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) ServiceTopologyComparisons() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceTopologyComparison {
		return v.ServiceTopologyComparisons
	}).(ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput)
}

// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) ServiceTypeComparisons() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceTypeComparison {
		return v.ServiceTypeComparisons
	}).(ServiceNamingConditionConditionServiceTypeComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) ServiceTypes() ServiceNamingConditionConditionServiceTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceType {
		return v.ServiceTypes
	}).(ServiceNamingConditionConditionServiceTypeArrayOutput)
}

// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) SimpleHostTechComparisons() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSimpleHostTechComparison {
		return v.SimpleHostTechComparisons
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput)
}

// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) SimpleTechComparisons() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSimpleTechComparison {
		return v.SimpleTechComparisons
	}).(ServiceNamingConditionConditionSimpleTechComparisonArrayOutput)
}

// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) StringComparisons() ServiceNamingConditionConditionStringComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionStringComparison {
		return v.StringComparisons
	}).(ServiceNamingConditionConditionStringComparisonArrayOutput)
}

// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
func (o ServiceNamingConditionConditionOutput) StringConditionKeys() ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionStringConditionKey {
		return v.StringConditionKeys
	}).(ServiceNamingConditionConditionStringConditionKeyArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) StringKeys() ServiceNamingConditionConditionStringKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionStringKey {
		return v.StringKeys
	}).(ServiceNamingConditionConditionStringKeyArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Strings() ServiceNamingConditionConditionStringArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionString { return v.Strings }).(ServiceNamingConditionConditionStringArrayOutput)
}

// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) SyntheticEngineTypeComparisons() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSyntheticEngineTypeComparison {
		return v.SyntheticEngineTypeComparisons
	}).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) SyntheticEngines() ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSyntheticEngine {
		return v.SyntheticEngines
	}).(ServiceNamingConditionConditionSyntheticEngineArrayOutput)
}

// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) TagComparisons() ServiceNamingConditionConditionTagComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionTagComparison {
		return v.TagComparisons
	}).(ServiceNamingConditionConditionTagComparisonArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Tags() ServiceNamingConditionConditionTagArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionTag { return v.Tags }).(ServiceNamingConditionConditionTagArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Teches() ServiceNamingConditionConditionTechArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionTech { return v.Teches }).(ServiceNamingConditionConditionTechArrayOutput)
}

func (o ServiceNamingConditionConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionCondition)(nil)).Elem()
}

func (o ServiceNamingConditionConditionArrayOutput) ToServiceNamingConditionConditionArrayOutput() ServiceNamingConditionConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionArrayOutput) ToServiceNamingConditionConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionCondition {
		return vs[0].([]ServiceNamingConditionCondition)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOutput)
}

type ServiceNamingConditionConditionApplicationType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionApplicationTypeInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeArgs and ServiceNamingConditionConditionApplicationTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeArgs{...}
type ServiceNamingConditionConditionApplicationTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeOutput() ServiceNamingConditionConditionApplicationTypeOutput
	ToServiceNamingConditionConditionApplicationTypeOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeOutput
}

type ServiceNamingConditionConditionApplicationTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeArgs) ToServiceNamingConditionConditionApplicationTypeOutput() ServiceNamingConditionConditionApplicationTypeOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeArgs) ToServiceNamingConditionConditionApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeOutput)
}

// ServiceNamingConditionConditionApplicationTypeArrayInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeArray and ServiceNamingConditionConditionApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeArrayInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeArray{ ServiceNamingConditionConditionApplicationTypeArgs{...} }
type ServiceNamingConditionConditionApplicationTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeArrayOutput() ServiceNamingConditionConditionApplicationTypeArrayOutput
	ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeArrayOutput
}

type ServiceNamingConditionConditionApplicationTypeArray []ServiceNamingConditionConditionApplicationTypeInput

func (ServiceNamingConditionConditionApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeArray) ToServiceNamingConditionConditionApplicationTypeArrayOutput() ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeArray) ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeArrayOutput)
}

type ServiceNamingConditionConditionApplicationTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) ToServiceNamingConditionConditionApplicationTypeOutput() ServiceNamingConditionConditionApplicationTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) ToServiceNamingConditionConditionApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeArrayOutput) ToServiceNamingConditionConditionApplicationTypeArrayOutput() ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeArrayOutput) ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionApplicationType {
		return vs[0].([]ServiceNamingConditionConditionApplicationType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionApplicationTypeOutput)
}

type ServiceNamingConditionConditionApplicationTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionApplicationTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeComparisonArgs and ServiceNamingConditionConditionApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeComparisonArgs{...}
type ServiceNamingConditionConditionApplicationTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeComparisonOutput() ServiceNamingConditionConditionApplicationTypeComparisonOutput
	ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeComparisonOutput
}

type ServiceNamingConditionConditionApplicationTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArgs) ToServiceNamingConditionConditionApplicationTypeComparisonOutput() ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArgs) ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeComparisonOutput)
}

// ServiceNamingConditionConditionApplicationTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeComparisonArray and ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeComparisonArray{ ServiceNamingConditionConditionApplicationTypeComparisonArgs{...} }
type ServiceNamingConditionConditionApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput
	ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionApplicationTypeComparisonArray []ServiceNamingConditionConditionApplicationTypeComparisonInput

func (ServiceNamingConditionConditionApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArray) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArray) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) ToServiceNamingConditionConditionApplicationTypeComparisonOutput() ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionApplicationTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionApplicationTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionApplicationTypeComparisonOutput)
}

type ServiceNamingConditionConditionAzureComputeMode struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureComputeModeInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeArgs and ServiceNamingConditionConditionAzureComputeModeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeArgs{...}
type ServiceNamingConditionConditionAzureComputeModeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeOutput() ServiceNamingConditionConditionAzureComputeModeOutput
	ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeOutput
}

type ServiceNamingConditionConditionAzureComputeModeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureComputeModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeArgs) ToServiceNamingConditionConditionAzureComputeModeOutput() ServiceNamingConditionConditionAzureComputeModeOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeArgs) ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeOutput)
}

// ServiceNamingConditionConditionAzureComputeModeArrayInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeArray and ServiceNamingConditionConditionAzureComputeModeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeArrayInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeArray{ ServiceNamingConditionConditionAzureComputeModeArgs{...} }
type ServiceNamingConditionConditionAzureComputeModeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeArrayOutput() ServiceNamingConditionConditionAzureComputeModeArrayOutput
	ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeArrayOutput
}

type ServiceNamingConditionConditionAzureComputeModeArray []ServiceNamingConditionConditionAzureComputeModeInput

func (ServiceNamingConditionConditionAzureComputeModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeArray) ToServiceNamingConditionConditionAzureComputeModeArrayOutput() ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeArray) ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeArrayOutput)
}

type ServiceNamingConditionConditionAzureComputeModeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) ToServiceNamingConditionConditionAzureComputeModeOutput() ServiceNamingConditionConditionAzureComputeModeOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureComputeModeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeArrayOutput) ToServiceNamingConditionConditionAzureComputeModeArrayOutput() ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeArrayOutput) ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureComputeModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureComputeMode {
		return vs[0].([]ServiceNamingConditionConditionAzureComputeMode)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureComputeModeOutput)
}

type ServiceNamingConditionConditionAzureComputeModeComparison struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureComputeModeComparisonInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeComparisonArgs and ServiceNamingConditionConditionAzureComputeModeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeComparisonInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeComparisonArgs{...}
type ServiceNamingConditionConditionAzureComputeModeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeComparisonOutput() ServiceNamingConditionConditionAzureComputeModeComparisonOutput
	ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonOutput
}

type ServiceNamingConditionConditionAzureComputeModeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureComputeModeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArgs) ToServiceNamingConditionConditionAzureComputeModeComparisonOutput() ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArgs) ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeComparisonOutput)
}

// ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeComparisonArray and ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeComparisonArray{ ServiceNamingConditionConditionAzureComputeModeComparisonArgs{...} }
type ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput
	ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput
}

type ServiceNamingConditionConditionAzureComputeModeComparisonArray []ServiceNamingConditionConditionAzureComputeModeComparisonInput

func (ServiceNamingConditionConditionAzureComputeModeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArray) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArray) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput)
}

type ServiceNamingConditionConditionAzureComputeModeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonOutput() ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureComputeModeComparison {
		return vs[0].([]ServiceNamingConditionConditionAzureComputeModeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureComputeModeComparisonOutput)
}

type ServiceNamingConditionConditionAzureSkuComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureSkuComparisionInput is an input type that accepts ServiceNamingConditionConditionAzureSkuComparisionArgs and ServiceNamingConditionConditionAzureSkuComparisionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkuComparisionInput` via:
//
//	ServiceNamingConditionConditionAzureSkuComparisionArgs{...}
type ServiceNamingConditionConditionAzureSkuComparisionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkuComparisionOutput() ServiceNamingConditionConditionAzureSkuComparisionOutput
	ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkuComparisionOutput
}

type ServiceNamingConditionConditionAzureSkuComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureSkuComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArgs) ToServiceNamingConditionConditionAzureSkuComparisionOutput() ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return i.ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArgs) ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkuComparisionOutput)
}

// ServiceNamingConditionConditionAzureSkuComparisionArrayInput is an input type that accepts ServiceNamingConditionConditionAzureSkuComparisionArray and ServiceNamingConditionConditionAzureSkuComparisionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkuComparisionArrayInput` via:
//
//	ServiceNamingConditionConditionAzureSkuComparisionArray{ ServiceNamingConditionConditionAzureSkuComparisionArgs{...} }
type ServiceNamingConditionConditionAzureSkuComparisionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkuComparisionArrayOutput() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput
	ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkuComparisionArrayOutput
}

type ServiceNamingConditionConditionAzureSkuComparisionArray []ServiceNamingConditionConditionAzureSkuComparisionInput

func (ServiceNamingConditionConditionAzureSkuComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArray) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutput() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return i.ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArray) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkuComparisionArrayOutput)
}

type ServiceNamingConditionConditionAzureSkuComparisionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkuComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) ToServiceNamingConditionConditionAzureSkuComparisionOutput() ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureSkuComparisionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutput() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureSkuComparision {
		return vs[0].([]ServiceNamingConditionConditionAzureSkuComparision)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureSkuComparisionOutput)
}

type ServiceNamingConditionConditionAzureSkus struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureSkusInput is an input type that accepts ServiceNamingConditionConditionAzureSkusArgs and ServiceNamingConditionConditionAzureSkusOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkusInput` via:
//
//	ServiceNamingConditionConditionAzureSkusArgs{...}
type ServiceNamingConditionConditionAzureSkusInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkusOutput() ServiceNamingConditionConditionAzureSkusOutput
	ToServiceNamingConditionConditionAzureSkusOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkusOutput
}

type ServiceNamingConditionConditionAzureSkusArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkusArgs) ToServiceNamingConditionConditionAzureSkusOutput() ServiceNamingConditionConditionAzureSkusOutput {
	return i.ToServiceNamingConditionConditionAzureSkusOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkusArgs) ToServiceNamingConditionConditionAzureSkusOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkusOutput)
}

// ServiceNamingConditionConditionAzureSkusArrayInput is an input type that accepts ServiceNamingConditionConditionAzureSkusArray and ServiceNamingConditionConditionAzureSkusArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkusArrayInput` via:
//
//	ServiceNamingConditionConditionAzureSkusArray{ ServiceNamingConditionConditionAzureSkusArgs{...} }
type ServiceNamingConditionConditionAzureSkusArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkusArrayOutput() ServiceNamingConditionConditionAzureSkusArrayOutput
	ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkusArrayOutput
}

type ServiceNamingConditionConditionAzureSkusArray []ServiceNamingConditionConditionAzureSkusInput

func (ServiceNamingConditionConditionAzureSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkusArray) ToServiceNamingConditionConditionAzureSkusArrayOutput() ServiceNamingConditionConditionAzureSkusArrayOutput {
	return i.ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkusArray) ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkusArrayOutput)
}

type ServiceNamingConditionConditionAzureSkusOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkusOutput) ToServiceNamingConditionConditionAzureSkusOutput() ServiceNamingConditionConditionAzureSkusOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusOutput) ToServiceNamingConditionConditionAzureSkusOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionAzureSkusOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionAzureSkusOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionAzureSkusOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureSkusArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkusArrayOutput) ToServiceNamingConditionConditionAzureSkusArrayOutput() ServiceNamingConditionConditionAzureSkusArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusArrayOutput) ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureSkus {
		return vs[0].([]ServiceNamingConditionConditionAzureSkus)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureSkusOutput)
}

type ServiceNamingConditionConditionBaseComparisonBasic struct {
	Negate   *bool   `pulumi:"negate"`
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionBaseComparisonBasicInput is an input type that accepts ServiceNamingConditionConditionBaseComparisonBasicArgs and ServiceNamingConditionConditionBaseComparisonBasicOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseComparisonBasicInput` via:
//
//	ServiceNamingConditionConditionBaseComparisonBasicArgs{...}
type ServiceNamingConditionConditionBaseComparisonBasicInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseComparisonBasicOutput() ServiceNamingConditionConditionBaseComparisonBasicOutput
	ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(context.Context) ServiceNamingConditionConditionBaseComparisonBasicOutput
}

type ServiceNamingConditionConditionBaseComparisonBasicArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionBaseComparisonBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArgs) ToServiceNamingConditionConditionBaseComparisonBasicOutput() ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return i.ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArgs) ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseComparisonBasicOutput)
}

// ServiceNamingConditionConditionBaseComparisonBasicArrayInput is an input type that accepts ServiceNamingConditionConditionBaseComparisonBasicArray and ServiceNamingConditionConditionBaseComparisonBasicArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseComparisonBasicArrayInput` via:
//
//	ServiceNamingConditionConditionBaseComparisonBasicArray{ ServiceNamingConditionConditionBaseComparisonBasicArgs{...} }
type ServiceNamingConditionConditionBaseComparisonBasicArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseComparisonBasicArrayOutput() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput
	ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBaseComparisonBasicArrayOutput
}

type ServiceNamingConditionConditionBaseComparisonBasicArray []ServiceNamingConditionConditionBaseComparisonBasicInput

func (ServiceNamingConditionConditionBaseComparisonBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArray) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutput() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return i.ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArray) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseComparisonBasicArrayOutput)
}

type ServiceNamingConditionConditionBaseComparisonBasicOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseComparisonBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) ToServiceNamingConditionConditionBaseComparisonBasicOutput() ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseComparisonBasic) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseComparisonBasic) string { return v.Type }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseComparisonBasic) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBaseComparisonBasicArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutput() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBaseComparisonBasic {
		return vs[0].([]ServiceNamingConditionConditionBaseComparisonBasic)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBaseComparisonBasicOutput)
}

type ServiceNamingConditionConditionBaseConditionKey struct {
	Attribute string  `pulumi:"attribute"`
	Type      *string `pulumi:"type"`
	Unknowns  *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionBaseConditionKeyInput is an input type that accepts ServiceNamingConditionConditionBaseConditionKeyArgs and ServiceNamingConditionConditionBaseConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseConditionKeyInput` via:
//
//	ServiceNamingConditionConditionBaseConditionKeyArgs{...}
type ServiceNamingConditionConditionBaseConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseConditionKeyOutput() ServiceNamingConditionConditionBaseConditionKeyOutput
	ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionBaseConditionKeyOutput
}

type ServiceNamingConditionConditionBaseConditionKeyArgs struct {
	Attribute pulumi.StringInput    `pulumi:"attribute"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Unknowns  pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionBaseConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseConditionKeyArgs) ToServiceNamingConditionConditionBaseConditionKeyOutput() ServiceNamingConditionConditionBaseConditionKeyOutput {
	return i.ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseConditionKeyArgs) ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseConditionKeyOutput)
}

// ServiceNamingConditionConditionBaseConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionBaseConditionKeyArray and ServiceNamingConditionConditionBaseConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionBaseConditionKeyArray{ ServiceNamingConditionConditionBaseConditionKeyArgs{...} }
type ServiceNamingConditionConditionBaseConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseConditionKeyArrayOutput() ServiceNamingConditionConditionBaseConditionKeyArrayOutput
	ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBaseConditionKeyArrayOutput
}

type ServiceNamingConditionConditionBaseConditionKeyArray []ServiceNamingConditionConditionBaseConditionKeyInput

func (ServiceNamingConditionConditionBaseConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseConditionKeyArray) ToServiceNamingConditionConditionBaseConditionKeyArrayOutput() ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseConditionKeyArray) ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionBaseConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) ToServiceNamingConditionConditionBaseConditionKeyOutput() ServiceNamingConditionConditionBaseConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBaseConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseConditionKeyArrayOutput) ToServiceNamingConditionConditionBaseConditionKeyArrayOutput() ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyArrayOutput) ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBaseConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBaseConditionKey {
		return vs[0].([]ServiceNamingConditionConditionBaseConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBaseConditionKeyOutput)
}

type ServiceNamingConditionConditionBitness struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionBitnessInput is an input type that accepts ServiceNamingConditionConditionBitnessArgs and ServiceNamingConditionConditionBitnessOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessInput` via:
//
//	ServiceNamingConditionConditionBitnessArgs{...}
type ServiceNamingConditionConditionBitnessInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessOutput() ServiceNamingConditionConditionBitnessOutput
	ToServiceNamingConditionConditionBitnessOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessOutput
}

type ServiceNamingConditionConditionBitnessArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionBitnessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessArgs) ToServiceNamingConditionConditionBitnessOutput() ServiceNamingConditionConditionBitnessOutput {
	return i.ToServiceNamingConditionConditionBitnessOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessArgs) ToServiceNamingConditionConditionBitnessOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessOutput)
}

// ServiceNamingConditionConditionBitnessArrayInput is an input type that accepts ServiceNamingConditionConditionBitnessArray and ServiceNamingConditionConditionBitnessArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessArrayInput` via:
//
//	ServiceNamingConditionConditionBitnessArray{ ServiceNamingConditionConditionBitnessArgs{...} }
type ServiceNamingConditionConditionBitnessArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessArrayOutput() ServiceNamingConditionConditionBitnessArrayOutput
	ToServiceNamingConditionConditionBitnessArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessArrayOutput
}

type ServiceNamingConditionConditionBitnessArray []ServiceNamingConditionConditionBitnessInput

func (ServiceNamingConditionConditionBitnessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessArray) ToServiceNamingConditionConditionBitnessArrayOutput() ServiceNamingConditionConditionBitnessArrayOutput {
	return i.ToServiceNamingConditionConditionBitnessArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessArray) ToServiceNamingConditionConditionBitnessArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessArrayOutput)
}

type ServiceNamingConditionConditionBitnessOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessOutput) ToServiceNamingConditionConditionBitnessOutput() ServiceNamingConditionConditionBitnessOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessOutput) ToServiceNamingConditionConditionBitnessOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionBitnessOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionBitnessOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionBitnessOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBitnessArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessArrayOutput) ToServiceNamingConditionConditionBitnessArrayOutput() ServiceNamingConditionConditionBitnessArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessArrayOutput) ToServiceNamingConditionConditionBitnessArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBitnessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBitness {
		return vs[0].([]ServiceNamingConditionConditionBitness)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBitnessOutput)
}

type ServiceNamingConditionConditionBitnessComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionBitnessComparisionInput is an input type that accepts ServiceNamingConditionConditionBitnessComparisionArgs and ServiceNamingConditionConditionBitnessComparisionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessComparisionInput` via:
//
//	ServiceNamingConditionConditionBitnessComparisionArgs{...}
type ServiceNamingConditionConditionBitnessComparisionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessComparisionOutput() ServiceNamingConditionConditionBitnessComparisionOutput
	ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessComparisionOutput
}

type ServiceNamingConditionConditionBitnessComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionBitnessComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessComparisionArgs) ToServiceNamingConditionConditionBitnessComparisionOutput() ServiceNamingConditionConditionBitnessComparisionOutput {
	return i.ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessComparisionArgs) ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessComparisionOutput)
}

// ServiceNamingConditionConditionBitnessComparisionArrayInput is an input type that accepts ServiceNamingConditionConditionBitnessComparisionArray and ServiceNamingConditionConditionBitnessComparisionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessComparisionArrayInput` via:
//
//	ServiceNamingConditionConditionBitnessComparisionArray{ ServiceNamingConditionConditionBitnessComparisionArgs{...} }
type ServiceNamingConditionConditionBitnessComparisionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessComparisionArrayOutput() ServiceNamingConditionConditionBitnessComparisionArrayOutput
	ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessComparisionArrayOutput
}

type ServiceNamingConditionConditionBitnessComparisionArray []ServiceNamingConditionConditionBitnessComparisionInput

func (ServiceNamingConditionConditionBitnessComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessComparisionArray) ToServiceNamingConditionConditionBitnessComparisionArrayOutput() ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return i.ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessComparisionArray) ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessComparisionArrayOutput)
}

type ServiceNamingConditionConditionBitnessComparisionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) ToServiceNamingConditionConditionBitnessComparisionOutput() ServiceNamingConditionConditionBitnessComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionBitnessComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBitnessComparisionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessComparisionArrayOutput) ToServiceNamingConditionConditionBitnessComparisionArrayOutput() ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionArrayOutput) ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBitnessComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBitnessComparision {
		return vs[0].([]ServiceNamingConditionConditionBitnessComparision)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBitnessComparisionOutput)
}

type ServiceNamingConditionConditionCloudType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCloudTypeInput is an input type that accepts ServiceNamingConditionConditionCloudTypeArgs and ServiceNamingConditionConditionCloudTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeInput` via:
//
//	ServiceNamingConditionConditionCloudTypeArgs{...}
type ServiceNamingConditionConditionCloudTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeOutput() ServiceNamingConditionConditionCloudTypeOutput
	ToServiceNamingConditionConditionCloudTypeOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeOutput
}

type ServiceNamingConditionConditionCloudTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCloudTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeArgs) ToServiceNamingConditionConditionCloudTypeOutput() ServiceNamingConditionConditionCloudTypeOutput {
	return i.ToServiceNamingConditionConditionCloudTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeArgs) ToServiceNamingConditionConditionCloudTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeOutput)
}

// ServiceNamingConditionConditionCloudTypeArrayInput is an input type that accepts ServiceNamingConditionConditionCloudTypeArray and ServiceNamingConditionConditionCloudTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeArrayInput` via:
//
//	ServiceNamingConditionConditionCloudTypeArray{ ServiceNamingConditionConditionCloudTypeArgs{...} }
type ServiceNamingConditionConditionCloudTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeArrayOutput() ServiceNamingConditionConditionCloudTypeArrayOutput
	ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeArrayOutput
}

type ServiceNamingConditionConditionCloudTypeArray []ServiceNamingConditionConditionCloudTypeInput

func (ServiceNamingConditionConditionCloudTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeArray) ToServiceNamingConditionConditionCloudTypeArrayOutput() ServiceNamingConditionConditionCloudTypeArrayOutput {
	return i.ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeArray) ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeArrayOutput)
}

type ServiceNamingConditionConditionCloudTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeOutput) ToServiceNamingConditionConditionCloudTypeOutput() ServiceNamingConditionConditionCloudTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeOutput) ToServiceNamingConditionConditionCloudTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionCloudTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCloudTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCloudTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCloudTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeArrayOutput) ToServiceNamingConditionConditionCloudTypeArrayOutput() ServiceNamingConditionConditionCloudTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeArrayOutput) ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCloudTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCloudType {
		return vs[0].([]ServiceNamingConditionConditionCloudType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCloudTypeOutput)
}

type ServiceNamingConditionConditionCloudTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCloudTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionCloudTypeComparisonArgs and ServiceNamingConditionConditionCloudTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionCloudTypeComparisonArgs{...}
type ServiceNamingConditionConditionCloudTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeComparisonOutput() ServiceNamingConditionConditionCloudTypeComparisonOutput
	ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeComparisonOutput
}

type ServiceNamingConditionConditionCloudTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCloudTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArgs) ToServiceNamingConditionConditionCloudTypeComparisonOutput() ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArgs) ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeComparisonOutput)
}

// ServiceNamingConditionConditionCloudTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionCloudTypeComparisonArray and ServiceNamingConditionConditionCloudTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionCloudTypeComparisonArray{ ServiceNamingConditionConditionCloudTypeComparisonArgs{...} }
type ServiceNamingConditionConditionCloudTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeComparisonArrayOutput() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput
	ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionCloudTypeComparisonArray []ServiceNamingConditionConditionCloudTypeComparisonInput

func (ServiceNamingConditionConditionCloudTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArray) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutput() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArray) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionCloudTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) ToServiceNamingConditionConditionCloudTypeComparisonOutput() ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCloudTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutput() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCloudTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionCloudTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCloudTypeComparisonOutput)
}

type ServiceNamingConditionConditionComparison struct {
	Negate   *bool   `pulumi:"negate"`
	Type     string  `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionComparisonInput is an input type that accepts ServiceNamingConditionConditionComparisonArgs and ServiceNamingConditionConditionComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionComparisonInput` via:
//
//	ServiceNamingConditionConditionComparisonArgs{...}
type ServiceNamingConditionConditionComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionComparisonOutput() ServiceNamingConditionConditionComparisonOutput
	ToServiceNamingConditionConditionComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionComparisonOutput
}

type ServiceNamingConditionConditionComparisonArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionComparisonArgs) ToServiceNamingConditionConditionComparisonOutput() ServiceNamingConditionConditionComparisonOutput {
	return i.ToServiceNamingConditionConditionComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionComparisonArgs) ToServiceNamingConditionConditionComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionComparisonOutput)
}

// ServiceNamingConditionConditionComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionComparisonArray and ServiceNamingConditionConditionComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionComparisonArray{ ServiceNamingConditionConditionComparisonArgs{...} }
type ServiceNamingConditionConditionComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionComparisonArrayOutput() ServiceNamingConditionConditionComparisonArrayOutput
	ToServiceNamingConditionConditionComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionComparisonArrayOutput
}

type ServiceNamingConditionConditionComparisonArray []ServiceNamingConditionConditionComparisonInput

func (ServiceNamingConditionConditionComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionComparisonArray) ToServiceNamingConditionConditionComparisonArrayOutput() ServiceNamingConditionConditionComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionComparisonArray) ToServiceNamingConditionConditionComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionComparisonArrayOutput)
}

type ServiceNamingConditionConditionComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionComparisonOutput) ToServiceNamingConditionConditionComparisonOutput() ServiceNamingConditionConditionComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonOutput) ToServiceNamingConditionConditionComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionComparisonOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionComparison) string { return v.Type }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionComparisonArrayOutput) ToServiceNamingConditionConditionComparisonArrayOutput() ServiceNamingConditionConditionComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonArrayOutput) ToServiceNamingConditionConditionComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionComparison {
		return vs[0].([]ServiceNamingConditionConditionComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionComparisonOutput)
}

type ServiceNamingConditionConditionCustomApplicationType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCustomApplicationTypeInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeArgs and ServiceNamingConditionConditionCustomApplicationTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeArgs{...}
type ServiceNamingConditionConditionCustomApplicationTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeOutput() ServiceNamingConditionConditionCustomApplicationTypeOutput
	ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCustomApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArgs) ToServiceNamingConditionConditionCustomApplicationTypeOutput() ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArgs) ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeOutput)
}

// ServiceNamingConditionConditionCustomApplicationTypeArrayInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeArray and ServiceNamingConditionConditionCustomApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeArrayInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeArray{ ServiceNamingConditionConditionCustomApplicationTypeArgs{...} }
type ServiceNamingConditionConditionCustomApplicationTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput
	ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeArrayOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeArray []ServiceNamingConditionConditionCustomApplicationTypeInput

func (ServiceNamingConditionConditionCustomApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArray) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArray) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeArrayOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) ToServiceNamingConditionConditionCustomApplicationTypeOutput() ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomApplicationType {
		return vs[0].([]ServiceNamingConditionConditionCustomApplicationType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomApplicationTypeOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCustomApplicationTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs and ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs{...}
type ServiceNamingConditionConditionCustomApplicationTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput
	ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput)
}

// ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeComparisonArray and ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeComparisonArray{ ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs{...} }
type ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput
	ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonArray []ServiceNamingConditionConditionCustomApplicationTypeComparisonInput

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArray) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArray) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomApplicationTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionCustomApplicationTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput)
}

type ServiceNamingConditionConditionCustomHostMetadata struct {
	Attribute  string                                                      `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataDynamicKey `pulumi:"dynamicKey"`
	Unknowns   *string                                                     `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataArgs and ServiceNamingConditionConditionCustomHostMetadataOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataOutput() ServiceNamingConditionConditionCustomHostMetadataOutput
	ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataOutput
}

type ServiceNamingConditionConditionCustomHostMetadataArgs struct {
	Attribute  pulumi.StringInput                                               `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput                                            `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataArgs) ToServiceNamingConditionConditionCustomHostMetadataOutput() ServiceNamingConditionConditionCustomHostMetadataOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataArgs) ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataOutput)
}

// ServiceNamingConditionConditionCustomHostMetadataArrayInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataArray and ServiceNamingConditionConditionCustomHostMetadataArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataArrayInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataArray{ ServiceNamingConditionConditionCustomHostMetadataArgs{...} }
type ServiceNamingConditionConditionCustomHostMetadataArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataArrayOutput() ServiceNamingConditionConditionCustomHostMetadataArrayOutput
	ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataArrayOutput
}

type ServiceNamingConditionConditionCustomHostMetadataArray []ServiceNamingConditionConditionCustomHostMetadataInput

func (ServiceNamingConditionConditionCustomHostMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataArray) ToServiceNamingConditionConditionCustomHostMetadataArrayOutput() ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataArray) ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataArrayOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) ToServiceNamingConditionConditionCustomHostMetadataOutput() ServiceNamingConditionConditionCustomHostMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) DynamicKey() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadata) ServiceNamingConditionConditionCustomHostMetadataDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataArrayOutput() ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomHostMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomHostMetadata {
		return vs[0].([]ServiceNamingConditionConditionCustomHostMetadata)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomHostMetadataOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKey struct {
	Attribute  string                                                                  `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs and ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput
	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput                                                           `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput)
}

// ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray and ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray{ ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs{...} }
type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput
	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray []ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) DynamicKey() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomHostMetadataConditionKey {
		return vs[0].([]ServiceNamingConditionConditionCustomHostMetadataConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs and ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput
	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) string {
		return v.Source
	}).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs and ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput
	ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadata struct {
	Attribute  string                                                         `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataDynamicKey `pulumi:"dynamicKey"`
	Unknowns   *string                                                        `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataArgs and ServiceNamingConditionConditionCustomProcessMetadataOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataOutput() ServiceNamingConditionConditionCustomProcessMetadataOutput
	ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataArgs struct {
	Attribute  pulumi.StringInput                                                  `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput                                               `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArgs) ToServiceNamingConditionConditionCustomProcessMetadataOutput() ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArgs) ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataOutput)
}

// ServiceNamingConditionConditionCustomProcessMetadataArrayInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataArray and ServiceNamingConditionConditionCustomProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataArrayInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataArray{ ServiceNamingConditionConditionCustomProcessMetadataArgs{...} }
type ServiceNamingConditionConditionCustomProcessMetadataArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput
	ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataArrayOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataArray []ServiceNamingConditionConditionCustomProcessMetadataInput

func (ServiceNamingConditionConditionCustomProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArray) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArray) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataArrayOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) ToServiceNamingConditionConditionCustomProcessMetadataOutput() ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) DynamicKey() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadata) ServiceNamingConditionConditionCustomProcessMetadataDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomProcessMetadata {
		return vs[0].([]ServiceNamingConditionConditionCustomProcessMetadata)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomProcessMetadataOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKey struct {
	Attribute  string                                                                     `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs and ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput
	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput                                                              `pulumi:"attribute"`
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput)
}

// ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray and ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray{ ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs{...} }
type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput
	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray []ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) DynamicKey() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomProcessMetadataConditionKey {
		return vs[0].([]ServiceNamingConditionConditionCustomProcessMetadataConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs and ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) string {
		return v.Source
	}).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataDynamicKey struct {
	Key      string  `pulumi:"key"`
	Source   string  `pulumi:"source"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs and ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput
	ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Source   pulumi.StringInput    `pulumi:"source"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDatabaseTopology struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDatabaseTopologyInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyArgs and ServiceNamingConditionConditionDatabaseTopologyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyArgs{...}
type ServiceNamingConditionConditionDatabaseTopologyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyOutput() ServiceNamingConditionConditionDatabaseTopologyOutput
	ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyOutput
}

type ServiceNamingConditionConditionDatabaseTopologyArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDatabaseTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyArgs) ToServiceNamingConditionConditionDatabaseTopologyOutput() ServiceNamingConditionConditionDatabaseTopologyOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyArgs) ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyOutput)
}

// ServiceNamingConditionConditionDatabaseTopologyArrayInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyArray and ServiceNamingConditionConditionDatabaseTopologyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyArrayInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyArray{ ServiceNamingConditionConditionDatabaseTopologyArgs{...} }
type ServiceNamingConditionConditionDatabaseTopologyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyArrayOutput() ServiceNamingConditionConditionDatabaseTopologyArrayOutput
	ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyArrayOutput
}

type ServiceNamingConditionConditionDatabaseTopologyArray []ServiceNamingConditionConditionDatabaseTopologyInput

func (ServiceNamingConditionConditionDatabaseTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyArray) ToServiceNamingConditionConditionDatabaseTopologyArrayOutput() ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyArray) ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyArrayOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) ToServiceNamingConditionConditionDatabaseTopologyOutput() ServiceNamingConditionConditionDatabaseTopologyOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyArrayOutput() ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDatabaseTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDatabaseTopology {
		return vs[0].([]ServiceNamingConditionConditionDatabaseTopology)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDatabaseTopologyOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDatabaseTopologyComparisonInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyComparisonArgs and ServiceNamingConditionConditionDatabaseTopologyComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyComparisonInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyComparisonArgs{...}
type ServiceNamingConditionConditionDatabaseTopologyComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyComparisonOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonOutput
	ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDatabaseTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArgs) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArgs) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyComparisonOutput)
}

// ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyComparisonArray and ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyComparisonArray{ ServiceNamingConditionConditionDatabaseTopologyComparisonArgs{...} }
type ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput
	ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonArray []ServiceNamingConditionConditionDatabaseTopologyComparisonInput

func (ServiceNamingConditionConditionDatabaseTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArray) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArray) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDatabaseTopologyComparison {
		return vs[0].([]ServiceNamingConditionConditionDatabaseTopologyComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDatabaseTopologyComparisonOutput)
}

type ServiceNamingConditionConditionDcrumDecoder struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDcrumDecoderInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderArgs and ServiceNamingConditionConditionDcrumDecoderOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderArgs{...}
type ServiceNamingConditionConditionDcrumDecoderInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderOutput() ServiceNamingConditionConditionDcrumDecoderOutput
	ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderOutput
}

type ServiceNamingConditionConditionDcrumDecoderArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDcrumDecoderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderArgs) ToServiceNamingConditionConditionDcrumDecoderOutput() ServiceNamingConditionConditionDcrumDecoderOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderArgs) ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderOutput)
}

// ServiceNamingConditionConditionDcrumDecoderArrayInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderArray and ServiceNamingConditionConditionDcrumDecoderArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderArrayInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderArray{ ServiceNamingConditionConditionDcrumDecoderArgs{...} }
type ServiceNamingConditionConditionDcrumDecoderArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderArrayOutput() ServiceNamingConditionConditionDcrumDecoderArrayOutput
	ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderArrayOutput
}

type ServiceNamingConditionConditionDcrumDecoderArray []ServiceNamingConditionConditionDcrumDecoderInput

func (ServiceNamingConditionConditionDcrumDecoderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderArray) ToServiceNamingConditionConditionDcrumDecoderArrayOutput() ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderArray) ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderArrayOutput)
}

type ServiceNamingConditionConditionDcrumDecoderOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) ToServiceNamingConditionConditionDcrumDecoderOutput() ServiceNamingConditionConditionDcrumDecoderOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDcrumDecoderArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderArrayOutput) ToServiceNamingConditionConditionDcrumDecoderArrayOutput() ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderArrayOutput) ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDcrumDecoderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDcrumDecoder {
		return vs[0].([]ServiceNamingConditionConditionDcrumDecoder)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDcrumDecoderOutput)
}

type ServiceNamingConditionConditionDcrumDecoderComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDcrumDecoderComparisonInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderComparisonArgs and ServiceNamingConditionConditionDcrumDecoderComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderComparisonInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderComparisonArgs{...}
type ServiceNamingConditionConditionDcrumDecoderComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderComparisonOutput() ServiceNamingConditionConditionDcrumDecoderComparisonOutput
	ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonOutput
}

type ServiceNamingConditionConditionDcrumDecoderComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDcrumDecoderComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArgs) ToServiceNamingConditionConditionDcrumDecoderComparisonOutput() ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArgs) ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderComparisonOutput)
}

// ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderComparisonArray and ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderComparisonArray{ ServiceNamingConditionConditionDcrumDecoderComparisonArgs{...} }
type ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput
	ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput
}

type ServiceNamingConditionConditionDcrumDecoderComparisonArray []ServiceNamingConditionConditionDcrumDecoderComparisonInput

func (ServiceNamingConditionConditionDcrumDecoderComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArray) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArray) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput)
}

type ServiceNamingConditionConditionDcrumDecoderComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonOutput() ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDcrumDecoderComparison {
		return vs[0].([]ServiceNamingConditionConditionDcrumDecoderComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDcrumDecoderComparisonOutput)
}

type ServiceNamingConditionConditionEntity struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionEntityInput is an input type that accepts ServiceNamingConditionConditionEntityArgs and ServiceNamingConditionConditionEntityOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityInput` via:
//
//	ServiceNamingConditionConditionEntityArgs{...}
type ServiceNamingConditionConditionEntityInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityOutput() ServiceNamingConditionConditionEntityOutput
	ToServiceNamingConditionConditionEntityOutputWithContext(context.Context) ServiceNamingConditionConditionEntityOutput
}

type ServiceNamingConditionConditionEntityArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityArgs) ToServiceNamingConditionConditionEntityOutput() ServiceNamingConditionConditionEntityOutput {
	return i.ToServiceNamingConditionConditionEntityOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityArgs) ToServiceNamingConditionConditionEntityOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityOutput)
}

// ServiceNamingConditionConditionEntityArrayInput is an input type that accepts ServiceNamingConditionConditionEntityArray and ServiceNamingConditionConditionEntityArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityArrayInput` via:
//
//	ServiceNamingConditionConditionEntityArray{ ServiceNamingConditionConditionEntityArgs{...} }
type ServiceNamingConditionConditionEntityArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityArrayOutput() ServiceNamingConditionConditionEntityArrayOutput
	ToServiceNamingConditionConditionEntityArrayOutputWithContext(context.Context) ServiceNamingConditionConditionEntityArrayOutput
}

type ServiceNamingConditionConditionEntityArray []ServiceNamingConditionConditionEntityInput

func (ServiceNamingConditionConditionEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityArray) ToServiceNamingConditionConditionEntityArrayOutput() ServiceNamingConditionConditionEntityArrayOutput {
	return i.ToServiceNamingConditionConditionEntityArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityArray) ToServiceNamingConditionConditionEntityArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityArrayOutput)
}

type ServiceNamingConditionConditionEntityOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityOutput) ToServiceNamingConditionConditionEntityOutput() ServiceNamingConditionConditionEntityOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityOutput) ToServiceNamingConditionConditionEntityOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionEntityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionEntityOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionEntityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionEntityArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityArrayOutput) ToServiceNamingConditionConditionEntityArrayOutput() ServiceNamingConditionConditionEntityArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityArrayOutput) ToServiceNamingConditionConditionEntityArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionEntity {
		return vs[0].([]ServiceNamingConditionConditionEntity)[vs[1].(int)]
	}).(ServiceNamingConditionConditionEntityOutput)
}

type ServiceNamingConditionConditionEntityIdComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionEntityIdComparisonInput is an input type that accepts ServiceNamingConditionConditionEntityIdComparisonArgs and ServiceNamingConditionConditionEntityIdComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityIdComparisonInput` via:
//
//	ServiceNamingConditionConditionEntityIdComparisonArgs{...}
type ServiceNamingConditionConditionEntityIdComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityIdComparisonOutput() ServiceNamingConditionConditionEntityIdComparisonOutput
	ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionEntityIdComparisonOutput
}

type ServiceNamingConditionConditionEntityIdComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionEntityIdComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityIdComparisonArgs) ToServiceNamingConditionConditionEntityIdComparisonOutput() ServiceNamingConditionConditionEntityIdComparisonOutput {
	return i.ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityIdComparisonArgs) ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityIdComparisonOutput)
}

// ServiceNamingConditionConditionEntityIdComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionEntityIdComparisonArray and ServiceNamingConditionConditionEntityIdComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityIdComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionEntityIdComparisonArray{ ServiceNamingConditionConditionEntityIdComparisonArgs{...} }
type ServiceNamingConditionConditionEntityIdComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityIdComparisonArrayOutput() ServiceNamingConditionConditionEntityIdComparisonArrayOutput
	ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionEntityIdComparisonArrayOutput
}

type ServiceNamingConditionConditionEntityIdComparisonArray []ServiceNamingConditionConditionEntityIdComparisonInput

func (ServiceNamingConditionConditionEntityIdComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityIdComparisonArray) ToServiceNamingConditionConditionEntityIdComparisonArrayOutput() ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityIdComparisonArray) ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityIdComparisonArrayOutput)
}

type ServiceNamingConditionConditionEntityIdComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityIdComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) ToServiceNamingConditionConditionEntityIdComparisonOutput() ServiceNamingConditionConditionEntityIdComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionEntityIdComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityIdComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityIdComparisonArrayOutput) ToServiceNamingConditionConditionEntityIdComparisonArrayOutput() ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonArrayOutput) ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionEntityIdComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionEntityIdComparison {
		return vs[0].([]ServiceNamingConditionConditionEntityIdComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionEntityIdComparisonOutput)
}

type ServiceNamingConditionConditionHostTech struct {
	Negate   *bool                                         `pulumi:"negate"`
	Operator string                                        `pulumi:"operator"`
	Unknowns *string                                       `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionHostTechValue `pulumi:"value"`
}

// ServiceNamingConditionConditionHostTechInput is an input type that accepts ServiceNamingConditionConditionHostTechArgs and ServiceNamingConditionConditionHostTechOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechInput` via:
//
//	ServiceNamingConditionConditionHostTechArgs{...}
type ServiceNamingConditionConditionHostTechInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechOutput() ServiceNamingConditionConditionHostTechOutput
	ToServiceNamingConditionConditionHostTechOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechOutput
}

type ServiceNamingConditionConditionHostTechArgs struct {
	Negate   pulumi.BoolPtrInput                                  `pulumi:"negate"`
	Operator pulumi.StringInput                                   `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionHostTechValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionHostTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHostTechArgs) ToServiceNamingConditionConditionHostTechOutput() ServiceNamingConditionConditionHostTechOutput {
	return i.ToServiceNamingConditionConditionHostTechOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechArgs) ToServiceNamingConditionConditionHostTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechOutput)
}

// ServiceNamingConditionConditionHostTechArrayInput is an input type that accepts ServiceNamingConditionConditionHostTechArray and ServiceNamingConditionConditionHostTechArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechArrayInput` via:
//
//	ServiceNamingConditionConditionHostTechArray{ ServiceNamingConditionConditionHostTechArgs{...} }
type ServiceNamingConditionConditionHostTechArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechArrayOutput() ServiceNamingConditionConditionHostTechArrayOutput
	ToServiceNamingConditionConditionHostTechArrayOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechArrayOutput
}

type ServiceNamingConditionConditionHostTechArray []ServiceNamingConditionConditionHostTechInput

func (ServiceNamingConditionConditionHostTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHostTechArray) ToServiceNamingConditionConditionHostTechArrayOutput() ServiceNamingConditionConditionHostTechArrayOutput {
	return i.ToServiceNamingConditionConditionHostTechArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechArray) ToServiceNamingConditionConditionHostTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechArrayOutput)
}

type ServiceNamingConditionConditionHostTechOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechOutput) ToServiceNamingConditionConditionHostTechOutput() ServiceNamingConditionConditionHostTechOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechOutput) ToServiceNamingConditionConditionHostTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionHostTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionHostTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHostTechOutput) Value() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) *ServiceNamingConditionConditionHostTechValue {
		return v.Value
	}).(ServiceNamingConditionConditionHostTechValuePtrOutput)
}

type ServiceNamingConditionConditionHostTechArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechArrayOutput) ToServiceNamingConditionConditionHostTechArrayOutput() ServiceNamingConditionConditionHostTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechArrayOutput) ToServiceNamingConditionConditionHostTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionHostTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionHostTech {
		return vs[0].([]ServiceNamingConditionConditionHostTech)[vs[1].(int)]
	}).(ServiceNamingConditionConditionHostTechOutput)
}

type ServiceNamingConditionConditionHostTechValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionHostTechValueInput is an input type that accepts ServiceNamingConditionConditionHostTechValueArgs and ServiceNamingConditionConditionHostTechValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechValueInput` via:
//
//	ServiceNamingConditionConditionHostTechValueArgs{...}
type ServiceNamingConditionConditionHostTechValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechValueOutput() ServiceNamingConditionConditionHostTechValueOutput
	ToServiceNamingConditionConditionHostTechValueOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechValueOutput
}

type ServiceNamingConditionConditionHostTechValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionHostTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValueOutput() ServiceNamingConditionConditionHostTechValueOutput {
	return i.ToServiceNamingConditionConditionHostTechValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechValueOutput)
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechValueOutput).ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionHostTechValuePtrInput is an input type that accepts ServiceNamingConditionConditionHostTechValueArgs, ServiceNamingConditionConditionHostTechValuePtr and ServiceNamingConditionConditionHostTechValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechValuePtrInput` via:
//
//	        ServiceNamingConditionConditionHostTechValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionHostTechValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput
	ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput
}

type serviceNamingConditionConditionHostTechValuePtrType ServiceNamingConditionConditionHostTechValueArgs

func ServiceNamingConditionConditionHostTechValuePtr(v *ServiceNamingConditionConditionHostTechValueArgs) ServiceNamingConditionConditionHostTechValuePtrInput {
	return (*serviceNamingConditionConditionHostTechValuePtrType)(v)
}

func (*serviceNamingConditionConditionHostTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionHostTechValuePtrType) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionHostTechValuePtrType) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechValuePtrOutput)
}

type ServiceNamingConditionConditionHostTechValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValueOutput() ServiceNamingConditionConditionHostTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o.ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionHostTechValue) *ServiceNamingConditionConditionHostTechValue {
		return &v
	}).(ServiceNamingConditionConditionHostTechValuePtrOutput)
}

func (o ServiceNamingConditionConditionHostTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHostTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHostTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHostTechValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) Elem() ServiceNamingConditionConditionHostTechValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) ServiceNamingConditionConditionHostTechValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionHostTechValue
		return ret
	}).(ServiceNamingConditionConditionHostTechValueOutput)
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHypervisor struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionHypervisorInput is an input type that accepts ServiceNamingConditionConditionHypervisorArgs and ServiceNamingConditionConditionHypervisorOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorInput` via:
//
//	ServiceNamingConditionConditionHypervisorArgs{...}
type ServiceNamingConditionConditionHypervisorInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorOutput() ServiceNamingConditionConditionHypervisorOutput
	ToServiceNamingConditionConditionHypervisorOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorOutput
}

type ServiceNamingConditionConditionHypervisorArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionHypervisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorArgs) ToServiceNamingConditionConditionHypervisorOutput() ServiceNamingConditionConditionHypervisorOutput {
	return i.ToServiceNamingConditionConditionHypervisorOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorArgs) ToServiceNamingConditionConditionHypervisorOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorOutput)
}

// ServiceNamingConditionConditionHypervisorArrayInput is an input type that accepts ServiceNamingConditionConditionHypervisorArray and ServiceNamingConditionConditionHypervisorArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorArrayInput` via:
//
//	ServiceNamingConditionConditionHypervisorArray{ ServiceNamingConditionConditionHypervisorArgs{...} }
type ServiceNamingConditionConditionHypervisorArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorArrayOutput() ServiceNamingConditionConditionHypervisorArrayOutput
	ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorArrayOutput
}

type ServiceNamingConditionConditionHypervisorArray []ServiceNamingConditionConditionHypervisorInput

func (ServiceNamingConditionConditionHypervisorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorArray) ToServiceNamingConditionConditionHypervisorArrayOutput() ServiceNamingConditionConditionHypervisorArrayOutput {
	return i.ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorArray) ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorArrayOutput)
}

type ServiceNamingConditionConditionHypervisorOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorOutput) ToServiceNamingConditionConditionHypervisorOutput() ServiceNamingConditionConditionHypervisorOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorOutput) ToServiceNamingConditionConditionHypervisorOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionHypervisorOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionHypervisorOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHypervisorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHypervisorArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorArrayOutput) ToServiceNamingConditionConditionHypervisorArrayOutput() ServiceNamingConditionConditionHypervisorArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorArrayOutput) ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionHypervisorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionHypervisor {
		return vs[0].([]ServiceNamingConditionConditionHypervisor)[vs[1].(int)]
	}).(ServiceNamingConditionConditionHypervisorOutput)
}

type ServiceNamingConditionConditionHypervisorTypeComparision struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionHypervisorTypeComparisionInput is an input type that accepts ServiceNamingConditionConditionHypervisorTypeComparisionArgs and ServiceNamingConditionConditionHypervisorTypeComparisionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorTypeComparisionInput` via:
//
//	ServiceNamingConditionConditionHypervisorTypeComparisionArgs{...}
type ServiceNamingConditionConditionHypervisorTypeComparisionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorTypeComparisionOutput() ServiceNamingConditionConditionHypervisorTypeComparisionOutput
	ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionOutput
}

type ServiceNamingConditionConditionHypervisorTypeComparisionArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionHypervisorTypeComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArgs) ToServiceNamingConditionConditionHypervisorTypeComparisionOutput() ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return i.ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArgs) ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorTypeComparisionOutput)
}

// ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput is an input type that accepts ServiceNamingConditionConditionHypervisorTypeComparisionArray and ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput` via:
//
//	ServiceNamingConditionConditionHypervisorTypeComparisionArray{ ServiceNamingConditionConditionHypervisorTypeComparisionArgs{...} }
type ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput
	ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput
}

type ServiceNamingConditionConditionHypervisorTypeComparisionArray []ServiceNamingConditionConditionHypervisorTypeComparisionInput

func (ServiceNamingConditionConditionHypervisorTypeComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArray) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return i.ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArray) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput)
}

type ServiceNamingConditionConditionHypervisorTypeComparisionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorTypeComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionOutput() ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionHypervisorTypeComparision {
		return vs[0].([]ServiceNamingConditionConditionHypervisorTypeComparision)[vs[1].(int)]
	}).(ServiceNamingConditionConditionHypervisorTypeComparisionOutput)
}

type ServiceNamingConditionConditionIndexedName struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedNameInput is an input type that accepts ServiceNamingConditionConditionIndexedNameArgs and ServiceNamingConditionConditionIndexedNameOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameInput` via:
//
//	ServiceNamingConditionConditionIndexedNameArgs{...}
type ServiceNamingConditionConditionIndexedNameInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameOutput() ServiceNamingConditionConditionIndexedNameOutput
	ToServiceNamingConditionConditionIndexedNameOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameOutput
}

type ServiceNamingConditionConditionIndexedNameArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameArgs) ToServiceNamingConditionConditionIndexedNameOutput() ServiceNamingConditionConditionIndexedNameOutput {
	return i.ToServiceNamingConditionConditionIndexedNameOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameArgs) ToServiceNamingConditionConditionIndexedNameOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameOutput)
}

// ServiceNamingConditionConditionIndexedNameArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedNameArray and ServiceNamingConditionConditionIndexedNameArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedNameArray{ ServiceNamingConditionConditionIndexedNameArgs{...} }
type ServiceNamingConditionConditionIndexedNameArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameArrayOutput() ServiceNamingConditionConditionIndexedNameArrayOutput
	ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameArrayOutput
}

type ServiceNamingConditionConditionIndexedNameArray []ServiceNamingConditionConditionIndexedNameInput

func (ServiceNamingConditionConditionIndexedNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameArray) ToServiceNamingConditionConditionIndexedNameArrayOutput() ServiceNamingConditionConditionIndexedNameArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameArray) ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameArrayOutput)
}

type ServiceNamingConditionConditionIndexedNameOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameOutput) ToServiceNamingConditionConditionIndexedNameOutput() ServiceNamingConditionConditionIndexedNameOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameOutput) ToServiceNamingConditionConditionIndexedNameOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedNameOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedNameOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedNameOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedNameArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameArrayOutput) ToServiceNamingConditionConditionIndexedNameArrayOutput() ServiceNamingConditionConditionIndexedNameArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameArrayOutput) ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedName {
		return vs[0].([]ServiceNamingConditionConditionIndexedName)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedNameOutput)
}

type ServiceNamingConditionConditionIndexedNameComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedNameComparisonInput is an input type that accepts ServiceNamingConditionConditionIndexedNameComparisonArgs and ServiceNamingConditionConditionIndexedNameComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameComparisonInput` via:
//
//	ServiceNamingConditionConditionIndexedNameComparisonArgs{...}
type ServiceNamingConditionConditionIndexedNameComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameComparisonOutput() ServiceNamingConditionConditionIndexedNameComparisonOutput
	ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameComparisonOutput
}

type ServiceNamingConditionConditionIndexedNameComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedNameComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArgs) ToServiceNamingConditionConditionIndexedNameComparisonOutput() ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return i.ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArgs) ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameComparisonOutput)
}

// ServiceNamingConditionConditionIndexedNameComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedNameComparisonArray and ServiceNamingConditionConditionIndexedNameComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedNameComparisonArray{ ServiceNamingConditionConditionIndexedNameComparisonArgs{...} }
type ServiceNamingConditionConditionIndexedNameComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameComparisonArrayOutput() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput
	ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameComparisonArrayOutput
}

type ServiceNamingConditionConditionIndexedNameComparisonArray []ServiceNamingConditionConditionIndexedNameComparisonInput

func (ServiceNamingConditionConditionIndexedNameComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArray) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutput() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArray) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameComparisonArrayOutput)
}

type ServiceNamingConditionConditionIndexedNameComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) ToServiceNamingConditionConditionIndexedNameComparisonOutput() ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedNameComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutput() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedNameComparison {
		return vs[0].([]ServiceNamingConditionConditionIndexedNameComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedNameComparisonOutput)
}

type ServiceNamingConditionConditionIndexedString struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedStringInput is an input type that accepts ServiceNamingConditionConditionIndexedStringArgs and ServiceNamingConditionConditionIndexedStringOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringInput` via:
//
//	ServiceNamingConditionConditionIndexedStringArgs{...}
type ServiceNamingConditionConditionIndexedStringInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringOutput() ServiceNamingConditionConditionIndexedStringOutput
	ToServiceNamingConditionConditionIndexedStringOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringOutput
}

type ServiceNamingConditionConditionIndexedStringArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringArgs) ToServiceNamingConditionConditionIndexedStringOutput() ServiceNamingConditionConditionIndexedStringOutput {
	return i.ToServiceNamingConditionConditionIndexedStringOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringArgs) ToServiceNamingConditionConditionIndexedStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringOutput)
}

// ServiceNamingConditionConditionIndexedStringArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedStringArray and ServiceNamingConditionConditionIndexedStringArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedStringArray{ ServiceNamingConditionConditionIndexedStringArgs{...} }
type ServiceNamingConditionConditionIndexedStringArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringArrayOutput() ServiceNamingConditionConditionIndexedStringArrayOutput
	ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringArrayOutput
}

type ServiceNamingConditionConditionIndexedStringArray []ServiceNamingConditionConditionIndexedStringInput

func (ServiceNamingConditionConditionIndexedStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringArray) ToServiceNamingConditionConditionIndexedStringArrayOutput() ServiceNamingConditionConditionIndexedStringArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringArray) ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringArrayOutput)
}

type ServiceNamingConditionConditionIndexedStringOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringOutput) ToServiceNamingConditionConditionIndexedStringOutput() ServiceNamingConditionConditionIndexedStringOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringOutput) ToServiceNamingConditionConditionIndexedStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedStringArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringArrayOutput) ToServiceNamingConditionConditionIndexedStringArrayOutput() ServiceNamingConditionConditionIndexedStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringArrayOutput) ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedString {
		return vs[0].([]ServiceNamingConditionConditionIndexedString)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedStringOutput)
}

type ServiceNamingConditionConditionIndexedStringComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedStringComparisonInput is an input type that accepts ServiceNamingConditionConditionIndexedStringComparisonArgs and ServiceNamingConditionConditionIndexedStringComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringComparisonInput` via:
//
//	ServiceNamingConditionConditionIndexedStringComparisonArgs{...}
type ServiceNamingConditionConditionIndexedStringComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringComparisonOutput() ServiceNamingConditionConditionIndexedStringComparisonOutput
	ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringComparisonOutput
}

type ServiceNamingConditionConditionIndexedStringComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArgs) ToServiceNamingConditionConditionIndexedStringComparisonOutput() ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return i.ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArgs) ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringComparisonOutput)
}

// ServiceNamingConditionConditionIndexedStringComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedStringComparisonArray and ServiceNamingConditionConditionIndexedStringComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedStringComparisonArray{ ServiceNamingConditionConditionIndexedStringComparisonArgs{...} }
type ServiceNamingConditionConditionIndexedStringComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringComparisonArrayOutput() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput
	ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringComparisonArrayOutput
}

type ServiceNamingConditionConditionIndexedStringComparisonArray []ServiceNamingConditionConditionIndexedStringComparisonInput

func (ServiceNamingConditionConditionIndexedStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArray) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutput() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArray) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringComparisonArrayOutput)
}

type ServiceNamingConditionConditionIndexedStringComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) ToServiceNamingConditionConditionIndexedStringComparisonOutput() ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutput() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedStringComparison {
		return vs[0].([]ServiceNamingConditionConditionIndexedStringComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedStringComparisonOutput)
}

type ServiceNamingConditionConditionIndexedTag struct {
	Negate   *bool                                           `pulumi:"negate"`
	Operator string                                          `pulumi:"operator"`
	Unknowns *string                                         `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionIndexedTagValue `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagInput is an input type that accepts ServiceNamingConditionConditionIndexedTagArgs and ServiceNamingConditionConditionIndexedTagOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagInput` via:
//
//	ServiceNamingConditionConditionIndexedTagArgs{...}
type ServiceNamingConditionConditionIndexedTagInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagOutput() ServiceNamingConditionConditionIndexedTagOutput
	ToServiceNamingConditionConditionIndexedTagOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagOutput
}

type ServiceNamingConditionConditionIndexedTagArgs struct {
	Negate   pulumi.BoolPtrInput                                    `pulumi:"negate"`
	Operator pulumi.StringInput                                     `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                                  `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionIndexedTagValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagArgs) ToServiceNamingConditionConditionIndexedTagOutput() ServiceNamingConditionConditionIndexedTagOutput {
	return i.ToServiceNamingConditionConditionIndexedTagOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagArgs) ToServiceNamingConditionConditionIndexedTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagOutput)
}

// ServiceNamingConditionConditionIndexedTagArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedTagArray and ServiceNamingConditionConditionIndexedTagArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedTagArray{ ServiceNamingConditionConditionIndexedTagArgs{...} }
type ServiceNamingConditionConditionIndexedTagArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagArrayOutput() ServiceNamingConditionConditionIndexedTagArrayOutput
	ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagArrayOutput
}

type ServiceNamingConditionConditionIndexedTagArray []ServiceNamingConditionConditionIndexedTagInput

func (ServiceNamingConditionConditionIndexedTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagArray) ToServiceNamingConditionConditionIndexedTagArrayOutput() ServiceNamingConditionConditionIndexedTagArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagArray) ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagArrayOutput)
}

type ServiceNamingConditionConditionIndexedTagOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagOutput) ToServiceNamingConditionConditionIndexedTagOutput() ServiceNamingConditionConditionIndexedTagOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagOutput) ToServiceNamingConditionConditionIndexedTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagOutput) Value() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) *ServiceNamingConditionConditionIndexedTagValue {
		return v.Value
	}).(ServiceNamingConditionConditionIndexedTagValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagArrayOutput) ToServiceNamingConditionConditionIndexedTagArrayOutput() ServiceNamingConditionConditionIndexedTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagArrayOutput) ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedTag {
		return vs[0].([]ServiceNamingConditionConditionIndexedTag)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedTagOutput)
}

type ServiceNamingConditionConditionIndexedTagComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                   `pulumi:"type"`
	Unknowns *string                                                   `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionIndexedTagComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagComparisonInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonArgs and ServiceNamingConditionConditionIndexedTagComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonInput` via:
//
//	ServiceNamingConditionConditionIndexedTagComparisonArgs{...}
type ServiceNamingConditionConditionIndexedTagComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonOutput() ServiceNamingConditionConditionIndexedTagComparisonOutput
	ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonOutput
}

type ServiceNamingConditionConditionIndexedTagComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                            `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                            `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArgs) ToServiceNamingConditionConditionIndexedTagComparisonOutput() ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArgs) ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonOutput)
}

// ServiceNamingConditionConditionIndexedTagComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonArray and ServiceNamingConditionConditionIndexedTagComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedTagComparisonArray{ ServiceNamingConditionConditionIndexedTagComparisonArgs{...} }
type ServiceNamingConditionConditionIndexedTagComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonArrayOutput() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput
	ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonArrayOutput
}

type ServiceNamingConditionConditionIndexedTagComparisonArray []ServiceNamingConditionConditionIndexedTagComparisonInput

func (ServiceNamingConditionConditionIndexedTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArray) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutput() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArray) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonArrayOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) ToServiceNamingConditionConditionIndexedTagComparisonOutput() ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Value() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *ServiceNamingConditionConditionIndexedTagComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutput() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedTagComparison {
		return vs[0].([]ServiceNamingConditionConditionIndexedTagComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedTagComparisonOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagComparisonValueInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonValueArgs and ServiceNamingConditionConditionIndexedTagComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonValueInput` via:
//
//	ServiceNamingConditionConditionIndexedTagComparisonValueArgs{...}
type ServiceNamingConditionConditionIndexedTagComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonValueOutput() ServiceNamingConditionConditionIndexedTagComparisonValueOutput
	ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonValueOutput
}

type ServiceNamingConditionConditionIndexedTagComparisonValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValueOutput() ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonValueOutput)
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonValueOutput).ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonValueArgs, ServiceNamingConditionConditionIndexedTagComparisonValuePtr and ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionIndexedTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput
	ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput
}

type serviceNamingConditionConditionIndexedTagComparisonValuePtrType ServiceNamingConditionConditionIndexedTagComparisonValueArgs

func ServiceNamingConditionConditionIndexedTagComparisonValuePtr(v *ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput {
	return (*serviceNamingConditionConditionIndexedTagComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionIndexedTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionIndexedTagComparisonValuePtrType) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionIndexedTagComparisonValuePtrType) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValueOutput() ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionIndexedTagComparisonValue) *ServiceNamingConditionConditionIndexedTagComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) ServiceNamingConditionConditionIndexedTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionIndexedTagComparisonValue
		return ret
	}).(ServiceNamingConditionConditionIndexedTagComparisonValueOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagValueInput is an input type that accepts ServiceNamingConditionConditionIndexedTagValueArgs and ServiceNamingConditionConditionIndexedTagValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagValueInput` via:
//
//	ServiceNamingConditionConditionIndexedTagValueArgs{...}
type ServiceNamingConditionConditionIndexedTagValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagValueOutput() ServiceNamingConditionConditionIndexedTagValueOutput
	ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagValueOutput
}

type ServiceNamingConditionConditionIndexedTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValueOutput() ServiceNamingConditionConditionIndexedTagValueOutput {
	return i.ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagValueOutput)
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagValueOutput).ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionIndexedTagValuePtrInput is an input type that accepts ServiceNamingConditionConditionIndexedTagValueArgs, ServiceNamingConditionConditionIndexedTagValuePtr and ServiceNamingConditionConditionIndexedTagValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagValuePtrInput` via:
//
//	        ServiceNamingConditionConditionIndexedTagValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionIndexedTagValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput
	ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput
}

type serviceNamingConditionConditionIndexedTagValuePtrType ServiceNamingConditionConditionIndexedTagValueArgs

func ServiceNamingConditionConditionIndexedTagValuePtr(v *ServiceNamingConditionConditionIndexedTagValueArgs) ServiceNamingConditionConditionIndexedTagValuePtrInput {
	return (*serviceNamingConditionConditionIndexedTagValuePtrType)(v)
}

func (*serviceNamingConditionConditionIndexedTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionIndexedTagValuePtrType) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionIndexedTagValuePtrType) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValueOutput() ServiceNamingConditionConditionIndexedTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionIndexedTagValue) *ServiceNamingConditionConditionIndexedTagValue {
		return &v
	}).(ServiceNamingConditionConditionIndexedTagValuePtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedTagValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Elem() ServiceNamingConditionConditionIndexedTagValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) ServiceNamingConditionConditionIndexedTagValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionIndexedTagValue
		return ret
	}).(ServiceNamingConditionConditionIndexedTagValueOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionInteger struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *int    `pulumi:"value"`
}

// ServiceNamingConditionConditionIntegerInput is an input type that accepts ServiceNamingConditionConditionIntegerArgs and ServiceNamingConditionConditionIntegerOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerInput` via:
//
//	ServiceNamingConditionConditionIntegerArgs{...}
type ServiceNamingConditionConditionIntegerInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerOutput() ServiceNamingConditionConditionIntegerOutput
	ToServiceNamingConditionConditionIntegerOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerOutput
}

type ServiceNamingConditionConditionIntegerArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.IntPtrInput    `pulumi:"value"`
}

func (ServiceNamingConditionConditionIntegerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerArgs) ToServiceNamingConditionConditionIntegerOutput() ServiceNamingConditionConditionIntegerOutput {
	return i.ToServiceNamingConditionConditionIntegerOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerArgs) ToServiceNamingConditionConditionIntegerOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerOutput)
}

// ServiceNamingConditionConditionIntegerArrayInput is an input type that accepts ServiceNamingConditionConditionIntegerArray and ServiceNamingConditionConditionIntegerArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerArrayInput` via:
//
//	ServiceNamingConditionConditionIntegerArray{ ServiceNamingConditionConditionIntegerArgs{...} }
type ServiceNamingConditionConditionIntegerArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerArrayOutput() ServiceNamingConditionConditionIntegerArrayOutput
	ToServiceNamingConditionConditionIntegerArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerArrayOutput
}

type ServiceNamingConditionConditionIntegerArray []ServiceNamingConditionConditionIntegerInput

func (ServiceNamingConditionConditionIntegerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerArray) ToServiceNamingConditionConditionIntegerArrayOutput() ServiceNamingConditionConditionIntegerArrayOutput {
	return i.ToServiceNamingConditionConditionIntegerArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerArray) ToServiceNamingConditionConditionIntegerArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerArrayOutput)
}

type ServiceNamingConditionConditionIntegerOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerOutput) ToServiceNamingConditionConditionIntegerOutput() ServiceNamingConditionConditionIntegerOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerOutput) ToServiceNamingConditionConditionIntegerOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIntegerOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIntegerOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIntegerOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ServiceNamingConditionConditionIntegerArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerArrayOutput) ToServiceNamingConditionConditionIntegerArrayOutput() ServiceNamingConditionConditionIntegerArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerArrayOutput) ToServiceNamingConditionConditionIntegerArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIntegerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionInteger {
		return vs[0].([]ServiceNamingConditionConditionInteger)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIntegerOutput)
}

type ServiceNamingConditionConditionIntegerComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *int    `pulumi:"value"`
}

// ServiceNamingConditionConditionIntegerComparisonInput is an input type that accepts ServiceNamingConditionConditionIntegerComparisonArgs and ServiceNamingConditionConditionIntegerComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerComparisonInput` via:
//
//	ServiceNamingConditionConditionIntegerComparisonArgs{...}
type ServiceNamingConditionConditionIntegerComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerComparisonOutput() ServiceNamingConditionConditionIntegerComparisonOutput
	ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerComparisonOutput
}

type ServiceNamingConditionConditionIntegerComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.IntPtrInput    `pulumi:"value"`
}

func (ServiceNamingConditionConditionIntegerComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerComparisonArgs) ToServiceNamingConditionConditionIntegerComparisonOutput() ServiceNamingConditionConditionIntegerComparisonOutput {
	return i.ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerComparisonArgs) ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerComparisonOutput)
}

// ServiceNamingConditionConditionIntegerComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIntegerComparisonArray and ServiceNamingConditionConditionIntegerComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIntegerComparisonArray{ ServiceNamingConditionConditionIntegerComparisonArgs{...} }
type ServiceNamingConditionConditionIntegerComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerComparisonArrayOutput() ServiceNamingConditionConditionIntegerComparisonArrayOutput
	ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerComparisonArrayOutput
}

type ServiceNamingConditionConditionIntegerComparisonArray []ServiceNamingConditionConditionIntegerComparisonInput

func (ServiceNamingConditionConditionIntegerComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerComparisonArray) ToServiceNamingConditionConditionIntegerComparisonArrayOutput() ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerComparisonArray) ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerComparisonArrayOutput)
}

type ServiceNamingConditionConditionIntegerComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) ToServiceNamingConditionConditionIntegerComparisonOutput() ServiceNamingConditionConditionIntegerComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIntegerComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ServiceNamingConditionConditionIntegerComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerComparisonArrayOutput) ToServiceNamingConditionConditionIntegerComparisonArrayOutput() ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonArrayOutput) ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIntegerComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIntegerComparison {
		return vs[0].([]ServiceNamingConditionConditionIntegerComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIntegerComparisonOutput)
}

type ServiceNamingConditionConditionIpaddress struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Negate        *bool   `pulumi:"negate"`
	Operator      string  `pulumi:"operator"`
	Unknowns      *string `pulumi:"unknowns"`
	Value         *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIpaddressInput is an input type that accepts ServiceNamingConditionConditionIpaddressArgs and ServiceNamingConditionConditionIpaddressOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressInput` via:
//
//	ServiceNamingConditionConditionIpaddressArgs{...}
type ServiceNamingConditionConditionIpaddressInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressOutput() ServiceNamingConditionConditionIpaddressOutput
	ToServiceNamingConditionConditionIpaddressOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressOutput
}

type ServiceNamingConditionConditionIpaddressArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator      pulumi.StringInput    `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIpaddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressArgs) ToServiceNamingConditionConditionIpaddressOutput() ServiceNamingConditionConditionIpaddressOutput {
	return i.ToServiceNamingConditionConditionIpaddressOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressArgs) ToServiceNamingConditionConditionIpaddressOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressOutput)
}

// ServiceNamingConditionConditionIpaddressArrayInput is an input type that accepts ServiceNamingConditionConditionIpaddressArray and ServiceNamingConditionConditionIpaddressArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressArrayInput` via:
//
//	ServiceNamingConditionConditionIpaddressArray{ ServiceNamingConditionConditionIpaddressArgs{...} }
type ServiceNamingConditionConditionIpaddressArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressArrayOutput() ServiceNamingConditionConditionIpaddressArrayOutput
	ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressArrayOutput
}

type ServiceNamingConditionConditionIpaddressArray []ServiceNamingConditionConditionIpaddressInput

func (ServiceNamingConditionConditionIpaddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressArray) ToServiceNamingConditionConditionIpaddressArrayOutput() ServiceNamingConditionConditionIpaddressArrayOutput {
	return i.ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressArray) ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressArrayOutput)
}

type ServiceNamingConditionConditionIpaddressOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressOutput) ToServiceNamingConditionConditionIpaddressOutput() ServiceNamingConditionConditionIpaddressOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressOutput) ToServiceNamingConditionConditionIpaddressOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionIpaddressOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIpaddressArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressArrayOutput) ToServiceNamingConditionConditionIpaddressArrayOutput() ServiceNamingConditionConditionIpaddressArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressArrayOutput) ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIpaddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIpaddress {
		return vs[0].([]ServiceNamingConditionConditionIpaddress)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIpaddressOutput)
}

type ServiceNamingConditionConditionIpaddressComparison struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Negate        *bool  `pulumi:"negate"`
	Operator      string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIpaddressComparisonInput is an input type that accepts ServiceNamingConditionConditionIpaddressComparisonArgs and ServiceNamingConditionConditionIpaddressComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressComparisonInput` via:
//
//	ServiceNamingConditionConditionIpaddressComparisonArgs{...}
type ServiceNamingConditionConditionIpaddressComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressComparisonOutput() ServiceNamingConditionConditionIpaddressComparisonOutput
	ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressComparisonOutput
}

type ServiceNamingConditionConditionIpaddressComparisonArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput `pulumi:"negate"`
	Operator      pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIpaddressComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressComparisonArgs) ToServiceNamingConditionConditionIpaddressComparisonOutput() ServiceNamingConditionConditionIpaddressComparisonOutput {
	return i.ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressComparisonArgs) ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressComparisonOutput)
}

// ServiceNamingConditionConditionIpaddressComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIpaddressComparisonArray and ServiceNamingConditionConditionIpaddressComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIpaddressComparisonArray{ ServiceNamingConditionConditionIpaddressComparisonArgs{...} }
type ServiceNamingConditionConditionIpaddressComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressComparisonArrayOutput() ServiceNamingConditionConditionIpaddressComparisonArrayOutput
	ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressComparisonArrayOutput
}

type ServiceNamingConditionConditionIpaddressComparisonArray []ServiceNamingConditionConditionIpaddressComparisonInput

func (ServiceNamingConditionConditionIpaddressComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressComparisonArray) ToServiceNamingConditionConditionIpaddressComparisonArrayOutput() ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressComparisonArray) ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressComparisonArrayOutput)
}

type ServiceNamingConditionConditionIpaddressComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) ToServiceNamingConditionConditionIpaddressComparisonOutput() ServiceNamingConditionConditionIpaddressComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIpaddressComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressComparisonArrayOutput) ToServiceNamingConditionConditionIpaddressComparisonArrayOutput() ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonArrayOutput) ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIpaddressComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIpaddressComparison {
		return vs[0].([]ServiceNamingConditionConditionIpaddressComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIpaddressComparisonOutput)
}

type ServiceNamingConditionConditionKey struct {
	Attribute string  `pulumi:"attribute"`
	Type      *string `pulumi:"type"`
	Unknowns  *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionKeyInput is an input type that accepts ServiceNamingConditionConditionKeyArgs and ServiceNamingConditionConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionKeyInput` via:
//
//	ServiceNamingConditionConditionKeyArgs{...}
type ServiceNamingConditionConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionKeyOutput() ServiceNamingConditionConditionKeyOutput
	ToServiceNamingConditionConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionKeyOutput
}

type ServiceNamingConditionConditionKeyArgs struct {
	Attribute pulumi.StringInput    `pulumi:"attribute"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Unknowns  pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionKeyArgs) ToServiceNamingConditionConditionKeyOutput() ServiceNamingConditionConditionKeyOutput {
	return i.ToServiceNamingConditionConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionKeyArgs) ToServiceNamingConditionConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionKeyOutput)
}

// ServiceNamingConditionConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionKeyArray and ServiceNamingConditionConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionKeyArray{ ServiceNamingConditionConditionKeyArgs{...} }
type ServiceNamingConditionConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionKeyArrayOutput() ServiceNamingConditionConditionKeyArrayOutput
	ToServiceNamingConditionConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionKeyArrayOutput
}

type ServiceNamingConditionConditionKeyArray []ServiceNamingConditionConditionKeyInput

func (ServiceNamingConditionConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionKeyArray) ToServiceNamingConditionConditionKeyArrayOutput() ServiceNamingConditionConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionKeyArray) ToServiceNamingConditionConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionKeyOutput) ToServiceNamingConditionConditionKeyOutput() ServiceNamingConditionConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyOutput) ToServiceNamingConditionConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionKeyArrayOutput) ToServiceNamingConditionConditionKeyArrayOutput() ServiceNamingConditionConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyArrayOutput) ToServiceNamingConditionConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionKey {
		return vs[0].([]ServiceNamingConditionConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionKeyOutput)
}

type ServiceNamingConditionConditionMobilePlatform struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionMobilePlatformInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformArgs and ServiceNamingConditionConditionMobilePlatformOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformArgs{...}
type ServiceNamingConditionConditionMobilePlatformInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformOutput() ServiceNamingConditionConditionMobilePlatformOutput
	ToServiceNamingConditionConditionMobilePlatformOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformOutput
}

type ServiceNamingConditionConditionMobilePlatformArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionMobilePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformArgs) ToServiceNamingConditionConditionMobilePlatformOutput() ServiceNamingConditionConditionMobilePlatformOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformArgs) ToServiceNamingConditionConditionMobilePlatformOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformOutput)
}

// ServiceNamingConditionConditionMobilePlatformArrayInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformArray and ServiceNamingConditionConditionMobilePlatformArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformArrayInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformArray{ ServiceNamingConditionConditionMobilePlatformArgs{...} }
type ServiceNamingConditionConditionMobilePlatformArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformArrayOutput() ServiceNamingConditionConditionMobilePlatformArrayOutput
	ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformArrayOutput
}

type ServiceNamingConditionConditionMobilePlatformArray []ServiceNamingConditionConditionMobilePlatformInput

func (ServiceNamingConditionConditionMobilePlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformArray) ToServiceNamingConditionConditionMobilePlatformArrayOutput() ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformArray) ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformArrayOutput)
}

type ServiceNamingConditionConditionMobilePlatformOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) ToServiceNamingConditionConditionMobilePlatformOutput() ServiceNamingConditionConditionMobilePlatformOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) ToServiceNamingConditionConditionMobilePlatformOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionMobilePlatformArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformArrayOutput) ToServiceNamingConditionConditionMobilePlatformArrayOutput() ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformArrayOutput) ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionMobilePlatformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionMobilePlatform {
		return vs[0].([]ServiceNamingConditionConditionMobilePlatform)[vs[1].(int)]
	}).(ServiceNamingConditionConditionMobilePlatformOutput)
}

type ServiceNamingConditionConditionMobilePlatformComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionMobilePlatformComparisonInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformComparisonArgs and ServiceNamingConditionConditionMobilePlatformComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformComparisonInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformComparisonArgs{...}
type ServiceNamingConditionConditionMobilePlatformComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformComparisonOutput() ServiceNamingConditionConditionMobilePlatformComparisonOutput
	ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformComparisonOutput
}

type ServiceNamingConditionConditionMobilePlatformComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionMobilePlatformComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArgs) ToServiceNamingConditionConditionMobilePlatformComparisonOutput() ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArgs) ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformComparisonOutput)
}

// ServiceNamingConditionConditionMobilePlatformComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformComparisonArray and ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformComparisonArray{ ServiceNamingConditionConditionMobilePlatformComparisonArgs{...} }
type ServiceNamingConditionConditionMobilePlatformComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutput() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput
	ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput
}

type ServiceNamingConditionConditionMobilePlatformComparisonArray []ServiceNamingConditionConditionMobilePlatformComparisonInput

func (ServiceNamingConditionConditionMobilePlatformComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArray) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutput() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArray) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput)
}

type ServiceNamingConditionConditionMobilePlatformComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) ToServiceNamingConditionConditionMobilePlatformComparisonOutput() ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutput() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionMobilePlatformComparison {
		return vs[0].([]ServiceNamingConditionConditionMobilePlatformComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionMobilePlatformComparisonOutput)
}

type ServiceNamingConditionConditionOsArch struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOsArchInput is an input type that accepts ServiceNamingConditionConditionOsArchArgs and ServiceNamingConditionConditionOsArchOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsArchInput` via:
//
//	ServiceNamingConditionConditionOsArchArgs{...}
type ServiceNamingConditionConditionOsArchInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsArchOutput() ServiceNamingConditionConditionOsArchOutput
	ToServiceNamingConditionConditionOsArchOutputWithContext(context.Context) ServiceNamingConditionConditionOsArchOutput
}

type ServiceNamingConditionConditionOsArchArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOsArchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsArchArgs) ToServiceNamingConditionConditionOsArchOutput() ServiceNamingConditionConditionOsArchOutput {
	return i.ToServiceNamingConditionConditionOsArchOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsArchArgs) ToServiceNamingConditionConditionOsArchOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsArchOutput)
}

// ServiceNamingConditionConditionOsArchArrayInput is an input type that accepts ServiceNamingConditionConditionOsArchArray and ServiceNamingConditionConditionOsArchArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsArchArrayInput` via:
//
//	ServiceNamingConditionConditionOsArchArray{ ServiceNamingConditionConditionOsArchArgs{...} }
type ServiceNamingConditionConditionOsArchArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsArchArrayOutput() ServiceNamingConditionConditionOsArchArrayOutput
	ToServiceNamingConditionConditionOsArchArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOsArchArrayOutput
}

type ServiceNamingConditionConditionOsArchArray []ServiceNamingConditionConditionOsArchInput

func (ServiceNamingConditionConditionOsArchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsArchArray) ToServiceNamingConditionConditionOsArchArrayOutput() ServiceNamingConditionConditionOsArchArrayOutput {
	return i.ToServiceNamingConditionConditionOsArchArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsArchArray) ToServiceNamingConditionConditionOsArchArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsArchArrayOutput)
}

type ServiceNamingConditionConditionOsArchOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsArchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsArchOutput) ToServiceNamingConditionConditionOsArchOutput() ServiceNamingConditionConditionOsArchOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchOutput) ToServiceNamingConditionConditionOsArchOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionOsArchOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionOsArchOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionOsArchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOsArchArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsArchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsArchArrayOutput) ToServiceNamingConditionConditionOsArchArrayOutput() ServiceNamingConditionConditionOsArchArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchArrayOutput) ToServiceNamingConditionConditionOsArchArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOsArchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOsArch {
		return vs[0].([]ServiceNamingConditionConditionOsArch)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOsArchOutput)
}

type ServiceNamingConditionConditionOsType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOsTypeInput is an input type that accepts ServiceNamingConditionConditionOsTypeArgs and ServiceNamingConditionConditionOsTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsTypeInput` via:
//
//	ServiceNamingConditionConditionOsTypeArgs{...}
type ServiceNamingConditionConditionOsTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsTypeOutput() ServiceNamingConditionConditionOsTypeOutput
	ToServiceNamingConditionConditionOsTypeOutputWithContext(context.Context) ServiceNamingConditionConditionOsTypeOutput
}

type ServiceNamingConditionConditionOsTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsTypeArgs) ToServiceNamingConditionConditionOsTypeOutput() ServiceNamingConditionConditionOsTypeOutput {
	return i.ToServiceNamingConditionConditionOsTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsTypeArgs) ToServiceNamingConditionConditionOsTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsTypeOutput)
}

// ServiceNamingConditionConditionOsTypeArrayInput is an input type that accepts ServiceNamingConditionConditionOsTypeArray and ServiceNamingConditionConditionOsTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsTypeArrayInput` via:
//
//	ServiceNamingConditionConditionOsTypeArray{ ServiceNamingConditionConditionOsTypeArgs{...} }
type ServiceNamingConditionConditionOsTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsTypeArrayOutput() ServiceNamingConditionConditionOsTypeArrayOutput
	ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOsTypeArrayOutput
}

type ServiceNamingConditionConditionOsTypeArray []ServiceNamingConditionConditionOsTypeInput

func (ServiceNamingConditionConditionOsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsTypeArray) ToServiceNamingConditionConditionOsTypeArrayOutput() ServiceNamingConditionConditionOsTypeArrayOutput {
	return i.ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsTypeArray) ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsTypeArrayOutput)
}

type ServiceNamingConditionConditionOsTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsTypeOutput) ToServiceNamingConditionConditionOsTypeOutput() ServiceNamingConditionConditionOsTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeOutput) ToServiceNamingConditionConditionOsTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionOsTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionOsTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionOsTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOsTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsTypeArrayOutput) ToServiceNamingConditionConditionOsTypeArrayOutput() ServiceNamingConditionConditionOsTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeArrayOutput) ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOsType {
		return vs[0].([]ServiceNamingConditionConditionOsType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOsTypeOutput)
}

type ServiceNamingConditionConditionOsarchitectureComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOsarchitectureComparisonInput is an input type that accepts ServiceNamingConditionConditionOsarchitectureComparisonArgs and ServiceNamingConditionConditionOsarchitectureComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsarchitectureComparisonInput` via:
//
//	ServiceNamingConditionConditionOsarchitectureComparisonArgs{...}
type ServiceNamingConditionConditionOsarchitectureComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsarchitectureComparisonOutput() ServiceNamingConditionConditionOsarchitectureComparisonOutput
	ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionOsarchitectureComparisonOutput
}

type ServiceNamingConditionConditionOsarchitectureComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOsarchitectureComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArgs) ToServiceNamingConditionConditionOsarchitectureComparisonOutput() ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return i.ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArgs) ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsarchitectureComparisonOutput)
}

// ServiceNamingConditionConditionOsarchitectureComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionOsarchitectureComparisonArray and ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsarchitectureComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionOsarchitectureComparisonArray{ ServiceNamingConditionConditionOsarchitectureComparisonArgs{...} }
type ServiceNamingConditionConditionOsarchitectureComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutput() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput
	ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput
}

type ServiceNamingConditionConditionOsarchitectureComparisonArray []ServiceNamingConditionConditionOsarchitectureComparisonInput

func (ServiceNamingConditionConditionOsarchitectureComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArray) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutput() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArray) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput)
}

type ServiceNamingConditionConditionOsarchitectureComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsarchitectureComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) ToServiceNamingConditionConditionOsarchitectureComparisonOutput() ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutput() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOsarchitectureComparison {
		return vs[0].([]ServiceNamingConditionConditionOsarchitectureComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOsarchitectureComparisonOutput)
}

type ServiceNamingConditionConditionOstypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOstypeComparisonInput is an input type that accepts ServiceNamingConditionConditionOstypeComparisonArgs and ServiceNamingConditionConditionOstypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOstypeComparisonInput` via:
//
//	ServiceNamingConditionConditionOstypeComparisonArgs{...}
type ServiceNamingConditionConditionOstypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOstypeComparisonOutput() ServiceNamingConditionConditionOstypeComparisonOutput
	ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionOstypeComparisonOutput
}

type ServiceNamingConditionConditionOstypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOstypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOstypeComparisonArgs) ToServiceNamingConditionConditionOstypeComparisonOutput() ServiceNamingConditionConditionOstypeComparisonOutput {
	return i.ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOstypeComparisonArgs) ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOstypeComparisonOutput)
}

// ServiceNamingConditionConditionOstypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionOstypeComparisonArray and ServiceNamingConditionConditionOstypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOstypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionOstypeComparisonArray{ ServiceNamingConditionConditionOstypeComparisonArgs{...} }
type ServiceNamingConditionConditionOstypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOstypeComparisonArrayOutput() ServiceNamingConditionConditionOstypeComparisonArrayOutput
	ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOstypeComparisonArrayOutput
}

type ServiceNamingConditionConditionOstypeComparisonArray []ServiceNamingConditionConditionOstypeComparisonInput

func (ServiceNamingConditionConditionOstypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOstypeComparisonArray) ToServiceNamingConditionConditionOstypeComparisonArrayOutput() ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOstypeComparisonArray) ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOstypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionOstypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOstypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) ToServiceNamingConditionConditionOstypeComparisonOutput() ServiceNamingConditionConditionOstypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionOstypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOstypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOstypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOstypeComparisonArrayOutput) ToServiceNamingConditionConditionOstypeComparisonArrayOutput() ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonArrayOutput) ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOstypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOstypeComparison {
		return vs[0].([]ServiceNamingConditionConditionOstypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOstypeComparisonOutput)
}

type ServiceNamingConditionConditionPaasType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionPaasTypeInput is an input type that accepts ServiceNamingConditionConditionPaasTypeArgs and ServiceNamingConditionConditionPaasTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeInput` via:
//
//	ServiceNamingConditionConditionPaasTypeArgs{...}
type ServiceNamingConditionConditionPaasTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeOutput() ServiceNamingConditionConditionPaasTypeOutput
	ToServiceNamingConditionConditionPaasTypeOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeOutput
}

type ServiceNamingConditionConditionPaasTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionPaasTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeArgs) ToServiceNamingConditionConditionPaasTypeOutput() ServiceNamingConditionConditionPaasTypeOutput {
	return i.ToServiceNamingConditionConditionPaasTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeArgs) ToServiceNamingConditionConditionPaasTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeOutput)
}

// ServiceNamingConditionConditionPaasTypeArrayInput is an input type that accepts ServiceNamingConditionConditionPaasTypeArray and ServiceNamingConditionConditionPaasTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeArrayInput` via:
//
//	ServiceNamingConditionConditionPaasTypeArray{ ServiceNamingConditionConditionPaasTypeArgs{...} }
type ServiceNamingConditionConditionPaasTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeArrayOutput() ServiceNamingConditionConditionPaasTypeArrayOutput
	ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeArrayOutput
}

type ServiceNamingConditionConditionPaasTypeArray []ServiceNamingConditionConditionPaasTypeInput

func (ServiceNamingConditionConditionPaasTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeArray) ToServiceNamingConditionConditionPaasTypeArrayOutput() ServiceNamingConditionConditionPaasTypeArrayOutput {
	return i.ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeArray) ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeArrayOutput)
}

type ServiceNamingConditionConditionPaasTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeOutput) ToServiceNamingConditionConditionPaasTypeOutput() ServiceNamingConditionConditionPaasTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeOutput) ToServiceNamingConditionConditionPaasTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionPaasTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionPaasTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionPaasTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionPaasTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeArrayOutput) ToServiceNamingConditionConditionPaasTypeArrayOutput() ServiceNamingConditionConditionPaasTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeArrayOutput) ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionPaasTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionPaasType {
		return vs[0].([]ServiceNamingConditionConditionPaasType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionPaasTypeOutput)
}

type ServiceNamingConditionConditionPaasTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionPaasTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionPaasTypeComparisonArgs and ServiceNamingConditionConditionPaasTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionPaasTypeComparisonArgs{...}
type ServiceNamingConditionConditionPaasTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeComparisonOutput() ServiceNamingConditionConditionPaasTypeComparisonOutput
	ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeComparisonOutput
}

type ServiceNamingConditionConditionPaasTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionPaasTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArgs) ToServiceNamingConditionConditionPaasTypeComparisonOutput() ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArgs) ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeComparisonOutput)
}

// ServiceNamingConditionConditionPaasTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionPaasTypeComparisonArray and ServiceNamingConditionConditionPaasTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionPaasTypeComparisonArray{ ServiceNamingConditionConditionPaasTypeComparisonArgs{...} }
type ServiceNamingConditionConditionPaasTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeComparisonArrayOutput() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput
	ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionPaasTypeComparisonArray []ServiceNamingConditionConditionPaasTypeComparisonInput

func (ServiceNamingConditionConditionPaasTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArray) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutput() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArray) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionPaasTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) ToServiceNamingConditionConditionPaasTypeComparisonOutput() ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionPaasTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutput() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionPaasTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionPaasTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionPaasTypeComparisonOutput)
}

type ServiceNamingConditionConditionProcessMetadata struct {
	Attribute  string  `pulumi:"attribute"`
	DynamicKey string  `pulumi:"dynamicKey"`
	Unknowns   *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionProcessMetadataInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataArgs and ServiceNamingConditionConditionProcessMetadataOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataArgs{...}
type ServiceNamingConditionConditionProcessMetadataInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataOutput() ServiceNamingConditionConditionProcessMetadataOutput
	ToServiceNamingConditionConditionProcessMetadataOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataOutput
}

type ServiceNamingConditionConditionProcessMetadataArgs struct {
	Attribute  pulumi.StringInput    `pulumi:"attribute"`
	DynamicKey pulumi.StringInput    `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataArgs) ToServiceNamingConditionConditionProcessMetadataOutput() ServiceNamingConditionConditionProcessMetadataOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataArgs) ToServiceNamingConditionConditionProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataOutput)
}

// ServiceNamingConditionConditionProcessMetadataArrayInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataArray and ServiceNamingConditionConditionProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataArrayInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataArray{ ServiceNamingConditionConditionProcessMetadataArgs{...} }
type ServiceNamingConditionConditionProcessMetadataArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataArrayOutput() ServiceNamingConditionConditionProcessMetadataArrayOutput
	ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataArrayOutput
}

type ServiceNamingConditionConditionProcessMetadataArray []ServiceNamingConditionConditionProcessMetadataInput

func (ServiceNamingConditionConditionProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataArray) ToServiceNamingConditionConditionProcessMetadataArrayOutput() ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataArray) ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataArrayOutput)
}

type ServiceNamingConditionConditionProcessMetadataOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) ToServiceNamingConditionConditionProcessMetadataOutput() ServiceNamingConditionConditionProcessMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) ToServiceNamingConditionConditionProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadata) string { return v.DynamicKey }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataArrayOutput) ToServiceNamingConditionConditionProcessMetadataArrayOutput() ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataArrayOutput) ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionProcessMetadata {
		return vs[0].([]ServiceNamingConditionConditionProcessMetadata)[vs[1].(int)]
	}).(ServiceNamingConditionConditionProcessMetadataOutput)
}

type ServiceNamingConditionConditionProcessMetadataConditionKey struct {
	Attribute  string `pulumi:"attribute"`
	DynamicKey string `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionProcessMetadataConditionKeyInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataConditionKeyArgs and ServiceNamingConditionConditionProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataConditionKeyInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataConditionKeyArgs{...}
type ServiceNamingConditionConditionProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyOutput
	ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyArgs struct {
	Attribute  pulumi.StringInput `pulumi:"attribute"`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataConditionKeyOutput)
}

// ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataConditionKeyArray and ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataConditionKeyArray{ ServiceNamingConditionConditionProcessMetadataConditionKeyArgs{...} }
type ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput
	ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyArray []ServiceNamingConditionConditionProcessMetadataConditionKeyInput

func (ServiceNamingConditionConditionProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionProcessMetadataConditionKey {
		return vs[0].([]ServiceNamingConditionConditionProcessMetadataConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionProcessMetadataConditionKeyOutput)
}

type ServiceNamingConditionConditionServiceTopology struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTopologyInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyArgs and ServiceNamingConditionConditionServiceTopologyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyArgs{...}
type ServiceNamingConditionConditionServiceTopologyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyOutput() ServiceNamingConditionConditionServiceTopologyOutput
	ToServiceNamingConditionConditionServiceTopologyOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyOutput
}

type ServiceNamingConditionConditionServiceTopologyArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyArgs) ToServiceNamingConditionConditionServiceTopologyOutput() ServiceNamingConditionConditionServiceTopologyOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyArgs) ToServiceNamingConditionConditionServiceTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyOutput)
}

// ServiceNamingConditionConditionServiceTopologyArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyArray and ServiceNamingConditionConditionServiceTopologyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyArray{ ServiceNamingConditionConditionServiceTopologyArgs{...} }
type ServiceNamingConditionConditionServiceTopologyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyArrayOutput() ServiceNamingConditionConditionServiceTopologyArrayOutput
	ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyArrayOutput
}

type ServiceNamingConditionConditionServiceTopologyArray []ServiceNamingConditionConditionServiceTopologyInput

func (ServiceNamingConditionConditionServiceTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyArray) ToServiceNamingConditionConditionServiceTopologyArrayOutput() ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyArray) ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyArrayOutput)
}

type ServiceNamingConditionConditionServiceTopologyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) ToServiceNamingConditionConditionServiceTopologyOutput() ServiceNamingConditionConditionServiceTopologyOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) ToServiceNamingConditionConditionServiceTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTopologyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyArrayOutput) ToServiceNamingConditionConditionServiceTopologyArrayOutput() ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyArrayOutput) ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceTopology {
		return vs[0].([]ServiceNamingConditionConditionServiceTopology)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTopologyOutput)
}

type ServiceNamingConditionConditionServiceTopologyComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTopologyComparisonInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyComparisonArgs and ServiceNamingConditionConditionServiceTopologyComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyComparisonInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyComparisonArgs{...}
type ServiceNamingConditionConditionServiceTopologyComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyComparisonOutput() ServiceNamingConditionConditionServiceTopologyComparisonOutput
	ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyComparisonOutput
}

type ServiceNamingConditionConditionServiceTopologyComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArgs) ToServiceNamingConditionConditionServiceTopologyComparisonOutput() ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArgs) ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyComparisonOutput)
}

// ServiceNamingConditionConditionServiceTopologyComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyComparisonArray and ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyComparisonArray{ ServiceNamingConditionConditionServiceTopologyComparisonArgs{...} }
type ServiceNamingConditionConditionServiceTopologyComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutput() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput
	ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput
}

type ServiceNamingConditionConditionServiceTopologyComparisonArray []ServiceNamingConditionConditionServiceTopologyComparisonInput

func (ServiceNamingConditionConditionServiceTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArray) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutput() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArray) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput)
}

type ServiceNamingConditionConditionServiceTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) ToServiceNamingConditionConditionServiceTopologyComparisonOutput() ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutput() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceTopologyComparison {
		return vs[0].([]ServiceNamingConditionConditionServiceTopologyComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTopologyComparisonOutput)
}

type ServiceNamingConditionConditionServiceType struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTypeInput is an input type that accepts ServiceNamingConditionConditionServiceTypeArgs and ServiceNamingConditionConditionServiceTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeInput` via:
//
//	ServiceNamingConditionConditionServiceTypeArgs{...}
type ServiceNamingConditionConditionServiceTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeOutput() ServiceNamingConditionConditionServiceTypeOutput
	ToServiceNamingConditionConditionServiceTypeOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeOutput
}

type ServiceNamingConditionConditionServiceTypeArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeArgs) ToServiceNamingConditionConditionServiceTypeOutput() ServiceNamingConditionConditionServiceTypeOutput {
	return i.ToServiceNamingConditionConditionServiceTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeArgs) ToServiceNamingConditionConditionServiceTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeOutput)
}

// ServiceNamingConditionConditionServiceTypeArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTypeArray and ServiceNamingConditionConditionServiceTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTypeArray{ ServiceNamingConditionConditionServiceTypeArgs{...} }
type ServiceNamingConditionConditionServiceTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeArrayOutput() ServiceNamingConditionConditionServiceTypeArrayOutput
	ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeArrayOutput
}

type ServiceNamingConditionConditionServiceTypeArray []ServiceNamingConditionConditionServiceTypeInput

func (ServiceNamingConditionConditionServiceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeArray) ToServiceNamingConditionConditionServiceTypeArrayOutput() ServiceNamingConditionConditionServiceTypeArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeArray) ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeArrayOutput)
}

type ServiceNamingConditionConditionServiceTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeOutput) ToServiceNamingConditionConditionServiceTypeOutput() ServiceNamingConditionConditionServiceTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeOutput) ToServiceNamingConditionConditionServiceTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionServiceTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeArrayOutput) ToServiceNamingConditionConditionServiceTypeArrayOutput() ServiceNamingConditionConditionServiceTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeArrayOutput) ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceType {
		return vs[0].([]ServiceNamingConditionConditionServiceType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTypeOutput)
}

type ServiceNamingConditionConditionServiceTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionServiceTypeComparisonArgs and ServiceNamingConditionConditionServiceTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionServiceTypeComparisonArgs{...}
type ServiceNamingConditionConditionServiceTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeComparisonOutput() ServiceNamingConditionConditionServiceTypeComparisonOutput
	ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeComparisonOutput
}

type ServiceNamingConditionConditionServiceTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArgs) ToServiceNamingConditionConditionServiceTypeComparisonOutput() ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArgs) ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeComparisonOutput)
}

// ServiceNamingConditionConditionServiceTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTypeComparisonArray and ServiceNamingConditionConditionServiceTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTypeComparisonArray{ ServiceNamingConditionConditionServiceTypeComparisonArgs{...} }
type ServiceNamingConditionConditionServiceTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeComparisonArrayOutput() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput
	ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionServiceTypeComparisonArray []ServiceNamingConditionConditionServiceTypeComparisonInput

func (ServiceNamingConditionConditionServiceTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArray) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutput() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArray) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionServiceTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) ToServiceNamingConditionConditionServiceTypeComparisonOutput() ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutput() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionServiceTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTypeComparisonOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                       `pulumi:"type"`
	Unknowns *string                                                       `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionSimpleHostTechComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionSimpleHostTechComparisonInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonArgs and ServiceNamingConditionConditionSimpleHostTechComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonInput` via:
//
//	ServiceNamingConditionConditionSimpleHostTechComparisonArgs{...}
type ServiceNamingConditionConditionSimpleHostTechComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonOutput() ServiceNamingConditionConditionSimpleHostTechComparisonOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonOutput
}

type ServiceNamingConditionConditionSimpleHostTechComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                                `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                                `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSimpleHostTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonOutput() ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonOutput)
}

// ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonArray and ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionSimpleHostTechComparisonArray{ ServiceNamingConditionConditionSimpleHostTechComparisonArgs{...} }
type ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput
}

type ServiceNamingConditionConditionSimpleHostTechComparisonArray []ServiceNamingConditionConditionSimpleHostTechComparisonInput

func (ServiceNamingConditionConditionSimpleHostTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArray) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArray) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonOutput() ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Value() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *ServiceNamingConditionConditionSimpleHostTechComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSimpleHostTechComparison {
		return vs[0].([]ServiceNamingConditionConditionSimpleHostTechComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionSimpleHostTechComparisonValueInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs and ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonValueInput` via:
//
//	ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{...}
type ServiceNamingConditionConditionSimpleHostTechComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput)
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput).ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs, ServiceNamingConditionConditionSimpleHostTechComparisonValuePtr and ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput
}

type serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs

func ServiceNamingConditionConditionSimpleHostTechComparisonValuePtr(v *ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput {
	return (*serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *ServiceNamingConditionConditionSimpleHostTechComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) ServiceNamingConditionConditionSimpleHostTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionSimpleHostTechComparisonValue
		return ret
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                                   `pulumi:"type"`
	Unknowns *string                                                   `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionSimpleTechComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionSimpleTechComparisonInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonArgs and ServiceNamingConditionConditionSimpleTechComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonInput` via:
//
//	ServiceNamingConditionConditionSimpleTechComparisonArgs{...}
type ServiceNamingConditionConditionSimpleTechComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonOutput() ServiceNamingConditionConditionSimpleTechComparisonOutput
	ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonOutput
}

type ServiceNamingConditionConditionSimpleTechComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                            `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                            `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSimpleTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArgs) ToServiceNamingConditionConditionSimpleTechComparisonOutput() ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArgs) ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonOutput)
}

// ServiceNamingConditionConditionSimpleTechComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonArray and ServiceNamingConditionConditionSimpleTechComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionSimpleTechComparisonArray{ ServiceNamingConditionConditionSimpleTechComparisonArgs{...} }
type ServiceNamingConditionConditionSimpleTechComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput
	ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonArrayOutput
}

type ServiceNamingConditionConditionSimpleTechComparisonArray []ServiceNamingConditionConditionSimpleTechComparisonInput

func (ServiceNamingConditionConditionSimpleTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArray) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArray) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonArrayOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) ToServiceNamingConditionConditionSimpleTechComparisonOutput() ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Value() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *ServiceNamingConditionConditionSimpleTechComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSimpleTechComparison {
		return vs[0].([]ServiceNamingConditionConditionSimpleTechComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSimpleTechComparisonOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionSimpleTechComparisonValueInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonValueArgs and ServiceNamingConditionConditionSimpleTechComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonValueInput` via:
//
//	ServiceNamingConditionConditionSimpleTechComparisonValueArgs{...}
type ServiceNamingConditionConditionSimpleTechComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonValueOutput() ServiceNamingConditionConditionSimpleTechComparisonValueOutput
	ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonValueOutput
}

type ServiceNamingConditionConditionSimpleTechComparisonValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValueOutput() ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonValueOutput)
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonValueOutput).ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonValueArgs, ServiceNamingConditionConditionSimpleTechComparisonValuePtr and ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionSimpleTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput
	ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput
}

type serviceNamingConditionConditionSimpleTechComparisonValuePtrType ServiceNamingConditionConditionSimpleTechComparisonValueArgs

func ServiceNamingConditionConditionSimpleTechComparisonValuePtr(v *ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput {
	return (*serviceNamingConditionConditionSimpleTechComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionSimpleTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionSimpleTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionSimpleTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValueOutput() ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionSimpleTechComparisonValue) *ServiceNamingConditionConditionSimpleTechComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) ServiceNamingConditionConditionSimpleTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionSimpleTechComparisonValue
		return ret
	}).(ServiceNamingConditionConditionSimpleTechComparisonValueOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionString struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Negate        *bool   `pulumi:"negate"`
	Operator      string  `pulumi:"operator"`
	Unknowns      *string `pulumi:"unknowns"`
	Value         *string `pulumi:"value"`
}

// ServiceNamingConditionConditionStringInput is an input type that accepts ServiceNamingConditionConditionStringArgs and ServiceNamingConditionConditionStringOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringInput` via:
//
//	ServiceNamingConditionConditionStringArgs{...}
type ServiceNamingConditionConditionStringInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringOutput() ServiceNamingConditionConditionStringOutput
	ToServiceNamingConditionConditionStringOutputWithContext(context.Context) ServiceNamingConditionConditionStringOutput
}

type ServiceNamingConditionConditionStringArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator      pulumi.StringInput    `pulumi:"operator"`
	Unknowns      pulumi.StringPtrInput `pulumi:"unknowns"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringArgs) ToServiceNamingConditionConditionStringOutput() ServiceNamingConditionConditionStringOutput {
	return i.ToServiceNamingConditionConditionStringOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringArgs) ToServiceNamingConditionConditionStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringOutput)
}

// ServiceNamingConditionConditionStringArrayInput is an input type that accepts ServiceNamingConditionConditionStringArray and ServiceNamingConditionConditionStringArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringArrayInput` via:
//
//	ServiceNamingConditionConditionStringArray{ ServiceNamingConditionConditionStringArgs{...} }
type ServiceNamingConditionConditionStringArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringArrayOutput() ServiceNamingConditionConditionStringArrayOutput
	ToServiceNamingConditionConditionStringArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringArrayOutput
}

type ServiceNamingConditionConditionStringArray []ServiceNamingConditionConditionStringInput

func (ServiceNamingConditionConditionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringArray) ToServiceNamingConditionConditionStringArrayOutput() ServiceNamingConditionConditionStringArrayOutput {
	return i.ToServiceNamingConditionConditionStringArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringArray) ToServiceNamingConditionConditionStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringArrayOutput)
}

type ServiceNamingConditionConditionStringOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringOutput) ToServiceNamingConditionConditionStringOutput() ServiceNamingConditionConditionStringOutput {
	return o
}

func (o ServiceNamingConditionConditionStringOutput) ToServiceNamingConditionConditionStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringOutput {
	return o
}

func (o ServiceNamingConditionConditionStringOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringArrayOutput) ToServiceNamingConditionConditionStringArrayOutput() ServiceNamingConditionConditionStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringArrayOutput) ToServiceNamingConditionConditionStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionString {
		return vs[0].([]ServiceNamingConditionConditionString)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringOutput)
}

type ServiceNamingConditionConditionStringComparison struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Negate        *bool  `pulumi:"negate"`
	Operator      string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionStringComparisonInput is an input type that accepts ServiceNamingConditionConditionStringComparisonArgs and ServiceNamingConditionConditionStringComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringComparisonInput` via:
//
//	ServiceNamingConditionConditionStringComparisonArgs{...}
type ServiceNamingConditionConditionStringComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringComparisonOutput() ServiceNamingConditionConditionStringComparisonOutput
	ToServiceNamingConditionConditionStringComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionStringComparisonOutput
}

type ServiceNamingConditionConditionStringComparisonArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Negate        pulumi.BoolPtrInput `pulumi:"negate"`
	Operator      pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringComparisonArgs) ToServiceNamingConditionConditionStringComparisonOutput() ServiceNamingConditionConditionStringComparisonOutput {
	return i.ToServiceNamingConditionConditionStringComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringComparisonArgs) ToServiceNamingConditionConditionStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringComparisonOutput)
}

// ServiceNamingConditionConditionStringComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionStringComparisonArray and ServiceNamingConditionConditionStringComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionStringComparisonArray{ ServiceNamingConditionConditionStringComparisonArgs{...} }
type ServiceNamingConditionConditionStringComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringComparisonArrayOutput() ServiceNamingConditionConditionStringComparisonArrayOutput
	ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringComparisonArrayOutput
}

type ServiceNamingConditionConditionStringComparisonArray []ServiceNamingConditionConditionStringComparisonInput

func (ServiceNamingConditionConditionStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringComparisonArray) ToServiceNamingConditionConditionStringComparisonArrayOutput() ServiceNamingConditionConditionStringComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringComparisonArray) ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringComparisonArrayOutput)
}

type ServiceNamingConditionConditionStringComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringComparisonOutput) ToServiceNamingConditionConditionStringComparisonOutput() ServiceNamingConditionConditionStringComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonOutput) ToServiceNamingConditionConditionStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringComparisonArrayOutput) ToServiceNamingConditionConditionStringComparisonArrayOutput() ServiceNamingConditionConditionStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonArrayOutput) ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionStringComparison {
		return vs[0].([]ServiceNamingConditionConditionStringComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringComparisonOutput)
}

type ServiceNamingConditionConditionStringConditionKey struct {
	Attribute  string `pulumi:"attribute"`
	DynamicKey string `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionStringConditionKeyInput is an input type that accepts ServiceNamingConditionConditionStringConditionKeyArgs and ServiceNamingConditionConditionStringConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringConditionKeyInput` via:
//
//	ServiceNamingConditionConditionStringConditionKeyArgs{...}
type ServiceNamingConditionConditionStringConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringConditionKeyOutput() ServiceNamingConditionConditionStringConditionKeyOutput
	ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionStringConditionKeyOutput
}

type ServiceNamingConditionConditionStringConditionKeyArgs struct {
	Attribute  pulumi.StringInput `pulumi:"attribute"`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionStringConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringConditionKeyArgs) ToServiceNamingConditionConditionStringConditionKeyOutput() ServiceNamingConditionConditionStringConditionKeyOutput {
	return i.ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringConditionKeyArgs) ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringConditionKeyOutput)
}

// ServiceNamingConditionConditionStringConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionStringConditionKeyArray and ServiceNamingConditionConditionStringConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionStringConditionKeyArray{ ServiceNamingConditionConditionStringConditionKeyArgs{...} }
type ServiceNamingConditionConditionStringConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringConditionKeyArrayOutput() ServiceNamingConditionConditionStringConditionKeyArrayOutput
	ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringConditionKeyArrayOutput
}

type ServiceNamingConditionConditionStringConditionKeyArray []ServiceNamingConditionConditionStringConditionKeyInput

func (ServiceNamingConditionConditionStringConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringConditionKeyArray) ToServiceNamingConditionConditionStringConditionKeyArrayOutput() ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringConditionKeyArray) ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionStringConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) ToServiceNamingConditionConditionStringConditionKeyOutput() ServiceNamingConditionConditionStringConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionStringConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringConditionKeyArrayOutput) ToServiceNamingConditionConditionStringConditionKeyArrayOutput() ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyArrayOutput) ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionStringConditionKey {
		return vs[0].([]ServiceNamingConditionConditionStringConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringConditionKeyOutput)
}

type ServiceNamingConditionConditionStringKey struct {
	Attribute  string  `pulumi:"attribute"`
	DynamicKey string  `pulumi:"dynamicKey"`
	Unknowns   *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionStringKeyInput is an input type that accepts ServiceNamingConditionConditionStringKeyArgs and ServiceNamingConditionConditionStringKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringKeyInput` via:
//
//	ServiceNamingConditionConditionStringKeyArgs{...}
type ServiceNamingConditionConditionStringKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringKeyOutput() ServiceNamingConditionConditionStringKeyOutput
	ToServiceNamingConditionConditionStringKeyOutputWithContext(context.Context) ServiceNamingConditionConditionStringKeyOutput
}

type ServiceNamingConditionConditionStringKeyArgs struct {
	Attribute  pulumi.StringInput    `pulumi:"attribute"`
	DynamicKey pulumi.StringInput    `pulumi:"dynamicKey"`
	Unknowns   pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionStringKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringKeyArgs) ToServiceNamingConditionConditionStringKeyOutput() ServiceNamingConditionConditionStringKeyOutput {
	return i.ToServiceNamingConditionConditionStringKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringKeyArgs) ToServiceNamingConditionConditionStringKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringKeyOutput)
}

// ServiceNamingConditionConditionStringKeyArrayInput is an input type that accepts ServiceNamingConditionConditionStringKeyArray and ServiceNamingConditionConditionStringKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringKeyArrayInput` via:
//
//	ServiceNamingConditionConditionStringKeyArray{ ServiceNamingConditionConditionStringKeyArgs{...} }
type ServiceNamingConditionConditionStringKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringKeyArrayOutput() ServiceNamingConditionConditionStringKeyArrayOutput
	ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringKeyArrayOutput
}

type ServiceNamingConditionConditionStringKeyArray []ServiceNamingConditionConditionStringKeyInput

func (ServiceNamingConditionConditionStringKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringKeyArray) ToServiceNamingConditionConditionStringKeyArrayOutput() ServiceNamingConditionConditionStringKeyArrayOutput {
	return i.ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringKeyArray) ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringKeyArrayOutput)
}

type ServiceNamingConditionConditionStringKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringKeyOutput) ToServiceNamingConditionConditionStringKeyOutput() ServiceNamingConditionConditionStringKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyOutput) ToServiceNamingConditionConditionStringKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringKey) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionStringKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionStringKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringKeyArrayOutput) ToServiceNamingConditionConditionStringKeyArrayOutput() ServiceNamingConditionConditionStringKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyArrayOutput) ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionStringKey {
		return vs[0].([]ServiceNamingConditionConditionStringKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringKeyOutput)
}

type ServiceNamingConditionConditionSyntheticEngine struct {
	Negate   *bool   `pulumi:"negate"`
	Operator string  `pulumi:"operator"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionSyntheticEngineInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineArgs and ServiceNamingConditionConditionSyntheticEngineOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineArgs{...}
type ServiceNamingConditionConditionSyntheticEngineInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineOutput() ServiceNamingConditionConditionSyntheticEngineOutput
	ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineOutput
}

type ServiceNamingConditionConditionSyntheticEngineArgs struct {
	Negate   pulumi.BoolPtrInput   `pulumi:"negate"`
	Operator pulumi.StringInput    `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSyntheticEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineArgs) ToServiceNamingConditionConditionSyntheticEngineOutput() ServiceNamingConditionConditionSyntheticEngineOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineArgs) ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineOutput)
}

// ServiceNamingConditionConditionSyntheticEngineArrayInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineArray and ServiceNamingConditionConditionSyntheticEngineArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineArrayInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineArray{ ServiceNamingConditionConditionSyntheticEngineArgs{...} }
type ServiceNamingConditionConditionSyntheticEngineArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineArrayOutput() ServiceNamingConditionConditionSyntheticEngineArrayOutput
	ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineArrayOutput
}

type ServiceNamingConditionConditionSyntheticEngineArray []ServiceNamingConditionConditionSyntheticEngineInput

func (ServiceNamingConditionConditionSyntheticEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineArray) ToServiceNamingConditionConditionSyntheticEngineArrayOutput() ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineArray) ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineArrayOutput)
}

type ServiceNamingConditionConditionSyntheticEngineOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) ToServiceNamingConditionConditionSyntheticEngineOutput() ServiceNamingConditionConditionSyntheticEngineOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSyntheticEngineArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineArrayOutput) ToServiceNamingConditionConditionSyntheticEngineArrayOutput() ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineArrayOutput) ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSyntheticEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSyntheticEngine {
		return vs[0].([]ServiceNamingConditionConditionSyntheticEngine)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSyntheticEngineOutput)
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string `pulumi:"type"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs and ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs{...}
type ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput
	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput)
}

// ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray and ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray{ ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs{...} }
type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput
	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray []ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSyntheticEngineTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionSyntheticEngineTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput)
}

type ServiceNamingConditionConditionTag struct {
	Negate   *bool                                    `pulumi:"negate"`
	Operator string                                   `pulumi:"operator"`
	Unknowns *string                                  `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionTagValue `pulumi:"value"`
}

// ServiceNamingConditionConditionTagInput is an input type that accepts ServiceNamingConditionConditionTagArgs and ServiceNamingConditionConditionTagOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagInput` via:
//
//	ServiceNamingConditionConditionTagArgs{...}
type ServiceNamingConditionConditionTagInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagOutput() ServiceNamingConditionConditionTagOutput
	ToServiceNamingConditionConditionTagOutputWithContext(context.Context) ServiceNamingConditionConditionTagOutput
}

type ServiceNamingConditionConditionTagArgs struct {
	Negate   pulumi.BoolPtrInput                             `pulumi:"negate"`
	Operator pulumi.StringInput                              `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                           `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionTagValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagArgs) ToServiceNamingConditionConditionTagOutput() ServiceNamingConditionConditionTagOutput {
	return i.ToServiceNamingConditionConditionTagOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagArgs) ToServiceNamingConditionConditionTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagOutput)
}

// ServiceNamingConditionConditionTagArrayInput is an input type that accepts ServiceNamingConditionConditionTagArray and ServiceNamingConditionConditionTagArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagArrayInput` via:
//
//	ServiceNamingConditionConditionTagArray{ ServiceNamingConditionConditionTagArgs{...} }
type ServiceNamingConditionConditionTagArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagArrayOutput() ServiceNamingConditionConditionTagArrayOutput
	ToServiceNamingConditionConditionTagArrayOutputWithContext(context.Context) ServiceNamingConditionConditionTagArrayOutput
}

type ServiceNamingConditionConditionTagArray []ServiceNamingConditionConditionTagInput

func (ServiceNamingConditionConditionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagArray) ToServiceNamingConditionConditionTagArrayOutput() ServiceNamingConditionConditionTagArrayOutput {
	return i.ToServiceNamingConditionConditionTagArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagArray) ToServiceNamingConditionConditionTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagArrayOutput)
}

type ServiceNamingConditionConditionTagOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagOutput) ToServiceNamingConditionConditionTagOutput() ServiceNamingConditionConditionTagOutput {
	return o
}

func (o ServiceNamingConditionConditionTagOutput) ToServiceNamingConditionConditionTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagOutput {
	return o
}

func (o ServiceNamingConditionConditionTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagOutput) Value() ServiceNamingConditionConditionTagValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) *ServiceNamingConditionConditionTagValue { return v.Value }).(ServiceNamingConditionConditionTagValuePtrOutput)
}

type ServiceNamingConditionConditionTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagArrayOutput) ToServiceNamingConditionConditionTagArrayOutput() ServiceNamingConditionConditionTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagArrayOutput) ToServiceNamingConditionConditionTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionTag {
		return vs[0].([]ServiceNamingConditionConditionTag)[vs[1].(int)]
	}).(ServiceNamingConditionConditionTagOutput)
}

type ServiceNamingConditionConditionTagComparison struct {
	Negate   *bool  `pulumi:"negate"`
	Operator string `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     *string                                            `pulumi:"type"`
	Unknowns *string                                            `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionTagComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionTagComparisonInput is an input type that accepts ServiceNamingConditionConditionTagComparisonArgs and ServiceNamingConditionConditionTagComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonInput` via:
//
//	ServiceNamingConditionConditionTagComparisonArgs{...}
type ServiceNamingConditionConditionTagComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonOutput() ServiceNamingConditionConditionTagComparisonOutput
	ToServiceNamingConditionConditionTagComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonOutput
}

type ServiceNamingConditionConditionTagComparisonArgs struct {
	Negate   pulumi.BoolPtrInput `pulumi:"negate"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type     pulumi.StringPtrInput                                     `pulumi:"type"`
	Unknowns pulumi.StringPtrInput                                     `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionTagComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagComparisonArgs) ToServiceNamingConditionConditionTagComparisonOutput() ServiceNamingConditionConditionTagComparisonOutput {
	return i.ToServiceNamingConditionConditionTagComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonArgs) ToServiceNamingConditionConditionTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonOutput)
}

// ServiceNamingConditionConditionTagComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionTagComparisonArray and ServiceNamingConditionConditionTagComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionTagComparisonArray{ ServiceNamingConditionConditionTagComparisonArgs{...} }
type ServiceNamingConditionConditionTagComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonArrayOutput() ServiceNamingConditionConditionTagComparisonArrayOutput
	ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonArrayOutput
}

type ServiceNamingConditionConditionTagComparisonArray []ServiceNamingConditionConditionTagComparisonInput

func (ServiceNamingConditionConditionTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagComparisonArray) ToServiceNamingConditionConditionTagComparisonArrayOutput() ServiceNamingConditionConditionTagComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonArray) ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonArrayOutput)
}

type ServiceNamingConditionConditionTagComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonOutput) ToServiceNamingConditionConditionTagComparisonOutput() ServiceNamingConditionConditionTagComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonOutput) ToServiceNamingConditionConditionTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonOutput) Value() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *ServiceNamingConditionConditionTagComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonArrayOutput) ToServiceNamingConditionConditionTagComparisonArrayOutput() ServiceNamingConditionConditionTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonArrayOutput) ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionTagComparison {
		return vs[0].([]ServiceNamingConditionConditionTagComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionTagComparisonOutput)
}

type ServiceNamingConditionConditionTagComparisonValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionTagComparisonValueInput is an input type that accepts ServiceNamingConditionConditionTagComparisonValueArgs and ServiceNamingConditionConditionTagComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonValueInput` via:
//
//	ServiceNamingConditionConditionTagComparisonValueArgs{...}
type ServiceNamingConditionConditionTagComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonValueOutput() ServiceNamingConditionConditionTagComparisonValueOutput
	ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonValueOutput
}

type ServiceNamingConditionConditionTagComparisonValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValueOutput() ServiceNamingConditionConditionTagComparisonValueOutput {
	return i.ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonValueOutput)
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonValueOutput).ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionTagComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionTagComparisonValueArgs, ServiceNamingConditionConditionTagComparisonValuePtr and ServiceNamingConditionConditionTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionTagComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput
	ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput
}

type serviceNamingConditionConditionTagComparisonValuePtrType ServiceNamingConditionConditionTagComparisonValueArgs

func ServiceNamingConditionConditionTagComparisonValuePtr(v *ServiceNamingConditionConditionTagComparisonValueArgs) ServiceNamingConditionConditionTagComparisonValuePtrInput {
	return (*serviceNamingConditionConditionTagComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionTagComparisonValuePtrType) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionTagComparisonValuePtrType) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValueOutput() ServiceNamingConditionConditionTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionTagComparisonValue) *ServiceNamingConditionConditionTagComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionTagComparisonValuePtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionTagComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) ServiceNamingConditionConditionTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionTagComparisonValue
		return ret
	}).(ServiceNamingConditionConditionTagComparisonValueOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTagValue struct {
	Context  string  `pulumi:"context"`
	Key      string  `pulumi:"key"`
	Unknowns *string `pulumi:"unknowns"`
	Value    *string `pulumi:"value"`
}

// ServiceNamingConditionConditionTagValueInput is an input type that accepts ServiceNamingConditionConditionTagValueArgs and ServiceNamingConditionConditionTagValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagValueInput` via:
//
//	ServiceNamingConditionConditionTagValueArgs{...}
type ServiceNamingConditionConditionTagValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagValueOutput() ServiceNamingConditionConditionTagValueOutput
	ToServiceNamingConditionConditionTagValueOutputWithContext(context.Context) ServiceNamingConditionConditionTagValueOutput
}

type ServiceNamingConditionConditionTagValueArgs struct {
	Context  pulumi.StringInput    `pulumi:"context"`
	Key      pulumi.StringInput    `pulumi:"key"`
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValueOutput() ServiceNamingConditionConditionTagValueOutput {
	return i.ToServiceNamingConditionConditionTagValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagValueOutput)
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagValueOutput).ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionTagValuePtrInput is an input type that accepts ServiceNamingConditionConditionTagValueArgs, ServiceNamingConditionConditionTagValuePtr and ServiceNamingConditionConditionTagValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagValuePtrInput` via:
//
//	        ServiceNamingConditionConditionTagValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionTagValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput
	ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionTagValuePtrOutput
}

type serviceNamingConditionConditionTagValuePtrType ServiceNamingConditionConditionTagValueArgs

func ServiceNamingConditionConditionTagValuePtr(v *ServiceNamingConditionConditionTagValueArgs) ServiceNamingConditionConditionTagValuePtrInput {
	return (*serviceNamingConditionConditionTagValuePtrType)(v)
}

func (*serviceNamingConditionConditionTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionTagValuePtrType) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionTagValuePtrType) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagValuePtrOutput)
}

type ServiceNamingConditionConditionTagValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValueOutput() ServiceNamingConditionConditionTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return o.ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionTagValue) *ServiceNamingConditionConditionTagValue {
		return &v
	}).(ServiceNamingConditionConditionTagValuePtrOutput)
}

func (o ServiceNamingConditionConditionTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) string { return v.Context }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTagValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) Elem() ServiceNamingConditionConditionTagValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) ServiceNamingConditionConditionTagValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionTagValue
		return ret
	}).(ServiceNamingConditionConditionTagValueOutput)
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTech struct {
	Negate   *bool                                     `pulumi:"negate"`
	Operator string                                    `pulumi:"operator"`
	Unknowns *string                                   `pulumi:"unknowns"`
	Value    *ServiceNamingConditionConditionTechValue `pulumi:"value"`
}

// ServiceNamingConditionConditionTechInput is an input type that accepts ServiceNamingConditionConditionTechArgs and ServiceNamingConditionConditionTechOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechInput` via:
//
//	ServiceNamingConditionConditionTechArgs{...}
type ServiceNamingConditionConditionTechInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechOutput() ServiceNamingConditionConditionTechOutput
	ToServiceNamingConditionConditionTechOutputWithContext(context.Context) ServiceNamingConditionConditionTechOutput
}

type ServiceNamingConditionConditionTechArgs struct {
	Negate   pulumi.BoolPtrInput                              `pulumi:"negate"`
	Operator pulumi.StringInput                               `pulumi:"operator"`
	Unknowns pulumi.StringPtrInput                            `pulumi:"unknowns"`
	Value    ServiceNamingConditionConditionTechValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTechArgs) ToServiceNamingConditionConditionTechOutput() ServiceNamingConditionConditionTechOutput {
	return i.ToServiceNamingConditionConditionTechOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechArgs) ToServiceNamingConditionConditionTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechOutput)
}

// ServiceNamingConditionConditionTechArrayInput is an input type that accepts ServiceNamingConditionConditionTechArray and ServiceNamingConditionConditionTechArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechArrayInput` via:
//
//	ServiceNamingConditionConditionTechArray{ ServiceNamingConditionConditionTechArgs{...} }
type ServiceNamingConditionConditionTechArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechArrayOutput() ServiceNamingConditionConditionTechArrayOutput
	ToServiceNamingConditionConditionTechArrayOutputWithContext(context.Context) ServiceNamingConditionConditionTechArrayOutput
}

type ServiceNamingConditionConditionTechArray []ServiceNamingConditionConditionTechInput

func (ServiceNamingConditionConditionTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTechArray) ToServiceNamingConditionConditionTechArrayOutput() ServiceNamingConditionConditionTechArrayOutput {
	return i.ToServiceNamingConditionConditionTechArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechArray) ToServiceNamingConditionConditionTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechArrayOutput)
}

type ServiceNamingConditionConditionTechOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechOutput) ToServiceNamingConditionConditionTechOutput() ServiceNamingConditionConditionTechOutput {
	return o
}

func (o ServiceNamingConditionConditionTechOutput) ToServiceNamingConditionConditionTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechOutput {
	return o
}

func (o ServiceNamingConditionConditionTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o ServiceNamingConditionConditionTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ServiceNamingConditionConditionTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTechOutput) Value() ServiceNamingConditionConditionTechValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) *ServiceNamingConditionConditionTechValue { return v.Value }).(ServiceNamingConditionConditionTechValuePtrOutput)
}

type ServiceNamingConditionConditionTechArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechArrayOutput) ToServiceNamingConditionConditionTechArrayOutput() ServiceNamingConditionConditionTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTechArrayOutput) ToServiceNamingConditionConditionTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTechArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionTech {
		return vs[0].([]ServiceNamingConditionConditionTech)[vs[1].(int)]
	}).(ServiceNamingConditionConditionTechOutput)
}

type ServiceNamingConditionConditionTechValue struct {
	Type         *string `pulumi:"type"`
	Unknowns     *string `pulumi:"unknowns"`
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionTechValueInput is an input type that accepts ServiceNamingConditionConditionTechValueArgs and ServiceNamingConditionConditionTechValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechValueInput` via:
//
//	ServiceNamingConditionConditionTechValueArgs{...}
type ServiceNamingConditionConditionTechValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechValueOutput() ServiceNamingConditionConditionTechValueOutput
	ToServiceNamingConditionConditionTechValueOutputWithContext(context.Context) ServiceNamingConditionConditionTechValueOutput
}

type ServiceNamingConditionConditionTechValueArgs struct {
	Type         pulumi.StringPtrInput `pulumi:"type"`
	Unknowns     pulumi.StringPtrInput `pulumi:"unknowns"`
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValueOutput() ServiceNamingConditionConditionTechValueOutput {
	return i.ToServiceNamingConditionConditionTechValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechValueOutput)
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechValueOutput).ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionTechValuePtrInput is an input type that accepts ServiceNamingConditionConditionTechValueArgs, ServiceNamingConditionConditionTechValuePtr and ServiceNamingConditionConditionTechValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechValuePtrInput` via:
//
//	        ServiceNamingConditionConditionTechValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionTechValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput
	ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionTechValuePtrOutput
}

type serviceNamingConditionConditionTechValuePtrType ServiceNamingConditionConditionTechValueArgs

func ServiceNamingConditionConditionTechValuePtr(v *ServiceNamingConditionConditionTechValueArgs) ServiceNamingConditionConditionTechValuePtrInput {
	return (*serviceNamingConditionConditionTechValuePtrType)(v)
}

func (*serviceNamingConditionConditionTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionTechValuePtrType) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionTechValuePtrType) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechValuePtrOutput)
}

type ServiceNamingConditionConditionTechValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValueOutput() ServiceNamingConditionConditionTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return o.ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionTechValue) *ServiceNamingConditionConditionTechValue {
		return &v
	}).(ServiceNamingConditionConditionTechValuePtrOutput)
}

func (o ServiceNamingConditionConditionTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTechValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) Elem() ServiceNamingConditionConditionTechValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) ServiceNamingConditionConditionTechValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionTechValue
		return ret
	}).(ServiceNamingConditionConditionTechValueOutput)
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type SpanCaptureRuleMatches struct {
	// Matching strategies for the Span
	Matches []SpanCaptureRuleMatchesMatch `pulumi:"matches"`
}

// SpanCaptureRuleMatchesInput is an input type that accepts SpanCaptureRuleMatchesArgs and SpanCaptureRuleMatchesOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesInput` via:
//
//	SpanCaptureRuleMatchesArgs{...}
type SpanCaptureRuleMatchesInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesOutput() SpanCaptureRuleMatchesOutput
	ToSpanCaptureRuleMatchesOutputWithContext(context.Context) SpanCaptureRuleMatchesOutput
}

type SpanCaptureRuleMatchesArgs struct {
	// Matching strategies for the Span
	Matches SpanCaptureRuleMatchesMatchArrayInput `pulumi:"matches"`
}

func (SpanCaptureRuleMatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatches)(nil)).Elem()
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesOutput() SpanCaptureRuleMatchesOutput {
	return i.ToSpanCaptureRuleMatchesOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesOutput)
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return i.ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesOutput).ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx)
}

// SpanCaptureRuleMatchesPtrInput is an input type that accepts SpanCaptureRuleMatchesArgs, SpanCaptureRuleMatchesPtr and SpanCaptureRuleMatchesPtrOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesPtrInput` via:
//
//	        SpanCaptureRuleMatchesArgs{...}
//
//	or:
//
//	        nil
type SpanCaptureRuleMatchesPtrInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput
	ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Context) SpanCaptureRuleMatchesPtrOutput
}

type spanCaptureRuleMatchesPtrType SpanCaptureRuleMatchesArgs

func SpanCaptureRuleMatchesPtr(v *SpanCaptureRuleMatchesArgs) SpanCaptureRuleMatchesPtrInput {
	return (*spanCaptureRuleMatchesPtrType)(v)
}

func (*spanCaptureRuleMatchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanCaptureRuleMatches)(nil)).Elem()
}

func (i *spanCaptureRuleMatchesPtrType) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return i.ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Background())
}

func (i *spanCaptureRuleMatchesPtrType) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesPtrOutput)
}

type SpanCaptureRuleMatchesOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatches)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesOutput() SpanCaptureRuleMatchesOutput {
	return o
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesOutput {
	return o
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return o.ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Background())
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpanCaptureRuleMatches) *SpanCaptureRuleMatches {
		return &v
	}).(SpanCaptureRuleMatchesPtrOutput)
}

// Matching strategies for the Span
func (o SpanCaptureRuleMatchesOutput) Matches() SpanCaptureRuleMatchesMatchArrayOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatches) []SpanCaptureRuleMatchesMatch { return v.Matches }).(SpanCaptureRuleMatchesMatchArrayOutput)
}

type SpanCaptureRuleMatchesPtrOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanCaptureRuleMatches)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesPtrOutput) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return o
}

func (o SpanCaptureRuleMatchesPtrOutput) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return o
}

func (o SpanCaptureRuleMatchesPtrOutput) Elem() SpanCaptureRuleMatchesOutput {
	return o.ApplyT(func(v *SpanCaptureRuleMatches) SpanCaptureRuleMatches {
		if v != nil {
			return *v
		}
		var ret SpanCaptureRuleMatches
		return ret
	}).(SpanCaptureRuleMatchesOutput)
}

// Matching strategies for the Span
func (o SpanCaptureRuleMatchesPtrOutput) Matches() SpanCaptureRuleMatchesMatchArrayOutput {
	return o.ApplyT(func(v *SpanCaptureRuleMatches) []SpanCaptureRuleMatchesMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(SpanCaptureRuleMatchesMatchArrayOutput)
}

type SpanCaptureRuleMatchesMatch struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Comparison    string  `pulumi:"comparison"`
	Key           *string `pulumi:"key"`
	Source        string  `pulumi:"source"`
	Value         *string `pulumi:"value"`
}

// SpanCaptureRuleMatchesMatchInput is an input type that accepts SpanCaptureRuleMatchesMatchArgs and SpanCaptureRuleMatchesMatchOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesMatchInput` via:
//
//	SpanCaptureRuleMatchesMatchArgs{...}
type SpanCaptureRuleMatchesMatchInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesMatchOutput() SpanCaptureRuleMatchesMatchOutput
	ToSpanCaptureRuleMatchesMatchOutputWithContext(context.Context) SpanCaptureRuleMatchesMatchOutput
}

type SpanCaptureRuleMatchesMatchArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Comparison    pulumi.StringInput    `pulumi:"comparison"`
	Key           pulumi.StringPtrInput `pulumi:"key"`
	Source        pulumi.StringInput    `pulumi:"source"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (SpanCaptureRuleMatchesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (i SpanCaptureRuleMatchesMatchArgs) ToSpanCaptureRuleMatchesMatchOutput() SpanCaptureRuleMatchesMatchOutput {
	return i.ToSpanCaptureRuleMatchesMatchOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesMatchArgs) ToSpanCaptureRuleMatchesMatchOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesMatchOutput)
}

// SpanCaptureRuleMatchesMatchArrayInput is an input type that accepts SpanCaptureRuleMatchesMatchArray and SpanCaptureRuleMatchesMatchArrayOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesMatchArrayInput` via:
//
//	SpanCaptureRuleMatchesMatchArray{ SpanCaptureRuleMatchesMatchArgs{...} }
type SpanCaptureRuleMatchesMatchArrayInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesMatchArrayOutput() SpanCaptureRuleMatchesMatchArrayOutput
	ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(context.Context) SpanCaptureRuleMatchesMatchArrayOutput
}

type SpanCaptureRuleMatchesMatchArray []SpanCaptureRuleMatchesMatchInput

func (SpanCaptureRuleMatchesMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (i SpanCaptureRuleMatchesMatchArray) ToSpanCaptureRuleMatchesMatchArrayOutput() SpanCaptureRuleMatchesMatchArrayOutput {
	return i.ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesMatchArray) ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesMatchArrayOutput)
}

type SpanCaptureRuleMatchesMatchOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesMatchOutput) ToSpanCaptureRuleMatchesMatchOutput() SpanCaptureRuleMatchesMatchOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchOutput) ToSpanCaptureRuleMatchesMatchOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o SpanCaptureRuleMatchesMatchOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) string { return v.Comparison }).(pulumi.StringOutput)
}

func (o SpanCaptureRuleMatchesMatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SpanCaptureRuleMatchesMatchOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) string { return v.Source }).(pulumi.StringOutput)
}

func (o SpanCaptureRuleMatchesMatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpanCaptureRuleMatchesMatchArrayOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesMatchArrayOutput) ToSpanCaptureRuleMatchesMatchArrayOutput() SpanCaptureRuleMatchesMatchArrayOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchArrayOutput) ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchArrayOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchArrayOutput) Index(i pulumi.IntInput) SpanCaptureRuleMatchesMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpanCaptureRuleMatchesMatch {
		return vs[0].([]SpanCaptureRuleMatchesMatch)[vs[1].(int)]
	}).(SpanCaptureRuleMatchesMatchOutput)
}

type SpanContextPropagationMatches struct {
	// Matching strategies for the Span
	Matches []SpanContextPropagationMatchesMatch `pulumi:"matches"`
}

// SpanContextPropagationMatchesInput is an input type that accepts SpanContextPropagationMatchesArgs and SpanContextPropagationMatchesOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesInput` via:
//
//	SpanContextPropagationMatchesArgs{...}
type SpanContextPropagationMatchesInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesOutput() SpanContextPropagationMatchesOutput
	ToSpanContextPropagationMatchesOutputWithContext(context.Context) SpanContextPropagationMatchesOutput
}

type SpanContextPropagationMatchesArgs struct {
	// Matching strategies for the Span
	Matches SpanContextPropagationMatchesMatchArrayInput `pulumi:"matches"`
}

func (SpanContextPropagationMatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatches)(nil)).Elem()
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesOutput() SpanContextPropagationMatchesOutput {
	return i.ToSpanContextPropagationMatchesOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesOutputWithContext(ctx context.Context) SpanContextPropagationMatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesOutput)
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return i.ToSpanContextPropagationMatchesPtrOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesOutput).ToSpanContextPropagationMatchesPtrOutputWithContext(ctx)
}

// SpanContextPropagationMatchesPtrInput is an input type that accepts SpanContextPropagationMatchesArgs, SpanContextPropagationMatchesPtr and SpanContextPropagationMatchesPtrOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesPtrInput` via:
//
//	        SpanContextPropagationMatchesArgs{...}
//
//	or:
//
//	        nil
type SpanContextPropagationMatchesPtrInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput
	ToSpanContextPropagationMatchesPtrOutputWithContext(context.Context) SpanContextPropagationMatchesPtrOutput
}

type spanContextPropagationMatchesPtrType SpanContextPropagationMatchesArgs

func SpanContextPropagationMatchesPtr(v *SpanContextPropagationMatchesArgs) SpanContextPropagationMatchesPtrInput {
	return (*spanContextPropagationMatchesPtrType)(v)
}

func (*spanContextPropagationMatchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanContextPropagationMatches)(nil)).Elem()
}

func (i *spanContextPropagationMatchesPtrType) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return i.ToSpanContextPropagationMatchesPtrOutputWithContext(context.Background())
}

func (i *spanContextPropagationMatchesPtrType) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesPtrOutput)
}

type SpanContextPropagationMatchesOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatches)(nil)).Elem()
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesOutput() SpanContextPropagationMatchesOutput {
	return o
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesOutputWithContext(ctx context.Context) SpanContextPropagationMatchesOutput {
	return o
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return o.ToSpanContextPropagationMatchesPtrOutputWithContext(context.Background())
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpanContextPropagationMatches) *SpanContextPropagationMatches {
		return &v
	}).(SpanContextPropagationMatchesPtrOutput)
}

// Matching strategies for the Span
func (o SpanContextPropagationMatchesOutput) Matches() SpanContextPropagationMatchesMatchArrayOutput {
	return o.ApplyT(func(v SpanContextPropagationMatches) []SpanContextPropagationMatchesMatch { return v.Matches }).(SpanContextPropagationMatchesMatchArrayOutput)
}

type SpanContextPropagationMatchesPtrOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanContextPropagationMatches)(nil)).Elem()
}

func (o SpanContextPropagationMatchesPtrOutput) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return o
}

func (o SpanContextPropagationMatchesPtrOutput) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return o
}

func (o SpanContextPropagationMatchesPtrOutput) Elem() SpanContextPropagationMatchesOutput {
	return o.ApplyT(func(v *SpanContextPropagationMatches) SpanContextPropagationMatches {
		if v != nil {
			return *v
		}
		var ret SpanContextPropagationMatches
		return ret
	}).(SpanContextPropagationMatchesOutput)
}

// Matching strategies for the Span
func (o SpanContextPropagationMatchesPtrOutput) Matches() SpanContextPropagationMatchesMatchArrayOutput {
	return o.ApplyT(func(v *SpanContextPropagationMatches) []SpanContextPropagationMatchesMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(SpanContextPropagationMatchesMatchArrayOutput)
}

type SpanContextPropagationMatchesMatch struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Comparison    string  `pulumi:"comparison"`
	Key           *string `pulumi:"key"`
	Source        string  `pulumi:"source"`
	Value         *string `pulumi:"value"`
}

// SpanContextPropagationMatchesMatchInput is an input type that accepts SpanContextPropagationMatchesMatchArgs and SpanContextPropagationMatchesMatchOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesMatchInput` via:
//
//	SpanContextPropagationMatchesMatchArgs{...}
type SpanContextPropagationMatchesMatchInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesMatchOutput() SpanContextPropagationMatchesMatchOutput
	ToSpanContextPropagationMatchesMatchOutputWithContext(context.Context) SpanContextPropagationMatchesMatchOutput
}

type SpanContextPropagationMatchesMatchArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Comparison    pulumi.StringInput    `pulumi:"comparison"`
	Key           pulumi.StringPtrInput `pulumi:"key"`
	Source        pulumi.StringInput    `pulumi:"source"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (SpanContextPropagationMatchesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (i SpanContextPropagationMatchesMatchArgs) ToSpanContextPropagationMatchesMatchOutput() SpanContextPropagationMatchesMatchOutput {
	return i.ToSpanContextPropagationMatchesMatchOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesMatchArgs) ToSpanContextPropagationMatchesMatchOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesMatchOutput)
}

// SpanContextPropagationMatchesMatchArrayInput is an input type that accepts SpanContextPropagationMatchesMatchArray and SpanContextPropagationMatchesMatchArrayOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesMatchArrayInput` via:
//
//	SpanContextPropagationMatchesMatchArray{ SpanContextPropagationMatchesMatchArgs{...} }
type SpanContextPropagationMatchesMatchArrayInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesMatchArrayOutput() SpanContextPropagationMatchesMatchArrayOutput
	ToSpanContextPropagationMatchesMatchArrayOutputWithContext(context.Context) SpanContextPropagationMatchesMatchArrayOutput
}

type SpanContextPropagationMatchesMatchArray []SpanContextPropagationMatchesMatchInput

func (SpanContextPropagationMatchesMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (i SpanContextPropagationMatchesMatchArray) ToSpanContextPropagationMatchesMatchArrayOutput() SpanContextPropagationMatchesMatchArrayOutput {
	return i.ToSpanContextPropagationMatchesMatchArrayOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesMatchArray) ToSpanContextPropagationMatchesMatchArrayOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesMatchArrayOutput)
}

type SpanContextPropagationMatchesMatchOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (o SpanContextPropagationMatchesMatchOutput) ToSpanContextPropagationMatchesMatchOutput() SpanContextPropagationMatchesMatchOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchOutput) ToSpanContextPropagationMatchesMatchOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o SpanContextPropagationMatchesMatchOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) string { return v.Comparison }).(pulumi.StringOutput)
}

func (o SpanContextPropagationMatchesMatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SpanContextPropagationMatchesMatchOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) string { return v.Source }).(pulumi.StringOutput)
}

func (o SpanContextPropagationMatchesMatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpanContextPropagationMatchesMatchArrayOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (o SpanContextPropagationMatchesMatchArrayOutput) ToSpanContextPropagationMatchesMatchArrayOutput() SpanContextPropagationMatchesMatchArrayOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchArrayOutput) ToSpanContextPropagationMatchesMatchArrayOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchArrayOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchArrayOutput) Index(i pulumi.IntInput) SpanContextPropagationMatchesMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpanContextPropagationMatchesMatch {
		return vs[0].([]SpanContextPropagationMatchesMatch)[vs[1].(int)]
	}).(SpanContextPropagationMatchesMatchOutput)
}

type SpanEntryPointMatches struct {
	// Matching strategies for the Span
	Matches []SpanEntryPointMatchesMatch `pulumi:"matches"`
}

// SpanEntryPointMatchesInput is an input type that accepts SpanEntryPointMatchesArgs and SpanEntryPointMatchesOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesInput` via:
//
//	SpanEntryPointMatchesArgs{...}
type SpanEntryPointMatchesInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesOutput() SpanEntryPointMatchesOutput
	ToSpanEntryPointMatchesOutputWithContext(context.Context) SpanEntryPointMatchesOutput
}

type SpanEntryPointMatchesArgs struct {
	// Matching strategies for the Span
	Matches SpanEntryPointMatchesMatchArrayInput `pulumi:"matches"`
}

func (SpanEntryPointMatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatches)(nil)).Elem()
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesOutput() SpanEntryPointMatchesOutput {
	return i.ToSpanEntryPointMatchesOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesOutputWithContext(ctx context.Context) SpanEntryPointMatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesOutput)
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return i.ToSpanEntryPointMatchesPtrOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesOutput).ToSpanEntryPointMatchesPtrOutputWithContext(ctx)
}

// SpanEntryPointMatchesPtrInput is an input type that accepts SpanEntryPointMatchesArgs, SpanEntryPointMatchesPtr and SpanEntryPointMatchesPtrOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesPtrInput` via:
//
//	        SpanEntryPointMatchesArgs{...}
//
//	or:
//
//	        nil
type SpanEntryPointMatchesPtrInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput
	ToSpanEntryPointMatchesPtrOutputWithContext(context.Context) SpanEntryPointMatchesPtrOutput
}

type spanEntryPointMatchesPtrType SpanEntryPointMatchesArgs

func SpanEntryPointMatchesPtr(v *SpanEntryPointMatchesArgs) SpanEntryPointMatchesPtrInput {
	return (*spanEntryPointMatchesPtrType)(v)
}

func (*spanEntryPointMatchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanEntryPointMatches)(nil)).Elem()
}

func (i *spanEntryPointMatchesPtrType) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return i.ToSpanEntryPointMatchesPtrOutputWithContext(context.Background())
}

func (i *spanEntryPointMatchesPtrType) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesPtrOutput)
}

type SpanEntryPointMatchesOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatches)(nil)).Elem()
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesOutput() SpanEntryPointMatchesOutput {
	return o
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesOutputWithContext(ctx context.Context) SpanEntryPointMatchesOutput {
	return o
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return o.ToSpanEntryPointMatchesPtrOutputWithContext(context.Background())
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpanEntryPointMatches) *SpanEntryPointMatches {
		return &v
	}).(SpanEntryPointMatchesPtrOutput)
}

// Matching strategies for the Span
func (o SpanEntryPointMatchesOutput) Matches() SpanEntryPointMatchesMatchArrayOutput {
	return o.ApplyT(func(v SpanEntryPointMatches) []SpanEntryPointMatchesMatch { return v.Matches }).(SpanEntryPointMatchesMatchArrayOutput)
}

type SpanEntryPointMatchesPtrOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanEntryPointMatches)(nil)).Elem()
}

func (o SpanEntryPointMatchesPtrOutput) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return o
}

func (o SpanEntryPointMatchesPtrOutput) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return o
}

func (o SpanEntryPointMatchesPtrOutput) Elem() SpanEntryPointMatchesOutput {
	return o.ApplyT(func(v *SpanEntryPointMatches) SpanEntryPointMatches {
		if v != nil {
			return *v
		}
		var ret SpanEntryPointMatches
		return ret
	}).(SpanEntryPointMatchesOutput)
}

// Matching strategies for the Span
func (o SpanEntryPointMatchesPtrOutput) Matches() SpanEntryPointMatchesMatchArrayOutput {
	return o.ApplyT(func(v *SpanEntryPointMatches) []SpanEntryPointMatchesMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(SpanEntryPointMatchesMatchArrayOutput)
}

type SpanEntryPointMatchesMatch struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	Comparison    string  `pulumi:"comparison"`
	Key           *string `pulumi:"key"`
	Source        string  `pulumi:"source"`
	Value         *string `pulumi:"value"`
}

// SpanEntryPointMatchesMatchInput is an input type that accepts SpanEntryPointMatchesMatchArgs and SpanEntryPointMatchesMatchOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesMatchInput` via:
//
//	SpanEntryPointMatchesMatchArgs{...}
type SpanEntryPointMatchesMatchInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesMatchOutput() SpanEntryPointMatchesMatchOutput
	ToSpanEntryPointMatchesMatchOutputWithContext(context.Context) SpanEntryPointMatchesMatchOutput
}

type SpanEntryPointMatchesMatchArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	Comparison    pulumi.StringInput    `pulumi:"comparison"`
	Key           pulumi.StringPtrInput `pulumi:"key"`
	Source        pulumi.StringInput    `pulumi:"source"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (SpanEntryPointMatchesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (i SpanEntryPointMatchesMatchArgs) ToSpanEntryPointMatchesMatchOutput() SpanEntryPointMatchesMatchOutput {
	return i.ToSpanEntryPointMatchesMatchOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesMatchArgs) ToSpanEntryPointMatchesMatchOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesMatchOutput)
}

// SpanEntryPointMatchesMatchArrayInput is an input type that accepts SpanEntryPointMatchesMatchArray and SpanEntryPointMatchesMatchArrayOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesMatchArrayInput` via:
//
//	SpanEntryPointMatchesMatchArray{ SpanEntryPointMatchesMatchArgs{...} }
type SpanEntryPointMatchesMatchArrayInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesMatchArrayOutput() SpanEntryPointMatchesMatchArrayOutput
	ToSpanEntryPointMatchesMatchArrayOutputWithContext(context.Context) SpanEntryPointMatchesMatchArrayOutput
}

type SpanEntryPointMatchesMatchArray []SpanEntryPointMatchesMatchInput

func (SpanEntryPointMatchesMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (i SpanEntryPointMatchesMatchArray) ToSpanEntryPointMatchesMatchArrayOutput() SpanEntryPointMatchesMatchArrayOutput {
	return i.ToSpanEntryPointMatchesMatchArrayOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesMatchArray) ToSpanEntryPointMatchesMatchArrayOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesMatchArrayOutput)
}

type SpanEntryPointMatchesMatchOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (o SpanEntryPointMatchesMatchOutput) ToSpanEntryPointMatchesMatchOutput() SpanEntryPointMatchesMatchOutput {
	return o
}

func (o SpanEntryPointMatchesMatchOutput) ToSpanEntryPointMatchesMatchOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchOutput {
	return o
}

func (o SpanEntryPointMatchesMatchOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o SpanEntryPointMatchesMatchOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) string { return v.Comparison }).(pulumi.StringOutput)
}

func (o SpanEntryPointMatchesMatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SpanEntryPointMatchesMatchOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) string { return v.Source }).(pulumi.StringOutput)
}

func (o SpanEntryPointMatchesMatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpanEntryPointMatchesMatchArrayOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (o SpanEntryPointMatchesMatchArrayOutput) ToSpanEntryPointMatchesMatchArrayOutput() SpanEntryPointMatchesMatchArrayOutput {
	return o
}

func (o SpanEntryPointMatchesMatchArrayOutput) ToSpanEntryPointMatchesMatchArrayOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchArrayOutput {
	return o
}

func (o SpanEntryPointMatchesMatchArrayOutput) Index(i pulumi.IntInput) SpanEntryPointMatchesMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpanEntryPointMatchesMatch {
		return vs[0].([]SpanEntryPointMatchesMatch)[vs[1].(int)]
	}).(SpanEntryPointMatchesMatchOutput)
}

type UserGroupPermissions struct {
	// A permission granted to one or multiple environments
	Grants []UserGroupPermissionsGrant `pulumi:"grants"`
}

// UserGroupPermissionsInput is an input type that accepts UserGroupPermissionsArgs and UserGroupPermissionsOutput values.
// You can construct a concrete instance of `UserGroupPermissionsInput` via:
//
//	UserGroupPermissionsArgs{...}
type UserGroupPermissionsInput interface {
	pulumi.Input

	ToUserGroupPermissionsOutput() UserGroupPermissionsOutput
	ToUserGroupPermissionsOutputWithContext(context.Context) UserGroupPermissionsOutput
}

type UserGroupPermissionsArgs struct {
	// A permission granted to one or multiple environments
	Grants UserGroupPermissionsGrantArrayInput `pulumi:"grants"`
}

func (UserGroupPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissions)(nil)).Elem()
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsOutput() UserGroupPermissionsOutput {
	return i.ToUserGroupPermissionsOutputWithContext(context.Background())
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsOutputWithContext(ctx context.Context) UserGroupPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsOutput)
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return i.ToUserGroupPermissionsPtrOutputWithContext(context.Background())
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsOutput).ToUserGroupPermissionsPtrOutputWithContext(ctx)
}

// UserGroupPermissionsPtrInput is an input type that accepts UserGroupPermissionsArgs, UserGroupPermissionsPtr and UserGroupPermissionsPtrOutput values.
// You can construct a concrete instance of `UserGroupPermissionsPtrInput` via:
//
//	        UserGroupPermissionsArgs{...}
//
//	or:
//
//	        nil
type UserGroupPermissionsPtrInput interface {
	pulumi.Input

	ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput
	ToUserGroupPermissionsPtrOutputWithContext(context.Context) UserGroupPermissionsPtrOutput
}

type userGroupPermissionsPtrType UserGroupPermissionsArgs

func UserGroupPermissionsPtr(v *UserGroupPermissionsArgs) UserGroupPermissionsPtrInput {
	return (*userGroupPermissionsPtrType)(v)
}

func (*userGroupPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroupPermissions)(nil)).Elem()
}

func (i *userGroupPermissionsPtrType) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return i.ToUserGroupPermissionsPtrOutputWithContext(context.Background())
}

func (i *userGroupPermissionsPtrType) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsPtrOutput)
}

type UserGroupPermissionsOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissions)(nil)).Elem()
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsOutput() UserGroupPermissionsOutput {
	return o
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsOutputWithContext(ctx context.Context) UserGroupPermissionsOutput {
	return o
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return o.ToUserGroupPermissionsPtrOutputWithContext(context.Background())
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserGroupPermissions) *UserGroupPermissions {
		return &v
	}).(UserGroupPermissionsPtrOutput)
}

// A permission granted to one or multiple environments
func (o UserGroupPermissionsOutput) Grants() UserGroupPermissionsGrantArrayOutput {
	return o.ApplyT(func(v UserGroupPermissions) []UserGroupPermissionsGrant { return v.Grants }).(UserGroupPermissionsGrantArrayOutput)
}

type UserGroupPermissionsPtrOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroupPermissions)(nil)).Elem()
}

func (o UserGroupPermissionsPtrOutput) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return o
}

func (o UserGroupPermissionsPtrOutput) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return o
}

func (o UserGroupPermissionsPtrOutput) Elem() UserGroupPermissionsOutput {
	return o.ApplyT(func(v *UserGroupPermissions) UserGroupPermissions {
		if v != nil {
			return *v
		}
		var ret UserGroupPermissions
		return ret
	}).(UserGroupPermissionsOutput)
}

// A permission granted to one or multiple environments
func (o UserGroupPermissionsPtrOutput) Grants() UserGroupPermissionsGrantArrayOutput {
	return o.ApplyT(func(v *UserGroupPermissions) []UserGroupPermissionsGrant {
		if v == nil {
			return nil
		}
		return v.Grants
	}).(UserGroupPermissionsGrantArrayOutput)
}

type UserGroupPermissionsGrant struct {
	Environments []string `pulumi:"environments"`
	Permission   string   `pulumi:"permission"`
}

// UserGroupPermissionsGrantInput is an input type that accepts UserGroupPermissionsGrantArgs and UserGroupPermissionsGrantOutput values.
// You can construct a concrete instance of `UserGroupPermissionsGrantInput` via:
//
//	UserGroupPermissionsGrantArgs{...}
type UserGroupPermissionsGrantInput interface {
	pulumi.Input

	ToUserGroupPermissionsGrantOutput() UserGroupPermissionsGrantOutput
	ToUserGroupPermissionsGrantOutputWithContext(context.Context) UserGroupPermissionsGrantOutput
}

type UserGroupPermissionsGrantArgs struct {
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	Permission   pulumi.StringInput      `pulumi:"permission"`
}

func (UserGroupPermissionsGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissionsGrant)(nil)).Elem()
}

func (i UserGroupPermissionsGrantArgs) ToUserGroupPermissionsGrantOutput() UserGroupPermissionsGrantOutput {
	return i.ToUserGroupPermissionsGrantOutputWithContext(context.Background())
}

func (i UserGroupPermissionsGrantArgs) ToUserGroupPermissionsGrantOutputWithContext(ctx context.Context) UserGroupPermissionsGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsGrantOutput)
}

// UserGroupPermissionsGrantArrayInput is an input type that accepts UserGroupPermissionsGrantArray and UserGroupPermissionsGrantArrayOutput values.
// You can construct a concrete instance of `UserGroupPermissionsGrantArrayInput` via:
//
//	UserGroupPermissionsGrantArray{ UserGroupPermissionsGrantArgs{...} }
type UserGroupPermissionsGrantArrayInput interface {
	pulumi.Input

	ToUserGroupPermissionsGrantArrayOutput() UserGroupPermissionsGrantArrayOutput
	ToUserGroupPermissionsGrantArrayOutputWithContext(context.Context) UserGroupPermissionsGrantArrayOutput
}

type UserGroupPermissionsGrantArray []UserGroupPermissionsGrantInput

func (UserGroupPermissionsGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupPermissionsGrant)(nil)).Elem()
}

func (i UserGroupPermissionsGrantArray) ToUserGroupPermissionsGrantArrayOutput() UserGroupPermissionsGrantArrayOutput {
	return i.ToUserGroupPermissionsGrantArrayOutputWithContext(context.Background())
}

func (i UserGroupPermissionsGrantArray) ToUserGroupPermissionsGrantArrayOutputWithContext(ctx context.Context) UserGroupPermissionsGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsGrantArrayOutput)
}

type UserGroupPermissionsGrantOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissionsGrant)(nil)).Elem()
}

func (o UserGroupPermissionsGrantOutput) ToUserGroupPermissionsGrantOutput() UserGroupPermissionsGrantOutput {
	return o
}

func (o UserGroupPermissionsGrantOutput) ToUserGroupPermissionsGrantOutputWithContext(ctx context.Context) UserGroupPermissionsGrantOutput {
	return o
}

func (o UserGroupPermissionsGrantOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserGroupPermissionsGrant) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

func (o UserGroupPermissionsGrantOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v UserGroupPermissionsGrant) string { return v.Permission }).(pulumi.StringOutput)
}

type UserGroupPermissionsGrantArrayOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupPermissionsGrant)(nil)).Elem()
}

func (o UserGroupPermissionsGrantArrayOutput) ToUserGroupPermissionsGrantArrayOutput() UserGroupPermissionsGrantArrayOutput {
	return o
}

func (o UserGroupPermissionsGrantArrayOutput) ToUserGroupPermissionsGrantArrayOutputWithContext(ctx context.Context) UserGroupPermissionsGrantArrayOutput {
	return o
}

func (o UserGroupPermissionsGrantArrayOutput) Index(i pulumi.IntInput) UserGroupPermissionsGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupPermissionsGrant {
		return vs[0].([]UserGroupPermissionsGrant)[vs[1].(int)]
	}).(UserGroupPermissionsGrantOutput)
}

type WebApplicationConversionGoals struct {
	// A conversion goal of the application
	Goals []WebApplicationConversionGoalsGoal `pulumi:"goals"`
}

// WebApplicationConversionGoalsInput is an input type that accepts WebApplicationConversionGoalsArgs and WebApplicationConversionGoalsOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsInput` via:
//
//	WebApplicationConversionGoalsArgs{...}
type WebApplicationConversionGoalsInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsOutput() WebApplicationConversionGoalsOutput
	ToWebApplicationConversionGoalsOutputWithContext(context.Context) WebApplicationConversionGoalsOutput
}

type WebApplicationConversionGoalsArgs struct {
	// A conversion goal of the application
	Goals WebApplicationConversionGoalsGoalArrayInput `pulumi:"goals"`
}

func (WebApplicationConversionGoalsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoals)(nil)).Elem()
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsOutput() WebApplicationConversionGoalsOutput {
	return i.ToWebApplicationConversionGoalsOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsOutputWithContext(ctx context.Context) WebApplicationConversionGoalsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsOutput)
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return i.ToWebApplicationConversionGoalsPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsOutput).ToWebApplicationConversionGoalsPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsPtrInput is an input type that accepts WebApplicationConversionGoalsArgs, WebApplicationConversionGoalsPtr and WebApplicationConversionGoalsPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsPtrInput` via:
//
//	        WebApplicationConversionGoalsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput
	ToWebApplicationConversionGoalsPtrOutputWithContext(context.Context) WebApplicationConversionGoalsPtrOutput
}

type webApplicationConversionGoalsPtrType WebApplicationConversionGoalsArgs

func WebApplicationConversionGoalsPtr(v *WebApplicationConversionGoalsArgs) WebApplicationConversionGoalsPtrInput {
	return (*webApplicationConversionGoalsPtrType)(v)
}

func (*webApplicationConversionGoalsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoals)(nil)).Elem()
}

func (i *webApplicationConversionGoalsPtrType) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return i.ToWebApplicationConversionGoalsPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsPtrType) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsPtrOutput)
}

type WebApplicationConversionGoalsOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoals)(nil)).Elem()
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsOutput() WebApplicationConversionGoalsOutput {
	return o
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsOutputWithContext(ctx context.Context) WebApplicationConversionGoalsOutput {
	return o
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return o.ToWebApplicationConversionGoalsPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoals) *WebApplicationConversionGoals {
		return &v
	}).(WebApplicationConversionGoalsPtrOutput)
}

// A conversion goal of the application
func (o WebApplicationConversionGoalsOutput) Goals() WebApplicationConversionGoalsGoalArrayOutput {
	return o.ApplyT(func(v WebApplicationConversionGoals) []WebApplicationConversionGoalsGoal { return v.Goals }).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoals)(nil)).Elem()
}

func (o WebApplicationConversionGoalsPtrOutput) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsPtrOutput) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsPtrOutput) Elem() WebApplicationConversionGoalsOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoals) WebApplicationConversionGoals {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoals
		return ret
	}).(WebApplicationConversionGoalsOutput)
}

// A conversion goal of the application
func (o WebApplicationConversionGoalsPtrOutput) Goals() WebApplicationConversionGoalsGoalArrayOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoals) []WebApplicationConversionGoalsGoal {
		if v == nil {
			return nil
		}
		return v.Goals
	}).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsGoal struct {
	Destination *WebApplicationConversionGoalsGoalDestination `pulumi:"destination"`
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the web application, displayed in the UI
	Name string `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type           *string                                          `pulumi:"type"`
	UserAction     *WebApplicationConversionGoalsGoalUserAction     `pulumi:"userAction"`
	VisitDuration  *WebApplicationConversionGoalsGoalVisitDuration  `pulumi:"visitDuration"`
	VisitNumAction *WebApplicationConversionGoalsGoalVisitNumAction `pulumi:"visitNumAction"`
}

// WebApplicationConversionGoalsGoalInput is an input type that accepts WebApplicationConversionGoalsGoalArgs and WebApplicationConversionGoalsGoalOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalInput` via:
//
//	WebApplicationConversionGoalsGoalArgs{...}
type WebApplicationConversionGoalsGoalInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput
	ToWebApplicationConversionGoalsGoalOutputWithContext(context.Context) WebApplicationConversionGoalsGoalOutput
}

type WebApplicationConversionGoalsGoalArgs struct {
	Destination WebApplicationConversionGoalsGoalDestinationPtrInput `pulumi:"destination"`
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the web application, displayed in the UI
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type           pulumi.StringPtrInput                                   `pulumi:"type"`
	UserAction     WebApplicationConversionGoalsGoalUserActionPtrInput     `pulumi:"userAction"`
	VisitDuration  WebApplicationConversionGoalsGoalVisitDurationPtrInput  `pulumi:"visitDuration"`
	VisitNumAction WebApplicationConversionGoalsGoalVisitNumActionPtrInput `pulumi:"visitNumAction"`
}

func (WebApplicationConversionGoalsGoalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalArgs) ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput {
	return i.ToWebApplicationConversionGoalsGoalOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalArgs) ToWebApplicationConversionGoalsGoalOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalOutput)
}

// WebApplicationConversionGoalsGoalArrayInput is an input type that accepts WebApplicationConversionGoalsGoalArray and WebApplicationConversionGoalsGoalArrayOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalArrayInput` via:
//
//	WebApplicationConversionGoalsGoalArray{ WebApplicationConversionGoalsGoalArgs{...} }
type WebApplicationConversionGoalsGoalArrayInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput
	ToWebApplicationConversionGoalsGoalArrayOutputWithContext(context.Context) WebApplicationConversionGoalsGoalArrayOutput
}

type WebApplicationConversionGoalsGoalArray []WebApplicationConversionGoalsGoalInput

func (WebApplicationConversionGoalsGoalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalArray) ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput {
	return i.ToWebApplicationConversionGoalsGoalArrayOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalArray) ToWebApplicationConversionGoalsGoalArrayOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsGoalOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalOutput) ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalOutput) ToWebApplicationConversionGoalsGoalOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalOutput) Destination() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalDestination {
		return v.Destination
	}).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

// The ID of this resource.
func (o WebApplicationConversionGoalsGoalOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the web application, displayed in the UI
func (o WebApplicationConversionGoalsGoalOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationConversionGoalsGoalOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalOutput) UserAction() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalUserAction {
		return v.UserAction
	}).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

func (o WebApplicationConversionGoalsGoalOutput) VisitDuration() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalVisitDuration {
		return v.VisitDuration
	}).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

func (o WebApplicationConversionGoalsGoalOutput) VisitNumAction() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalVisitNumAction {
		return v.VisitNumAction
	}).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

type WebApplicationConversionGoalsGoalArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalArrayOutput) ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalArrayOutput) ToWebApplicationConversionGoalsGoalArrayOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalArrayOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalArrayOutput) Index(i pulumi.IntInput) WebApplicationConversionGoalsGoalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationConversionGoalsGoal {
		return vs[0].([]WebApplicationConversionGoalsGoal)[vs[1].(int)]
	}).(WebApplicationConversionGoalsGoalOutput)
}

type WebApplicationConversionGoalsGoalDestination struct {
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	MatchType     *string `pulumi:"matchType"`
	UrlOrPath     string  `pulumi:"urlOrPath"`
}

// WebApplicationConversionGoalsGoalDestinationInput is an input type that accepts WebApplicationConversionGoalsGoalDestinationArgs and WebApplicationConversionGoalsGoalDestinationOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalDestinationInput` via:
//
//	WebApplicationConversionGoalsGoalDestinationArgs{...}
type WebApplicationConversionGoalsGoalDestinationInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput
	ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(context.Context) WebApplicationConversionGoalsGoalDestinationOutput
}

type WebApplicationConversionGoalsGoalDestinationArgs struct {
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	MatchType     pulumi.StringPtrInput `pulumi:"matchType"`
	UrlOrPath     pulumi.StringInput    `pulumi:"urlOrPath"`
}

func (WebApplicationConversionGoalsGoalDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationOutput)
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationOutput).ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalDestinationPtrInput is an input type that accepts WebApplicationConversionGoalsGoalDestinationArgs, WebApplicationConversionGoalsGoalDestinationPtr and WebApplicationConversionGoalsGoalDestinationPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalDestinationPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalDestinationArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalDestinationPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput
	ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput
}

type webApplicationConversionGoalsGoalDestinationPtrType WebApplicationConversionGoalsGoalDestinationArgs

func WebApplicationConversionGoalsGoalDestinationPtr(v *WebApplicationConversionGoalsGoalDestinationArgs) WebApplicationConversionGoalsGoalDestinationPtrInput {
	return (*webApplicationConversionGoalsGoalDestinationPtrType)(v)
}

func (*webApplicationConversionGoalsGoalDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalDestinationPtrType) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalDestinationPtrType) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

type WebApplicationConversionGoalsGoalDestinationOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalDestination) *WebApplicationConversionGoalsGoalDestination {
		return &v
	}).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) UrlOrPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) string { return v.UrlOrPath }).(pulumi.StringOutput)
}

type WebApplicationConversionGoalsGoalDestinationPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) Elem() WebApplicationConversionGoalsGoalDestinationOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) WebApplicationConversionGoalsGoalDestination {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalDestination
		return ret
	}).(WebApplicationConversionGoalsGoalDestinationOutput)
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *string {
		if v == nil {
			return nil
		}
		return v.MatchType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) UrlOrPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *string {
		if v == nil {
			return nil
		}
		return &v.UrlOrPath
	}).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalUserAction struct {
	ActionType    *string `pulumi:"actionType"`
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	MatchEntity   *string `pulumi:"matchEntity"`
	MatchType     *string `pulumi:"matchType"`
	Value         *string `pulumi:"value"`
}

// WebApplicationConversionGoalsGoalUserActionInput is an input type that accepts WebApplicationConversionGoalsGoalUserActionArgs and WebApplicationConversionGoalsGoalUserActionOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalUserActionInput` via:
//
//	WebApplicationConversionGoalsGoalUserActionArgs{...}
type WebApplicationConversionGoalsGoalUserActionInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput
	ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(context.Context) WebApplicationConversionGoalsGoalUserActionOutput
}

type WebApplicationConversionGoalsGoalUserActionArgs struct {
	ActionType    pulumi.StringPtrInput `pulumi:"actionType"`
	CaseSensitive pulumi.BoolPtrInput   `pulumi:"caseSensitive"`
	MatchEntity   pulumi.StringPtrInput `pulumi:"matchEntity"`
	MatchType     pulumi.StringPtrInput `pulumi:"matchType"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (WebApplicationConversionGoalsGoalUserActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionOutput)
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionOutput).ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalUserActionPtrInput is an input type that accepts WebApplicationConversionGoalsGoalUserActionArgs, WebApplicationConversionGoalsGoalUserActionPtr and WebApplicationConversionGoalsGoalUserActionPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalUserActionPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalUserActionArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalUserActionPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput
	ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput
}

type webApplicationConversionGoalsGoalUserActionPtrType WebApplicationConversionGoalsGoalUserActionArgs

func WebApplicationConversionGoalsGoalUserActionPtr(v *WebApplicationConversionGoalsGoalUserActionArgs) WebApplicationConversionGoalsGoalUserActionPtrInput {
	return (*webApplicationConversionGoalsGoalUserActionPtrType)(v)
}

func (*webApplicationConversionGoalsGoalUserActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalUserActionPtrType) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalUserActionPtrType) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

type WebApplicationConversionGoalsGoalUserActionOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalUserActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalUserAction) *WebApplicationConversionGoalsGoalUserAction {
		return &v
	}).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) MatchEntity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.MatchEntity }).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalUserActionPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalUserActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) Elem() WebApplicationConversionGoalsGoalUserActionOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) WebApplicationConversionGoalsGoalUserAction {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalUserAction
		return ret
	}).(WebApplicationConversionGoalsGoalUserActionOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) MatchEntity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.MatchEntity
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.MatchType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitDuration struct {
	Duration int `pulumi:"duration"`
}

// WebApplicationConversionGoalsGoalVisitDurationInput is an input type that accepts WebApplicationConversionGoalsGoalVisitDurationArgs and WebApplicationConversionGoalsGoalVisitDurationOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitDurationInput` via:
//
//	WebApplicationConversionGoalsGoalVisitDurationArgs{...}
type WebApplicationConversionGoalsGoalVisitDurationInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput
	ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput
}

type WebApplicationConversionGoalsGoalVisitDurationArgs struct {
	Duration pulumi.IntInput `pulumi:"duration"`
}

func (WebApplicationConversionGoalsGoalVisitDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationOutput)
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationOutput).ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalVisitDurationPtrInput is an input type that accepts WebApplicationConversionGoalsGoalVisitDurationArgs, WebApplicationConversionGoalsGoalVisitDurationPtr and WebApplicationConversionGoalsGoalVisitDurationPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitDurationPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalVisitDurationArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalVisitDurationPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput
	ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput
}

type webApplicationConversionGoalsGoalVisitDurationPtrType WebApplicationConversionGoalsGoalVisitDurationArgs

func WebApplicationConversionGoalsGoalVisitDurationPtr(v *WebApplicationConversionGoalsGoalVisitDurationArgs) WebApplicationConversionGoalsGoalVisitDurationPtrInput {
	return (*webApplicationConversionGoalsGoalVisitDurationPtrType)(v)
}

func (*webApplicationConversionGoalsGoalVisitDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalVisitDurationPtrType) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalVisitDurationPtrType) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitDurationOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalVisitDuration) *WebApplicationConversionGoalsGoalVisitDuration {
		return &v
	}).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalVisitDuration) int { return v.Duration }).(pulumi.IntOutput)
}

type WebApplicationConversionGoalsGoalVisitDurationPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) Elem() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitDuration) WebApplicationConversionGoalsGoalVisitDuration {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalVisitDuration
		return ret
	}).(WebApplicationConversionGoalsGoalVisitDurationOutput)
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumAction struct {
	NumUserActions *int `pulumi:"numUserActions"`
}

// WebApplicationConversionGoalsGoalVisitNumActionInput is an input type that accepts WebApplicationConversionGoalsGoalVisitNumActionArgs and WebApplicationConversionGoalsGoalVisitNumActionOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitNumActionInput` via:
//
//	WebApplicationConversionGoalsGoalVisitNumActionArgs{...}
type WebApplicationConversionGoalsGoalVisitNumActionInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput
	ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput
}

type WebApplicationConversionGoalsGoalVisitNumActionArgs struct {
	NumUserActions pulumi.IntPtrInput `pulumi:"numUserActions"`
}

func (WebApplicationConversionGoalsGoalVisitNumActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionOutput)
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionOutput).ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalVisitNumActionPtrInput is an input type that accepts WebApplicationConversionGoalsGoalVisitNumActionArgs, WebApplicationConversionGoalsGoalVisitNumActionPtr and WebApplicationConversionGoalsGoalVisitNumActionPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitNumActionPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalVisitNumActionArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalVisitNumActionPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput
	ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput
}

type webApplicationConversionGoalsGoalVisitNumActionPtrType WebApplicationConversionGoalsGoalVisitNumActionArgs

func WebApplicationConversionGoalsGoalVisitNumActionPtr(v *WebApplicationConversionGoalsGoalVisitNumActionArgs) WebApplicationConversionGoalsGoalVisitNumActionPtrInput {
	return (*webApplicationConversionGoalsGoalVisitNumActionPtrType)(v)
}

func (*webApplicationConversionGoalsGoalVisitNumActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalVisitNumActionPtrType) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalVisitNumActionPtrType) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumActionOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitNumActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalVisitNumAction) *WebApplicationConversionGoalsGoalVisitNumAction {
		return &v
	}).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) NumUserActions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalVisitNumAction) *int { return v.NumUserActions }).(pulumi.IntPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumActionPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) Elem() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitNumAction) WebApplicationConversionGoalsGoalVisitNumAction {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalVisitNumAction
		return ret
	}).(WebApplicationConversionGoalsGoalVisitNumActionOutput)
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) NumUserActions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitNumAction) *int {
		if v == nil {
			return nil
		}
		return v.NumUserActions
	}).(pulumi.IntPtrOutput)
}

type WebApplicationCustomActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *int `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *int `pulumi:"toleratedThreshold"`
}

// WebApplicationCustomActionApdexSettingsInput is an input type that accepts WebApplicationCustomActionApdexSettingsArgs and WebApplicationCustomActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationCustomActionApdexSettingsInput` via:
//
//	WebApplicationCustomActionApdexSettingsArgs{...}
type WebApplicationCustomActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput
	ToWebApplicationCustomActionApdexSettingsOutputWithContext(context.Context) WebApplicationCustomActionApdexSettingsOutput
}

type WebApplicationCustomActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntPtrInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntPtrInput `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntPtrInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntPtrInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationCustomActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput {
	return i.ToWebApplicationCustomActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsOutput)
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return i.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsOutput).ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationCustomActionApdexSettingsPtrInput is an input type that accepts WebApplicationCustomActionApdexSettingsArgs, WebApplicationCustomActionApdexSettingsPtr and WebApplicationCustomActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationCustomActionApdexSettingsPtrInput` via:
//
//	        WebApplicationCustomActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationCustomActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput
	ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationCustomActionApdexSettingsPtrOutput
}

type webApplicationCustomActionApdexSettingsPtrType WebApplicationCustomActionApdexSettingsArgs

func WebApplicationCustomActionApdexSettingsPtr(v *WebApplicationCustomActionApdexSettingsArgs) WebApplicationCustomActionApdexSettingsPtrInput {
	return (*webApplicationCustomActionApdexSettingsPtrType)(v)
}

func (*webApplicationCustomActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationCustomActionApdexSettingsPtrType) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return i.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationCustomActionApdexSettingsPtrType) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsPtrOutput)
}

type WebApplicationCustomActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationCustomActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return o.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationCustomActionApdexSettings) *WebApplicationCustomActionApdexSettings {
		return &v
	}).(WebApplicationCustomActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.FrustratingFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.FrustratingThreshold }).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationCustomActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.ToleratedFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.ToleratedThreshold }).(pulumi.IntPtrOutput)
}

type WebApplicationCustomActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationCustomActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) Elem() WebApplicationCustomActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) WebApplicationCustomActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationCustomActionApdexSettings
		return ret
	}).(WebApplicationCustomActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationCustomActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationKeyUserAction struct {
	// Configuration of the key user action
	Actions []WebApplicationKeyUserActionAction `pulumi:"actions"`
}

// WebApplicationKeyUserActionInput is an input type that accepts WebApplicationKeyUserActionArgs and WebApplicationKeyUserActionOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionInput` via:
//
//	WebApplicationKeyUserActionArgs{...}
type WebApplicationKeyUserActionInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput
	ToWebApplicationKeyUserActionOutputWithContext(context.Context) WebApplicationKeyUserActionOutput
}

type WebApplicationKeyUserActionArgs struct {
	// Configuration of the key user action
	Actions WebApplicationKeyUserActionActionArrayInput `pulumi:"actions"`
}

func (WebApplicationKeyUserActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionArgs) ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput {
	return i.ToWebApplicationKeyUserActionOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionArgs) ToWebApplicationKeyUserActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionOutput)
}

// WebApplicationKeyUserActionArrayInput is an input type that accepts WebApplicationKeyUserActionArray and WebApplicationKeyUserActionArrayOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionArrayInput` via:
//
//	WebApplicationKeyUserActionArray{ WebApplicationKeyUserActionArgs{...} }
type WebApplicationKeyUserActionArrayInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput
	ToWebApplicationKeyUserActionArrayOutputWithContext(context.Context) WebApplicationKeyUserActionArrayOutput
}

type WebApplicationKeyUserActionArray []WebApplicationKeyUserActionInput

func (WebApplicationKeyUserActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionArray) ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput {
	return i.ToWebApplicationKeyUserActionArrayOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionArray) ToWebApplicationKeyUserActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionArrayOutput)
}

type WebApplicationKeyUserActionOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionOutput) ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput {
	return o
}

func (o WebApplicationKeyUserActionOutput) ToWebApplicationKeyUserActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionOutput {
	return o
}

// Configuration of the key user action
func (o WebApplicationKeyUserActionOutput) Actions() WebApplicationKeyUserActionActionArrayOutput {
	return o.ApplyT(func(v WebApplicationKeyUserAction) []WebApplicationKeyUserActionAction { return v.Actions }).(WebApplicationKeyUserActionActionArrayOutput)
}

type WebApplicationKeyUserActionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionArrayOutput) ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionArrayOutput) ToWebApplicationKeyUserActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionArrayOutput) Index(i pulumi.IntInput) WebApplicationKeyUserActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationKeyUserAction {
		return vs[0].([]WebApplicationKeyUserAction)[vs[1].(int)]
	}).(WebApplicationKeyUserActionOutput)
}

type WebApplicationKeyUserActionAction struct {
	Domain *string `pulumi:"domain"`
	// The name of the web application, displayed in the UI
	Name string `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type string `pulumi:"type"`
}

// WebApplicationKeyUserActionActionInput is an input type that accepts WebApplicationKeyUserActionActionArgs and WebApplicationKeyUserActionActionOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionActionInput` via:
//
//	WebApplicationKeyUserActionActionArgs{...}
type WebApplicationKeyUserActionActionInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput
	ToWebApplicationKeyUserActionActionOutputWithContext(context.Context) WebApplicationKeyUserActionActionOutput
}

type WebApplicationKeyUserActionActionArgs struct {
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the web application, displayed in the UI
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationKeyUserActionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionActionArgs) ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput {
	return i.ToWebApplicationKeyUserActionActionOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionActionArgs) ToWebApplicationKeyUserActionActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionActionOutput)
}

// WebApplicationKeyUserActionActionArrayInput is an input type that accepts WebApplicationKeyUserActionActionArray and WebApplicationKeyUserActionActionArrayOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionActionArrayInput` via:
//
//	WebApplicationKeyUserActionActionArray{ WebApplicationKeyUserActionActionArgs{...} }
type WebApplicationKeyUserActionActionArrayInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput
	ToWebApplicationKeyUserActionActionArrayOutputWithContext(context.Context) WebApplicationKeyUserActionActionArrayOutput
}

type WebApplicationKeyUserActionActionArray []WebApplicationKeyUserActionActionInput

func (WebApplicationKeyUserActionActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionActionArray) ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput {
	return i.ToWebApplicationKeyUserActionActionArrayOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionActionArray) ToWebApplicationKeyUserActionActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionActionArrayOutput)
}

type WebApplicationKeyUserActionActionOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionActionOutput) ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput {
	return o
}

func (o WebApplicationKeyUserActionActionOutput) ToWebApplicationKeyUserActionActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionOutput {
	return o
}

func (o WebApplicationKeyUserActionActionOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the web application, displayed in the UI
func (o WebApplicationKeyUserActionActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationKeyUserActionActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) string { return v.Type }).(pulumi.StringOutput)
}

type WebApplicationKeyUserActionActionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionActionArrayOutput) ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionActionArrayOutput) ToWebApplicationKeyUserActionActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionActionArrayOutput) Index(i pulumi.IntInput) WebApplicationKeyUserActionActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationKeyUserActionAction {
		return vs[0].([]WebApplicationKeyUserActionAction)[vs[1].(int)]
	}).(WebApplicationKeyUserActionActionOutput)
}

type WebApplicationLoadActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *int `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *int `pulumi:"toleratedThreshold"`
}

// WebApplicationLoadActionApdexSettingsInput is an input type that accepts WebApplicationLoadActionApdexSettingsArgs and WebApplicationLoadActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationLoadActionApdexSettingsInput` via:
//
//	WebApplicationLoadActionApdexSettingsArgs{...}
type WebApplicationLoadActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput
	ToWebApplicationLoadActionApdexSettingsOutputWithContext(context.Context) WebApplicationLoadActionApdexSettingsOutput
}

type WebApplicationLoadActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntPtrInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntPtrInput `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntPtrInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntPtrInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationLoadActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput {
	return i.ToWebApplicationLoadActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsOutput)
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return i.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsOutput).ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationLoadActionApdexSettingsPtrInput is an input type that accepts WebApplicationLoadActionApdexSettingsArgs, WebApplicationLoadActionApdexSettingsPtr and WebApplicationLoadActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationLoadActionApdexSettingsPtrInput` via:
//
//	        WebApplicationLoadActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationLoadActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput
	ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationLoadActionApdexSettingsPtrOutput
}

type webApplicationLoadActionApdexSettingsPtrType WebApplicationLoadActionApdexSettingsArgs

func WebApplicationLoadActionApdexSettingsPtr(v *WebApplicationLoadActionApdexSettingsArgs) WebApplicationLoadActionApdexSettingsPtrInput {
	return (*webApplicationLoadActionApdexSettingsPtrType)(v)
}

func (*webApplicationLoadActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationLoadActionApdexSettingsPtrType) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return i.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationLoadActionApdexSettingsPtrType) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsPtrOutput)
}

type WebApplicationLoadActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationLoadActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return o.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationLoadActionApdexSettings) *WebApplicationLoadActionApdexSettings {
		return &v
	}).(WebApplicationLoadActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.FrustratingFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.FrustratingThreshold }).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationLoadActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.ToleratedFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.ToleratedThreshold }).(pulumi.IntPtrOutput)
}

type WebApplicationLoadActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationLoadActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) Elem() WebApplicationLoadActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) WebApplicationLoadActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationLoadActionApdexSettings
		return ret
	}).(WebApplicationLoadActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationLoadActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMetaDataCaptureSettings struct {
	// Java script agent meta data capture settings
	Captures []WebApplicationMetaDataCaptureSettingsCapture `pulumi:"captures"`
}

// WebApplicationMetaDataCaptureSettingsInput is an input type that accepts WebApplicationMetaDataCaptureSettingsArgs and WebApplicationMetaDataCaptureSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsInput` via:
//
//	WebApplicationMetaDataCaptureSettingsArgs{...}
type WebApplicationMetaDataCaptureSettingsInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput
	ToWebApplicationMetaDataCaptureSettingsOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsOutput
}

type WebApplicationMetaDataCaptureSettingsArgs struct {
	// Java script agent meta data capture settings
	Captures WebApplicationMetaDataCaptureSettingsCaptureArrayInput `pulumi:"captures"`
}

func (WebApplicationMetaDataCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsOutput)
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsOutput).ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMetaDataCaptureSettingsPtrInput is an input type that accepts WebApplicationMetaDataCaptureSettingsArgs, WebApplicationMetaDataCaptureSettingsPtr and WebApplicationMetaDataCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsPtrInput` via:
//
//	        WebApplicationMetaDataCaptureSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMetaDataCaptureSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput
	ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput
}

type webApplicationMetaDataCaptureSettingsPtrType WebApplicationMetaDataCaptureSettingsArgs

func WebApplicationMetaDataCaptureSettingsPtr(v *WebApplicationMetaDataCaptureSettingsArgs) WebApplicationMetaDataCaptureSettingsPtrInput {
	return (*webApplicationMetaDataCaptureSettingsPtrType)(v)
}

func (*webApplicationMetaDataCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (i *webApplicationMetaDataCaptureSettingsPtrType) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMetaDataCaptureSettingsPtrType) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

type WebApplicationMetaDataCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMetaDataCaptureSettings) *WebApplicationMetaDataCaptureSettings {
		return &v
	}).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationMetaDataCaptureSettingsOutput) Captures() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettings) []WebApplicationMetaDataCaptureSettingsCapture {
		return v.Captures
	}).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) Elem() WebApplicationMetaDataCaptureSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMetaDataCaptureSettings) WebApplicationMetaDataCaptureSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMetaDataCaptureSettings
		return ret
	}).(WebApplicationMetaDataCaptureSettingsOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationMetaDataCaptureSettingsPtrOutput) Captures() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o.ApplyT(func(v *WebApplicationMetaDataCaptureSettings) []WebApplicationMetaDataCaptureSettingsCapture {
		if v == nil {
			return nil
		}
		return v.Captures
	}).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsCapture struct {
	CapturingName string `pulumi:"capturingName"`
	// The name of the web application, displayed in the UI
	Name           string `pulumi:"name"`
	PublicMetadata *bool  `pulumi:"publicMetadata"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type         string `pulumi:"type"`
	UniqueId     *int   `pulumi:"uniqueId"`
	UseLastValue *bool  `pulumi:"useLastValue"`
}

// WebApplicationMetaDataCaptureSettingsCaptureInput is an input type that accepts WebApplicationMetaDataCaptureSettingsCaptureArgs and WebApplicationMetaDataCaptureSettingsCaptureOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsCaptureInput` via:
//
//	WebApplicationMetaDataCaptureSettingsCaptureArgs{...}
type WebApplicationMetaDataCaptureSettingsCaptureInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput
	ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput
}

type WebApplicationMetaDataCaptureSettingsCaptureArgs struct {
	CapturingName pulumi.StringInput `pulumi:"capturingName"`
	// The name of the web application, displayed in the UI
	Name           pulumi.StringInput  `pulumi:"name"`
	PublicMetadata pulumi.BoolPtrInput `pulumi:"publicMetadata"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type         pulumi.StringInput  `pulumi:"type"`
	UniqueId     pulumi.IntPtrInput  `pulumi:"uniqueId"`
	UseLastValue pulumi.BoolPtrInput `pulumi:"useLastValue"`
}

func (WebApplicationMetaDataCaptureSettingsCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArgs) ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArgs) ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsCaptureOutput)
}

// WebApplicationMetaDataCaptureSettingsCaptureArrayInput is an input type that accepts WebApplicationMetaDataCaptureSettingsCaptureArray and WebApplicationMetaDataCaptureSettingsCaptureArrayOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsCaptureArrayInput` via:
//
//	WebApplicationMetaDataCaptureSettingsCaptureArray{ WebApplicationMetaDataCaptureSettingsCaptureArgs{...} }
type WebApplicationMetaDataCaptureSettingsCaptureArrayInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput
	ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput
}

type WebApplicationMetaDataCaptureSettingsCaptureArray []WebApplicationMetaDataCaptureSettingsCaptureInput

func (WebApplicationMetaDataCaptureSettingsCaptureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArray) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArray) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsCaptureOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsCaptureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) CapturingName() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.CapturingName }).(pulumi.StringOutput)
}

// The name of the web application, displayed in the UI
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) PublicMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *bool { return v.PublicMetadata }).(pulumi.BoolPtrOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.Type }).(pulumi.StringOutput)
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) UniqueId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *int { return v.UniqueId }).(pulumi.IntPtrOutput)
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) UseLastValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *bool { return v.UseLastValue }).(pulumi.BoolPtrOutput)
}

type WebApplicationMetaDataCaptureSettingsCaptureArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) Index(i pulumi.IntInput) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMetaDataCaptureSettingsCapture {
		return vs[0].([]WebApplicationMetaDataCaptureSettingsCapture)[vs[1].(int)]
	}).(WebApplicationMetaDataCaptureSettingsCaptureOutput)
}

type WebApplicationMonitoringSettings struct {
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute *bool `pulumi:"addCrossOriginAnonymousAttribute"`
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings `pulumi:"advancedJavascriptTagSettings"`
	// The name of the angular package
	AngularPackageName *string `pulumi:"angularPackageName"`
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings *WebApplicationMonitoringSettingsBrowserRestrictionSettings `pulumi:"browserRestrictionSettings"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations *bool `pulumi:"cacheControlHeaderOptimizations"`
	// Settings for content capture
	ContentCapture WebApplicationMonitoringSettingsContentCapture `pulumi:"contentCapture"`
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain *string `pulumi:"cookiePlacementDomain"`
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	CorrelationHeaderInclusionRegex *string `pulumi:"correlationHeaderInclusionRegex"`
	CustomConfigurationProperties   *string `pulumi:"customConfigurationProperties"`
	ExcludeXhrRegex                 *string `pulumi:"excludeXhrRegex"`
	FetchRequests                   *bool   `pulumi:"fetchRequests"`
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode                 string                                                        `pulumi:"injectionMode"`
	IpAddressRestrictionSettings  *WebApplicationMonitoringSettingsIpAddressRestrictionSettings `pulumi:"ipAddressRestrictionSettings"`
	JavascriptFrameworkSupport    *WebApplicationMonitoringSettingsJavascriptFrameworkSupport   `pulumi:"javascriptFrameworkSupport"`
	JavascriptInjectionRules      *WebApplicationMonitoringSettingsJavascriptInjectionRules     `pulumi:"javascriptInjectionRules"`
	LibraryFileLocation           *string                                                       `pulumi:"libraryFileLocation"`
	MonitoringDataPath            *string                                                       `pulumi:"monitoringDataPath"`
	ScriptTagCacheDurationInHours *int                                                          `pulumi:"scriptTagCacheDurationInHours"`
	SecureCookieAttribute         *bool                                                         `pulumi:"secureCookieAttribute"`
	ServerRequestPathId           *string                                                       `pulumi:"serverRequestPathId"`
	XmlHttpRequest                *bool                                                         `pulumi:"xmlHttpRequest"`
}

// WebApplicationMonitoringSettingsInput is an input type that accepts WebApplicationMonitoringSettingsArgs and WebApplicationMonitoringSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsInput` via:
//
//	WebApplicationMonitoringSettingsArgs{...}
type WebApplicationMonitoringSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput
	ToWebApplicationMonitoringSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsOutput
}

type WebApplicationMonitoringSettingsArgs struct {
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute pulumi.BoolPtrInput `pulumi:"addCrossOriginAnonymousAttribute"`
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput `pulumi:"advancedJavascriptTagSettings"`
	// The name of the angular package
	AngularPackageName pulumi.StringPtrInput `pulumi:"angularPackageName"`
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput `pulumi:"browserRestrictionSettings"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations pulumi.BoolPtrInput `pulumi:"cacheControlHeaderOptimizations"`
	// Settings for content capture
	ContentCapture WebApplicationMonitoringSettingsContentCaptureInput `pulumi:"contentCapture"`
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain pulumi.StringPtrInput `pulumi:"cookiePlacementDomain"`
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	CorrelationHeaderInclusionRegex pulumi.StringPtrInput `pulumi:"correlationHeaderInclusionRegex"`
	CustomConfigurationProperties   pulumi.StringPtrInput `pulumi:"customConfigurationProperties"`
	ExcludeXhrRegex                 pulumi.StringPtrInput `pulumi:"excludeXhrRegex"`
	FetchRequests                   pulumi.BoolPtrInput   `pulumi:"fetchRequests"`
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode                 pulumi.StringInput                                                   `pulumi:"injectionMode"`
	IpAddressRestrictionSettings  WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput `pulumi:"ipAddressRestrictionSettings"`
	JavascriptFrameworkSupport    WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput   `pulumi:"javascriptFrameworkSupport"`
	JavascriptInjectionRules      WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput     `pulumi:"javascriptInjectionRules"`
	LibraryFileLocation           pulumi.StringPtrInput                                                `pulumi:"libraryFileLocation"`
	MonitoringDataPath            pulumi.StringPtrInput                                                `pulumi:"monitoringDataPath"`
	ScriptTagCacheDurationInHours pulumi.IntPtrInput                                                   `pulumi:"scriptTagCacheDurationInHours"`
	SecureCookieAttribute         pulumi.BoolPtrInput                                                  `pulumi:"secureCookieAttribute"`
	ServerRequestPathId           pulumi.StringPtrInput                                                `pulumi:"serverRequestPathId"`
	XmlHttpRequest                pulumi.BoolPtrInput                                                  `pulumi:"xmlHttpRequest"`
}

func (WebApplicationMonitoringSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsOutput)
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsOutput).ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsArgs, WebApplicationMonitoringSettingsPtr and WebApplicationMonitoringSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput
	ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsPtrOutput
}

type webApplicationMonitoringSettingsPtrType WebApplicationMonitoringSettingsArgs

func WebApplicationMonitoringSettingsPtr(v *WebApplicationMonitoringSettingsArgs) WebApplicationMonitoringSettingsPtrInput {
	return (*webApplicationMonitoringSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsPtrType) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsPtrType) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettings {
		return &v
	}).(WebApplicationMonitoringSettingsPtrOutput)
}

// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
func (o WebApplicationMonitoringSettingsOutput) AddCrossOriginAnonymousAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.AddCrossOriginAnonymousAttribute }).(pulumi.BoolPtrOutput)
}

// Advanced JavaScript tag settings
func (o WebApplicationMonitoringSettingsOutput) AdvancedJavascriptTagSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		return v.AdvancedJavascriptTagSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

// The name of the angular package
func (o WebApplicationMonitoringSettingsOutput) AngularPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.AngularPackageName }).(pulumi.StringPtrOutput)
}

// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
func (o WebApplicationMonitoringSettingsOutput) BrowserRestrictionSettings() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		return v.BrowserRestrictionSettings
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) CacheControlHeaderOptimizations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.CacheControlHeaderOptimizations }).(pulumi.BoolPtrOutput)
}

// Settings for content capture
func (o WebApplicationMonitoringSettingsOutput) ContentCapture() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) WebApplicationMonitoringSettingsContentCapture {
		return v.ContentCapture
	}).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

// Domain for cookie placement. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsOutput) CookiePlacementDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CookiePlacementDomain }).(pulumi.StringPtrOutput)
}

// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
func (o WebApplicationMonitoringSettingsOutput) CorrelationHeaderInclusionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CorrelationHeaderInclusionRegex }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) CustomConfigurationProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CustomConfigurationProperties }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) ExcludeXhrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.ExcludeXhrRegex }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) FetchRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.FetchRequests }).(pulumi.BoolPtrOutput)
}

// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
func (o WebApplicationMonitoringSettingsOutput) InjectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) string { return v.InjectionMode }).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsOutput) IpAddressRestrictionSettings() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		return v.IpAddressRestrictionSettings
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) JavascriptFrameworkSupport() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		return v.JavascriptFrameworkSupport
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) JavascriptInjectionRules() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		return v.JavascriptInjectionRules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) LibraryFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.LibraryFileLocation }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) MonitoringDataPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.MonitoringDataPath }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) ScriptTagCacheDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *int { return v.ScriptTagCacheDurationInHours }).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) SecureCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.SecureCookieAttribute }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) ServerRequestPathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.ServerRequestPathId }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsOutput) XmlHttpRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.XmlHttpRequest }).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsPtrOutput) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsPtrOutput) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) WebApplicationMonitoringSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettings
		return ret
	}).(WebApplicationMonitoringSettingsOutput)
}

// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
func (o WebApplicationMonitoringSettingsPtrOutput) AddCrossOriginAnonymousAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AddCrossOriginAnonymousAttribute
	}).(pulumi.BoolPtrOutput)
}

// Advanced JavaScript tag settings
func (o WebApplicationMonitoringSettingsPtrOutput) AdvancedJavascriptTagSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		if v == nil {
			return nil
		}
		return v.AdvancedJavascriptTagSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

// The name of the angular package
func (o WebApplicationMonitoringSettingsPtrOutput) AngularPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.AngularPackageName
	}).(pulumi.StringPtrOutput)
}

// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
func (o WebApplicationMonitoringSettingsPtrOutput) BrowserRestrictionSettings() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		if v == nil {
			return nil
		}
		return v.BrowserRestrictionSettings
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) CacheControlHeaderOptimizations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.CacheControlHeaderOptimizations
	}).(pulumi.BoolPtrOutput)
}

// Settings for content capture
func (o WebApplicationMonitoringSettingsPtrOutput) ContentCapture() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsContentCapture {
		if v == nil {
			return nil
		}
		return &v.ContentCapture
	}).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

// Domain for cookie placement. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) CookiePlacementDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CookiePlacementDomain
	}).(pulumi.StringPtrOutput)
}

// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
func (o WebApplicationMonitoringSettingsPtrOutput) CorrelationHeaderInclusionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationHeaderInclusionRegex
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) CustomConfigurationProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CustomConfigurationProperties
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) ExcludeXhrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeXhrRegex
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) FetchRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.FetchRequests
	}).(pulumi.BoolPtrOutput)
}

// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
func (o WebApplicationMonitoringSettingsPtrOutput) InjectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return &v.InjectionMode
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) IpAddressRestrictionSettings() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		if v == nil {
			return nil
		}
		return v.IpAddressRestrictionSettings
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) JavascriptFrameworkSupport() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		if v == nil {
			return nil
		}
		return v.JavascriptFrameworkSupport
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) JavascriptInjectionRules() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		if v == nil {
			return nil
		}
		return v.JavascriptInjectionRules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) LibraryFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.LibraryFileLocation
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) MonitoringDataPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringDataPath
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) ScriptTagCacheDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *int {
		if v == nil {
			return nil
		}
		return v.ScriptTagCacheDurationInHours
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) SecureCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SecureCookieAttribute
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) ServerRequestPathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerRequestPathId
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsPtrOutput) XmlHttpRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.XmlHttpRequest
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings struct {
	AdditionalEventHandlers             *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers    `pulumi:"additionalEventHandlers"`
	EventWrapperSettings                *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings       `pulumi:"eventWrapperSettings"`
	GlobalEventCaptureSettings          *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings `pulumi:"globalEventCaptureSettings"`
	InstrumentUnsupportedAjaxFrameworks *bool                                                                                    `pulumi:"instrumentUnsupportedAjaxFrameworks"`
	MaxActionNameLength                 int                                                                                      `pulumi:"maxActionNameLength"`
	MaxErrorsToCapture                  int                                                                                      `pulumi:"maxErrorsToCapture"`
	SpecialCharactersToEscape           *string                                                                                  `pulumi:"specialCharactersToEscape"`
	SyncBeaconFirefox                   *bool                                                                                    `pulumi:"syncBeaconFirefox"`
	SyncBeaconInternetExplorer          *bool                                                                                    `pulumi:"syncBeaconInternetExplorer"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs struct {
	AdditionalEventHandlers             WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput    `pulumi:"additionalEventHandlers"`
	EventWrapperSettings                WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput       `pulumi:"eventWrapperSettings"`
	GlobalEventCaptureSettings          WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput `pulumi:"globalEventCaptureSettings"`
	InstrumentUnsupportedAjaxFrameworks pulumi.BoolPtrInput                                                                             `pulumi:"instrumentUnsupportedAjaxFrameworks"`
	MaxActionNameLength                 pulumi.IntInput                                                                                 `pulumi:"maxActionNameLength"`
	MaxErrorsToCapture                  pulumi.IntInput                                                                                 `pulumi:"maxErrorsToCapture"`
	SpecialCharactersToEscape           pulumi.StringPtrInput                                                                           `pulumi:"specialCharactersToEscape"`
	SyncBeaconFirefox                   pulumi.BoolPtrInput                                                                             `pulumi:"syncBeaconFirefox"`
	SyncBeaconInternetExplorer          pulumi.BoolPtrInput                                                                             `pulumi:"syncBeaconInternetExplorer"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) AdditionalEventHandlers() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		return v.AdditionalEventHandlers
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) EventWrapperSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		return v.EventWrapperSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) GlobalEventCaptureSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		return v.GlobalEventCaptureSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) InstrumentUnsupportedAjaxFrameworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.InstrumentUnsupportedAjaxFrameworks
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) MaxActionNameLength() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) int {
		return v.MaxActionNameLength
	}).(pulumi.IntOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) MaxErrorsToCapture() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) int { return v.MaxErrorsToCapture }).(pulumi.IntOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SpecialCharactersToEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *string {
		return v.SpecialCharactersToEscape
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SyncBeaconFirefox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.SyncBeaconFirefox
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SyncBeaconInternetExplorer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.SyncBeaconInternetExplorer
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) AdditionalEventHandlers() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		if v == nil {
			return nil
		}
		return v.AdditionalEventHandlers
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) EventWrapperSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		if v == nil {
			return nil
		}
		return v.EventWrapperSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) GlobalEventCaptureSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		if v == nil {
			return nil
		}
		return v.GlobalEventCaptureSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) InstrumentUnsupportedAjaxFrameworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InstrumentUnsupportedAjaxFrameworks
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) MaxActionNameLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxActionNameLength
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) MaxErrorsToCapture() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxErrorsToCapture
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SpecialCharactersToEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *string {
		if v == nil {
			return nil
		}
		return v.SpecialCharactersToEscape
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SyncBeaconFirefox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SyncBeaconFirefox
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SyncBeaconInternetExplorer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SyncBeaconInternetExplorer
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers struct {
	Blur                     *bool `pulumi:"blur"`
	Change                   *bool `pulumi:"change"`
	Click                    *bool `pulumi:"click"`
	MaxDomNodes              int   `pulumi:"maxDomNodes"`
	Mouseup                  *bool `pulumi:"mouseup"`
	ToStringMethod           *bool `pulumi:"toStringMethod"`
	UseMouseUpEventForClicks *bool `pulumi:"useMouseUpEventForClicks"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs struct {
	Blur                     pulumi.BoolPtrInput `pulumi:"blur"`
	Change                   pulumi.BoolPtrInput `pulumi:"change"`
	Click                    pulumi.BoolPtrInput `pulumi:"click"`
	MaxDomNodes              pulumi.IntInput     `pulumi:"maxDomNodes"`
	Mouseup                  pulumi.BoolPtrInput `pulumi:"mouseup"`
	ToStringMethod           pulumi.BoolPtrInput `pulumi:"toStringMethod"`
	UseMouseUpEventForClicks pulumi.BoolPtrInput `pulumi:"useMouseUpEventForClicks"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) MaxDomNodes() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) int {
		return v.MaxDomNodes
	}).(pulumi.IntOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToStringMethod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.ToStringMethod
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) UseMouseUpEventForClicks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.UseMouseUpEventForClicks
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) MaxDomNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *int {
		if v == nil {
			return nil
		}
		return &v.MaxDomNodes
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToStringMethod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.ToStringMethod
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) UseMouseUpEventForClicks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.UseMouseUpEventForClicks
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings struct {
	Blur       *bool `pulumi:"blur"`
	Change     *bool `pulumi:"change"`
	Click      *bool `pulumi:"click"`
	Mouseup    *bool `pulumi:"mouseup"`
	TouchEnd   *bool `pulumi:"touchEnd"`
	TouchStart *bool `pulumi:"touchStart"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs struct {
	Blur       pulumi.BoolPtrInput `pulumi:"blur"`
	Change     pulumi.BoolPtrInput `pulumi:"change"`
	Click      pulumi.BoolPtrInput `pulumi:"click"`
	Mouseup    pulumi.BoolPtrInput `pulumi:"mouseup"`
	TouchEnd   pulumi.BoolPtrInput `pulumi:"touchEnd"`
	TouchStart pulumi.BoolPtrInput `pulumi:"touchStart"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings struct {
	AdditionalEventCapturedAsUserInput *string `pulumi:"additionalEventCapturedAsUserInput"`
	Click                              *bool   `pulumi:"click"`
	Doubleclick                        *bool   `pulumi:"doubleclick"`
	Keydown                            *bool   `pulumi:"keydown"`
	Keyup                              *bool   `pulumi:"keyup"`
	Mousedown                          *bool   `pulumi:"mousedown"`
	Mouseup                            *bool   `pulumi:"mouseup"`
	Scroll                             *bool   `pulumi:"scroll"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs struct {
	AdditionalEventCapturedAsUserInput pulumi.StringPtrInput `pulumi:"additionalEventCapturedAsUserInput"`
	Click                              pulumi.BoolPtrInput   `pulumi:"click"`
	Doubleclick                        pulumi.BoolPtrInput   `pulumi:"doubleclick"`
	Keydown                            pulumi.BoolPtrInput   `pulumi:"keydown"`
	Keyup                              pulumi.BoolPtrInput   `pulumi:"keyup"`
	Mousedown                          pulumi.BoolPtrInput   `pulumi:"mousedown"`
	Mouseup                            pulumi.BoolPtrInput   `pulumi:"mouseup"`
	Scroll                             pulumi.BoolPtrInput   `pulumi:"scroll"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) AdditionalEventCapturedAsUserInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *string {
		return v.AdditionalEventCapturedAsUserInput
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Doubleclick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Doubleclick
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Keydown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Keydown
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Keyup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Keyup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Mousedown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Mousedown
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Scroll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Scroll
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) AdditionalEventCapturedAsUserInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalEventCapturedAsUserInput
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Doubleclick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Doubleclick
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Keydown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Keydown
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Keyup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Keyup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Mousedown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mousedown
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Scroll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Scroll
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettings struct {
	Mode         string                                                                  `pulumi:"mode"`
	Restrictions *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs struct {
	Mode         pulumi.StringInput                                                             `pulumi:"mode"`
	Restrictions WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput)
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput).ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs, WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtr and WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput
}

type webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs

func WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtr(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput {
	return (*webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		return &v
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettings) string { return v.Mode }).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsBrowserRestrictionSettings
		return ret
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions struct {
	Restrictions []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs struct {
	Restrictions WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput)
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput).ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs, WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtr and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput
}

type webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs

func WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtr(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput {
	return (*webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType)(v)
}

func (*webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		return &v
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) Elem() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions
		return ret
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction struct {
	BrowserType    string  `pulumi:"browserType"`
	BrowserVersion *string `pulumi:"browserVersion"`
	Comparator     *string `pulumi:"comparator"`
	Platform       *string `pulumi:"platform"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs struct {
	BrowserType    pulumi.StringInput    `pulumi:"browserType"`
	BrowserVersion pulumi.StringPtrInput `pulumi:"browserVersion"`
	Comparator     pulumi.StringPtrInput `pulumi:"comparator"`
	Platform       pulumi.StringPtrInput `pulumi:"platform"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray{ WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{...} }
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) BrowserType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) string {
		return v.BrowserType
	}).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) BrowserVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.BrowserVersion
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) Comparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.Comparator
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		return vs[0].([]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput)
}

type WebApplicationMonitoringSettingsContentCapture struct {
	JavascriptErrors              *bool                                                                   `pulumi:"javascriptErrors"`
	ResourceTimingSettings        *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings   `pulumi:"resourceTimingSettings"`
	TimeoutSettings               *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings          `pulumi:"timeoutSettings"`
	VisuallyCompleteAndSpeedIndex *bool                                                                   `pulumi:"visuallyCompleteAndSpeedIndex"`
	VisuallyCompleteSettings      *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings `pulumi:"visuallyCompleteSettings"`
}

// WebApplicationMonitoringSettingsContentCaptureInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureArgs and WebApplicationMonitoringSettingsContentCaptureOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureArgs{...}
type WebApplicationMonitoringSettingsContentCaptureInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput
	ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureOutput
}

type WebApplicationMonitoringSettingsContentCaptureArgs struct {
	JavascriptErrors              pulumi.BoolPtrInput                                                            `pulumi:"javascriptErrors"`
	ResourceTimingSettings        WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput   `pulumi:"resourceTimingSettings"`
	TimeoutSettings               WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput          `pulumi:"timeoutSettings"`
	VisuallyCompleteAndSpeedIndex pulumi.BoolPtrInput                                                            `pulumi:"visuallyCompleteAndSpeedIndex"`
	VisuallyCompleteSettings      WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput `pulumi:"visuallyCompleteSettings"`
}

func (WebApplicationMonitoringSettingsContentCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureOutput).ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCapturePtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureArgs, WebApplicationMonitoringSettingsContentCapturePtr and WebApplicationMonitoringSettingsContentCapturePtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCapturePtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCapturePtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput
	ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput
}

type webApplicationMonitoringSettingsContentCapturePtrType WebApplicationMonitoringSettingsContentCaptureArgs

func WebApplicationMonitoringSettingsContentCapturePtr(v *WebApplicationMonitoringSettingsContentCaptureArgs) WebApplicationMonitoringSettingsContentCapturePtrInput {
	return (*webApplicationMonitoringSettingsContentCapturePtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCapturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCapturePtrType) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCapturePtrType) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCapture {
		return &v
	}).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) JavascriptErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *bool { return v.JavascriptErrors }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ResourceTimingSettings() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		return v.ResourceTimingSettings
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) TimeoutSettings() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		return v.TimeoutSettings
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) VisuallyCompleteAndSpeedIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *bool { return v.VisuallyCompleteAndSpeedIndex }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) VisuallyCompleteSettings() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		return v.VisuallyCompleteSettings
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCapturePtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCapturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCapture {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCapture
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) JavascriptErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptErrors
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ResourceTimingSettings() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		if v == nil {
			return nil
		}
		return v.ResourceTimingSettings
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) TimeoutSettings() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		if v == nil {
			return nil
		}
		return v.TimeoutSettings
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) VisuallyCompleteAndSpeedIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *bool {
		if v == nil {
			return nil
		}
		return v.VisuallyCompleteAndSpeedIndex
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) VisuallyCompleteSettings() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		if v == nil {
			return nil
		}
		return v.VisuallyCompleteSettings
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings struct {
	InstrumentationDelay       int     `pulumi:"instrumentationDelay"`
	NonW3cResourceTimings      *bool   `pulumi:"nonW3cResourceTimings"`
	ResourceTimingCaptureType  *string `pulumi:"resourceTimingCaptureType"`
	ResourceTimingsDomainLimit *int    `pulumi:"resourceTimingsDomainLimit"`
	W3cResourceTimings         *bool   `pulumi:"w3cResourceTimings"`
}

// WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs and WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs struct {
	InstrumentationDelay       pulumi.IntInput       `pulumi:"instrumentationDelay"`
	NonW3cResourceTimings      pulumi.BoolPtrInput   `pulumi:"nonW3cResourceTimings"`
	ResourceTimingCaptureType  pulumi.StringPtrInput `pulumi:"resourceTimingCaptureType"`
	ResourceTimingsDomainLimit pulumi.IntPtrInput    `pulumi:"resourceTimingsDomainLimit"`
	W3cResourceTimings         pulumi.BoolPtrInput   `pulumi:"w3cResourceTimings"`
}

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs, WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtr and WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) InstrumentationDelay() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) int {
		return v.InstrumentationDelay
	}).(pulumi.IntOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) NonW3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		return v.NonW3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ResourceTimingCaptureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *string {
		return v.ResourceTimingCaptureType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ResourceTimingsDomainLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		return v.ResourceTimingsDomainLimit
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) W3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		return v.W3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) InstrumentationDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		if v == nil {
			return nil
		}
		return &v.InstrumentationDelay
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) NonW3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.NonW3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ResourceTimingCaptureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *string {
		if v == nil {
			return nil
		}
		return v.ResourceTimingCaptureType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ResourceTimingsDomainLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		if v == nil {
			return nil
		}
		return v.ResourceTimingsDomainLimit
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) W3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.W3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettings struct {
	TemporaryActionLimit        int   `pulumi:"temporaryActionLimit"`
	TemporaryActionTotalTimeout int   `pulumi:"temporaryActionTotalTimeout"`
	TimedActionSupport          *bool `pulumi:"timedActionSupport"`
}

// WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs and WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs struct {
	TemporaryActionLimit        pulumi.IntInput     `pulumi:"temporaryActionLimit"`
	TemporaryActionTotalTimeout pulumi.IntInput     `pulumi:"temporaryActionTotalTimeout"`
	TimedActionSupport          pulumi.BoolPtrInput `pulumi:"timedActionSupport"`
}

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs, WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtr and WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TemporaryActionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) int {
		return v.TemporaryActionLimit
	}).(pulumi.IntOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TemporaryActionTotalTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) int {
		return v.TemporaryActionTotalTimeout
	}).(pulumi.IntOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TimedActionSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *bool {
		return v.TimedActionSupport
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureTimeoutSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TemporaryActionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TemporaryActionLimit
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TemporaryActionTotalTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TemporaryActionTotalTimeout
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TimedActionSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TimedActionSupport
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings struct {
	ExcludeUrlRegex      *string `pulumi:"excludeUrlRegex"`
	IgnoredMutationsList *string `pulumi:"ignoredMutationsList"`
	InactivityTimeout    *int    `pulumi:"inactivityTimeout"`
	MutationTimeout      *int    `pulumi:"mutationTimeout"`
	Threshold            *int    `pulumi:"threshold"`
}

// WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs and WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs struct {
	ExcludeUrlRegex      pulumi.StringPtrInput `pulumi:"excludeUrlRegex"`
	IgnoredMutationsList pulumi.StringPtrInput `pulumi:"ignoredMutationsList"`
	InactivityTimeout    pulumi.IntPtrInput    `pulumi:"inactivityTimeout"`
	MutationTimeout      pulumi.IntPtrInput    `pulumi:"mutationTimeout"`
	Threshold            pulumi.IntPtrInput    `pulumi:"threshold"`
}

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs, WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtr and WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ExcludeUrlRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		return v.ExcludeUrlRegex
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) IgnoredMutationsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		return v.IgnoredMutationsList
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.InactivityTimeout
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) MutationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.MutationTimeout
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ExcludeUrlRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeUrlRegex
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) IgnoredMutationsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.IgnoredMutationsList
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.InactivityTimeout
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) MutationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.MutationTimeout
	}).(pulumi.IntPtrOutput)
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettings struct {
	Mode         string                                                                    `pulumi:"mode"`
	Restrictions *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs struct {
	Mode         pulumi.StringInput                                                               `pulumi:"mode"`
	Restrictions WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput)
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput).ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs, WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtr and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput
}

type webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs

func WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtr(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput {
	return (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		return &v
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) string { return v.Mode }).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) Restrictions() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsIpAddressRestrictionSettings
		return ret
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Restrictions() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions struct {
	Ranges []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange `pulumi:"ranges"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs struct {
	Ranges WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput `pulumi:"ranges"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput)
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput).ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs, WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtr and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput
}

type webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs

func WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtr(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput {
	return (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType)(v)
}

func (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		return &v
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) Ranges() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		return v.Ranges
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) Elem() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions
		return ret
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) Ranges() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		if v == nil {
			return nil
		}
		return v.Ranges
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange struct {
	Address    string  `pulumi:"address"`
	AddressTo  *string `pulumi:"addressTo"`
	SubnetMask *int    `pulumi:"subnetMask"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs struct {
	Address    pulumi.StringInput    `pulumi:"address"`
	AddressTo  pulumi.StringPtrInput `pulumi:"addressTo"`
	SubnetMask pulumi.IntPtrInput    `pulumi:"subnetMask"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray{ WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{...} }
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) string {
		return v.Address
	}).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) AddressTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) *string {
		return v.AddressTo
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) SubnetMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) *int {
		return v.SubnetMask
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		return vs[0].([]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupport struct {
	ActiveXObject *bool `pulumi:"activeXObject"`
	Angular       *bool `pulumi:"angular"`
	Dojo          *bool `pulumi:"dojo"`
	Extjs         *bool `pulumi:"extjs"`
	Icefaces      *bool `pulumi:"icefaces"`
	Jquery        *bool `pulumi:"jquery"`
	MooTools      *bool `pulumi:"mooTools"`
	Prototype     *bool `pulumi:"prototype"`
}

// WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs and WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{...}
type WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput
	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs struct {
	ActiveXObject pulumi.BoolPtrInput `pulumi:"activeXObject"`
	Angular       pulumi.BoolPtrInput `pulumi:"angular"`
	Dojo          pulumi.BoolPtrInput `pulumi:"dojo"`
	Extjs         pulumi.BoolPtrInput `pulumi:"extjs"`
	Icefaces      pulumi.BoolPtrInput `pulumi:"icefaces"`
	Jquery        pulumi.BoolPtrInput `pulumi:"jquery"`
	MooTools      pulumi.BoolPtrInput `pulumi:"mooTools"`
	Prototype     pulumi.BoolPtrInput `pulumi:"prototype"`
}

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput)
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput).ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs, WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtr and WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput` via:
//
//	        WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput
	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput
}

type webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs

func WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtr(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput {
	return (*webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType)(v)
}

func (*webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		return &v
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ActiveXObject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.ActiveXObject }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Angular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Angular }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Dojo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Dojo }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Extjs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Extjs }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Icefaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Icefaces }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Jquery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Jquery }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) MooTools() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.MooTools }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Prototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Prototype }).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Elem() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsJavascriptFrameworkSupport
		return ret
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ActiveXObject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveXObject
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Angular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Angular
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Dojo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Dojo
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Extjs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Extjs
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Icefaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Icefaces
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Jquery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Jquery
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) MooTools() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.MooTools
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Prototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Prototype
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRules struct {
	Rules []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule `pulumi:"rules"`
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs and WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{...}
type WebApplicationMonitoringSettingsJavascriptInjectionRulesInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs struct {
	Rules WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput)
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput).ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs, WebApplicationMonitoringSettingsJavascriptInjectionRulesPtr and WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput` via:
//
//	        WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput
}

type webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs

func WebApplicationMonitoringSettingsJavascriptInjectionRulesPtr(v *WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput {
	return (*webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType)(v)
}

func (*webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsJavascriptInjectionRules) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		return &v
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) Rules() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRules) []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		return v.Rules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) Elem() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptInjectionRules) WebApplicationMonitoringSettingsJavascriptInjectionRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsJavascriptInjectionRules
		return ret
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) Rules() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptInjectionRules) []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRule struct {
	Enabled     *bool   `pulumi:"enabled"`
	HtmlPattern *string `pulumi:"htmlPattern"`
	Rule        string  `pulumi:"rule"`
	Target      *string `pulumi:"target"`
	UrlOperator string  `pulumi:"urlOperator"`
	UrlPattern  *string `pulumi:"urlPattern"`
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs and WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{...}
type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs struct {
	Enabled     pulumi.BoolPtrInput   `pulumi:"enabled"`
	HtmlPattern pulumi.StringPtrInput `pulumi:"htmlPattern"`
	Rule        pulumi.StringInput    `pulumi:"rule"`
	Target      pulumi.StringPtrInput `pulumi:"target"`
	UrlOperator pulumi.StringInput    `pulumi:"urlOperator"`
	UrlPattern  pulumi.StringPtrInput `pulumi:"urlPattern"`
}

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput)
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray and WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray{ WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{...} }
type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray []WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) HtmlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.HtmlPattern }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) string { return v.Rule }).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) UrlOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) string { return v.UrlOperator }).(pulumi.StringOutput)
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) UrlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.UrlPattern }).(pulumi.StringPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		return vs[0].([]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput)
}

type WebApplicationSessionReplayConfig struct {
	// Session replay sampling rating in percent
	CostControlPercentage int `pulumi:"costControlPercentage"`
	// A list of URLs to be excluded from CSS resource capturing
	CssResourceCapturingExclusionRules []string `pulumi:"cssResourceCapturingExclusionRules"`
	// Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCssResourceCapturing *bool `pulumi:"enableCssResourceCapturing"`
	// SessionReplay Enabled/Disabled
	Enabled *bool `pulumi:"enabled"`
}

// WebApplicationSessionReplayConfigInput is an input type that accepts WebApplicationSessionReplayConfigArgs and WebApplicationSessionReplayConfigOutput values.
// You can construct a concrete instance of `WebApplicationSessionReplayConfigInput` via:
//
//	WebApplicationSessionReplayConfigArgs{...}
type WebApplicationSessionReplayConfigInput interface {
	pulumi.Input

	ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput
	ToWebApplicationSessionReplayConfigOutputWithContext(context.Context) WebApplicationSessionReplayConfigOutput
}

type WebApplicationSessionReplayConfigArgs struct {
	// Session replay sampling rating in percent
	CostControlPercentage pulumi.IntInput `pulumi:"costControlPercentage"`
	// A list of URLs to be excluded from CSS resource capturing
	CssResourceCapturingExclusionRules pulumi.StringArrayInput `pulumi:"cssResourceCapturingExclusionRules"`
	// Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCssResourceCapturing pulumi.BoolPtrInput `pulumi:"enableCssResourceCapturing"`
	// SessionReplay Enabled/Disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (WebApplicationSessionReplayConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput {
	return i.ToWebApplicationSessionReplayConfigOutputWithContext(context.Background())
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigOutput)
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return i.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigOutput).ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx)
}

// WebApplicationSessionReplayConfigPtrInput is an input type that accepts WebApplicationSessionReplayConfigArgs, WebApplicationSessionReplayConfigPtr and WebApplicationSessionReplayConfigPtrOutput values.
// You can construct a concrete instance of `WebApplicationSessionReplayConfigPtrInput` via:
//
//	        WebApplicationSessionReplayConfigArgs{...}
//
//	or:
//
//	        nil
type WebApplicationSessionReplayConfigPtrInput interface {
	pulumi.Input

	ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput
	ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Context) WebApplicationSessionReplayConfigPtrOutput
}

type webApplicationSessionReplayConfigPtrType WebApplicationSessionReplayConfigArgs

func WebApplicationSessionReplayConfigPtr(v *WebApplicationSessionReplayConfigArgs) WebApplicationSessionReplayConfigPtrInput {
	return (*webApplicationSessionReplayConfigPtrType)(v)
}

func (*webApplicationSessionReplayConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (i *webApplicationSessionReplayConfigPtrType) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return i.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (i *webApplicationSessionReplayConfigPtrType) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigPtrOutput)
}

type WebApplicationSessionReplayConfigOutput struct{ *pulumi.OutputState }

func (WebApplicationSessionReplayConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput {
	return o
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigOutput {
	return o
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return o.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationSessionReplayConfig) *WebApplicationSessionReplayConfig {
		return &v
	}).(WebApplicationSessionReplayConfigPtrOutput)
}

// Session replay sampling rating in percent
func (o WebApplicationSessionReplayConfigOutput) CostControlPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) int { return v.CostControlPercentage }).(pulumi.IntOutput)
}

// A list of URLs to be excluded from CSS resource capturing
func (o WebApplicationSessionReplayConfigOutput) CssResourceCapturingExclusionRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) []string { return v.CssResourceCapturingExclusionRules }).(pulumi.StringArrayOutput)
}

// Capture (`true`) or don't capture (`false`) CSS resources from the session
func (o WebApplicationSessionReplayConfigOutput) EnableCssResourceCapturing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) *bool { return v.EnableCssResourceCapturing }).(pulumi.BoolPtrOutput)
}

// SessionReplay Enabled/Disabled
func (o WebApplicationSessionReplayConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type WebApplicationSessionReplayConfigPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationSessionReplayConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (o WebApplicationSessionReplayConfigPtrOutput) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return o
}

func (o WebApplicationSessionReplayConfigPtrOutput) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return o
}

func (o WebApplicationSessionReplayConfigPtrOutput) Elem() WebApplicationSessionReplayConfigOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) WebApplicationSessionReplayConfig {
		if v != nil {
			return *v
		}
		var ret WebApplicationSessionReplayConfig
		return ret
	}).(WebApplicationSessionReplayConfigOutput)
}

// Session replay sampling rating in percent
func (o WebApplicationSessionReplayConfigPtrOutput) CostControlPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CostControlPercentage
	}).(pulumi.IntPtrOutput)
}

// A list of URLs to be excluded from CSS resource capturing
func (o WebApplicationSessionReplayConfigPtrOutput) CssResourceCapturingExclusionRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) []string {
		if v == nil {
			return nil
		}
		return v.CssResourceCapturingExclusionRules
	}).(pulumi.StringArrayOutput)
}

// Capture (`true`) or don't capture (`false`) CSS resources from the session
func (o WebApplicationSessionReplayConfigPtrOutput) EnableCssResourceCapturing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCssResourceCapturing
	}).(pulumi.BoolPtrOutput)
}

// SessionReplay Enabled/Disabled
func (o WebApplicationSessionReplayConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionAndSessionProperties struct {
	// User action and session properties settings
	Properties []WebApplicationUserActionAndSessionPropertiesProperty `pulumi:"properties"`
}

// WebApplicationUserActionAndSessionPropertiesInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesArgs and WebApplicationUserActionAndSessionPropertiesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesArgs{...}
type WebApplicationUserActionAndSessionPropertiesInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput
	ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesOutput
}

type WebApplicationUserActionAndSessionPropertiesArgs struct {
	// User action and session properties settings
	Properties WebApplicationUserActionAndSessionPropertiesPropertyArrayInput `pulumi:"properties"`
}

func (WebApplicationUserActionAndSessionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesOutput)
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesOutput).ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionAndSessionPropertiesPtrInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesArgs, WebApplicationUserActionAndSessionPropertiesPtr and WebApplicationUserActionAndSessionPropertiesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPtrInput` via:
//
//	        WebApplicationUserActionAndSessionPropertiesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionAndSessionPropertiesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput
	ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput
}

type webApplicationUserActionAndSessionPropertiesPtrType WebApplicationUserActionAndSessionPropertiesArgs

func WebApplicationUserActionAndSessionPropertiesPtr(v *WebApplicationUserActionAndSessionPropertiesArgs) WebApplicationUserActionAndSessionPropertiesPtrInput {
	return (*webApplicationUserActionAndSessionPropertiesPtrType)(v)
}

func (*webApplicationUserActionAndSessionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (i *webApplicationUserActionAndSessionPropertiesPtrType) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionAndSessionPropertiesPtrType) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

type WebApplicationUserActionAndSessionPropertiesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionAndSessionProperties) *WebApplicationUserActionAndSessionProperties {
		return &v
	}).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

// User action and session properties settings
func (o WebApplicationUserActionAndSessionPropertiesOutput) Properties() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionProperties) []WebApplicationUserActionAndSessionPropertiesProperty {
		return v.Properties
	}).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) Elem() WebApplicationUserActionAndSessionPropertiesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionAndSessionProperties) WebApplicationUserActionAndSessionProperties {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionAndSessionProperties
		return ret
	}).(WebApplicationUserActionAndSessionPropertiesOutput)
}

// User action and session properties settings
func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) Properties() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionAndSessionProperties) []WebApplicationUserActionAndSessionPropertiesProperty {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesProperty struct {
	Aggregation *string `pulumi:"aggregation"`
	CleanupRule *string `pulumi:"cleanupRule"`
	DisplayName *string `pulumi:"displayName"`
	// The ID of this resource.
	Id                         int     `pulumi:"id"`
	IgnoreCase                 *bool   `pulumi:"ignoreCase"`
	Key                        string  `pulumi:"key"`
	LongStringLength           *int    `pulumi:"longStringLength"`
	MetadataId                 *int    `pulumi:"metadataId"`
	Origin                     string  `pulumi:"origin"`
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
	StoreAsSessionProperty     *bool   `pulumi:"storeAsSessionProperty"`
	StoreAsUserActionProperty  *bool   `pulumi:"storeAsUserActionProperty"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type string `pulumi:"type"`
}

// WebApplicationUserActionAndSessionPropertiesPropertyInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesPropertyArgs and WebApplicationUserActionAndSessionPropertiesPropertyOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPropertyInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesPropertyArgs{...}
type WebApplicationUserActionAndSessionPropertiesPropertyInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput
	ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput
}

type WebApplicationUserActionAndSessionPropertiesPropertyArgs struct {
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ID of this resource.
	Id                         pulumi.IntInput       `pulumi:"id"`
	IgnoreCase                 pulumi.BoolPtrInput   `pulumi:"ignoreCase"`
	Key                        pulumi.StringInput    `pulumi:"key"`
	LongStringLength           pulumi.IntPtrInput    `pulumi:"longStringLength"`
	MetadataId                 pulumi.IntPtrInput    `pulumi:"metadataId"`
	Origin                     pulumi.StringInput    `pulumi:"origin"`
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
	StoreAsSessionProperty     pulumi.BoolPtrInput   `pulumi:"storeAsSessionProperty"`
	StoreAsUserActionProperty  pulumi.BoolPtrInput   `pulumi:"storeAsUserActionProperty"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionAndSessionPropertiesPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArgs) ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArgs) ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPropertyOutput)
}

// WebApplicationUserActionAndSessionPropertiesPropertyArrayInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesPropertyArray and WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPropertyArrayInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesPropertyArray{ WebApplicationUserActionAndSessionPropertiesPropertyArgs{...} }
type WebApplicationUserActionAndSessionPropertiesPropertyArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput
	ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput
}

type WebApplicationUserActionAndSessionPropertiesPropertyArray []WebApplicationUserActionAndSessionPropertiesPropertyInput

func (WebApplicationUserActionAndSessionPropertiesPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArray) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArray) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesPropertyOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of this resource.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) int { return v.Id }).(pulumi.IntOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Key }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) LongStringLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *int { return v.LongStringLength }).(pulumi.IntPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Origin }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string {
		return v.ServerSideRequestAttribute
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) StoreAsSessionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.StoreAsSessionProperty }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) StoreAsUserActionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.StoreAsUserActionProperty }).(pulumi.BoolPtrOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Type }).(pulumi.StringOutput)
}

type WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionAndSessionPropertiesProperty {
		return vs[0].([]WebApplicationUserActionAndSessionPropertiesProperty)[vs[1].(int)]
	}).(WebApplicationUserActionAndSessionPropertiesPropertyOutput)
}

type WebApplicationUserActionNamingSettings struct {
	// User action naming rules for custom actions
	CustomActionNamingRules *WebApplicationUserActionNamingSettingsCustomActionNamingRules `pulumi:"customActionNamingRules"`
	// Case insensitive naming
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// User action naming rules for loading actions
	LoadActionNamingRules *WebApplicationUserActionNamingSettingsLoadActionNamingRules `pulumi:"loadActionNamingRules"`
	// User action placeholders
	Placeholders *WebApplicationUserActionNamingSettingsPlaceholders `pulumi:"placeholders"`
	// User action naming rules for custom actions
	QueryParameterCleanups []string `pulumi:"queryParameterCleanups"`
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain *bool `pulumi:"splitUserActionsByDomain"`
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction *bool `pulumi:"useFirstDetectedLoadAction"`
	// User action naming rules for XHR actions
	XhrActionNamingRules *WebApplicationUserActionNamingSettingsXhrActionNamingRules `pulumi:"xhrActionNamingRules"`
}

// WebApplicationUserActionNamingSettingsInput is an input type that accepts WebApplicationUserActionNamingSettingsArgs and WebApplicationUserActionNamingSettingsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsInput` via:
//
//	WebApplicationUserActionNamingSettingsArgs{...}
type WebApplicationUserActionNamingSettingsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput
	ToWebApplicationUserActionNamingSettingsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsOutput
}

type WebApplicationUserActionNamingSettingsArgs struct {
	// User action naming rules for custom actions
	CustomActionNamingRules WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput `pulumi:"customActionNamingRules"`
	// Case insensitive naming
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// User action naming rules for loading actions
	LoadActionNamingRules WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput `pulumi:"loadActionNamingRules"`
	// User action placeholders
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPtrInput `pulumi:"placeholders"`
	// User action naming rules for custom actions
	QueryParameterCleanups pulumi.StringArrayInput `pulumi:"queryParameterCleanups"`
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain pulumi.BoolPtrInput `pulumi:"splitUserActionsByDomain"`
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction pulumi.BoolPtrInput `pulumi:"useFirstDetectedLoadAction"`
	// User action naming rules for XHR actions
	XhrActionNamingRules WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput `pulumi:"xhrActionNamingRules"`
}

func (WebApplicationUserActionNamingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput {
	return i.ToWebApplicationUserActionNamingSettingsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsOutput)
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsOutput).ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsArgs, WebApplicationUserActionNamingSettingsPtr and WebApplicationUserActionNamingSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput
	ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPtrOutput
}

type webApplicationUserActionNamingSettingsPtrType WebApplicationUserActionNamingSettingsArgs

func WebApplicationUserActionNamingSettingsPtr(v *WebApplicationUserActionNamingSettingsArgs) WebApplicationUserActionNamingSettingsPtrInput {
	return (*webApplicationUserActionNamingSettingsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPtrType) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPtrType) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPtrOutput)
}

type WebApplicationUserActionNamingSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettings {
		return &v
	}).(WebApplicationUserActionNamingSettingsPtrOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsOutput) CustomActionNamingRules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		return v.CustomActionNamingRules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// Case insensitive naming
func (o WebApplicationUserActionNamingSettingsOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// User action naming rules for loading actions
func (o WebApplicationUserActionNamingSettingsOutput) LoadActionNamingRules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		return v.LoadActionNamingRules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsPlaceholders {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsOutput) QueryParameterCleanups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) []string { return v.QueryParameterCleanups }).(pulumi.StringArrayOutput)
}

// Deactivate this setting if different domains should not result in separate user actions
func (o WebApplicationUserActionNamingSettingsOutput) SplitUserActionsByDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.SplitUserActionsByDomain }).(pulumi.BoolPtrOutput)
}

// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
func (o WebApplicationUserActionNamingSettingsOutput) UseFirstDetectedLoadAction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.UseFirstDetectedLoadAction }).(pulumi.BoolPtrOutput)
}

// User action naming rules for XHR actions
func (o WebApplicationUserActionNamingSettingsOutput) XhrActionNamingRules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return v.XhrActionNamingRules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) Elem() WebApplicationUserActionNamingSettingsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) WebApplicationUserActionNamingSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettings
		return ret
	}).(WebApplicationUserActionNamingSettingsOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) CustomActionNamingRules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		if v == nil {
			return nil
		}
		return v.CustomActionNamingRules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// Case insensitive naming
func (o WebApplicationUserActionNamingSettingsPtrOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.BoolPtrOutput)
}

// User action naming rules for loading actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) LoadActionNamingRules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		if v == nil {
			return nil
		}
		return v.LoadActionNamingRules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsPlaceholders {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) QueryParameterCleanups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) []string {
		if v == nil {
			return nil
		}
		return v.QueryParameterCleanups
	}).(pulumi.StringArrayOutput)
}

// Deactivate this setting if different domains should not result in separate user actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) SplitUserActionsByDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SplitUserActionsByDomain
	}).(pulumi.BoolPtrOutput)
}

// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
func (o WebApplicationUserActionNamingSettingsPtrOutput) UseFirstDetectedLoadAction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseFirstDetectedLoadAction
	}).(pulumi.BoolPtrOutput)
}

// User action naming rules for XHR actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) XhrActionNamingRules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v == nil {
			return nil
		}
		return v.XhrActionNamingRules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRules struct {
	Rules []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs struct {
	Rules WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs, WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtr and WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsCustomActionNamingRules) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRules) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRules) WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsCustomActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRules) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule struct {
	Conditions      *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions `pulumi:"conditions"`
	Template        string                                                                       `pulumi:"template"`
	UseOrConditions *bool                                                                        `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs struct {
	Conditions      WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	Template        pulumi.StringInput                                                                  `pulumi:"template"`
	UseOrConditions pulumi.BoolPtrInput                                                                 `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions struct {
	Conditions []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs struct {
	Conditions WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition struct {
	Operand1 string  `pulumi:"operand1"`
	Operand2 *string `pulumi:"operand2"`
	Operator string  `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs struct {
	Operand1 pulumi.StringInput    `pulumi:"operand1"`
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	Operator pulumi.StringInput    `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRules struct {
	Rules []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs struct {
	Rules WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRules) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRules) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRules) WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRules) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule struct {
	Conditions      *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions `pulumi:"conditions"`
	Template        string                                                                     `pulumi:"template"`
	UseOrConditions *bool                                                                      `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs struct {
	Conditions      WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	Template        pulumi.StringInput                                                                `pulumi:"template"`
	UseOrConditions pulumi.BoolPtrInput                                                               `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions struct {
	Conditions []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs struct {
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition struct {
	Operand1 string  `pulumi:"operand1"`
	Operand2 *string `pulumi:"operand2"`
	Operator string  `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs struct {
	Operand1 pulumi.StringInput    `pulumi:"operand1"`
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	Operator pulumi.StringInput    `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholders struct {
	Placeholders []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder `pulumi:"placeholders"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs and WebApplicationUserActionNamingSettingsPlaceholdersOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersArgs struct {
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput `pulumi:"placeholders"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs, WebApplicationUserActionNamingSettingsPlaceholdersPtr and WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPtrType WebApplicationUserActionNamingSettingsPlaceholdersArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersArgs) WebApplicationUserActionNamingSettingsPlaceholdersPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholders) *WebApplicationUserActionNamingSettingsPlaceholders {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) WebApplicationUserActionNamingSettingsPlaceholders {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholders
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder struct {
	Input      string `pulumi:"input"`
	MetadataId *int   `pulumi:"metadataId"`
	// The name of the web application, displayed in the UI
	Name                        string                                                                        `pulumi:"name"`
	ProcessingPart              string                                                                        `pulumi:"processingPart"`
	ProcessingSteps             *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps `pulumi:"processingSteps"`
	UseGuessedElementIdentifier *bool                                                                         `pulumi:"useGuessedElementIdentifier"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs struct {
	Input      pulumi.StringInput `pulumi:"input"`
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// The name of the web application, displayed in the UI
	Name                        pulumi.StringInput                                                                   `pulumi:"name"`
	ProcessingPart              pulumi.StringInput                                                                   `pulumi:"processingPart"`
	ProcessingSteps             WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput `pulumi:"processingSteps"`
	UseGuessedElementIdentifier pulumi.BoolPtrInput                                                                  `pulumi:"useGuessedElementIdentifier"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Input }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// The name of the web application, displayed in the UI
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingPart() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.ProcessingPart }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingSteps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return v.ProcessingSteps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) UseGuessedElementIdentifier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *bool {
		return v.UseGuessedElementIdentifier
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps struct {
	Steps []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep `pulumi:"steps"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs struct {
	Steps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput `pulumi:"steps"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs, WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep struct {
	FallbackToInput         *bool   `pulumi:"fallbackToInput"`
	PatternAfter            *string `pulumi:"patternAfter"`
	PatternAfterSearchType  *string `pulumi:"patternAfterSearchType"`
	PatternBefore           *string `pulumi:"patternBefore"`
	PatternBeforeSearchType *string `pulumi:"patternBeforeSearchType"`
	PatternToReplace        *string `pulumi:"patternToReplace"`
	RegularExpression       *string `pulumi:"regularExpression"`
	Replacement             *string `pulumi:"replacement"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type string `pulumi:"type"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs struct {
	FallbackToInput         pulumi.BoolPtrInput   `pulumi:"fallbackToInput"`
	PatternAfter            pulumi.StringPtrInput `pulumi:"patternAfter"`
	PatternAfterSearchType  pulumi.StringPtrInput `pulumi:"patternAfterSearchType"`
	PatternBefore           pulumi.StringPtrInput `pulumi:"patternBefore"`
	PatternBeforeSearchType pulumi.StringPtrInput `pulumi:"patternBeforeSearchType"`
	PatternToReplace        pulumi.StringPtrInput `pulumi:"patternToReplace"`
	RegularExpression       pulumi.StringPtrInput `pulumi:"regularExpression"`
	Replacement             pulumi.StringPtrInput `pulumi:"replacement"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) FallbackToInput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *bool {
		return v.FallbackToInput
	}).(pulumi.BoolPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfter
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfterSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfterSearchType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBefore
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBeforeSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBeforeSearchType
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternToReplace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternToReplace
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) RegularExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.RegularExpression
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.Replacement
	}).(pulumi.StringPtrOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRules struct {
	Rules []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs struct {
	Rules WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRules) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule struct {
	Conditions      *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions `pulumi:"conditions"`
	Template        string                                                                    `pulumi:"template"`
	UseOrConditions *bool                                                                     `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs struct {
	Conditions      WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	Template        pulumi.StringInput                                                               `pulumi:"template"`
	UseOrConditions pulumi.BoolPtrInput                                                              `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *bool { return v.UseOrConditions }).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions struct {
	Conditions []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs struct {
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition struct {
	Operand1 string  `pulumi:"operand1"`
	Operand2 *string `pulumi:"operand2"`
	Operator string  `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs struct {
	Operand1 pulumi.StringInput    `pulumi:"operand1"`
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	Operator pulumi.StringInput    `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserTags struct {
	// User tag settings
	Tags []WebApplicationUserTagsTag `pulumi:"tags"`
}

// WebApplicationUserTagsInput is an input type that accepts WebApplicationUserTagsArgs and WebApplicationUserTagsOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsInput` via:
//
//	WebApplicationUserTagsArgs{...}
type WebApplicationUserTagsInput interface {
	pulumi.Input

	ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput
	ToWebApplicationUserTagsOutputWithContext(context.Context) WebApplicationUserTagsOutput
}

type WebApplicationUserTagsArgs struct {
	// User tag settings
	Tags WebApplicationUserTagsTagArrayInput `pulumi:"tags"`
}

func (WebApplicationUserTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return i.ToWebApplicationUserTagsOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput)
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput).ToWebApplicationUserTagsPtrOutputWithContext(ctx)
}

// WebApplicationUserTagsPtrInput is an input type that accepts WebApplicationUserTagsArgs, WebApplicationUserTagsPtr and WebApplicationUserTagsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsPtrInput` via:
//
//	        WebApplicationUserTagsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserTagsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput
	ToWebApplicationUserTagsPtrOutputWithContext(context.Context) WebApplicationUserTagsPtrOutput
}

type webApplicationUserTagsPtrType WebApplicationUserTagsArgs

func WebApplicationUserTagsPtr(v *WebApplicationUserTagsArgs) WebApplicationUserTagsPtrInput {
	return (*webApplicationUserTagsPtrType)(v)
}

func (*webApplicationUserTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsPtrOutput)
}

type WebApplicationUserTagsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserTags) *WebApplicationUserTags {
		return &v
	}).(WebApplicationUserTagsPtrOutput)
}

// User tag settings
func (o WebApplicationUserTagsOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v WebApplicationUserTags) []WebApplicationUserTagsTag { return v.Tags }).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) Elem() WebApplicationUserTagsOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) WebApplicationUserTags {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserTags
		return ret
	}).(WebApplicationUserTagsOutput)
}

// User tag settings
func (o WebApplicationUserTagsPtrOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) []WebApplicationUserTagsTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTag struct {
	CleanupRule *string `pulumi:"cleanupRule"`
	// The ID of this resource.
	Id                         int     `pulumi:"id"`
	IgnoreCase                 *bool   `pulumi:"ignoreCase"`
	MetadataId                 *int    `pulumi:"metadataId"`
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
}

// WebApplicationUserTagsTagInput is an input type that accepts WebApplicationUserTagsTagArgs and WebApplicationUserTagsTagOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagInput` via:
//
//	WebApplicationUserTagsTagArgs{...}
type WebApplicationUserTagsTagInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput
	ToWebApplicationUserTagsTagOutputWithContext(context.Context) WebApplicationUserTagsTagOutput
}

type WebApplicationUserTagsTagArgs struct {
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	// The ID of this resource.
	Id                         pulumi.IntInput       `pulumi:"id"`
	IgnoreCase                 pulumi.BoolPtrInput   `pulumi:"ignoreCase"`
	MetadataId                 pulumi.IntPtrInput    `pulumi:"metadataId"`
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
}

func (WebApplicationUserTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return i.ToWebApplicationUserTagsTagOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagOutput)
}

// WebApplicationUserTagsTagArrayInput is an input type that accepts WebApplicationUserTagsTagArray and WebApplicationUserTagsTagArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagArrayInput` via:
//
//	WebApplicationUserTagsTagArray{ WebApplicationUserTagsTagArgs{...} }
type WebApplicationUserTagsTagArrayInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput
	ToWebApplicationUserTagsTagArrayOutputWithContext(context.Context) WebApplicationUserTagsTagArrayOutput
}

type WebApplicationUserTagsTagArray []WebApplicationUserTagsTagInput

func (WebApplicationUserTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return i.ToWebApplicationUserTagsTagArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTagOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return o
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return o
}

func (o WebApplicationUserTagsTagOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

// The ID of this resource.
func (o WebApplicationUserTagsTagOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) int { return v.Id }).(pulumi.IntOutput)
}

func (o WebApplicationUserTagsTagOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o WebApplicationUserTagsTagOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

func (o WebApplicationUserTagsTagOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.ServerSideRequestAttribute }).(pulumi.StringPtrOutput)
}

type WebApplicationUserTagsTagArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) Index(i pulumi.IntInput) WebApplicationUserTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserTagsTag {
		return vs[0].([]WebApplicationUserTagsTag)[vs[1].(int)]
	}).(WebApplicationUserTagsTagOutput)
}

type WebApplicationWaterfallSettings struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold int `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold int `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold int `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold int `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold int `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold int `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold int `pulumi:"uncompressedResourcesThreshold"`
}

// WebApplicationWaterfallSettingsInput is an input type that accepts WebApplicationWaterfallSettingsArgs and WebApplicationWaterfallSettingsOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsInput` via:
//
//	WebApplicationWaterfallSettingsArgs{...}
type WebApplicationWaterfallSettingsInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput
	ToWebApplicationWaterfallSettingsOutputWithContext(context.Context) WebApplicationWaterfallSettingsOutput
}

type WebApplicationWaterfallSettingsArgs struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold pulumi.IntInput `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold pulumi.IntInput `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold pulumi.IntInput `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold pulumi.IntInput `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold pulumi.IntInput `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold pulumi.IntInput `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold pulumi.IntInput `pulumi:"uncompressedResourcesThreshold"`
}

func (WebApplicationWaterfallSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return i.ToWebApplicationWaterfallSettingsOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput)
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput).ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx)
}

// WebApplicationWaterfallSettingsPtrInput is an input type that accepts WebApplicationWaterfallSettingsArgs, WebApplicationWaterfallSettingsPtr and WebApplicationWaterfallSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsPtrInput` via:
//
//	        WebApplicationWaterfallSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationWaterfallSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput
	ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Context) WebApplicationWaterfallSettingsPtrOutput
}

type webApplicationWaterfallSettingsPtrType WebApplicationWaterfallSettingsArgs

func WebApplicationWaterfallSettingsPtr(v *WebApplicationWaterfallSettingsArgs) WebApplicationWaterfallSettingsPtrInput {
	return (*webApplicationWaterfallSettingsPtrType)(v)
}

func (*webApplicationWaterfallSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsPtrOutput)
}

type WebApplicationWaterfallSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationWaterfallSettings) *WebApplicationWaterfallSettings {
		return &v
	}).(WebApplicationWaterfallSettingsPtrOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourceBrowserCachingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourceBrowserCachingThreshold }).(pulumi.IntOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowCndResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowCndResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowFirstPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowFirstPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowThirdPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowThirdPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SpeedIndexVisuallyCompleteRatioThreshold }).(pulumi.IntOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsOutput) UncompressedResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.UncompressedResourcesThreshold }).(pulumi.IntOutput)
}

type WebApplicationWaterfallSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) Elem() WebApplicationWaterfallSettingsOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) WebApplicationWaterfallSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationWaterfallSettings
		return ret
	}).(WebApplicationWaterfallSettingsOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourceBrowserCachingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourceBrowserCachingThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowCndResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowCndResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowFirstPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowFirstPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowThirdPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowThirdPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SpeedIndexVisuallyCompleteRatioThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) UncompressedResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.UncompressedResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationXhrActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *int `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *int `pulumi:"toleratedThreshold"`
}

// WebApplicationXhrActionApdexSettingsInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs and WebApplicationXhrActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsInput` via:
//
//	WebApplicationXhrActionApdexSettingsArgs{...}
type WebApplicationXhrActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput
	ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsOutput
}

type WebApplicationXhrActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntPtrInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntPtrInput `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntPtrInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntPtrInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationXhrActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return i.ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput)
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput).ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationXhrActionApdexSettingsPtrInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs, WebApplicationXhrActionApdexSettingsPtr and WebApplicationXhrActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsPtrInput` via:
//
//	        WebApplicationXhrActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationXhrActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput
	ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsPtrOutput
}

type webApplicationXhrActionApdexSettingsPtrType WebApplicationXhrActionApdexSettingsArgs

func WebApplicationXhrActionApdexSettingsPtr(v *WebApplicationXhrActionApdexSettingsArgs) WebApplicationXhrActionApdexSettingsPtrInput {
	return (*webApplicationXhrActionApdexSettingsPtrType)(v)
}

func (*webApplicationXhrActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

type WebApplicationXhrActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationXhrActionApdexSettings) *WebApplicationXhrActionApdexSettings {
		return &v
	}).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.FrustratingFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.FrustratingThreshold }).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationXhrActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.ToleratedFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.ToleratedThreshold }).(pulumi.IntPtrOutput)
}

type WebApplicationXhrActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) Elem() WebApplicationXhrActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) WebApplicationXhrActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationXhrActionApdexSettings
		return ret
	}).(WebApplicationXhrActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationXhrActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebhookNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []WebhookNotificationHeadersHeader `pulumi:"headers"`
}

// WebhookNotificationHeadersInput is an input type that accepts WebhookNotificationHeadersArgs and WebhookNotificationHeadersOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersInput` via:
//
//	WebhookNotificationHeadersArgs{...}
type WebhookNotificationHeadersInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput
	ToWebhookNotificationHeadersOutputWithContext(context.Context) WebhookNotificationHeadersOutput
}

type WebhookNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers WebhookNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (WebhookNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return i.ToWebhookNotificationHeadersOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput)
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput).ToWebhookNotificationHeadersPtrOutputWithContext(ctx)
}

// WebhookNotificationHeadersPtrInput is an input type that accepts WebhookNotificationHeadersArgs, WebhookNotificationHeadersPtr and WebhookNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersPtrInput` via:
//
//	        WebhookNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationHeadersPtrInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput
	ToWebhookNotificationHeadersPtrOutputWithContext(context.Context) WebhookNotificationHeadersPtrOutput
}

type webhookNotificationHeadersPtrType WebhookNotificationHeadersArgs

func WebhookNotificationHeadersPtr(v *WebhookNotificationHeadersArgs) WebhookNotificationHeadersPtrInput {
	return (*webhookNotificationHeadersPtrType)(v)
}

func (*webhookNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersPtrOutput)
}

type WebhookNotificationHeadersOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationHeaders) *WebhookNotificationHeaders {
		return &v
	}).(WebhookNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v WebhookNotificationHeaders) []WebhookNotificationHeadersHeader { return v.Headers }).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) Elem() WebhookNotificationHeadersOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) WebhookNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationHeaders
		return ret
	}).(WebhookNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersPtrOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) []WebhookNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeader struct {
	// The name of the notification configuration
	Name        string  `pulumi:"name"`
	SecretValue *string `pulumi:"secretValue"`
	Value       *string `pulumi:"value"`
}

// WebhookNotificationHeadersHeaderInput is an input type that accepts WebhookNotificationHeadersHeaderArgs and WebhookNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderInput` via:
//
//	WebhookNotificationHeadersHeaderArgs{...}
type WebhookNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput
	ToWebhookNotificationHeadersHeaderOutputWithContext(context.Context) WebhookNotificationHeadersHeaderOutput
}

type WebhookNotificationHeadersHeaderArgs struct {
	// The name of the notification configuration
	Name        pulumi.StringInput    `pulumi:"name"`
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	Value       pulumi.StringPtrInput `pulumi:"value"`
}

func (WebhookNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return i.ToWebhookNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderOutput)
}

// WebhookNotificationHeadersHeaderArrayInput is an input type that accepts WebhookNotificationHeadersHeaderArray and WebhookNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderArrayInput` via:
//
//	WebhookNotificationHeadersHeaderArray{ WebhookNotificationHeadersHeaderArgs{...} }
type WebhookNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput
	ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Context) WebhookNotificationHeadersHeaderArrayOutput
}

type WebhookNotificationHeadersHeaderArray []WebhookNotificationHeadersHeaderInput

func (WebhookNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return i.ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return o
}

// The name of the notification configuration
func (o WebhookNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebhookNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

func (o WebhookNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) WebhookNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookNotificationHeadersHeader {
		return vs[0].([]WebhookNotificationHeadersHeader)[vs[1].(int)]
	}).(WebhookNotificationHeadersHeaderOutput)
}

type XmattersNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []XmattersNotificationHeadersHeader `pulumi:"headers"`
}

// XmattersNotificationHeadersInput is an input type that accepts XmattersNotificationHeadersArgs and XmattersNotificationHeadersOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersInput` via:
//
//	XmattersNotificationHeadersArgs{...}
type XmattersNotificationHeadersInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput
	ToXmattersNotificationHeadersOutputWithContext(context.Context) XmattersNotificationHeadersOutput
}

type XmattersNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers XmattersNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (XmattersNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return i.ToXmattersNotificationHeadersOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput)
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput).ToXmattersNotificationHeadersPtrOutputWithContext(ctx)
}

// XmattersNotificationHeadersPtrInput is an input type that accepts XmattersNotificationHeadersArgs, XmattersNotificationHeadersPtr and XmattersNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersPtrInput` via:
//
//	        XmattersNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type XmattersNotificationHeadersPtrInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput
	ToXmattersNotificationHeadersPtrOutputWithContext(context.Context) XmattersNotificationHeadersPtrOutput
}

type xmattersNotificationHeadersPtrType XmattersNotificationHeadersArgs

func XmattersNotificationHeadersPtr(v *XmattersNotificationHeadersArgs) XmattersNotificationHeadersPtrInput {
	return (*xmattersNotificationHeadersPtrType)(v)
}

func (*xmattersNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersPtrOutput)
}

type XmattersNotificationHeadersOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v XmattersNotificationHeaders) *XmattersNotificationHeaders {
		return &v
	}).(XmattersNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v XmattersNotificationHeaders) []XmattersNotificationHeadersHeader { return v.Headers }).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) Elem() XmattersNotificationHeadersOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) XmattersNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret XmattersNotificationHeaders
		return ret
	}).(XmattersNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersPtrOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) []XmattersNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeader struct {
	// The name of the notification configuration
	Name        string  `pulumi:"name"`
	SecretValue *string `pulumi:"secretValue"`
	Value       *string `pulumi:"value"`
}

// XmattersNotificationHeadersHeaderInput is an input type that accepts XmattersNotificationHeadersHeaderArgs and XmattersNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderInput` via:
//
//	XmattersNotificationHeadersHeaderArgs{...}
type XmattersNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput
	ToXmattersNotificationHeadersHeaderOutputWithContext(context.Context) XmattersNotificationHeadersHeaderOutput
}

type XmattersNotificationHeadersHeaderArgs struct {
	// The name of the notification configuration
	Name        pulumi.StringInput    `pulumi:"name"`
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	Value       pulumi.StringPtrInput `pulumi:"value"`
}

func (XmattersNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return i.ToXmattersNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderOutput)
}

// XmattersNotificationHeadersHeaderArrayInput is an input type that accepts XmattersNotificationHeadersHeaderArray and XmattersNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderArrayInput` via:
//
//	XmattersNotificationHeadersHeaderArray{ XmattersNotificationHeadersHeaderArgs{...} }
type XmattersNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput
	ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Context) XmattersNotificationHeadersHeaderArrayOutput
}

type XmattersNotificationHeadersHeaderArray []XmattersNotificationHeadersHeaderInput

func (XmattersNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return i.ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return o
}

// The name of the notification configuration
func (o XmattersNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o XmattersNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

func (o XmattersNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) XmattersNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) XmattersNotificationHeadersHeader {
		return vs[0].([]XmattersNotificationHeadersHeader)[vs[1].(int)]
	}).(XmattersNotificationHeadersHeaderOutput)
}

type GetSyntheticLocationsLocations struct {
	// The name of the location
	Locations []GetSyntheticLocationsLocationsLocation `pulumi:"locations"`
}

// GetSyntheticLocationsLocationsInput is an input type that accepts GetSyntheticLocationsLocationsArgs and GetSyntheticLocationsLocationsOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsInput` via:
//
//	GetSyntheticLocationsLocationsArgs{...}
type GetSyntheticLocationsLocationsInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput
	ToGetSyntheticLocationsLocationsOutputWithContext(context.Context) GetSyntheticLocationsLocationsOutput
}

type GetSyntheticLocationsLocationsArgs struct {
	// The name of the location
	Locations GetSyntheticLocationsLocationsLocationArrayInput `pulumi:"locations"`
}

func (GetSyntheticLocationsLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return i.ToGetSyntheticLocationsLocationsOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput)
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput).ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx)
}

// GetSyntheticLocationsLocationsPtrInput is an input type that accepts GetSyntheticLocationsLocationsArgs, GetSyntheticLocationsLocationsPtr and GetSyntheticLocationsLocationsPtrOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsPtrInput` via:
//
//	        GetSyntheticLocationsLocationsArgs{...}
//
//	or:
//
//	        nil
type GetSyntheticLocationsLocationsPtrInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput
	ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Context) GetSyntheticLocationsLocationsPtrOutput
}

type getSyntheticLocationsLocationsPtrType GetSyntheticLocationsLocationsArgs

func GetSyntheticLocationsLocationsPtr(v *GetSyntheticLocationsLocationsArgs) GetSyntheticLocationsLocationsPtrInput {
	return (*getSyntheticLocationsLocationsPtrType)(v)
}

func (*getSyntheticLocationsLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsPtrOutput)
}

type GetSyntheticLocationsLocationsOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSyntheticLocationsLocations) *GetSyntheticLocationsLocations {
		return &v
	}).(GetSyntheticLocationsLocationsPtrOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsOutput) Locations() GetSyntheticLocationsLocationsLocationArrayOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) []GetSyntheticLocationsLocationsLocation { return v.Locations }).(GetSyntheticLocationsLocationsLocationArrayOutput)
}

type GetSyntheticLocationsLocationsPtrOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) Elem() GetSyntheticLocationsLocationsOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) GetSyntheticLocationsLocations {
		if v != nil {
			return *v
		}
		var ret GetSyntheticLocationsLocations
		return ret
	}).(GetSyntheticLocationsLocationsOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Locations() GetSyntheticLocationsLocationsLocationArrayOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) []GetSyntheticLocationsLocationsLocation {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(GetSyntheticLocationsLocationsLocationArrayOutput)
}

type GetSyntheticLocationsLocationsLocation struct {
	CloudPlatform string `pulumi:"cloudPlatform"`
	// The ID of this resource.
	Id     *string  `pulumi:"id"`
	Ips    []string `pulumi:"ips"`
	Name   *string  `pulumi:"name"`
	Stage  string   `pulumi:"stage"`
	Status string   `pulumi:"status"`
	Type   *string  `pulumi:"type"`
}

// GetSyntheticLocationsLocationsLocationInput is an input type that accepts GetSyntheticLocationsLocationsLocationArgs and GetSyntheticLocationsLocationsLocationOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsLocationInput` via:
//
//	GetSyntheticLocationsLocationsLocationArgs{...}
type GetSyntheticLocationsLocationsLocationInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsLocationOutput() GetSyntheticLocationsLocationsLocationOutput
	ToGetSyntheticLocationsLocationsLocationOutputWithContext(context.Context) GetSyntheticLocationsLocationsLocationOutput
}

type GetSyntheticLocationsLocationsLocationArgs struct {
	CloudPlatform pulumi.StringInput `pulumi:"cloudPlatform"`
	// The ID of this resource.
	Id     pulumi.StringPtrInput   `pulumi:"id"`
	Ips    pulumi.StringArrayInput `pulumi:"ips"`
	Name   pulumi.StringPtrInput   `pulumi:"name"`
	Stage  pulumi.StringInput      `pulumi:"stage"`
	Status pulumi.StringInput      `pulumi:"status"`
	Type   pulumi.StringPtrInput   `pulumi:"type"`
}

func (GetSyntheticLocationsLocationsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocationsLocation)(nil)).Elem()
}

func (i GetSyntheticLocationsLocationsLocationArgs) ToGetSyntheticLocationsLocationsLocationOutput() GetSyntheticLocationsLocationsLocationOutput {
	return i.ToGetSyntheticLocationsLocationsLocationOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsLocationArgs) ToGetSyntheticLocationsLocationsLocationOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsLocationOutput)
}

// GetSyntheticLocationsLocationsLocationArrayInput is an input type that accepts GetSyntheticLocationsLocationsLocationArray and GetSyntheticLocationsLocationsLocationArrayOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsLocationArrayInput` via:
//
//	GetSyntheticLocationsLocationsLocationArray{ GetSyntheticLocationsLocationsLocationArgs{...} }
type GetSyntheticLocationsLocationsLocationArrayInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsLocationArrayOutput() GetSyntheticLocationsLocationsLocationArrayOutput
	ToGetSyntheticLocationsLocationsLocationArrayOutputWithContext(context.Context) GetSyntheticLocationsLocationsLocationArrayOutput
}

type GetSyntheticLocationsLocationsLocationArray []GetSyntheticLocationsLocationsLocationInput

func (GetSyntheticLocationsLocationsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticLocationsLocationsLocation)(nil)).Elem()
}

func (i GetSyntheticLocationsLocationsLocationArray) ToGetSyntheticLocationsLocationsLocationArrayOutput() GetSyntheticLocationsLocationsLocationArrayOutput {
	return i.ToGetSyntheticLocationsLocationsLocationArrayOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsLocationArray) ToGetSyntheticLocationsLocationsLocationArrayOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsLocationArrayOutput)
}

type GetSyntheticLocationsLocationsLocationOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocationsLocation)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsLocationOutput) ToGetSyntheticLocationsLocationsLocationOutput() GetSyntheticLocationsLocationsLocationOutput {
	return o
}

func (o GetSyntheticLocationsLocationsLocationOutput) ToGetSyntheticLocationsLocationsLocationOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsLocationOutput {
	return o
}

func (o GetSyntheticLocationsLocationsLocationOutput) CloudPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) string { return v.CloudPlatform }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetSyntheticLocationsLocationsLocationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetSyntheticLocationsLocationsLocationOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetSyntheticLocationsLocationsLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetSyntheticLocationsLocationsLocationOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) string { return v.Stage }).(pulumi.StringOutput)
}

func (o GetSyntheticLocationsLocationsLocationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetSyntheticLocationsLocationsLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocationsLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSyntheticLocationsLocationsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticLocationsLocationsLocation)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsLocationArrayOutput) ToGetSyntheticLocationsLocationsLocationArrayOutput() GetSyntheticLocationsLocationsLocationArrayOutput {
	return o
}

func (o GetSyntheticLocationsLocationsLocationArrayOutput) ToGetSyntheticLocationsLocationsLocationArrayOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsLocationArrayOutput {
	return o
}

func (o GetSyntheticLocationsLocationsLocationArrayOutput) Index(i pulumi.IntInput) GetSyntheticLocationsLocationsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSyntheticLocationsLocationsLocation {
		return vs[0].([]GetSyntheticLocationsLocationsLocation)[vs[1].(int)]
	}).(GetSyntheticLocationsLocationsLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneMetadataInput)(nil)).Elem(), ManagementZoneMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneMetadataPtrInput)(nil)).Elem(), ManagementZoneMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleInput)(nil)).Elem(), ManagementZoneRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleArrayInput)(nil)).Elem(), ManagementZoneRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionInput)(nil)).Elem(), ManagementZoneRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionArrayInput)(nil)).Elem(), ManagementZoneRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionApplicationTypeInput)(nil)).Elem(), ManagementZoneRuleConditionApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionApplicationTypeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionApplicationTypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionApplicationTypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeModeInput)(nil)).Elem(), ManagementZoneRuleConditionAzureComputeModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeModeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionAzureComputeModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeModeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionAzureComputeModeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureComputeModeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionAzureComputeModeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureSkuComparisionInput)(nil)).Elem(), ManagementZoneRuleConditionAzureSkuComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureSkuComparisionArrayInput)(nil)).Elem(), ManagementZoneRuleConditionAzureSkuComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureSkusInput)(nil)).Elem(), ManagementZoneRuleConditionAzureSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionAzureSkusArrayInput)(nil)).Elem(), ManagementZoneRuleConditionAzureSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBaseComparisonBasicInput)(nil)).Elem(), ManagementZoneRuleConditionBaseComparisonBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBaseComparisonBasicArrayInput)(nil)).Elem(), ManagementZoneRuleConditionBaseComparisonBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBaseConditionKeyInput)(nil)).Elem(), ManagementZoneRuleConditionBaseConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBaseConditionKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionBaseConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBitnessInput)(nil)).Elem(), ManagementZoneRuleConditionBitnessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBitnessArrayInput)(nil)).Elem(), ManagementZoneRuleConditionBitnessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBitnessComparisionInput)(nil)).Elem(), ManagementZoneRuleConditionBitnessComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionBitnessComparisionArrayInput)(nil)).Elem(), ManagementZoneRuleConditionBitnessComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCloudTypeInput)(nil)).Elem(), ManagementZoneRuleConditionCloudTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCloudTypeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCloudTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCloudTypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionCloudTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCloudTypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCloudTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationTypeInput)(nil)).Elem(), ManagementZoneRuleConditionCustomApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationTypeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCustomApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationTypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionCustomApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCustomApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataInput)(nil)).Elem(), ManagementZoneRuleConditionCustomHostMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCustomHostMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKeyInput)(nil)).Elem(), ManagementZoneRuleConditionCustomHostMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCustomHostMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomHostMetadataDynamicKeyInput)(nil)).Elem(), ManagementZoneRuleConditionCustomHostMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataInput)(nil)).Elem(), ManagementZoneRuleConditionCustomProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCustomProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKeyInput)(nil)).Elem(), ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyInput)(nil)).Elem(), ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopologyInput)(nil)).Elem(), ManagementZoneRuleConditionDatabaseTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopologyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionDatabaseTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopologyComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionDatabaseTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDatabaseTopologyComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionDatabaseTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoderInput)(nil)).Elem(), ManagementZoneRuleConditionDcrumDecoderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoderArrayInput)(nil)).Elem(), ManagementZoneRuleConditionDcrumDecoderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoderComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionDcrumDecoderComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionDcrumDecoderComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionDcrumDecoderComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionEntityInput)(nil)).Elem(), ManagementZoneRuleConditionEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionEntityArrayInput)(nil)).Elem(), ManagementZoneRuleConditionEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionEntityIdComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionEntityIdComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionEntityIdComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionEntityIdComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHostTechInput)(nil)).Elem(), ManagementZoneRuleConditionHostTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHostTechArrayInput)(nil)).Elem(), ManagementZoneRuleConditionHostTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHostTechValueInput)(nil)).Elem(), ManagementZoneRuleConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHostTechValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHypervisorInput)(nil)).Elem(), ManagementZoneRuleConditionHypervisorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHypervisorArrayInput)(nil)).Elem(), ManagementZoneRuleConditionHypervisorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHypervisorTypeComparisionInput)(nil)).Elem(), ManagementZoneRuleConditionHypervisorTypeComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionHypervisorTypeComparisionArrayInput)(nil)).Elem(), ManagementZoneRuleConditionHypervisorTypeComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedNameInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedNameArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedNameComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedNameComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedNameComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedNameComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedStringInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedStringArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedStringComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedStringComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparisonValueInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagComparisonValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagValueInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIndexedTagValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIntegerInput)(nil)).Elem(), ManagementZoneRuleConditionIntegerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIntegerArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIntegerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIntegerComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionIntegerComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIntegerComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIntegerComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIpaddressInput)(nil)).Elem(), ManagementZoneRuleConditionIpaddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIpaddressArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIpaddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIpaddressComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionIpaddressComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionIpaddressComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionIpaddressComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionKeyInput)(nil)).Elem(), ManagementZoneRuleConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatformInput)(nil)).Elem(), ManagementZoneRuleConditionMobilePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatformArrayInput)(nil)).Elem(), ManagementZoneRuleConditionMobilePlatformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatformComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionMobilePlatformComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionMobilePlatformComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionMobilePlatformComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOsArchInput)(nil)).Elem(), ManagementZoneRuleConditionOsArchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOsArchArrayInput)(nil)).Elem(), ManagementZoneRuleConditionOsArchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOsTypeInput)(nil)).Elem(), ManagementZoneRuleConditionOsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOsTypeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionOsTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOsarchitectureComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionOsarchitectureComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOsarchitectureComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionOsarchitectureComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOstypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionOstypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionOstypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionOstypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionPaasTypeInput)(nil)).Elem(), ManagementZoneRuleConditionPaasTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionPaasTypeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionPaasTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionPaasTypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionPaasTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionPaasTypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionPaasTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadataInput)(nil)).Elem(), ManagementZoneRuleConditionProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadataArrayInput)(nil)).Elem(), ManagementZoneRuleConditionProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadataConditionKeyInput)(nil)).Elem(), ManagementZoneRuleConditionProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTopologyInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTopologyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTopologyComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTopologyComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTypeInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTypeArrayInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionServiceTypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionServiceTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleHostTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleHostTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparisonValueInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparisonValueInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSimpleTechComparisonValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringInput)(nil)).Elem(), ManagementZoneRuleConditionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringArrayInput)(nil)).Elem(), ManagementZoneRuleConditionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringConditionKeyInput)(nil)).Elem(), ManagementZoneRuleConditionStringConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringConditionKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionStringConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringKeyInput)(nil)).Elem(), ManagementZoneRuleConditionStringKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionStringKeyArrayInput)(nil)).Elem(), ManagementZoneRuleConditionStringKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngineInput)(nil)).Elem(), ManagementZoneRuleConditionSyntheticEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngineArrayInput)(nil)).Elem(), ManagementZoneRuleConditionSyntheticEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngineTypeComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionSyntheticEngineTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionSyntheticEngineTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagInput)(nil)).Elem(), ManagementZoneRuleConditionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagArrayInput)(nil)).Elem(), ManagementZoneRuleConditionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagComparisonInput)(nil)).Elem(), ManagementZoneRuleConditionTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagComparisonArrayInput)(nil)).Elem(), ManagementZoneRuleConditionTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagComparisonValueInput)(nil)).Elem(), ManagementZoneRuleConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagComparisonValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagValueInput)(nil)).Elem(), ManagementZoneRuleConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTagValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTechInput)(nil)).Elem(), ManagementZoneRuleConditionTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTechArrayInput)(nil)).Elem(), ManagementZoneRuleConditionTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTechValueInput)(nil)).Elem(), ManagementZoneRuleConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementZoneRuleConditionTechValuePtrInput)(nil)).Elem(), ManagementZoneRuleConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationApdexInput)(nil)).Elem(), MobileApplicationApdexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationApdexPtrInput)(nil)).Elem(), MobileApplicationApdexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationPropertiesInput)(nil)).Elem(), MobileApplicationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationPropertiesPtrInput)(nil)).Elem(), MobileApplicationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationPropertiesApiValueInput)(nil)).Elem(), MobileApplicationPropertiesApiValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationPropertiesApiValueArrayInput)(nil)).Elem(), MobileApplicationPropertiesApiValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationPropertiesRequestAttributeInput)(nil)).Elem(), MobileApplicationPropertiesRequestAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileApplicationPropertiesRequestAttributeArrayInput)(nil)).Elem(), MobileApplicationPropertiesRequestAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationAnsibleTowerInput)(nil)).Elem(), NotificationAnsibleTowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationAnsibleTowerPtrInput)(nil)).Elem(), NotificationAnsibleTowerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationConfigInput)(nil)).Elem(), NotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationConfigPtrInput)(nil)).Elem(), NotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationEmailInput)(nil)).Elem(), NotificationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationEmailPtrInput)(nil)).Elem(), NotificationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationHipchatInput)(nil)).Elem(), NotificationHipchatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationHipchatPtrInput)(nil)).Elem(), NotificationHipchatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationJiraInput)(nil)).Elem(), NotificationJiraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationJiraPtrInput)(nil)).Elem(), NotificationJiraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationOpsGenieInput)(nil)).Elem(), NotificationOpsGenieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationOpsGeniePtrInput)(nil)).Elem(), NotificationOpsGenieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPagerDutyInput)(nil)).Elem(), NotificationPagerDutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPagerDutyPtrInput)(nil)).Elem(), NotificationPagerDutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationServiceNowInput)(nil)).Elem(), NotificationServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationServiceNowPtrInput)(nil)).Elem(), NotificationServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationSlackInput)(nil)).Elem(), NotificationSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationSlackPtrInput)(nil)).Elem(), NotificationSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationTrelloInput)(nil)).Elem(), NotificationTrelloArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationTrelloPtrInput)(nil)).Elem(), NotificationTrelloArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationVictorOpsInput)(nil)).Elem(), NotificationVictorOpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationVictorOpsPtrInput)(nil)).Elem(), NotificationVictorOpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationWebHookInput)(nil)).Elem(), NotificationWebHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationWebHookPtrInput)(nil)).Elem(), NotificationWebHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationWebHookHeaderInput)(nil)).Elem(), NotificationWebHookHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationWebHookHeaderArrayInput)(nil)).Elem(), NotificationWebHookHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationXmattersInput)(nil)).Elem(), NotificationXmattersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationXmattersPtrInput)(nil)).Elem(), NotificationXmattersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationXmattersHeaderInput)(nil)).Elem(), NotificationXmattersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationXmattersHeaderArrayInput)(nil)).Elem(), NotificationXmattersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionInput)(nil)).Elem(), ProcessgroupNamingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionArrayInput)(nil)).Elem(), ProcessgroupNamingConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionInput)(nil)).Elem(), ProcessgroupNamingConditionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationTypeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationTypeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationTypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeModeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureComputeModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeModeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureComputeModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeModeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureComputeModeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureComputeModeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkuComparisionInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureSkuComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkuComparisionArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureSkuComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkusInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionAzureSkusArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionAzureSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseComparisonBasicInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBaseComparisonBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseComparisonBasicArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBaseComparisonBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseConditionKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBaseConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBaseConditionKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBaseConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBitnessInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBitnessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBitnessArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBitnessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBitnessComparisionInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBitnessComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionBitnessComparisionArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionBitnessComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudTypeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCloudTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudTypeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCloudTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudTypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCloudTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCloudTypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCloudTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationTypeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationTypeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomHostMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomHostMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopologyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDatabaseTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopologyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDatabaseTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopologyComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoderInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDcrumDecoderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoderArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDcrumDecoderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoderComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDcrumDecoderComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionDcrumDecoderComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionEntityInput)(nil)).Elem(), ProcessgroupNamingConditionConditionEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionEntityArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionEntityIdComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionEntityIdComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionEntityIdComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionEntityIdComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTechInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHostTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTechArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHostTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTechValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHostTechValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisorInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHypervisorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisorArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHypervisorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisorTypeComparisionInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHypervisorTypeComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionHypervisorTypeComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedNameInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedNameArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedNameComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedNameComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedNameComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedNameComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedStringInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedStringArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedStringComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedStringComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparisonValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIndexedTagValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIntegerInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIntegerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIntegerArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIntegerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIntegerComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIntegerComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIntegerComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIntegerComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddressInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIpaddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddressArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIpaddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddressComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIpaddressComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionIpaddressComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionIpaddressComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatformInput)(nil)).Elem(), ProcessgroupNamingConditionConditionMobilePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatformArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionMobilePlatformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatformComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionMobilePlatformComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionMobilePlatformComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOsArchInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOsArchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOsArchArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOsArchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOsTypeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOsTypeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOsTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOsarchitectureComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOsarchitectureComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOsarchitectureComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOstypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOstypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionOstypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionOstypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasTypeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionPaasTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasTypeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionPaasTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasTypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionPaasTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionPaasTypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionPaasTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadataInput)(nil)).Elem(), ProcessgroupNamingConditionConditionProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadataArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadataConditionKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopologyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopologyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopologyComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTypeInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTypeArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionServiceTypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionServiceTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleHostTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleHostTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparisonValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringConditionKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringConditionKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringKeyInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionStringKeyArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionStringKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngineInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSyntheticEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngineArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSyntheticEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparisonInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparisonArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparisonValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagComparisonValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTagValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTechInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTechArrayInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTechValueInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingConditionConditionTechValuePtrInput)(nil)).Elem(), ProcessgroupNamingConditionConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerAliasQueueInput)(nil)).Elem(), QueueManagerAliasQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerAliasQueueArrayInput)(nil)).Elem(), QueueManagerAliasQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerAliasQueueAliasQueueInput)(nil)).Elem(), QueueManagerAliasQueueAliasQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerAliasQueueAliasQueueArrayInput)(nil)).Elem(), QueueManagerAliasQueueAliasQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerClusterQueueInput)(nil)).Elem(), QueueManagerClusterQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerClusterQueueArrayInput)(nil)).Elem(), QueueManagerClusterQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerClusterQueueClusterQueueInput)(nil)).Elem(), QueueManagerClusterQueueClusterQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerClusterQueueClusterQueueArrayInput)(nil)).Elem(), QueueManagerClusterQueueClusterQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerRemoteQueueInput)(nil)).Elem(), QueueManagerRemoteQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerRemoteQueueArrayInput)(nil)).Elem(), QueueManagerRemoteQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerRemoteQueueRemoteQueueInput)(nil)).Elem(), QueueManagerRemoteQueueRemoteQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueManagerRemoteQueueRemoteQueueArrayInput)(nil)).Elem(), QueueManagerRemoteQueueRemoteQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceInput)(nil)).Elem(), RequestAttributeDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceArrayInput)(nil)).Elem(), RequestAttributeDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceCicsSdkMethodNodeConditionInput)(nil)).Elem(), RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrInput)(nil)).Elem(), RequestAttributeDataSourceCicsSdkMethodNodeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceIibLabelMethodNodeConditionInput)(nil)).Elem(), RequestAttributeDataSourceIibLabelMethodNodeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceIibLabelMethodNodeConditionPtrInput)(nil)).Elem(), RequestAttributeDataSourceIibLabelMethodNodeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceIibMethodNodeConditionInput)(nil)).Elem(), RequestAttributeDataSourceIibMethodNodeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceIibMethodNodeConditionPtrInput)(nil)).Elem(), RequestAttributeDataSourceIibMethodNodeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceMethodInput)(nil)).Elem(), RequestAttributeDataSourceMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceMethodArrayInput)(nil)).Elem(), RequestAttributeDataSourceMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceMethodMethodInput)(nil)).Elem(), RequestAttributeDataSourceMethodMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceMethodMethodPtrInput)(nil)).Elem(), RequestAttributeDataSourceMethodMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceScopeInput)(nil)).Elem(), RequestAttributeDataSourceScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceScopePtrInput)(nil)).Elem(), RequestAttributeDataSourceScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceValueProcessingInput)(nil)).Elem(), RequestAttributeDataSourceValueProcessingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceValueProcessingPtrInput)(nil)).Elem(), RequestAttributeDataSourceValueProcessingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceValueProcessingExtractSubstringInput)(nil)).Elem(), RequestAttributeDataSourceValueProcessingExtractSubstringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceValueProcessingExtractSubstringPtrInput)(nil)).Elem(), RequestAttributeDataSourceValueProcessingExtractSubstringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceValueProcessingValueConditionInput)(nil)).Elem(), RequestAttributeDataSourceValueProcessingValueConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeDataSourceValueProcessingValueConditionPtrInput)(nil)).Elem(), RequestAttributeDataSourceValueProcessingValueConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsInput)(nil)).Elem(), RequestNamingConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsPtrInput)(nil)).Elem(), RequestNamingConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionInput)(nil)).Elem(), RequestNamingConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionArrayInput)(nil)).Elem(), RequestNamingConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonBooleanInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonBooleanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonBooleanPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonBooleanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonEsbInputNodeTypeInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonEsbInputNodeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailedStateInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFailedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailedStatePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFailedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailureReasonInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFailureReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFailureReasonPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFailureReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFastStringInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFastStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFastStringPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFastStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFlawStateInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFlawStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonFlawStatePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonFlawStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonGenericInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonGenericPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpMethodInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonHttpMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpMethodPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonHttpMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpStatusClassInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonHttpStatusClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonHttpStatusClassPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonHttpStatusClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonIibInputNodeTypeInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonIibInputNodeTypePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonIibInputNodeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonServiceTypeInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonServiceTypePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValueInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuesInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuesPtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuesValueInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagValuesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonTagValuesValueArrayInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonTagValuesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonZosCallTypeInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonZosCallTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingConditionsConditionComparisonZosCallTypePtrInput)(nil)).Elem(), RequestNamingConditionsConditionComparisonZosCallTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersInput)(nil)).Elem(), RequestNamingPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPtrInput)(nil)).Elem(), RequestNamingPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderArrayInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourcePtrInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTagInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderSourceServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrInput)(nil)).Elem(), RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesFailureRatesInput)(nil)).Elem(), ServiceAnomaliesFailureRatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesFailureRatesPtrInput)(nil)).Elem(), ServiceAnomaliesFailureRatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesFailureRatesAutoInput)(nil)).Elem(), ServiceAnomaliesFailureRatesAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesFailureRatesAutoPtrInput)(nil)).Elem(), ServiceAnomaliesFailureRatesAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesFailureRatesThresholdsInput)(nil)).Elem(), ServiceAnomaliesFailureRatesThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesFailureRatesThresholdsPtrInput)(nil)).Elem(), ServiceAnomaliesFailureRatesThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesLoadInput)(nil)).Elem(), ServiceAnomaliesLoadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesLoadPtrInput)(nil)).Elem(), ServiceAnomaliesLoadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesLoadDropsInput)(nil)).Elem(), ServiceAnomaliesLoadDropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesLoadDropsPtrInput)(nil)).Elem(), ServiceAnomaliesLoadDropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesLoadSpikesInput)(nil)).Elem(), ServiceAnomaliesLoadSpikesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesLoadSpikesPtrInput)(nil)).Elem(), ServiceAnomaliesLoadSpikesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesResponseTimesInput)(nil)).Elem(), ServiceAnomaliesResponseTimesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesResponseTimesPtrInput)(nil)).Elem(), ServiceAnomaliesResponseTimesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesResponseTimesAutoInput)(nil)).Elem(), ServiceAnomaliesResponseTimesAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesResponseTimesAutoPtrInput)(nil)).Elem(), ServiceAnomaliesResponseTimesAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesResponseTimesThresholdsInput)(nil)).Elem(), ServiceAnomaliesResponseTimesThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAnomaliesResponseTimesThresholdsPtrInput)(nil)).Elem(), ServiceAnomaliesResponseTimesThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionInput)(nil)).Elem(), ServiceNamingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionArrayInput)(nil)).Elem(), ServiceNamingConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionInput)(nil)).Elem(), ServiceNamingConditionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparisionInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkuComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparisionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkuComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkusInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkusArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasicInput)(nil)).Elem(), ServiceNamingConditionConditionBaseComparisonBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasicArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBaseComparisonBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionBaseConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBaseConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparisionInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparisionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityInput)(nil)).Elem(), ServiceNamingConditionConditionEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityArrayInput)(nil)).Elem(), ServiceNamingConditionConditionEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionEntityIdComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionEntityIdComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechArrayInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechValueInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorArrayInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparisionInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorTypeComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorTypeComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValueInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformArrayInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsArchInput)(nil)).Elem(), ServiceNamingConditionConditionOsArchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsArchArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOsArchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsTypeInput)(nil)).Elem(), ServiceNamingConditionConditionOsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOsTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionOsarchitectureComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOsarchitectureComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionOstypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOstypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataArrayInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringInput)(nil)).Elem(), ServiceNamingConditionConditionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionStringConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringKeyInput)(nil)).Elem(), ServiceNamingConditionConditionStringKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagInput)(nil)).Elem(), ServiceNamingConditionConditionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagArrayInput)(nil)).Elem(), ServiceNamingConditionConditionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagValueInput)(nil)).Elem(), ServiceNamingConditionConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechInput)(nil)).Elem(), ServiceNamingConditionConditionTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechArrayInput)(nil)).Elem(), ServiceNamingConditionConditionTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechValueInput)(nil)).Elem(), ServiceNamingConditionConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesInput)(nil)).Elem(), SpanCaptureRuleMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesPtrInput)(nil)).Elem(), SpanCaptureRuleMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesMatchInput)(nil)).Elem(), SpanCaptureRuleMatchesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesMatchArrayInput)(nil)).Elem(), SpanCaptureRuleMatchesMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesInput)(nil)).Elem(), SpanContextPropagationMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesPtrInput)(nil)).Elem(), SpanContextPropagationMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesMatchInput)(nil)).Elem(), SpanContextPropagationMatchesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesMatchArrayInput)(nil)).Elem(), SpanContextPropagationMatchesMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesInput)(nil)).Elem(), SpanEntryPointMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesPtrInput)(nil)).Elem(), SpanEntryPointMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesMatchInput)(nil)).Elem(), SpanEntryPointMatchesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesMatchArrayInput)(nil)).Elem(), SpanEntryPointMatchesMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsInput)(nil)).Elem(), UserGroupPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsPtrInput)(nil)).Elem(), UserGroupPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsGrantInput)(nil)).Elem(), UserGroupPermissionsGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsGrantArrayInput)(nil)).Elem(), UserGroupPermissionsGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsInput)(nil)).Elem(), WebApplicationConversionGoalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsPtrInput)(nil)).Elem(), WebApplicationConversionGoalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalInput)(nil)).Elem(), WebApplicationConversionGoalsGoalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalArrayInput)(nil)).Elem(), WebApplicationConversionGoalsGoalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalDestinationInput)(nil)).Elem(), WebApplicationConversionGoalsGoalDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalDestinationPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalUserActionInput)(nil)).Elem(), WebApplicationConversionGoalsGoalUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalUserActionPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDurationInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDurationPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumActionInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitNumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumActionPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitNumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationCustomActionApdexSettingsInput)(nil)).Elem(), WebApplicationCustomActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationCustomActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationCustomActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionInput)(nil)).Elem(), WebApplicationKeyUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionArrayInput)(nil)).Elem(), WebApplicationKeyUserActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionActionInput)(nil)).Elem(), WebApplicationKeyUserActionActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionActionArrayInput)(nil)).Elem(), WebApplicationKeyUserActionActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationLoadActionApdexSettingsInput)(nil)).Elem(), WebApplicationLoadActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationLoadActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationLoadActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsPtrInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCaptureInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCaptureArrayInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsCaptureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapturePtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationSessionReplayConfigInput)(nil)).Elem(), WebApplicationSessionReplayConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationSessionReplayConfigPtrInput)(nil)).Elem(), WebApplicationSessionReplayConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPtrInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPropertyInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPropertyArrayInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsPtrInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagInput)(nil)).Elem(), WebApplicationUserTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagArrayInput)(nil)).Elem(), WebApplicationUserTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsPtrInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersPtrInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderArrayInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersPtrInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderArrayInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsPtrInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsLocationInput)(nil)).Elem(), GetSyntheticLocationsLocationsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsLocationArrayInput)(nil)).Elem(), GetSyntheticLocationsLocationsLocationArray{})
	pulumi.RegisterOutputType(ManagementZoneMetadataOutput{})
	pulumi.RegisterOutputType(ManagementZoneMetadataPtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionApplicationTypeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureComputeModeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureComputeModeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureComputeModeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureComputeModeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureSkuComparisionOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureSkuComparisionArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureSkusOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionAzureSkusArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBaseComparisonBasicOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBaseComparisonBasicArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBaseConditionKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBaseConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBitnessOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBitnessArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBitnessComparisionOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionBitnessComparisionArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCloudTypeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCloudTypeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCloudTypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCloudTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomApplicationTypeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomHostMetadataOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomHostMetadataArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomHostMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomHostMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomHostMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomProcessMetadataOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionCustomProcessMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDatabaseTopologyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDatabaseTopologyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDatabaseTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDatabaseTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDcrumDecoderOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDcrumDecoderArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDcrumDecoderComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionDcrumDecoderComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionEntityOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionEntityArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionEntityIdComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionEntityIdComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHostTechOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHostTechArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHostTechValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHostTechValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHypervisorOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHypervisorArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHypervisorTypeComparisionOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionHypervisorTypeComparisionArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedNameOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedNameArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedNameComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedNameComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedStringOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedStringArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedStringComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIndexedTagValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIntegerOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIntegerArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIntegerComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIntegerComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIpaddressOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIpaddressArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIpaddressComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionIpaddressComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionMobilePlatformOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionMobilePlatformArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionMobilePlatformComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionMobilePlatformComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOsArchOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOsArchArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOsTypeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOsTypeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOsarchitectureComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOsarchitectureComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOstypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionOstypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionPaasTypeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionPaasTypeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionPaasTypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionPaasTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionProcessMetadataOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTopologyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTopologyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTypeOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTypeArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionServiceTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleHostTechComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleHostTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleHostTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleHostTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleTechComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSimpleTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringConditionKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringKeyOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionStringKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSyntheticEngineOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSyntheticEngineArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSyntheticEngineTypeComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionSyntheticEngineTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagComparisonOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTagValuePtrOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTechOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTechArrayOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTechValueOutput{})
	pulumi.RegisterOutputType(ManagementZoneRuleConditionTechValuePtrOutput{})
	pulumi.RegisterOutputType(MobileApplicationApdexOutput{})
	pulumi.RegisterOutputType(MobileApplicationApdexPtrOutput{})
	pulumi.RegisterOutputType(MobileApplicationPropertiesOutput{})
	pulumi.RegisterOutputType(MobileApplicationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MobileApplicationPropertiesApiValueOutput{})
	pulumi.RegisterOutputType(MobileApplicationPropertiesApiValueArrayOutput{})
	pulumi.RegisterOutputType(MobileApplicationPropertiesRequestAttributeOutput{})
	pulumi.RegisterOutputType(MobileApplicationPropertiesRequestAttributeArrayOutput{})
	pulumi.RegisterOutputType(NotificationAnsibleTowerOutput{})
	pulumi.RegisterOutputType(NotificationAnsibleTowerPtrOutput{})
	pulumi.RegisterOutputType(NotificationConfigOutput{})
	pulumi.RegisterOutputType(NotificationConfigPtrOutput{})
	pulumi.RegisterOutputType(NotificationEmailOutput{})
	pulumi.RegisterOutputType(NotificationEmailPtrOutput{})
	pulumi.RegisterOutputType(NotificationHipchatOutput{})
	pulumi.RegisterOutputType(NotificationHipchatPtrOutput{})
	pulumi.RegisterOutputType(NotificationJiraOutput{})
	pulumi.RegisterOutputType(NotificationJiraPtrOutput{})
	pulumi.RegisterOutputType(NotificationOpsGenieOutput{})
	pulumi.RegisterOutputType(NotificationOpsGeniePtrOutput{})
	pulumi.RegisterOutputType(NotificationPagerDutyOutput{})
	pulumi.RegisterOutputType(NotificationPagerDutyPtrOutput{})
	pulumi.RegisterOutputType(NotificationServiceNowOutput{})
	pulumi.RegisterOutputType(NotificationServiceNowPtrOutput{})
	pulumi.RegisterOutputType(NotificationSlackOutput{})
	pulumi.RegisterOutputType(NotificationSlackPtrOutput{})
	pulumi.RegisterOutputType(NotificationTrelloOutput{})
	pulumi.RegisterOutputType(NotificationTrelloPtrOutput{})
	pulumi.RegisterOutputType(NotificationVictorOpsOutput{})
	pulumi.RegisterOutputType(NotificationVictorOpsPtrOutput{})
	pulumi.RegisterOutputType(NotificationWebHookOutput{})
	pulumi.RegisterOutputType(NotificationWebHookPtrOutput{})
	pulumi.RegisterOutputType(NotificationWebHookHeaderOutput{})
	pulumi.RegisterOutputType(NotificationWebHookHeaderArrayOutput{})
	pulumi.RegisterOutputType(NotificationXmattersOutput{})
	pulumi.RegisterOutputType(NotificationXmattersPtrOutput{})
	pulumi.RegisterOutputType(NotificationXmattersHeaderOutput{})
	pulumi.RegisterOutputType(NotificationXmattersHeaderArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionApplicationTypeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureComputeModeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureComputeModeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureComputeModeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureComputeModeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureSkuComparisionOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureSkuComparisionArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureSkusOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionAzureSkusArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBaseComparisonBasicOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBaseComparisonBasicArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBaseConditionKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBaseConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBitnessOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBitnessArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBitnessComparisionOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionBitnessComparisionArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCloudTypeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCloudTypeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCloudTypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCloudTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomApplicationTypeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomHostMetadataOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomHostMetadataArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomProcessMetadataOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDatabaseTopologyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDatabaseTopologyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDatabaseTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDatabaseTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDcrumDecoderOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDcrumDecoderArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDcrumDecoderComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionDcrumDecoderComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionEntityOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionEntityArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionEntityIdComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionEntityIdComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHostTechOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHostTechArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHostTechValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHostTechValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHypervisorOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHypervisorArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHypervisorTypeComparisionOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionHypervisorTypeComparisionArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedNameOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedNameArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedNameComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedNameComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedStringOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedStringArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedStringComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIndexedTagValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIntegerOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIntegerArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIntegerComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIntegerComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIpaddressOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIpaddressArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIpaddressComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionIpaddressComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionMobilePlatformOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionMobilePlatformArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionMobilePlatformComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionMobilePlatformComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOsArchOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOsArchArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOsTypeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOsTypeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOsarchitectureComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOsarchitectureComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOstypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionOstypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionPaasTypeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionPaasTypeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionPaasTypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionPaasTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionProcessMetadataOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTopologyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTopologyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTypeOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTypeArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionServiceTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleHostTechComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleHostTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleHostTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleTechComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSimpleTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringConditionKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringKeyOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionStringKeyArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSyntheticEngineOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSyntheticEngineArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagComparisonOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTagValuePtrOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTechOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTechArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTechValueOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingConditionConditionTechValuePtrOutput{})
	pulumi.RegisterOutputType(QueueManagerAliasQueueOutput{})
	pulumi.RegisterOutputType(QueueManagerAliasQueueArrayOutput{})
	pulumi.RegisterOutputType(QueueManagerAliasQueueAliasQueueOutput{})
	pulumi.RegisterOutputType(QueueManagerAliasQueueAliasQueueArrayOutput{})
	pulumi.RegisterOutputType(QueueManagerClusterQueueOutput{})
	pulumi.RegisterOutputType(QueueManagerClusterQueueArrayOutput{})
	pulumi.RegisterOutputType(QueueManagerClusterQueueClusterQueueOutput{})
	pulumi.RegisterOutputType(QueueManagerClusterQueueClusterQueueArrayOutput{})
	pulumi.RegisterOutputType(QueueManagerRemoteQueueOutput{})
	pulumi.RegisterOutputType(QueueManagerRemoteQueueArrayOutput{})
	pulumi.RegisterOutputType(QueueManagerRemoteQueueRemoteQueueOutput{})
	pulumi.RegisterOutputType(QueueManagerRemoteQueueRemoteQueueArrayOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceArrayOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceCicsSdkMethodNodeConditionOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceCicsSdkMethodNodeConditionPtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceIibLabelMethodNodeConditionOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceIibLabelMethodNodeConditionPtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceIibMethodNodeConditionOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceIibMethodNodeConditionPtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceMethodOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceMethodArrayOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceMethodMethodOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceMethodMethodPtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceScopeOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceScopePtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceValueProcessingOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceValueProcessingPtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceValueProcessingExtractSubstringOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceValueProcessingExtractSubstringPtrOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceValueProcessingValueConditionOutput{})
	pulumi.RegisterOutputType(RequestAttributeDataSourceValueProcessingValueConditionPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonBooleanOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonBooleanPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonEsbInputNodeTypeOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonEsbInputNodeTypePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFailedStateOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFailedStatePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFailureReasonOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFailureReasonPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFastStringOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFastStringPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFlawStateOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonFlawStatePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonGenericOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonGenericPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonHttpMethodOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonHttpMethodPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonHttpStatusClassOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonHttpStatusClassPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonIibInputNodeTypeOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonIibInputNodeTypePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourcePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKeyPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonServiceTypeOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonServiceTypePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeSourcePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKeyPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagValueOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagValuePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagValuesOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagValuesPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagValuesValueOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonTagValuesValueArrayOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonZosCallTypeOutput{})
	pulumi.RegisterOutputType(RequestNamingConditionsConditionComparisonZosCallTypePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderArrayOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderSourceOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderSourcePtrOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderSourceServiceTagOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderSourceServiceTagPtrOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyOutput{})
	pulumi.RegisterOutputType(RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKeyPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesFailureRatesOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesFailureRatesPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesFailureRatesAutoOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesFailureRatesAutoPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesFailureRatesThresholdsOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesFailureRatesThresholdsPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesLoadOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesLoadPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesLoadDropsOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesLoadDropsPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesLoadSpikesOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesLoadSpikesPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesResponseTimesOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesResponseTimesPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesResponseTimesAutoOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesResponseTimesAutoPtrOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesResponseTimesThresholdsOutput{})
	pulumi.RegisterOutputType(ServiceAnomaliesResponseTimesThresholdsPtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkuComparisionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkuComparisionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkusOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkusArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseComparisonBasicOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseComparisonBasicArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessComparisionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessComparisionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityIdComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityIdComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorTypeComparisionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsArchOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsArchArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsarchitectureComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOstypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOstypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechValuePtrOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesPtrOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesMatchOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesMatchArrayOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesPtrOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesMatchOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesMatchArrayOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesPtrOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesMatchOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesMatchArrayOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsPtrOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsGrantOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsGrantArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalDestinationOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalDestinationPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalUserActionOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalUserActionPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitDurationOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitDurationPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitNumActionOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationCustomActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationCustomActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionActionOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionActionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationLoadActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationLoadActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsCaptureOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCapturePtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationSessionReplayConfigOutput{})
	pulumi.RegisterOutputType(WebApplicationSessionReplayConfigPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPropertyOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsPtrOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsLocationOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsLocationArrayOutput{})
}
