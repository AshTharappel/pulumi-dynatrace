// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The entities data source allows all entities to be retrieved by its type.
//
// - `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := dynatrace.GetEntities(ctx, &dynatrace.GetEntitiesArgs{
//				Type: "SERVICE",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("serviceList", test.Entities)
//			return nil
//		})
//	}
//
// ```
func GetEntities(ctx *pulumi.Context, args *GetEntitiesArgs, opts ...pulumi.InvokeOption) (*GetEntitiesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetEntitiesResult
	err := ctx.Invoke("dynatrace:index/getEntities:getEntities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntities.
type GetEntitiesArgs struct {
	Entities *GetEntitiesEntities `pulumi:"entities"`
	Type     string               `pulumi:"type"`
}

// A collection of values returned by getEntities.
type GetEntitiesResult struct {
	Entities GetEntitiesEntities `pulumi:"entities"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

func GetEntitiesOutput(ctx *pulumi.Context, args GetEntitiesOutputArgs, opts ...pulumi.InvokeOption) GetEntitiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEntitiesResult, error) {
			args := v.(GetEntitiesArgs)
			r, err := GetEntities(ctx, &args, opts...)
			var s GetEntitiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEntitiesResultOutput)
}

// A collection of arguments for invoking getEntities.
type GetEntitiesOutputArgs struct {
	Entities GetEntitiesEntitiesPtrInput `pulumi:"entities"`
	Type     pulumi.StringInput          `pulumi:"type"`
}

func (GetEntitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesArgs)(nil)).Elem()
}

// A collection of values returned by getEntities.
type GetEntitiesResultOutput struct{ *pulumi.OutputState }

func (GetEntitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesResult)(nil)).Elem()
}

func (o GetEntitiesResultOutput) ToGetEntitiesResultOutput() GetEntitiesResultOutput {
	return o
}

func (o GetEntitiesResultOutput) ToGetEntitiesResultOutputWithContext(ctx context.Context) GetEntitiesResultOutput {
	return o
}

func (o GetEntitiesResultOutput) Entities() GetEntitiesEntitiesOutput {
	return o.ApplyT(func(v GetEntitiesResult) GetEntitiesEntities { return v.Entities }).(GetEntitiesEntitiesOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEntitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEntitiesResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEntitiesResultOutput{})
}
