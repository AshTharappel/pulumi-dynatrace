// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type ServiceExternalWebService struct {
	pulumi.CustomResourceState

	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they **all** must match a Request for the rule to apply. Conditions evaluate against attributes, but do not modify them.
	Conditions ServiceExternalWebServiceConditionsPtrOutput `pulumi:"conditions"`
	// Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. It is possible to exclude Port from contributing by toggling the switch off.
	IdContributors ServiceExternalWebServiceIdContributorsOutput `pulumi:"idContributors"`
	// Define a management zone filter for this service detection rule.
	ManagementZones pulumi.StringArrayOutput `pulumi:"managementZones"`
	// Rule name
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewServiceExternalWebService registers a new resource with the given unique name, arguments, and options.
func NewServiceExternalWebService(ctx *pulumi.Context,
	name string, args *ServiceExternalWebServiceArgs, opts ...pulumi.ResourceOption) (*ServiceExternalWebService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.IdContributors == nil {
		return nil, errors.New("invalid value for required argument 'IdContributors'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceExternalWebService
	err := ctx.RegisterResource("dynatrace:index/serviceExternalWebService:ServiceExternalWebService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceExternalWebService gets an existing ServiceExternalWebService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceExternalWebService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceExternalWebServiceState, opts ...pulumi.ResourceOption) (*ServiceExternalWebService, error) {
	var resource ServiceExternalWebService
	err := ctx.ReadResource("dynatrace:index/serviceExternalWebService:ServiceExternalWebService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceExternalWebService resources.
type serviceExternalWebServiceState struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they **all** must match a Request for the rule to apply. Conditions evaluate against attributes, but do not modify them.
	Conditions *ServiceExternalWebServiceConditions `pulumi:"conditions"`
	// Description
	Description *string `pulumi:"description"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. It is possible to exclude Port from contributing by toggling the switch off.
	IdContributors *ServiceExternalWebServiceIdContributors `pulumi:"idContributors"`
	// Define a management zone filter for this service detection rule.
	ManagementZones []string `pulumi:"managementZones"`
	// Rule name
	Name *string `pulumi:"name"`
}

type ServiceExternalWebServiceState struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they **all** must match a Request for the rule to apply. Conditions evaluate against attributes, but do not modify them.
	Conditions ServiceExternalWebServiceConditionsPtrInput
	// Description
	Description pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. It is possible to exclude Port from contributing by toggling the switch off.
	IdContributors ServiceExternalWebServiceIdContributorsPtrInput
	// Define a management zone filter for this service detection rule.
	ManagementZones pulumi.StringArrayInput
	// Rule name
	Name pulumi.StringPtrInput
}

func (ServiceExternalWebServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceExternalWebServiceState)(nil)).Elem()
}

type serviceExternalWebServiceArgs struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they **all** must match a Request for the rule to apply. Conditions evaluate against attributes, but do not modify them.
	Conditions *ServiceExternalWebServiceConditions `pulumi:"conditions"`
	// Description
	Description *string `pulumi:"description"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. It is possible to exclude Port from contributing by toggling the switch off.
	IdContributors ServiceExternalWebServiceIdContributors `pulumi:"idContributors"`
	// Define a management zone filter for this service detection rule.
	ManagementZones []string `pulumi:"managementZones"`
	// Rule name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ServiceExternalWebService resource.
type ServiceExternalWebServiceArgs struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they **all** must match a Request for the rule to apply. Conditions evaluate against attributes, but do not modify them.
	Conditions ServiceExternalWebServiceConditionsPtrInput
	// Description
	Description pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. It is possible to exclude Port from contributing by toggling the switch off.
	IdContributors ServiceExternalWebServiceIdContributorsInput
	// Define a management zone filter for this service detection rule.
	ManagementZones pulumi.StringArrayInput
	// Rule name
	Name pulumi.StringPtrInput
}

func (ServiceExternalWebServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceExternalWebServiceArgs)(nil)).Elem()
}

type ServiceExternalWebServiceInput interface {
	pulumi.Input

	ToServiceExternalWebServiceOutput() ServiceExternalWebServiceOutput
	ToServiceExternalWebServiceOutputWithContext(ctx context.Context) ServiceExternalWebServiceOutput
}

func (*ServiceExternalWebService) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceExternalWebService)(nil)).Elem()
}

func (i *ServiceExternalWebService) ToServiceExternalWebServiceOutput() ServiceExternalWebServiceOutput {
	return i.ToServiceExternalWebServiceOutputWithContext(context.Background())
}

func (i *ServiceExternalWebService) ToServiceExternalWebServiceOutputWithContext(ctx context.Context) ServiceExternalWebServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceExternalWebServiceOutput)
}

// ServiceExternalWebServiceArrayInput is an input type that accepts ServiceExternalWebServiceArray and ServiceExternalWebServiceArrayOutput values.
// You can construct a concrete instance of `ServiceExternalWebServiceArrayInput` via:
//
//	ServiceExternalWebServiceArray{ ServiceExternalWebServiceArgs{...} }
type ServiceExternalWebServiceArrayInput interface {
	pulumi.Input

	ToServiceExternalWebServiceArrayOutput() ServiceExternalWebServiceArrayOutput
	ToServiceExternalWebServiceArrayOutputWithContext(context.Context) ServiceExternalWebServiceArrayOutput
}

type ServiceExternalWebServiceArray []ServiceExternalWebServiceInput

func (ServiceExternalWebServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceExternalWebService)(nil)).Elem()
}

func (i ServiceExternalWebServiceArray) ToServiceExternalWebServiceArrayOutput() ServiceExternalWebServiceArrayOutput {
	return i.ToServiceExternalWebServiceArrayOutputWithContext(context.Background())
}

func (i ServiceExternalWebServiceArray) ToServiceExternalWebServiceArrayOutputWithContext(ctx context.Context) ServiceExternalWebServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceExternalWebServiceArrayOutput)
}

// ServiceExternalWebServiceMapInput is an input type that accepts ServiceExternalWebServiceMap and ServiceExternalWebServiceMapOutput values.
// You can construct a concrete instance of `ServiceExternalWebServiceMapInput` via:
//
//	ServiceExternalWebServiceMap{ "key": ServiceExternalWebServiceArgs{...} }
type ServiceExternalWebServiceMapInput interface {
	pulumi.Input

	ToServiceExternalWebServiceMapOutput() ServiceExternalWebServiceMapOutput
	ToServiceExternalWebServiceMapOutputWithContext(context.Context) ServiceExternalWebServiceMapOutput
}

type ServiceExternalWebServiceMap map[string]ServiceExternalWebServiceInput

func (ServiceExternalWebServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceExternalWebService)(nil)).Elem()
}

func (i ServiceExternalWebServiceMap) ToServiceExternalWebServiceMapOutput() ServiceExternalWebServiceMapOutput {
	return i.ToServiceExternalWebServiceMapOutputWithContext(context.Background())
}

func (i ServiceExternalWebServiceMap) ToServiceExternalWebServiceMapOutputWithContext(ctx context.Context) ServiceExternalWebServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceExternalWebServiceMapOutput)
}

type ServiceExternalWebServiceOutput struct{ *pulumi.OutputState }

func (ServiceExternalWebServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceExternalWebService)(nil)).Elem()
}

func (o ServiceExternalWebServiceOutput) ToServiceExternalWebServiceOutput() ServiceExternalWebServiceOutput {
	return o
}

func (o ServiceExternalWebServiceOutput) ToServiceExternalWebServiceOutputWithContext(ctx context.Context) ServiceExternalWebServiceOutput {
	return o
}

// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they **all** must match a Request for the rule to apply. Conditions evaluate against attributes, but do not modify them.
func (o ServiceExternalWebServiceOutput) Conditions() ServiceExternalWebServiceConditionsPtrOutput {
	return o.ApplyT(func(v *ServiceExternalWebService) ServiceExternalWebServiceConditionsPtrOutput { return v.Conditions }).(ServiceExternalWebServiceConditionsPtrOutput)
}

// Description
func (o ServiceExternalWebServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceExternalWebService) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o ServiceExternalWebServiceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceExternalWebService) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. It is possible to exclude Port from contributing by toggling the switch off.
func (o ServiceExternalWebServiceOutput) IdContributors() ServiceExternalWebServiceIdContributorsOutput {
	return o.ApplyT(func(v *ServiceExternalWebService) ServiceExternalWebServiceIdContributorsOutput {
		return v.IdContributors
	}).(ServiceExternalWebServiceIdContributorsOutput)
}

// Define a management zone filter for this service detection rule.
func (o ServiceExternalWebServiceOutput) ManagementZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceExternalWebService) pulumi.StringArrayOutput { return v.ManagementZones }).(pulumi.StringArrayOutput)
}

// Rule name
func (o ServiceExternalWebServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceExternalWebService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ServiceExternalWebServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceExternalWebServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceExternalWebService)(nil)).Elem()
}

func (o ServiceExternalWebServiceArrayOutput) ToServiceExternalWebServiceArrayOutput() ServiceExternalWebServiceArrayOutput {
	return o
}

func (o ServiceExternalWebServiceArrayOutput) ToServiceExternalWebServiceArrayOutputWithContext(ctx context.Context) ServiceExternalWebServiceArrayOutput {
	return o
}

func (o ServiceExternalWebServiceArrayOutput) Index(i pulumi.IntInput) ServiceExternalWebServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceExternalWebService {
		return vs[0].([]*ServiceExternalWebService)[vs[1].(int)]
	}).(ServiceExternalWebServiceOutput)
}

type ServiceExternalWebServiceMapOutput struct{ *pulumi.OutputState }

func (ServiceExternalWebServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceExternalWebService)(nil)).Elem()
}

func (o ServiceExternalWebServiceMapOutput) ToServiceExternalWebServiceMapOutput() ServiceExternalWebServiceMapOutput {
	return o
}

func (o ServiceExternalWebServiceMapOutput) ToServiceExternalWebServiceMapOutputWithContext(ctx context.Context) ServiceExternalWebServiceMapOutput {
	return o
}

func (o ServiceExternalWebServiceMapOutput) MapIndex(k pulumi.StringInput) ServiceExternalWebServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceExternalWebService {
		return vs[0].(map[string]*ServiceExternalWebService)[vs[1].(string)]
	}).(ServiceExternalWebServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceExternalWebServiceInput)(nil)).Elem(), &ServiceExternalWebService{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceExternalWebServiceArrayInput)(nil)).Elem(), ServiceExternalWebServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceExternalWebServiceMapInput)(nil)).Elem(), ServiceExternalWebServiceMap{})
	pulumi.RegisterOutputType(ServiceExternalWebServiceOutput{})
	pulumi.RegisterOutputType(ServiceExternalWebServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceExternalWebServiceMapOutput{})
}
