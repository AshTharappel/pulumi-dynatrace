// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProcessGroup(args: GetProcessGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetProcessGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("dynatrace:index/getProcessGroup:getProcessGroup", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getProcessGroup.
 */
export interface GetProcessGroupArgs {
    name: string;
    /**
     * Required tags of the process group to find
     */
    tags?: string[];
}

/**
 * A collection of values returned by getProcessGroup.
 */
export interface GetProcessGroupResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * Required tags of the process group to find
     */
    readonly tags?: string[];
}

export function getProcessGroupOutput(args: GetProcessGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProcessGroupResult> {
    return pulumi.output(args).apply(a => getProcessGroup(a, opts))
}

/**
 * A collection of arguments for invoking getProcessGroup.
 */
export interface GetProcessGroupOutputArgs {
    name: pulumi.Input<string>;
    /**
     * Required tags of the process group to find
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
