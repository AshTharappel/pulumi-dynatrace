// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The entities data source allows all entities to be retrieved by its type.
 *
 * - `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const test = dynatrace.getEntities({
 *     type: "SERVICE",
 * });
 * export const serviceList = test.then(test => test.entities);
 * ```
 */
export function getEntities(args: GetEntitiesArgs, opts?: pulumi.InvokeOptions): Promise<GetEntitiesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getEntities:getEntities", {
        "entities": args.entities,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntities.
 */
export interface GetEntitiesArgs {
    entities?: inputs.GetEntitiesEntities;
    type: string;
}

/**
 * A collection of values returned by getEntities.
 */
export interface GetEntitiesResult {
    readonly entities: outputs.GetEntitiesEntities;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly type: string;
}
/**
 * The entities data source allows all entities to be retrieved by its type.
 *
 * - `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const test = dynatrace.getEntities({
 *     type: "SERVICE",
 * });
 * export const serviceList = test.then(test => test.entities);
 * ```
 */
export function getEntitiesOutput(args: GetEntitiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntitiesResult> {
    return pulumi.output(args).apply((a: any) => getEntities(a, opts))
}

/**
 * A collection of arguments for invoking getEntities.
 */
export interface GetEntitiesOutputArgs {
    entities?: pulumi.Input<inputs.GetEntitiesEntitiesArgs>;
    type: pulumi.Input<string>;
}
