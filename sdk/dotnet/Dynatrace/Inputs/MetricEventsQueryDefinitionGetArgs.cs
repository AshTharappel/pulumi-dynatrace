// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.PulumiPackage.Dynatrace.Inputs
{

    public sealed class MetricEventsQueryDefinitionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The aggregation of the query definition
        /// </summary>
        [Input("aggregation")]
        public Input<string>? Aggregation { get; set; }

        /// <summary>
        /// The dimension filters of the query definition
        /// </summary>
        [Input("dimensionFilter")]
        public Input<Inputs.MetricEventsQueryDefinitionDimensionFilterGetArgs>? DimensionFilter { get; set; }

        /// <summary>
        /// Use rule-based filters to define the scope this event monitors.
        /// </summary>
        [Input("entityFilter")]
        public Input<Inputs.MetricEventsQueryDefinitionEntityFilterGetArgs>? EntityFilter { get; set; }

        /// <summary>
        /// The metric key of the query definition
        /// </summary>
        [Input("metricKey", required: true)]
        public Input<string> MetricKey { get; set; } = null!;

        /// <summary>
        /// To learn more, visit [Metric Selector](https://dt-url.net/metselad)
        /// </summary>
        [Input("metricSelector")]
        public Input<string>? MetricSelector { get; set; }

        /// <summary>
        /// Minute offset of sliding evaluation window for metrics with latency
        /// </summary>
        [Input("queryOffset")]
        public Input<int>? QueryOffset { get; set; }

        /// <summary>
        /// The type of query definition
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public MetricEventsQueryDefinitionGetArgs()
        {
        }
        public static new MetricEventsQueryDefinitionGetArgs Empty => new MetricEventsQueryDefinitionGetArgs();
    }
}
