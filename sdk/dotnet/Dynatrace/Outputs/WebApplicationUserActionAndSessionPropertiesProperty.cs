// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.PulumiPackage.Dynatrace.Outputs
{

    [OutputType]
    public sealed class WebApplicationUserActionAndSessionPropertiesProperty
    {
        public readonly string? Aggregation;
        public readonly string? CleanupRule;
        public readonly string? DisplayName;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly int Id;
        public readonly bool? IgnoreCase;
        public readonly string Key;
        public readonly int? LongStringLength;
        public readonly int? MetadataId;
        public readonly string Origin;
        public readonly string? ServerSideRequestAttribute;
        public readonly bool? StoreAsSessionProperty;
        public readonly bool? StoreAsUserActionProperty;
        /// <summary>
        /// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private WebApplicationUserActionAndSessionPropertiesProperty(
            string? aggregation,

            string? cleanupRule,

            string? displayName,

            int id,

            bool? ignoreCase,

            string key,

            int? longStringLength,

            int? metadataId,

            string origin,

            string? serverSideRequestAttribute,

            bool? storeAsSessionProperty,

            bool? storeAsUserActionProperty,

            string type)
        {
            Aggregation = aggregation;
            CleanupRule = cleanupRule;
            DisplayName = displayName;
            Id = id;
            IgnoreCase = ignoreCase;
            Key = key;
            LongStringLength = longStringLength;
            MetadataId = metadataId;
            Origin = origin;
            ServerSideRequestAttribute = serverSideRequestAttribute;
            StoreAsSessionProperty = storeAsSessionProperty;
            StoreAsUserActionProperty = storeAsUserActionProperty;
            Type = type;
        }
    }
}
