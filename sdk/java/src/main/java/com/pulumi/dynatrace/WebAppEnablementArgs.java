// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebAppEnablementRumArgs;
import com.pulumi.dynatrace.inputs.WebAppEnablementSessionReplayArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppEnablementArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppEnablementArgs Empty = new WebAppEnablementArgs();

    /**
     * The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application&#39;s performance, identify errors, and gain insight into your user&#39;s behavior and experience.
     * 
     */
    @Import(name="rum", required=true)
    private Output<WebAppEnablementRumArgs> rum;

    /**
     * @return Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application&#39;s performance, identify errors, and gain insight into your user&#39;s behavior and experience.
     * 
     */
    public Output<WebAppEnablementRumArgs> rum() {
        return this.rum;
    }

    /**
     * [Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
     * 
     */
    @Import(name="sessionReplay", required=true)
    private Output<WebAppEnablementSessionReplayArgs> sessionReplay;

    /**
     * @return [Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
     * 
     */
    public Output<WebAppEnablementSessionReplayArgs> sessionReplay() {
        return this.sessionReplay;
    }

    private WebAppEnablementArgs() {}

    private WebAppEnablementArgs(WebAppEnablementArgs $) {
        this.applicationId = $.applicationId;
        this.rum = $.rum;
        this.sessionReplay = $.sessionReplay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppEnablementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppEnablementArgs $;

        public Builder() {
            $ = new WebAppEnablementArgs();
        }

        public Builder(WebAppEnablementArgs defaults) {
            $ = new WebAppEnablementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param rum Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application&#39;s performance, identify errors, and gain insight into your user&#39;s behavior and experience.
         * 
         * @return builder
         * 
         */
        public Builder rum(Output<WebAppEnablementRumArgs> rum) {
            $.rum = rum;
            return this;
        }

        /**
         * @param rum Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application&#39;s performance, identify errors, and gain insight into your user&#39;s behavior and experience.
         * 
         * @return builder
         * 
         */
        public Builder rum(WebAppEnablementRumArgs rum) {
            return rum(Output.of(rum));
        }

        /**
         * @param sessionReplay [Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
         * 
         * @return builder
         * 
         */
        public Builder sessionReplay(Output<WebAppEnablementSessionReplayArgs> sessionReplay) {
            $.sessionReplay = sessionReplay;
            return this;
        }

        /**
         * @param sessionReplay [Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
         * 
         * @return builder
         * 
         */
        public Builder sessionReplay(WebAppEnablementSessionReplayArgs sessionReplay) {
            return sessionReplay(Output.of(sessionReplay));
        }

        public WebAppEnablementArgs build() {
            $.rum = Objects.requireNonNull($.rum, "expected parameter 'rum' to be non-null");
            $.sessionReplay = Objects.requireNonNull($.sessionReplay, "expected parameter 'sessionReplay' to be non-null");
            return $;
        }
    }

}
