// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BusinessEventsProcessingTransformationFieldsTransformationFieldArgs;
import java.util.List;
import java.util.Objects;


public final class BusinessEventsProcessingTransformationFieldsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BusinessEventsProcessingTransformationFieldsArgs Empty = new BusinessEventsProcessingTransformationFieldsArgs();

    @Import(name="transformationFields", required=true)
    private Output<List<BusinessEventsProcessingTransformationFieldsTransformationFieldArgs>> transformationFields;

    public Output<List<BusinessEventsProcessingTransformationFieldsTransformationFieldArgs>> transformationFields() {
        return this.transformationFields;
    }

    private BusinessEventsProcessingTransformationFieldsArgs() {}

    private BusinessEventsProcessingTransformationFieldsArgs(BusinessEventsProcessingTransformationFieldsArgs $) {
        this.transformationFields = $.transformationFields;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BusinessEventsProcessingTransformationFieldsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BusinessEventsProcessingTransformationFieldsArgs $;

        public Builder() {
            $ = new BusinessEventsProcessingTransformationFieldsArgs();
        }

        public Builder(BusinessEventsProcessingTransformationFieldsArgs defaults) {
            $ = new BusinessEventsProcessingTransformationFieldsArgs(Objects.requireNonNull(defaults));
        }

        public Builder transformationFields(Output<List<BusinessEventsProcessingTransformationFieldsTransformationFieldArgs>> transformationFields) {
            $.transformationFields = transformationFields;
            return this;
        }

        public Builder transformationFields(List<BusinessEventsProcessingTransformationFieldsTransformationFieldArgs> transformationFields) {
            return transformationFields(Output.of(transformationFields));
        }

        public Builder transformationFields(BusinessEventsProcessingTransformationFieldsTransformationFieldArgs... transformationFields) {
            return transformationFields(List.of(transformationFields));
        }

        public BusinessEventsProcessingTransformationFieldsArgs build() {
            $.transformationFields = Objects.requireNonNull($.transformationFields, "expected parameter 'transformationFields' to be non-null");
            return $;
        }
    }

}
