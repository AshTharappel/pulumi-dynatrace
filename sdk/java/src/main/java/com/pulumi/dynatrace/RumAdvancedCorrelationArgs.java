// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RumAdvancedCorrelationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RumAdvancedCorrelationArgs Empty = new RumAdvancedCorrelationArgs();

    /**
     * Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
     * 
     */
    @Import(name="matcher", required=true)
    private Output<String> matcher;

    /**
     * @return Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
     * 
     */
    public Output<String> matcher() {
        return this.matcher;
    }

    /**
     * Pattern
     * 
     */
    @Import(name="pattern", required=true)
    private Output<String> pattern;

    /**
     * @return Pattern
     * 
     */
    public Output<String> pattern() {
        return this.pattern;
    }

    private RumAdvancedCorrelationArgs() {}

    private RumAdvancedCorrelationArgs(RumAdvancedCorrelationArgs $) {
        this.matcher = $.matcher;
        this.pattern = $.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RumAdvancedCorrelationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RumAdvancedCorrelationArgs $;

        public Builder() {
            $ = new RumAdvancedCorrelationArgs();
        }

        public Builder(RumAdvancedCorrelationArgs defaults) {
            $ = new RumAdvancedCorrelationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matcher Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
         * 
         * @return builder
         * 
         */
        public Builder matcher(Output<String> matcher) {
            $.matcher = matcher;
            return this;
        }

        /**
         * @param matcher Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
         * 
         * @return builder
         * 
         */
        public Builder matcher(String matcher) {
            return matcher(Output.of(matcher));
        }

        /**
         * @param pattern Pattern
         * 
         * @return builder
         * 
         */
        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        /**
         * @param pattern Pattern
         * 
         * @return builder
         * 
         */
        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public RumAdvancedCorrelationArgs build() {
            $.matcher = Objects.requireNonNull($.matcher, "expected parameter 'matcher' to be non-null");
            $.pattern = Objects.requireNonNull($.pattern, "expected parameter 'pattern' to be non-null");
            return $;
        }
    }

}
