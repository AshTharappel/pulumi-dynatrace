// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.QueueManagerAliasQueueAliasQueueArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueManagerAliasQueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueManagerAliasQueueArgs Empty = new QueueManagerAliasQueueArgs();

    /**
     * Alias queue definitions for queue manager
     * 
     */
    @Import(name="aliasQueues")
    private @Nullable Output<List<QueueManagerAliasQueueAliasQueueArgs>> aliasQueues;

    /**
     * @return Alias queue definitions for queue manager
     * 
     */
    public Optional<Output<List<QueueManagerAliasQueueAliasQueueArgs>>> aliasQueues() {
        return Optional.ofNullable(this.aliasQueues);
    }

    private QueueManagerAliasQueueArgs() {}

    private QueueManagerAliasQueueArgs(QueueManagerAliasQueueArgs $) {
        this.aliasQueues = $.aliasQueues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueManagerAliasQueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueManagerAliasQueueArgs $;

        public Builder() {
            $ = new QueueManagerAliasQueueArgs();
        }

        public Builder(QueueManagerAliasQueueArgs defaults) {
            $ = new QueueManagerAliasQueueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliasQueues Alias queue definitions for queue manager
         * 
         * @return builder
         * 
         */
        public Builder aliasQueues(@Nullable Output<List<QueueManagerAliasQueueAliasQueueArgs>> aliasQueues) {
            $.aliasQueues = aliasQueues;
            return this;
        }

        /**
         * @param aliasQueues Alias queue definitions for queue manager
         * 
         * @return builder
         * 
         */
        public Builder aliasQueues(List<QueueManagerAliasQueueAliasQueueArgs> aliasQueues) {
            return aliasQueues(Output.of(aliasQueues));
        }

        /**
         * @param aliasQueues Alias queue definitions for queue manager
         * 
         * @return builder
         * 
         */
        public Builder aliasQueues(QueueManagerAliasQueueAliasQueueArgs... aliasQueues) {
            return aliasQueues(List.of(aliasQueues));
        }

        public QueueManagerAliasQueueArgs build() {
            return $;
        }
    }

}
