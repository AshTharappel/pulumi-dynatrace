// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.RequestNamingPlaceholdersPlaceholderArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestNamingPlaceholdersArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestNamingPlaceholdersArgs Empty = new RequestNamingPlaceholdersArgs();

    @Import(name="placeholders")
    private @Nullable Output<List<RequestNamingPlaceholdersPlaceholderArgs>> placeholders;

    public Optional<Output<List<RequestNamingPlaceholdersPlaceholderArgs>>> placeholders() {
        return Optional.ofNullable(this.placeholders);
    }

    private RequestNamingPlaceholdersArgs() {}

    private RequestNamingPlaceholdersArgs(RequestNamingPlaceholdersArgs $) {
        this.placeholders = $.placeholders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestNamingPlaceholdersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestNamingPlaceholdersArgs $;

        public Builder() {
            $ = new RequestNamingPlaceholdersArgs();
        }

        public Builder(RequestNamingPlaceholdersArgs defaults) {
            $ = new RequestNamingPlaceholdersArgs(Objects.requireNonNull(defaults));
        }

        public Builder placeholders(@Nullable Output<List<RequestNamingPlaceholdersPlaceholderArgs>> placeholders) {
            $.placeholders = placeholders;
            return this;
        }

        public Builder placeholders(List<RequestNamingPlaceholdersPlaceholderArgs> placeholders) {
            return placeholders(Output.of(placeholders));
        }

        public Builder placeholders(RequestNamingPlaceholdersPlaceholderArgs... placeholders) {
            return placeholders(List.of(placeholders));
        }

        public RequestNamingPlaceholdersArgs build() {
            return $;
        }
    }

}
