// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseAnomaliesResponseTimeThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseAnomaliesResponseTimeThresholdsArgs Empty = new DatabaseAnomaliesResponseTimeThresholdsArgs();

    /**
     * Configuration for anomalies regarding load drops and spikes
     * 
     */
    @Import(name="load", required=true)
    private Output<String> load;

    /**
     * @return Configuration for anomalies regarding load drops and spikes
     * 
     */
    public Output<String> load() {
        return this.load;
    }

    @Import(name="milliseconds", required=true)
    private Output<Integer> milliseconds;

    public Output<Integer> milliseconds() {
        return this.milliseconds;
    }

    @Import(name="sensitivity", required=true)
    private Output<String> sensitivity;

    public Output<String> sensitivity() {
        return this.sensitivity;
    }

    @Import(name="slowestMilliseconds", required=true)
    private Output<Integer> slowestMilliseconds;

    public Output<Integer> slowestMilliseconds() {
        return this.slowestMilliseconds;
    }

    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private DatabaseAnomaliesResponseTimeThresholdsArgs() {}

    private DatabaseAnomaliesResponseTimeThresholdsArgs(DatabaseAnomaliesResponseTimeThresholdsArgs $) {
        this.load = $.load;
        this.milliseconds = $.milliseconds;
        this.sensitivity = $.sensitivity;
        this.slowestMilliseconds = $.slowestMilliseconds;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseAnomaliesResponseTimeThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseAnomaliesResponseTimeThresholdsArgs $;

        public Builder() {
            $ = new DatabaseAnomaliesResponseTimeThresholdsArgs();
        }

        public Builder(DatabaseAnomaliesResponseTimeThresholdsArgs defaults) {
            $ = new DatabaseAnomaliesResponseTimeThresholdsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param load Configuration for anomalies regarding load drops and spikes
         * 
         * @return builder
         * 
         */
        public Builder load(Output<String> load) {
            $.load = load;
            return this;
        }

        /**
         * @param load Configuration for anomalies regarding load drops and spikes
         * 
         * @return builder
         * 
         */
        public Builder load(String load) {
            return load(Output.of(load));
        }

        public Builder milliseconds(Output<Integer> milliseconds) {
            $.milliseconds = milliseconds;
            return this;
        }

        public Builder milliseconds(Integer milliseconds) {
            return milliseconds(Output.of(milliseconds));
        }

        public Builder sensitivity(Output<String> sensitivity) {
            $.sensitivity = sensitivity;
            return this;
        }

        public Builder sensitivity(String sensitivity) {
            return sensitivity(Output.of(sensitivity));
        }

        public Builder slowestMilliseconds(Output<Integer> slowestMilliseconds) {
            $.slowestMilliseconds = slowestMilliseconds;
            return this;
        }

        public Builder slowestMilliseconds(Integer slowestMilliseconds) {
            return slowestMilliseconds(Output.of(slowestMilliseconds));
        }

        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public DatabaseAnomaliesResponseTimeThresholdsArgs build() {
            $.load = Objects.requireNonNull($.load, "expected parameter 'load' to be non-null");
            $.milliseconds = Objects.requireNonNull($.milliseconds, "expected parameter 'milliseconds' to be non-null");
            $.sensitivity = Objects.requireNonNull($.sensitivity, "expected parameter 'sensitivity' to be non-null");
            $.slowestMilliseconds = Objects.requireNonNull($.slowestMilliseconds, "expected parameter 'slowestMilliseconds' to be non-null");
            return $;
        }
    }

}
