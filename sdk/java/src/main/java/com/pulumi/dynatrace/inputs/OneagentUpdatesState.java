// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.OneagentUpdatesMaintenanceWindowsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OneagentUpdatesState extends com.pulumi.resources.ResourceArgs {

    public static final OneagentUpdatesState Empty = new OneagentUpdatesState();

    /**
     * Maintenance windows
     * 
     */
    @Import(name="maintenanceWindows")
    private @Nullable Output<OneagentUpdatesMaintenanceWindowsArgs> maintenanceWindows;

    /**
     * @return Maintenance windows
     * 
     */
    public Optional<Output<OneagentUpdatesMaintenanceWindowsArgs>> maintenanceWindows() {
        return Optional.ofNullable(this.maintenanceWindows);
    }

    /**
     * Revision
     * 
     */
    @Import(name="revision")
    private @Nullable Output<String> revision;

    /**
     * @return Revision
     * 
     */
    public Optional<Output<String>> revision() {
        return Optional.ofNullable(this.revision);
    }

    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Target version
     * 
     */
    @Import(name="targetVersion")
    private @Nullable Output<String> targetVersion;

    /**
     * @return Target version
     * 
     */
    public Optional<Output<String>> targetVersion() {
        return Optional.ofNullable(this.targetVersion);
    }

    /**
     * Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
     * 
     */
    @Import(name="updateMode")
    private @Nullable Output<String> updateMode;

    /**
     * @return Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
     * 
     */
    public Optional<Output<String>> updateMode() {
        return Optional.ofNullable(this.updateMode);
    }

    private OneagentUpdatesState() {}

    private OneagentUpdatesState(OneagentUpdatesState $) {
        this.maintenanceWindows = $.maintenanceWindows;
        this.revision = $.revision;
        this.scope = $.scope;
        this.targetVersion = $.targetVersion;
        this.updateMode = $.updateMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OneagentUpdatesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OneagentUpdatesState $;

        public Builder() {
            $ = new OneagentUpdatesState();
        }

        public Builder(OneagentUpdatesState defaults) {
            $ = new OneagentUpdatesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param maintenanceWindows Maintenance windows
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(@Nullable Output<OneagentUpdatesMaintenanceWindowsArgs> maintenanceWindows) {
            $.maintenanceWindows = maintenanceWindows;
            return this;
        }

        /**
         * @param maintenanceWindows Maintenance windows
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(OneagentUpdatesMaintenanceWindowsArgs maintenanceWindows) {
            return maintenanceWindows(Output.of(maintenanceWindows));
        }

        /**
         * @param revision Revision
         * 
         * @return builder
         * 
         */
        public Builder revision(@Nullable Output<String> revision) {
            $.revision = revision;
            return this;
        }

        /**
         * @param revision Revision
         * 
         * @return builder
         * 
         */
        public Builder revision(String revision) {
            return revision(Output.of(revision));
        }

        /**
         * @param scope The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param targetVersion Target version
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(@Nullable Output<String> targetVersion) {
            $.targetVersion = targetVersion;
            return this;
        }

        /**
         * @param targetVersion Target version
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(String targetVersion) {
            return targetVersion(Output.of(targetVersion));
        }

        /**
         * @param updateMode Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
         * 
         * @return builder
         * 
         */
        public Builder updateMode(@Nullable Output<String> updateMode) {
            $.updateMode = updateMode;
            return this;
        }

        /**
         * @param updateMode Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
         * 
         * @return builder
         * 
         */
        public Builder updateMode(String updateMode) {
            return updateMode(Output.of(updateMode));
        }

        public OneagentUpdatesState build() {
            return $;
        }
    }

}
