// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSyntheticLocationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSyntheticLocationPlainArgs Empty = new GetSyntheticLocationPlainArgs();

    /**
     * The cloud provider where the location is hosted.
     * 
     */
    @Import(name="cloudPlatform")
    private @Nullable String cloudPlatform;

    /**
     * @return The cloud provider where the location is hosted.
     * 
     */
    public Optional<String> cloudPlatform() {
        return Optional.ofNullable(this.cloudPlatform);
    }

    @Import(name="entityId")
    private @Nullable String entityId;

    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    @Import(name="ips")
    private @Nullable List<String> ips;

    public Optional<List<String>> ips() {
        return Optional.ofNullable(this.ips);
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="stage")
    private @Nullable String stage;

    public Optional<String> stage() {
        return Optional.ofNullable(this.stage);
    }

    @Import(name="status")
    private @Nullable String status;

    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetSyntheticLocationPlainArgs() {}

    private GetSyntheticLocationPlainArgs(GetSyntheticLocationPlainArgs $) {
        this.cloudPlatform = $.cloudPlatform;
        this.entityId = $.entityId;
        this.ips = $.ips;
        this.name = $.name;
        this.stage = $.stage;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSyntheticLocationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSyntheticLocationPlainArgs $;

        public Builder() {
            $ = new GetSyntheticLocationPlainArgs();
        }

        public Builder(GetSyntheticLocationPlainArgs defaults) {
            $ = new GetSyntheticLocationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudPlatform The cloud provider where the location is hosted.
         * 
         * @return builder
         * 
         */
        public Builder cloudPlatform(@Nullable String cloudPlatform) {
            $.cloudPlatform = cloudPlatform;
            return this;
        }

        public Builder entityId(@Nullable String entityId) {
            $.entityId = entityId;
            return this;
        }

        public Builder ips(@Nullable List<String> ips) {
            $.ips = ips;
            return this;
        }

        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder stage(@Nullable String stage) {
            $.stage = stage;
            return this;
        }

        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetSyntheticLocationPlainArgs build() {
            return $;
        }
    }

}
