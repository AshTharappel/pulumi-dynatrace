// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrequentIssuesState extends com.pulumi.resources.ResourceArgs {

    public static final FrequentIssuesState Empty = new FrequentIssuesState();

    /**
     * Detect frequent issues within applications, enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="detectApps")
    private @Nullable Output<Boolean> detectApps;

    /**
     * @return Detect frequent issues within applications, enabled (`true`) or disabled (`false`)
     * 
     */
    public Optional<Output<Boolean>> detectApps() {
        return Optional.ofNullable(this.detectApps);
    }

    /**
     * Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="detectInfra")
    private @Nullable Output<Boolean> detectInfra;

    /**
     * @return Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)
     * 
     */
    public Optional<Output<Boolean>> detectInfra() {
        return Optional.ofNullable(this.detectInfra);
    }

    /**
     * Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="detectTxn")
    private @Nullable Output<Boolean> detectTxn;

    /**
     * @return Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)
     * 
     */
    public Optional<Output<Boolean>> detectTxn() {
        return Optional.ofNullable(this.detectTxn);
    }

    private FrequentIssuesState() {}

    private FrequentIssuesState(FrequentIssuesState $) {
        this.detectApps = $.detectApps;
        this.detectInfra = $.detectInfra;
        this.detectTxn = $.detectTxn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrequentIssuesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrequentIssuesState $;

        public Builder() {
            $ = new FrequentIssuesState();
        }

        public Builder(FrequentIssuesState defaults) {
            $ = new FrequentIssuesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param detectApps Detect frequent issues within applications, enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder detectApps(@Nullable Output<Boolean> detectApps) {
            $.detectApps = detectApps;
            return this;
        }

        /**
         * @param detectApps Detect frequent issues within applications, enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder detectApps(Boolean detectApps) {
            return detectApps(Output.of(detectApps));
        }

        /**
         * @param detectInfra Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder detectInfra(@Nullable Output<Boolean> detectInfra) {
            $.detectInfra = detectInfra;
            return this;
        }

        /**
         * @param detectInfra Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder detectInfra(Boolean detectInfra) {
            return detectInfra(Output.of(detectInfra));
        }

        /**
         * @param detectTxn Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder detectTxn(@Nullable Output<Boolean> detectTxn) {
            $.detectTxn = detectTxn;
            return this;
        }

        /**
         * @param detectTxn Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder detectTxn(Boolean detectTxn) {
            return detectTxn(Output.of(detectTxn));
        }

        public FrequentIssuesState build() {
            return $;
        }
    }

}
