// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto {
    private Double baselineViolationPercentage;
    private Double concurrentUsers;
    private String sensitivity;

    private MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto() {}
    public Double baselineViolationPercentage() {
        return this.baselineViolationPercentage;
    }
    public Double concurrentUsers() {
        return this.concurrentUsers;
    }
    public String sensitivity() {
        return this.sensitivity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double baselineViolationPercentage;
        private Double concurrentUsers;
        private String sensitivity;
        public Builder() {}
        public Builder(MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineViolationPercentage = defaults.baselineViolationPercentage;
    	      this.concurrentUsers = defaults.concurrentUsers;
    	      this.sensitivity = defaults.sensitivity;
        }

        @CustomType.Setter
        public Builder baselineViolationPercentage(Double baselineViolationPercentage) {
            this.baselineViolationPercentage = Objects.requireNonNull(baselineViolationPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder concurrentUsers(Double concurrentUsers) {
            this.concurrentUsers = Objects.requireNonNull(concurrentUsers);
            return this;
        }
        @CustomType.Setter
        public Builder sensitivity(String sensitivity) {
            this.sensitivity = Objects.requireNonNull(sensitivity);
            return this;
        }
        public MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto build() {
            final var o = new MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto();
            o.baselineViolationPercentage = baselineViolationPercentage;
            o.concurrentUsers = concurrentUsers;
            o.sensitivity = sensitivity;
            return o;
        }
    }
}
