// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackArgs;
import com.pulumi.dynatrace.inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs;
import java.util.Objects;


public final class ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs Empty = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs();

    @Import(name="playback", required=true)
    private Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackArgs> playback;

    public Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackArgs> playback() {
        return this.playback;
    }

    @Import(name="recording", required=true)
    private Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs> recording;

    public Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs> recording() {
        return this.recording;
    }

    private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs() {}

    private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs $) {
        this.playback = $.playback;
        this.recording = $.recording;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs $;

        public Builder() {
            $ = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs();
        }

        public Builder(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs defaults) {
            $ = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder playback(Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackArgs> playback) {
            $.playback = playback;
            return this;
        }

        public Builder playback(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackArgs playback) {
            return playback(Output.of(playback));
        }

        public Builder recording(Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs> recording) {
            $.recording = recording;
            return this;
        }

        public Builder recording(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs recording) {
            return recording(Output.of(recording));
        }

        public ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsArgs build() {
            $.playback = Objects.requireNonNull($.playback, "expected parameter 'playback' to be non-null");
            $.recording = Objects.requireNonNull($.recording, "expected parameter 'recording' to be non-null");
            return $;
        }
    }

}
