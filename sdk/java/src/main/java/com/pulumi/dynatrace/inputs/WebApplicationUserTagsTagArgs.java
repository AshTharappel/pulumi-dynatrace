// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationUserTagsTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationUserTagsTagArgs Empty = new WebApplicationUserTagsTagArgs();

    @Import(name="cleanupRule")
    private @Nullable Output<String> cleanupRule;

    public Optional<Output<String>> cleanupRule() {
        return Optional.ofNullable(this.cleanupRule);
    }

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<Integer> id;

    /**
     * @return The ID of this resource.
     * 
     */
    public Optional<Output<Integer>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="ignoreCase")
    private @Nullable Output<Boolean> ignoreCase;

    public Optional<Output<Boolean>> ignoreCase() {
        return Optional.ofNullable(this.ignoreCase);
    }

    @Import(name="metadataId")
    private @Nullable Output<Integer> metadataId;

    public Optional<Output<Integer>> metadataId() {
        return Optional.ofNullable(this.metadataId);
    }

    @Import(name="serverSideRequestAttribute")
    private @Nullable Output<String> serverSideRequestAttribute;

    public Optional<Output<String>> serverSideRequestAttribute() {
        return Optional.ofNullable(this.serverSideRequestAttribute);
    }

    @Import(name="uniqueId")
    private @Nullable Output<Integer> uniqueId;

    public Optional<Output<Integer>> uniqueId() {
        return Optional.ofNullable(this.uniqueId);
    }

    private WebApplicationUserTagsTagArgs() {}

    private WebApplicationUserTagsTagArgs(WebApplicationUserTagsTagArgs $) {
        this.cleanupRule = $.cleanupRule;
        this.id = $.id;
        this.ignoreCase = $.ignoreCase;
        this.metadataId = $.metadataId;
        this.serverSideRequestAttribute = $.serverSideRequestAttribute;
        this.uniqueId = $.uniqueId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationUserTagsTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationUserTagsTagArgs $;

        public Builder() {
            $ = new WebApplicationUserTagsTagArgs();
        }

        public Builder(WebApplicationUserTagsTagArgs defaults) {
            $ = new WebApplicationUserTagsTagArgs(Objects.requireNonNull(defaults));
        }

        public Builder cleanupRule(@Nullable Output<String> cleanupRule) {
            $.cleanupRule = cleanupRule;
            return this;
        }

        public Builder cleanupRule(String cleanupRule) {
            return cleanupRule(Output.of(cleanupRule));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        public Builder ignoreCase(@Nullable Output<Boolean> ignoreCase) {
            $.ignoreCase = ignoreCase;
            return this;
        }

        public Builder ignoreCase(Boolean ignoreCase) {
            return ignoreCase(Output.of(ignoreCase));
        }

        public Builder metadataId(@Nullable Output<Integer> metadataId) {
            $.metadataId = metadataId;
            return this;
        }

        public Builder metadataId(Integer metadataId) {
            return metadataId(Output.of(metadataId));
        }

        public Builder serverSideRequestAttribute(@Nullable Output<String> serverSideRequestAttribute) {
            $.serverSideRequestAttribute = serverSideRequestAttribute;
            return this;
        }

        public Builder serverSideRequestAttribute(String serverSideRequestAttribute) {
            return serverSideRequestAttribute(Output.of(serverSideRequestAttribute));
        }

        public Builder uniqueId(@Nullable Output<Integer> uniqueId) {
            $.uniqueId = uniqueId;
            return this;
        }

        public Builder uniqueId(Integer uniqueId) {
            return uniqueId(Output.of(uniqueId));
        }

        public WebApplicationUserTagsTagArgs build() {
            return $;
        }
    }

}
