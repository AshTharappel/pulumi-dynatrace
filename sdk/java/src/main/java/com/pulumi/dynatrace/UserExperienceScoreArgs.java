// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class UserExperienceScoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserExperienceScoreArgs Empty = new UserExperienceScoreArgs();

    /**
     * If last user action in a session is classified as Frustrating, classify the entire session as Frustrating
     * 
     */
    @Import(name="considerLastAction", required=true)
    private Output<Boolean> considerLastAction;

    /**
     * @return If last user action in a session is classified as Frustrating, classify the entire session as Frustrating
     * 
     */
    public Output<Boolean> considerLastAction() {
        return this.considerLastAction;
    }

    /**
     * Consider rage clicks / rage taps in score calculation
     * 
     */
    @Import(name="considerRageClick", required=true)
    private Output<Boolean> considerRageClick;

    /**
     * @return Consider rage clicks / rage taps in score calculation
     * 
     */
    public Output<Boolean> considerRageClick() {
        return this.considerRageClick;
    }

    /**
     * User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.
     * 
     */
    @Import(name="maxFrustratedUserActionsThreshold", required=true)
    private Output<Integer> maxFrustratedUserActionsThreshold;

    /**
     * @return User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.
     * 
     */
    public Output<Integer> maxFrustratedUserActionsThreshold() {
        return this.maxFrustratedUserActionsThreshold;
    }

    /**
     * User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.
     * 
     */
    @Import(name="minSatisfiedUserActionsThreshold", required=true)
    private Output<Integer> minSatisfiedUserActionsThreshold;

    /**
     * @return User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.
     * 
     */
    public Output<Integer> minSatisfiedUserActionsThreshold() {
        return this.minSatisfiedUserActionsThreshold;
    }

    private UserExperienceScoreArgs() {}

    private UserExperienceScoreArgs(UserExperienceScoreArgs $) {
        this.considerLastAction = $.considerLastAction;
        this.considerRageClick = $.considerRageClick;
        this.maxFrustratedUserActionsThreshold = $.maxFrustratedUserActionsThreshold;
        this.minSatisfiedUserActionsThreshold = $.minSatisfiedUserActionsThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserExperienceScoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserExperienceScoreArgs $;

        public Builder() {
            $ = new UserExperienceScoreArgs();
        }

        public Builder(UserExperienceScoreArgs defaults) {
            $ = new UserExperienceScoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param considerLastAction If last user action in a session is classified as Frustrating, classify the entire session as Frustrating
         * 
         * @return builder
         * 
         */
        public Builder considerLastAction(Output<Boolean> considerLastAction) {
            $.considerLastAction = considerLastAction;
            return this;
        }

        /**
         * @param considerLastAction If last user action in a session is classified as Frustrating, classify the entire session as Frustrating
         * 
         * @return builder
         * 
         */
        public Builder considerLastAction(Boolean considerLastAction) {
            return considerLastAction(Output.of(considerLastAction));
        }

        /**
         * @param considerRageClick Consider rage clicks / rage taps in score calculation
         * 
         * @return builder
         * 
         */
        public Builder considerRageClick(Output<Boolean> considerRageClick) {
            $.considerRageClick = considerRageClick;
            return this;
        }

        /**
         * @param considerRageClick Consider rage clicks / rage taps in score calculation
         * 
         * @return builder
         * 
         */
        public Builder considerRageClick(Boolean considerRageClick) {
            return considerRageClick(Output.of(considerRageClick));
        }

        /**
         * @param maxFrustratedUserActionsThreshold User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.
         * 
         * @return builder
         * 
         */
        public Builder maxFrustratedUserActionsThreshold(Output<Integer> maxFrustratedUserActionsThreshold) {
            $.maxFrustratedUserActionsThreshold = maxFrustratedUserActionsThreshold;
            return this;
        }

        /**
         * @param maxFrustratedUserActionsThreshold User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.
         * 
         * @return builder
         * 
         */
        public Builder maxFrustratedUserActionsThreshold(Integer maxFrustratedUserActionsThreshold) {
            return maxFrustratedUserActionsThreshold(Output.of(maxFrustratedUserActionsThreshold));
        }

        /**
         * @param minSatisfiedUserActionsThreshold User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.
         * 
         * @return builder
         * 
         */
        public Builder minSatisfiedUserActionsThreshold(Output<Integer> minSatisfiedUserActionsThreshold) {
            $.minSatisfiedUserActionsThreshold = minSatisfiedUserActionsThreshold;
            return this;
        }

        /**
         * @param minSatisfiedUserActionsThreshold User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.
         * 
         * @return builder
         * 
         */
        public Builder minSatisfiedUserActionsThreshold(Integer minSatisfiedUserActionsThreshold) {
            return minSatisfiedUserActionsThreshold(Output.of(minSatisfiedUserActionsThreshold));
        }

        public UserExperienceScoreArgs build() {
            $.considerLastAction = Objects.requireNonNull($.considerLastAction, "expected parameter 'considerLastAction' to be non-null");
            $.considerRageClick = Objects.requireNonNull($.considerRageClick, "expected parameter 'considerRageClick' to be non-null");
            $.maxFrustratedUserActionsThreshold = Objects.requireNonNull($.maxFrustratedUserActionsThreshold, "expected parameter 'maxFrustratedUserActionsThreshold' to be non-null");
            $.minSatisfiedUserActionsThreshold = Objects.requireNonNull($.minSatisfiedUserActionsThreshold, "expected parameter 'minSatisfiedUserActionsThreshold' to be non-null");
            return $;
        }
    }

}
