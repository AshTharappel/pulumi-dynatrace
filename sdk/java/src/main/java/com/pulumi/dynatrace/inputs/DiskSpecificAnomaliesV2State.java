// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.DiskSpecificAnomaliesV2DiskLowInodesDetectionArgs;
import com.pulumi.dynatrace.inputs.DiskSpecificAnomaliesV2DiskLowSpaceDetectionArgs;
import com.pulumi.dynatrace.inputs.DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiskSpecificAnomaliesV2State extends com.pulumi.resources.ResourceArgs {

    public static final DiskSpecificAnomaliesV2State Empty = new DiskSpecificAnomaliesV2State();

    /**
     * The id for the disk anomaly detection
     * 
     */
    @Import(name="diskId")
    private @Nullable Output<String> diskId;

    /**
     * @return The id for the disk anomaly detection
     * 
     */
    public Optional<Output<String>> diskId() {
        return Optional.ofNullable(this.diskId);
    }

    /**
     * no documentation available
     * 
     */
    @Import(name="diskLowInodesDetection")
    private @Nullable Output<DiskSpecificAnomaliesV2DiskLowInodesDetectionArgs> diskLowInodesDetection;

    /**
     * @return no documentation available
     * 
     */
    public Optional<Output<DiskSpecificAnomaliesV2DiskLowInodesDetectionArgs>> diskLowInodesDetection() {
        return Optional.ofNullable(this.diskLowInodesDetection);
    }

    /**
     * no documentation available
     * 
     */
    @Import(name="diskLowSpaceDetection")
    private @Nullable Output<DiskSpecificAnomaliesV2DiskLowSpaceDetectionArgs> diskLowSpaceDetection;

    /**
     * @return no documentation available
     * 
     */
    public Optional<Output<DiskSpecificAnomaliesV2DiskLowSpaceDetectionArgs>> diskLowSpaceDetection() {
        return Optional.ofNullable(this.diskLowSpaceDetection);
    }

    /**
     * no documentation available
     * 
     */
    @Import(name="diskSlowWritesAndReadsDetection")
    private @Nullable Output<DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionArgs> diskSlowWritesAndReadsDetection;

    /**
     * @return no documentation available
     * 
     */
    public Optional<Output<DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionArgs>> diskSlowWritesAndReadsDetection() {
        return Optional.ofNullable(this.diskSlowWritesAndReadsDetection);
    }

    /**
     * Override low disk space detection settings
     * 
     */
    @Import(name="overrideDiskLowSpaceDetection")
    private @Nullable Output<Boolean> overrideDiskLowSpaceDetection;

    /**
     * @return Override low disk space detection settings
     * 
     */
    public Optional<Output<Boolean>> overrideDiskLowSpaceDetection() {
        return Optional.ofNullable(this.overrideDiskLowSpaceDetection);
    }

    /**
     * Override low inodes detection settings
     * 
     */
    @Import(name="overrideLowInodesDetection")
    private @Nullable Output<Boolean> overrideLowInodesDetection;

    /**
     * @return Override low inodes detection settings
     * 
     */
    public Optional<Output<Boolean>> overrideLowInodesDetection() {
        return Optional.ofNullable(this.overrideLowInodesDetection);
    }

    /**
     * Override slow writes and reads detection settings
     * 
     */
    @Import(name="overrideSlowWritesAndReadsDetection")
    private @Nullable Output<Boolean> overrideSlowWritesAndReadsDetection;

    /**
     * @return Override slow writes and reads detection settings
     * 
     */
    public Optional<Output<Boolean>> overrideSlowWritesAndReadsDetection() {
        return Optional.ofNullable(this.overrideSlowWritesAndReadsDetection);
    }

    private DiskSpecificAnomaliesV2State() {}

    private DiskSpecificAnomaliesV2State(DiskSpecificAnomaliesV2State $) {
        this.diskId = $.diskId;
        this.diskLowInodesDetection = $.diskLowInodesDetection;
        this.diskLowSpaceDetection = $.diskLowSpaceDetection;
        this.diskSlowWritesAndReadsDetection = $.diskSlowWritesAndReadsDetection;
        this.overrideDiskLowSpaceDetection = $.overrideDiskLowSpaceDetection;
        this.overrideLowInodesDetection = $.overrideLowInodesDetection;
        this.overrideSlowWritesAndReadsDetection = $.overrideSlowWritesAndReadsDetection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskSpecificAnomaliesV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskSpecificAnomaliesV2State $;

        public Builder() {
            $ = new DiskSpecificAnomaliesV2State();
        }

        public Builder(DiskSpecificAnomaliesV2State defaults) {
            $ = new DiskSpecificAnomaliesV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskId The id for the disk anomaly detection
         * 
         * @return builder
         * 
         */
        public Builder diskId(@Nullable Output<String> diskId) {
            $.diskId = diskId;
            return this;
        }

        /**
         * @param diskId The id for the disk anomaly detection
         * 
         * @return builder
         * 
         */
        public Builder diskId(String diskId) {
            return diskId(Output.of(diskId));
        }

        /**
         * @param diskLowInodesDetection no documentation available
         * 
         * @return builder
         * 
         */
        public Builder diskLowInodesDetection(@Nullable Output<DiskSpecificAnomaliesV2DiskLowInodesDetectionArgs> diskLowInodesDetection) {
            $.diskLowInodesDetection = diskLowInodesDetection;
            return this;
        }

        /**
         * @param diskLowInodesDetection no documentation available
         * 
         * @return builder
         * 
         */
        public Builder diskLowInodesDetection(DiskSpecificAnomaliesV2DiskLowInodesDetectionArgs diskLowInodesDetection) {
            return diskLowInodesDetection(Output.of(diskLowInodesDetection));
        }

        /**
         * @param diskLowSpaceDetection no documentation available
         * 
         * @return builder
         * 
         */
        public Builder diskLowSpaceDetection(@Nullable Output<DiskSpecificAnomaliesV2DiskLowSpaceDetectionArgs> diskLowSpaceDetection) {
            $.diskLowSpaceDetection = diskLowSpaceDetection;
            return this;
        }

        /**
         * @param diskLowSpaceDetection no documentation available
         * 
         * @return builder
         * 
         */
        public Builder diskLowSpaceDetection(DiskSpecificAnomaliesV2DiskLowSpaceDetectionArgs diskLowSpaceDetection) {
            return diskLowSpaceDetection(Output.of(diskLowSpaceDetection));
        }

        /**
         * @param diskSlowWritesAndReadsDetection no documentation available
         * 
         * @return builder
         * 
         */
        public Builder diskSlowWritesAndReadsDetection(@Nullable Output<DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionArgs> diskSlowWritesAndReadsDetection) {
            $.diskSlowWritesAndReadsDetection = diskSlowWritesAndReadsDetection;
            return this;
        }

        /**
         * @param diskSlowWritesAndReadsDetection no documentation available
         * 
         * @return builder
         * 
         */
        public Builder diskSlowWritesAndReadsDetection(DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionArgs diskSlowWritesAndReadsDetection) {
            return diskSlowWritesAndReadsDetection(Output.of(diskSlowWritesAndReadsDetection));
        }

        /**
         * @param overrideDiskLowSpaceDetection Override low disk space detection settings
         * 
         * @return builder
         * 
         */
        public Builder overrideDiskLowSpaceDetection(@Nullable Output<Boolean> overrideDiskLowSpaceDetection) {
            $.overrideDiskLowSpaceDetection = overrideDiskLowSpaceDetection;
            return this;
        }

        /**
         * @param overrideDiskLowSpaceDetection Override low disk space detection settings
         * 
         * @return builder
         * 
         */
        public Builder overrideDiskLowSpaceDetection(Boolean overrideDiskLowSpaceDetection) {
            return overrideDiskLowSpaceDetection(Output.of(overrideDiskLowSpaceDetection));
        }

        /**
         * @param overrideLowInodesDetection Override low inodes detection settings
         * 
         * @return builder
         * 
         */
        public Builder overrideLowInodesDetection(@Nullable Output<Boolean> overrideLowInodesDetection) {
            $.overrideLowInodesDetection = overrideLowInodesDetection;
            return this;
        }

        /**
         * @param overrideLowInodesDetection Override low inodes detection settings
         * 
         * @return builder
         * 
         */
        public Builder overrideLowInodesDetection(Boolean overrideLowInodesDetection) {
            return overrideLowInodesDetection(Output.of(overrideLowInodesDetection));
        }

        /**
         * @param overrideSlowWritesAndReadsDetection Override slow writes and reads detection settings
         * 
         * @return builder
         * 
         */
        public Builder overrideSlowWritesAndReadsDetection(@Nullable Output<Boolean> overrideSlowWritesAndReadsDetection) {
            $.overrideSlowWritesAndReadsDetection = overrideSlowWritesAndReadsDetection;
            return this;
        }

        /**
         * @param overrideSlowWritesAndReadsDetection Override slow writes and reads detection settings
         * 
         * @return builder
         * 
         */
        public Builder overrideSlowWritesAndReadsDetection(Boolean overrideSlowWritesAndReadsDetection) {
            return overrideSlowWritesAndReadsDetection(Output.of(overrideSlowWritesAndReadsDetection));
        }

        public DiskSpecificAnomaliesV2State build() {
            return $;
        }
    }

}
