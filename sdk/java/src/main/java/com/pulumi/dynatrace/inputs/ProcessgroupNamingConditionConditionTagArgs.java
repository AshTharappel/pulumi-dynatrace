// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ProcessgroupNamingConditionConditionTagValueArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProcessgroupNamingConditionConditionTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProcessgroupNamingConditionConditionTagArgs Empty = new ProcessgroupNamingConditionConditionTagArgs();

    @Import(name="negate")
    private @Nullable Output<Boolean> negate;

    public Optional<Output<Boolean>> negate() {
        return Optional.ofNullable(this.negate);
    }

    @Import(name="operator", required=true)
    private Output<String> operator;

    public Output<String> operator() {
        return this.operator;
    }

    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    @Import(name="value")
    private @Nullable Output<ProcessgroupNamingConditionConditionTagValueArgs> value;

    public Optional<Output<ProcessgroupNamingConditionConditionTagValueArgs>> value() {
        return Optional.ofNullable(this.value);
    }

    private ProcessgroupNamingConditionConditionTagArgs() {}

    private ProcessgroupNamingConditionConditionTagArgs(ProcessgroupNamingConditionConditionTagArgs $) {
        this.negate = $.negate;
        this.operator = $.operator;
        this.unknowns = $.unknowns;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProcessgroupNamingConditionConditionTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProcessgroupNamingConditionConditionTagArgs $;

        public Builder() {
            $ = new ProcessgroupNamingConditionConditionTagArgs();
        }

        public Builder(ProcessgroupNamingConditionConditionTagArgs defaults) {
            $ = new ProcessgroupNamingConditionConditionTagArgs(Objects.requireNonNull(defaults));
        }

        public Builder negate(@Nullable Output<Boolean> negate) {
            $.negate = negate;
            return this;
        }

        public Builder negate(Boolean negate) {
            return negate(Output.of(negate));
        }

        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public Builder value(@Nullable Output<ProcessgroupNamingConditionConditionTagValueArgs> value) {
            $.value = value;
            return this;
        }

        public Builder value(ProcessgroupNamingConditionConditionTagValueArgs value) {
            return value(Output.of(value));
        }

        public ProcessgroupNamingConditionConditionTagArgs build() {
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            return $;
        }
    }

}
