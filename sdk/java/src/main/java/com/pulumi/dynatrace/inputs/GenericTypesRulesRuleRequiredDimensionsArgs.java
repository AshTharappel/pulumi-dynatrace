// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GenericTypesRulesRuleRequiredDimensionsRequiredDimensionArgs;
import java.util.List;
import java.util.Objects;


public final class GenericTypesRulesRuleRequiredDimensionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericTypesRulesRuleRequiredDimensionsArgs Empty = new GenericTypesRulesRuleRequiredDimensionsArgs();

    @Import(name="requiredDimensions", required=true)
    private Output<List<GenericTypesRulesRuleRequiredDimensionsRequiredDimensionArgs>> requiredDimensions;

    public Output<List<GenericTypesRulesRuleRequiredDimensionsRequiredDimensionArgs>> requiredDimensions() {
        return this.requiredDimensions;
    }

    private GenericTypesRulesRuleRequiredDimensionsArgs() {}

    private GenericTypesRulesRuleRequiredDimensionsArgs(GenericTypesRulesRuleRequiredDimensionsArgs $) {
        this.requiredDimensions = $.requiredDimensions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericTypesRulesRuleRequiredDimensionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericTypesRulesRuleRequiredDimensionsArgs $;

        public Builder() {
            $ = new GenericTypesRulesRuleRequiredDimensionsArgs();
        }

        public Builder(GenericTypesRulesRuleRequiredDimensionsArgs defaults) {
            $ = new GenericTypesRulesRuleRequiredDimensionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder requiredDimensions(Output<List<GenericTypesRulesRuleRequiredDimensionsRequiredDimensionArgs>> requiredDimensions) {
            $.requiredDimensions = requiredDimensions;
            return this;
        }

        public Builder requiredDimensions(List<GenericTypesRulesRuleRequiredDimensionsRequiredDimensionArgs> requiredDimensions) {
            return requiredDimensions(Output.of(requiredDimensions));
        }

        public Builder requiredDimensions(GenericTypesRulesRuleRequiredDimensionsRequiredDimensionArgs... requiredDimensions) {
            return requiredDimensions(List.of(requiredDimensions));
        }

        public GenericTypesRulesRuleRequiredDimensionsArgs build() {
            $.requiredDimensions = Objects.requireNonNull($.requiredDimensions, "expected parameter 'requiredDimensions' to be non-null");
            return $;
        }
    }

}
