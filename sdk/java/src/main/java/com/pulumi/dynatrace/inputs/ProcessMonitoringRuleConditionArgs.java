// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProcessMonitoringRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProcessMonitoringRuleConditionArgs Empty = new ProcessMonitoringRuleConditionArgs();

    /**
     * supported only with OneAgent 1.167+
     * 
     */
    @Import(name="envVar")
    private @Nullable Output<String> envVar;

    /**
     * @return supported only with OneAgent 1.167+
     * 
     */
    public Optional<Output<String>> envVar() {
        return Optional.ofNullable(this.envVar);
    }

    /**
     * Condition target
     * 
     */
    @Import(name="item", required=true)
    private Output<String> item;

    /**
     * @return Condition target
     * 
     */
    public Output<String> item() {
        return this.item;
    }

    /**
     * Condition operator
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Condition operator
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * Condition value
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Condition value
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private ProcessMonitoringRuleConditionArgs() {}

    private ProcessMonitoringRuleConditionArgs(ProcessMonitoringRuleConditionArgs $) {
        this.envVar = $.envVar;
        this.item = $.item;
        this.operator = $.operator;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProcessMonitoringRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProcessMonitoringRuleConditionArgs $;

        public Builder() {
            $ = new ProcessMonitoringRuleConditionArgs();
        }

        public Builder(ProcessMonitoringRuleConditionArgs defaults) {
            $ = new ProcessMonitoringRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param envVar supported only with OneAgent 1.167+
         * 
         * @return builder
         * 
         */
        public Builder envVar(@Nullable Output<String> envVar) {
            $.envVar = envVar;
            return this;
        }

        /**
         * @param envVar supported only with OneAgent 1.167+
         * 
         * @return builder
         * 
         */
        public Builder envVar(String envVar) {
            return envVar(Output.of(envVar));
        }

        /**
         * @param item Condition target
         * 
         * @return builder
         * 
         */
        public Builder item(Output<String> item) {
            $.item = item;
            return this;
        }

        /**
         * @param item Condition target
         * 
         * @return builder
         * 
         */
        public Builder item(String item) {
            return item(Output.of(item));
        }

        /**
         * @param operator Condition operator
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Condition operator
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param value Condition value
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Condition value
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ProcessMonitoringRuleConditionArgs build() {
            $.item = Objects.requireNonNull($.item, "expected parameter 'item' to be non-null");
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            return $;
        }
    }

}
