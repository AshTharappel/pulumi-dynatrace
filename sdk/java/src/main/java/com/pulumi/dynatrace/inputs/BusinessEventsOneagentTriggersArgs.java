// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BusinessEventsOneagentTriggersTriggerArgs;
import java.util.List;
import java.util.Objects;


public final class BusinessEventsOneagentTriggersArgs extends com.pulumi.resources.ResourceArgs {

    public static final BusinessEventsOneagentTriggersArgs Empty = new BusinessEventsOneagentTriggersArgs();

    @Import(name="triggers", required=true)
    private Output<List<BusinessEventsOneagentTriggersTriggerArgs>> triggers;

    public Output<List<BusinessEventsOneagentTriggersTriggerArgs>> triggers() {
        return this.triggers;
    }

    private BusinessEventsOneagentTriggersArgs() {}

    private BusinessEventsOneagentTriggersArgs(BusinessEventsOneagentTriggersArgs $) {
        this.triggers = $.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BusinessEventsOneagentTriggersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BusinessEventsOneagentTriggersArgs $;

        public Builder() {
            $ = new BusinessEventsOneagentTriggersArgs();
        }

        public Builder(BusinessEventsOneagentTriggersArgs defaults) {
            $ = new BusinessEventsOneagentTriggersArgs(Objects.requireNonNull(defaults));
        }

        public Builder triggers(Output<List<BusinessEventsOneagentTriggersTriggerArgs>> triggers) {
            $.triggers = triggers;
            return this;
        }

        public Builder triggers(List<BusinessEventsOneagentTriggersTriggerArgs> triggers) {
            return triggers(Output.of(triggers));
        }

        public Builder triggers(BusinessEventsOneagentTriggersTriggerArgs... triggers) {
            return triggers(List.of(triggers));
        }

        public BusinessEventsOneagentTriggersArgs build() {
            $.triggers = Objects.requireNonNull($.triggers, "expected parameter 'triggers' to be non-null");
            return $;
        }
    }

}
