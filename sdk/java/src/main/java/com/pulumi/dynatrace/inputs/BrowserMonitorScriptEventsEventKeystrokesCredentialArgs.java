// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class BrowserMonitorScriptEventsEventKeystrokesCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptEventsEventKeystrokesCredentialArgs Empty = new BrowserMonitorScriptEventsEventKeystrokesCredentialArgs();

    @Import(name="field", required=true)
    private Output<String> field;

    public Output<String> field() {
        return this.field;
    }

    @Import(name="vaultId", required=true)
    private Output<String> vaultId;

    public Output<String> vaultId() {
        return this.vaultId;
    }

    private BrowserMonitorScriptEventsEventKeystrokesCredentialArgs() {}

    private BrowserMonitorScriptEventsEventKeystrokesCredentialArgs(BrowserMonitorScriptEventsEventKeystrokesCredentialArgs $) {
        this.field = $.field;
        this.vaultId = $.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptEventsEventKeystrokesCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptEventsEventKeystrokesCredentialArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptEventsEventKeystrokesCredentialArgs();
        }

        public Builder(BrowserMonitorScriptEventsEventKeystrokesCredentialArgs defaults) {
            $ = new BrowserMonitorScriptEventsEventKeystrokesCredentialArgs(Objects.requireNonNull(defaults));
        }

        public Builder field(Output<String> field) {
            $.field = field;
            return this;
        }

        public Builder field(String field) {
            return field(Output.of(field));
        }

        public Builder vaultId(Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        public BrowserMonitorScriptEventsEventKeystrokesCredentialArgs build() {
            $.field = Objects.requireNonNull($.field, "expected parameter 'field' to be non-null");
            $.vaultId = Objects.requireNonNull($.vaultId, "expected parameter 'vaultId' to be non-null");
            return $;
        }
    }

}
