// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestAttributeDataSourceValueProcessingExtractSubstringArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestAttributeDataSourceValueProcessingExtractSubstringArgs Empty = new RequestAttributeDataSourceValueProcessingExtractSubstringArgs();

    @Import(name="delimiter", required=true)
    private Output<String> delimiter;

    public Output<String> delimiter() {
        return this.delimiter;
    }

    @Import(name="endDelimiter")
    private @Nullable Output<String> endDelimiter;

    public Optional<Output<String>> endDelimiter() {
        return Optional.ofNullable(this.endDelimiter);
    }

    @Import(name="position", required=true)
    private Output<String> position;

    public Output<String> position() {
        return this.position;
    }

    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private RequestAttributeDataSourceValueProcessingExtractSubstringArgs() {}

    private RequestAttributeDataSourceValueProcessingExtractSubstringArgs(RequestAttributeDataSourceValueProcessingExtractSubstringArgs $) {
        this.delimiter = $.delimiter;
        this.endDelimiter = $.endDelimiter;
        this.position = $.position;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestAttributeDataSourceValueProcessingExtractSubstringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestAttributeDataSourceValueProcessingExtractSubstringArgs $;

        public Builder() {
            $ = new RequestAttributeDataSourceValueProcessingExtractSubstringArgs();
        }

        public Builder(RequestAttributeDataSourceValueProcessingExtractSubstringArgs defaults) {
            $ = new RequestAttributeDataSourceValueProcessingExtractSubstringArgs(Objects.requireNonNull(defaults));
        }

        public Builder delimiter(Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public Builder endDelimiter(@Nullable Output<String> endDelimiter) {
            $.endDelimiter = endDelimiter;
            return this;
        }

        public Builder endDelimiter(String endDelimiter) {
            return endDelimiter(Output.of(endDelimiter));
        }

        public Builder position(Output<String> position) {
            $.position = position;
            return this;
        }

        public Builder position(String position) {
            return position(Output.of(position));
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public RequestAttributeDataSourceValueProcessingExtractSubstringArgs build() {
            $.delimiter = Objects.requireNonNull($.delimiter, "expected parameter 'delimiter' to be non-null");
            $.position = Objects.requireNonNull($.position, "expected parameter 'position' to be non-null");
            return $;
        }
    }

}
