// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventKeystrokesTargetArgs;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventKeystrokesValidateArgs;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventKeystrokesWaitArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrowserMonitorScriptEventsEventKeystrokesArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptEventsEventKeystrokesArgs Empty = new BrowserMonitorScriptEventsEventKeystrokesArgs();

    @Import(name="masked")
    private @Nullable Output<Boolean> masked;

    public Optional<Output<Boolean>> masked() {
        return Optional.ofNullable(this.masked);
    }

    @Import(name="simulateBlurEvent")
    private @Nullable Output<Boolean> simulateBlurEvent;

    public Optional<Output<Boolean>> simulateBlurEvent() {
        return Optional.ofNullable(this.simulateBlurEvent);
    }

    @Import(name="target")
    private @Nullable Output<BrowserMonitorScriptEventsEventKeystrokesTargetArgs> target;

    public Optional<Output<BrowserMonitorScriptEventsEventKeystrokesTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="text", required=true)
    private Output<String> text;

    public Output<String> text() {
        return this.text;
    }

    @Import(name="validate")
    private @Nullable Output<BrowserMonitorScriptEventsEventKeystrokesValidateArgs> validate;

    public Optional<Output<BrowserMonitorScriptEventsEventKeystrokesValidateArgs>> validate() {
        return Optional.ofNullable(this.validate);
    }

    @Import(name="wait")
    private @Nullable Output<BrowserMonitorScriptEventsEventKeystrokesWaitArgs> wait;

    public Optional<Output<BrowserMonitorScriptEventsEventKeystrokesWaitArgs>> wait_() {
        return Optional.ofNullable(this.wait);
    }

    private BrowserMonitorScriptEventsEventKeystrokesArgs() {}

    private BrowserMonitorScriptEventsEventKeystrokesArgs(BrowserMonitorScriptEventsEventKeystrokesArgs $) {
        this.masked = $.masked;
        this.simulateBlurEvent = $.simulateBlurEvent;
        this.target = $.target;
        this.text = $.text;
        this.validate = $.validate;
        this.wait = $.wait;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptEventsEventKeystrokesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptEventsEventKeystrokesArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptEventsEventKeystrokesArgs();
        }

        public Builder(BrowserMonitorScriptEventsEventKeystrokesArgs defaults) {
            $ = new BrowserMonitorScriptEventsEventKeystrokesArgs(Objects.requireNonNull(defaults));
        }

        public Builder masked(@Nullable Output<Boolean> masked) {
            $.masked = masked;
            return this;
        }

        public Builder masked(Boolean masked) {
            return masked(Output.of(masked));
        }

        public Builder simulateBlurEvent(@Nullable Output<Boolean> simulateBlurEvent) {
            $.simulateBlurEvent = simulateBlurEvent;
            return this;
        }

        public Builder simulateBlurEvent(Boolean simulateBlurEvent) {
            return simulateBlurEvent(Output.of(simulateBlurEvent));
        }

        public Builder target(@Nullable Output<BrowserMonitorScriptEventsEventKeystrokesTargetArgs> target) {
            $.target = target;
            return this;
        }

        public Builder target(BrowserMonitorScriptEventsEventKeystrokesTargetArgs target) {
            return target(Output.of(target));
        }

        public Builder text(Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public Builder validate(@Nullable Output<BrowserMonitorScriptEventsEventKeystrokesValidateArgs> validate) {
            $.validate = validate;
            return this;
        }

        public Builder validate(BrowserMonitorScriptEventsEventKeystrokesValidateArgs validate) {
            return validate(Output.of(validate));
        }

        public Builder wait_(@Nullable Output<BrowserMonitorScriptEventsEventKeystrokesWaitArgs> wait) {
            $.wait = wait;
            return this;
        }

        public Builder wait_(BrowserMonitorScriptEventsEventKeystrokesWaitArgs wait) {
            return wait_(Output.of(wait));
        }

        public BrowserMonitorScriptEventsEventKeystrokesArgs build() {
            $.text = Objects.requireNonNull($.text, "expected parameter 'text' to be non-null");
            return $;
        }
    }

}
