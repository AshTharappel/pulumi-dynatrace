// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.MaintenanceScheduleMonthlyRecurrenceRecurrenceRangeArgs;
import com.pulumi.dynatrace.inputs.MaintenanceScheduleMonthlyRecurrenceTimeWindowArgs;
import java.lang.Integer;
import java.util.Objects;


public final class MaintenanceScheduleMonthlyRecurrenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceScheduleMonthlyRecurrenceArgs Empty = new MaintenanceScheduleMonthlyRecurrenceArgs();

    @Import(name="dayOfMonth", required=true)
    private Output<Integer> dayOfMonth;

    public Output<Integer> dayOfMonth() {
        return this.dayOfMonth;
    }

    @Import(name="recurrenceRange", required=true)
    private Output<MaintenanceScheduleMonthlyRecurrenceRecurrenceRangeArgs> recurrenceRange;

    public Output<MaintenanceScheduleMonthlyRecurrenceRecurrenceRangeArgs> recurrenceRange() {
        return this.recurrenceRange;
    }

    @Import(name="timeWindow", required=true)
    private Output<MaintenanceScheduleMonthlyRecurrenceTimeWindowArgs> timeWindow;

    public Output<MaintenanceScheduleMonthlyRecurrenceTimeWindowArgs> timeWindow() {
        return this.timeWindow;
    }

    private MaintenanceScheduleMonthlyRecurrenceArgs() {}

    private MaintenanceScheduleMonthlyRecurrenceArgs(MaintenanceScheduleMonthlyRecurrenceArgs $) {
        this.dayOfMonth = $.dayOfMonth;
        this.recurrenceRange = $.recurrenceRange;
        this.timeWindow = $.timeWindow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceScheduleMonthlyRecurrenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceScheduleMonthlyRecurrenceArgs $;

        public Builder() {
            $ = new MaintenanceScheduleMonthlyRecurrenceArgs();
        }

        public Builder(MaintenanceScheduleMonthlyRecurrenceArgs defaults) {
            $ = new MaintenanceScheduleMonthlyRecurrenceArgs(Objects.requireNonNull(defaults));
        }

        public Builder dayOfMonth(Output<Integer> dayOfMonth) {
            $.dayOfMonth = dayOfMonth;
            return this;
        }

        public Builder dayOfMonth(Integer dayOfMonth) {
            return dayOfMonth(Output.of(dayOfMonth));
        }

        public Builder recurrenceRange(Output<MaintenanceScheduleMonthlyRecurrenceRecurrenceRangeArgs> recurrenceRange) {
            $.recurrenceRange = recurrenceRange;
            return this;
        }

        public Builder recurrenceRange(MaintenanceScheduleMonthlyRecurrenceRecurrenceRangeArgs recurrenceRange) {
            return recurrenceRange(Output.of(recurrenceRange));
        }

        public Builder timeWindow(Output<MaintenanceScheduleMonthlyRecurrenceTimeWindowArgs> timeWindow) {
            $.timeWindow = timeWindow;
            return this;
        }

        public Builder timeWindow(MaintenanceScheduleMonthlyRecurrenceTimeWindowArgs timeWindow) {
            return timeWindow(Output.of(timeWindow));
        }

        public MaintenanceScheduleMonthlyRecurrenceArgs build() {
            $.dayOfMonth = Objects.requireNonNull($.dayOfMonth, "expected parameter 'dayOfMonth' to be non-null");
            $.recurrenceRange = Objects.requireNonNull($.recurrenceRange, "expected parameter 'recurrenceRange' to be non-null");
            $.timeWindow = Objects.requireNonNull($.timeWindow, "expected parameter 'timeWindow' to be non-null");
            return $;
        }
    }

}
