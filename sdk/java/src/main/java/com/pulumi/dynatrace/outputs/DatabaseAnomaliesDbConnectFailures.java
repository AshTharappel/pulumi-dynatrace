// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseAnomaliesDbConnectFailures {
    /**
     * @return Number of failed database connections during any **eval_period** minutes period to trigger an alert
     * 
     */
    private @Nullable Integer connectionFailsCount;
    /**
     * @return The *X* minutes time period during which the **connection*fails*count** is evaluated
     * 
     */
    private @Nullable Integer evalPeriod;

    private DatabaseAnomaliesDbConnectFailures() {}
    /**
     * @return Number of failed database connections during any **eval_period** minutes period to trigger an alert
     * 
     */
    public Optional<Integer> connectionFailsCount() {
        return Optional.ofNullable(this.connectionFailsCount);
    }
    /**
     * @return The *X* minutes time period during which the **connection*fails*count** is evaluated
     * 
     */
    public Optional<Integer> evalPeriod() {
        return Optional.ofNullable(this.evalPeriod);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseAnomaliesDbConnectFailures defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer connectionFailsCount;
        private @Nullable Integer evalPeriod;
        public Builder() {}
        public Builder(DatabaseAnomaliesDbConnectFailures defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionFailsCount = defaults.connectionFailsCount;
    	      this.evalPeriod = defaults.evalPeriod;
        }

        @CustomType.Setter
        public Builder connectionFailsCount(@Nullable Integer connectionFailsCount) {
            this.connectionFailsCount = connectionFailsCount;
            return this;
        }
        @CustomType.Setter
        public Builder evalPeriod(@Nullable Integer evalPeriod) {
            this.evalPeriod = evalPeriod;
            return this;
        }
        public DatabaseAnomaliesDbConnectFailures build() {
            final var o = new DatabaseAnomaliesDbConnectFailures();
            o.connectionFailsCount = connectionFailsCount;
            o.evalPeriod = evalPeriod;
            return o;
        }
    }
}
