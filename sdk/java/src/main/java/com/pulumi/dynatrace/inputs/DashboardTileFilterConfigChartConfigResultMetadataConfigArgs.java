// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardTileFilterConfigChartConfigResultMetadataConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardTileFilterConfigChartConfigResultMetadataConfigArgs Empty = new DashboardTileFilterConfigChartConfigResultMetadataConfigArgs();

    @Import(name="customColor")
    private @Nullable Output<String> customColor;

    public Optional<Output<String>> customColor() {
        return Optional.ofNullable(this.customColor);
    }

    @Import(name="key")
    private @Nullable Output<String> key;

    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    @Import(name="lastModified")
    private @Nullable Output<Integer> lastModified;

    public Optional<Output<Integer>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private DashboardTileFilterConfigChartConfigResultMetadataConfigArgs() {}

    private DashboardTileFilterConfigChartConfigResultMetadataConfigArgs(DashboardTileFilterConfigChartConfigResultMetadataConfigArgs $) {
        this.customColor = $.customColor;
        this.key = $.key;
        this.lastModified = $.lastModified;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardTileFilterConfigChartConfigResultMetadataConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardTileFilterConfigChartConfigResultMetadataConfigArgs $;

        public Builder() {
            $ = new DashboardTileFilterConfigChartConfigResultMetadataConfigArgs();
        }

        public Builder(DashboardTileFilterConfigChartConfigResultMetadataConfigArgs defaults) {
            $ = new DashboardTileFilterConfigChartConfigResultMetadataConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder customColor(@Nullable Output<String> customColor) {
            $.customColor = customColor;
            return this;
        }

        public Builder customColor(String customColor) {
            return customColor(Output.of(customColor));
        }

        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder lastModified(@Nullable Output<Integer> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        public Builder lastModified(Integer lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public DashboardTileFilterConfigChartConfigResultMetadataConfigArgs build() {
            return $;
        }
    }

}
