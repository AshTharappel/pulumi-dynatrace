// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.DduPoolArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.DduPoolState;
import com.pulumi.dynatrace.outputs.DduPoolEvents;
import com.pulumi.dynatrace.outputs.DduPoolLogMonitoring;
import com.pulumi.dynatrace.outputs.DduPoolMetrics;
import com.pulumi.dynatrace.outputs.DduPoolServerless;
import com.pulumi.dynatrace.outputs.DduPoolTraces;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Dynatrace Documentation
 * 
 * - DDU Pools - https://www.dynatrace.com/support/help/monitoring-consumption/davis-data-units#ddu-pools
 * 
 * - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:accounting.ddu.limit`)
 * 
 * ## Resource Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.dynatrace.DduPool;
 * import com.pulumi.dynatrace.DduPoolArgs;
 * import com.pulumi.dynatrace.inputs.DduPoolEventsArgs;
 * import com.pulumi.dynatrace.inputs.DduPoolLogMonitoringArgs;
 * import com.pulumi.dynatrace.inputs.DduPoolMetricsArgs;
 * import com.pulumi.dynatrace.inputs.DduPoolServerlessArgs;
 * import com.pulumi.dynatrace.inputs.DduPoolTracesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var _name_ = new DduPool(&#34;#name#&#34;, DduPoolArgs.builder()        
 *             .events(DduPoolEventsArgs.builder()
 *                 .enabled(true)
 *                 .type(&#34;MONTHLY&#34;)
 *                 .value(125)
 *                 .build())
 *             .logMonitoring(DduPoolLogMonitoringArgs.builder()
 *                 .enabled(true)
 *                 .type(&#34;MONTHLY&#34;)
 *                 .value(124)
 *                 .build())
 *             .metrics(DduPoolMetricsArgs.builder()
 *                 .enabled(true)
 *                 .type(&#34;MONTHLY&#34;)
 *                 .value(123)
 *                 .build())
 *             .serverless(DduPoolServerlessArgs.builder()
 *                 .enabled(true)
 *                 .type(&#34;MONTHLY&#34;)
 *                 .value(126)
 *                 .build())
 *             .traces(DduPoolTracesArgs.builder()
 *                 .enabled(true)
 *                 .type(&#34;MONTHLY&#34;)
 *                 .value(127)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="dynatrace:index/dduPool:DduPool")
public class DduPool extends com.pulumi.resources.CustomResource {
    /**
     * DDU pool settings for Events
     * 
     */
    @Export(name="events", refs={DduPoolEvents.class}, tree="[0]")
    private Output</* @Nullable */ DduPoolEvents> events;

    /**
     * @return DDU pool settings for Events
     * 
     */
    public Output<Optional<DduPoolEvents>> events() {
        return Codegen.optional(this.events);
    }
    /**
     * DDU pool settings for Log Monitoring
     * 
     */
    @Export(name="logMonitoring", refs={DduPoolLogMonitoring.class}, tree="[0]")
    private Output</* @Nullable */ DduPoolLogMonitoring> logMonitoring;

    /**
     * @return DDU pool settings for Log Monitoring
     * 
     */
    public Output<Optional<DduPoolLogMonitoring>> logMonitoring() {
        return Codegen.optional(this.logMonitoring);
    }
    /**
     * DDU pool settings for Metrics
     * 
     */
    @Export(name="metrics", refs={DduPoolMetrics.class}, tree="[0]")
    private Output</* @Nullable */ DduPoolMetrics> metrics;

    /**
     * @return DDU pool settings for Metrics
     * 
     */
    public Output<Optional<DduPoolMetrics>> metrics() {
        return Codegen.optional(this.metrics);
    }
    /**
     * DDU pool settings for Serverless
     * 
     */
    @Export(name="serverless", refs={DduPoolServerless.class}, tree="[0]")
    private Output</* @Nullable */ DduPoolServerless> serverless;

    /**
     * @return DDU pool settings for Serverless
     * 
     */
    public Output<Optional<DduPoolServerless>> serverless() {
        return Codegen.optional(this.serverless);
    }
    /**
     * DDU pool settings for Traces
     * 
     */
    @Export(name="traces", refs={DduPoolTraces.class}, tree="[0]")
    private Output</* @Nullable */ DduPoolTraces> traces;

    /**
     * @return DDU pool settings for Traces
     * 
     */
    public Output<Optional<DduPoolTraces>> traces() {
        return Codegen.optional(this.traces);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DduPool(String name) {
        this(name, DduPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DduPool(String name, @Nullable DduPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DduPool(String name, @Nullable DduPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/dduPool:DduPool", name, args == null ? DduPoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DduPool(String name, Output<String> id, @Nullable DduPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/dduPool:DduPool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DduPool get(String name, Output<String> id, @Nullable DduPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DduPool(name, id, state, options);
    }
}
