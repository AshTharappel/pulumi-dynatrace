// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HttpMonitorPerformanceThresholdsThresholdArgs;
import java.util.List;
import java.util.Objects;


public final class HttpMonitorPerformanceThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final HttpMonitorPerformanceThresholdsArgs Empty = new HttpMonitorPerformanceThresholdsArgs();

    @Import(name="thresholds", required=true)
    private Output<List<HttpMonitorPerformanceThresholdsThresholdArgs>> thresholds;

    public Output<List<HttpMonitorPerformanceThresholdsThresholdArgs>> thresholds() {
        return this.thresholds;
    }

    private HttpMonitorPerformanceThresholdsArgs() {}

    private HttpMonitorPerformanceThresholdsArgs(HttpMonitorPerformanceThresholdsArgs $) {
        this.thresholds = $.thresholds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpMonitorPerformanceThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpMonitorPerformanceThresholdsArgs $;

        public Builder() {
            $ = new HttpMonitorPerformanceThresholdsArgs();
        }

        public Builder(HttpMonitorPerformanceThresholdsArgs defaults) {
            $ = new HttpMonitorPerformanceThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder thresholds(Output<List<HttpMonitorPerformanceThresholdsThresholdArgs>> thresholds) {
            $.thresholds = thresholds;
            return this;
        }

        public Builder thresholds(List<HttpMonitorPerformanceThresholdsThresholdArgs> thresholds) {
            return thresholds(Output.of(thresholds));
        }

        public Builder thresholds(HttpMonitorPerformanceThresholdsThresholdArgs... thresholds) {
            return thresholds(List.of(thresholds));
        }

        public HttpMonitorPerformanceThresholdsArgs build() {
            $.thresholds = Objects.requireNonNull($.thresholds, "expected parameter 'thresholds' to be non-null");
            return $;
        }
    }

}
