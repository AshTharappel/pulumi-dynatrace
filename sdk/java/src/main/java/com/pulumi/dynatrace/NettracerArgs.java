// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NettracerArgs extends com.pulumi.resources.ResourceArgs {

    public static final NettracerArgs Empty = new NettracerArgs();

    /**
     * When disabled, OneAgent won&#39;t use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.
     * 
     */
    @Import(name="netTracer", required=true)
    private Output<Boolean> netTracer;

    /**
     * @return When disabled, OneAgent won&#39;t use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.
     * 
     */
    public Output<Boolean> netTracer() {
        return this.netTracer;
    }

    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private NettracerArgs() {}

    private NettracerArgs(NettracerArgs $) {
        this.netTracer = $.netTracer;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NettracerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NettracerArgs $;

        public Builder() {
            $ = new NettracerArgs();
        }

        public Builder(NettracerArgs defaults) {
            $ = new NettracerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param netTracer When disabled, OneAgent won&#39;t use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.
         * 
         * @return builder
         * 
         */
        public Builder netTracer(Output<Boolean> netTracer) {
            $.netTracer = netTracer;
            return this;
        }

        /**
         * @param netTracer When disabled, OneAgent won&#39;t use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.
         * 
         * @return builder
         * 
         */
        public Builder netTracer(Boolean netTracer) {
            return netTracer(Output.of(netTracer));
        }

        /**
         * @param scope The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public NettracerArgs build() {
            $.netTracer = Objects.requireNonNull($.netTracer, "expected parameter 'netTracer' to be non-null");
            return $;
        }
    }

}
