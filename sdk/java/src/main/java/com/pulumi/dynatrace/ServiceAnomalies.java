// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.ServiceAnomaliesArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.ServiceAnomaliesState;
import com.pulumi.dynatrace.outputs.ServiceAnomaliesFailureRates;
import com.pulumi.dynatrace.outputs.ServiceAnomaliesLoad;
import com.pulumi.dynatrace.outputs.ServiceAnomaliesLoadDrops;
import com.pulumi.dynatrace.outputs.ServiceAnomaliesResponseTimes;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/serviceAnomalies:ServiceAnomalies")
public class ServiceAnomalies extends com.pulumi.resources.CustomResource {
    /**
     * Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.
     * 
     */
    @Export(name="failureRates", refs={ServiceAnomaliesFailureRates.class}, tree="[0]")
    private Output</* @Nullable */ ServiceAnomaliesFailureRates> failureRates;

    /**
     * @return Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.
     * 
     */
    public Output<Optional<ServiceAnomaliesFailureRates>> failureRates() {
        return Codegen.optional(this.failureRates);
    }
    /**
     * The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
     * 
     */
    @Export(name="load", refs={ServiceAnomaliesLoad.class}, tree="[0]")
    private Output</* @Nullable */ ServiceAnomaliesLoad> load;

    /**
     * @return The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
     * 
     */
    public Output<Optional<ServiceAnomaliesLoad>> load() {
        return Codegen.optional(this.load);
    }
    /**
     * The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.
     * 
     */
    @Export(name="loadDrops", refs={ServiceAnomaliesLoadDrops.class}, tree="[0]")
    private Output</* @Nullable */ ServiceAnomaliesLoadDrops> loadDrops;

    /**
     * @return The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.
     * 
     */
    public Output<Optional<ServiceAnomaliesLoadDrops>> loadDrops() {
        return Codegen.optional(this.loadDrops);
    }
    /**
     * Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.
     * 
     */
    @Export(name="responseTimes", refs={ServiceAnomaliesResponseTimes.class}, tree="[0]")
    private Output</* @Nullable */ ServiceAnomaliesResponseTimes> responseTimes;

    /**
     * @return Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.
     * 
     */
    public Output<Optional<ServiceAnomaliesResponseTimes>> responseTimes() {
        return Codegen.optional(this.responseTimes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceAnomalies(String name) {
        this(name, ServiceAnomaliesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceAnomalies(String name, @Nullable ServiceAnomaliesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceAnomalies(String name, @Nullable ServiceAnomaliesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/serviceAnomalies:ServiceAnomalies", name, args == null ? ServiceAnomaliesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceAnomalies(String name, Output<String> id, @Nullable ServiceAnomaliesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/serviceAnomalies:ServiceAnomalies", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceAnomalies get(String name, Output<String> id, @Nullable ServiceAnomaliesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceAnomalies(name, id, state, options);
    }
}
