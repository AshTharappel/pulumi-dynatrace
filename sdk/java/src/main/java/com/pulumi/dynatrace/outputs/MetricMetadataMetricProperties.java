// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricMetadataMetricProperties {
    /**
     * @return Whether (true or false) the metric is relevant to a problem&#39;s impact.
     * 
     */
    private @Nullable Boolean impactRelevant;
    private @Nullable Integer latency;
    private @Nullable Double maxValue;
    private @Nullable Double minValue;
    private @Nullable Boolean rootCauseRelevant;
    /**
     * @return Possible Values: `Error`, `Score`, `Unknown`
     * 
     */
    private String valueType;

    private MetricMetadataMetricProperties() {}
    /**
     * @return Whether (true or false) the metric is relevant to a problem&#39;s impact.
     * 
     */
    public Optional<Boolean> impactRelevant() {
        return Optional.ofNullable(this.impactRelevant);
    }
    public Optional<Integer> latency() {
        return Optional.ofNullable(this.latency);
    }
    public Optional<Double> maxValue() {
        return Optional.ofNullable(this.maxValue);
    }
    public Optional<Double> minValue() {
        return Optional.ofNullable(this.minValue);
    }
    public Optional<Boolean> rootCauseRelevant() {
        return Optional.ofNullable(this.rootCauseRelevant);
    }
    /**
     * @return Possible Values: `Error`, `Score`, `Unknown`
     * 
     */
    public String valueType() {
        return this.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricMetadataMetricProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean impactRelevant;
        private @Nullable Integer latency;
        private @Nullable Double maxValue;
        private @Nullable Double minValue;
        private @Nullable Boolean rootCauseRelevant;
        private String valueType;
        public Builder() {}
        public Builder(MetricMetadataMetricProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.impactRelevant = defaults.impactRelevant;
    	      this.latency = defaults.latency;
    	      this.maxValue = defaults.maxValue;
    	      this.minValue = defaults.minValue;
    	      this.rootCauseRelevant = defaults.rootCauseRelevant;
    	      this.valueType = defaults.valueType;
        }

        @CustomType.Setter
        public Builder impactRelevant(@Nullable Boolean impactRelevant) {
            this.impactRelevant = impactRelevant;
            return this;
        }
        @CustomType.Setter
        public Builder latency(@Nullable Integer latency) {
            this.latency = latency;
            return this;
        }
        @CustomType.Setter
        public Builder maxValue(@Nullable Double maxValue) {
            this.maxValue = maxValue;
            return this;
        }
        @CustomType.Setter
        public Builder minValue(@Nullable Double minValue) {
            this.minValue = minValue;
            return this;
        }
        @CustomType.Setter
        public Builder rootCauseRelevant(@Nullable Boolean rootCauseRelevant) {
            this.rootCauseRelevant = rootCauseRelevant;
            return this;
        }
        @CustomType.Setter
        public Builder valueType(String valueType) {
            this.valueType = Objects.requireNonNull(valueType);
            return this;
        }
        public MetricMetadataMetricProperties build() {
            final var o = new MetricMetadataMetricProperties();
            o.impactRelevant = impactRelevant;
            o.latency = latency;
            o.maxValue = maxValue;
            o.minValue = minValue;
            o.rootCauseRelevant = rootCauseRelevant;
            o.valueType = valueType;
            return o;
        }
    }
}
