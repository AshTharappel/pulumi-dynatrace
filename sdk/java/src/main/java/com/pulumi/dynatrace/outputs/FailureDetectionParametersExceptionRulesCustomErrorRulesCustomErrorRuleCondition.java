// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition {
    private @Nullable Boolean caseSensitive;
    private String compareOperationType;
    private @Nullable Double doubleValue;
    private @Nullable Integer intValue;
    private @Nullable String textValue;

    private FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition() {}
    public Optional<Boolean> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }
    public String compareOperationType() {
        return this.compareOperationType;
    }
    public Optional<Double> doubleValue() {
        return Optional.ofNullable(this.doubleValue);
    }
    public Optional<Integer> intValue() {
        return Optional.ofNullable(this.intValue);
    }
    public Optional<String> textValue() {
        return Optional.ofNullable(this.textValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean caseSensitive;
        private String compareOperationType;
        private @Nullable Double doubleValue;
        private @Nullable Integer intValue;
        private @Nullable String textValue;
        public Builder() {}
        public Builder(FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caseSensitive = defaults.caseSensitive;
    	      this.compareOperationType = defaults.compareOperationType;
    	      this.doubleValue = defaults.doubleValue;
    	      this.intValue = defaults.intValue;
    	      this.textValue = defaults.textValue;
        }

        @CustomType.Setter
        public Builder caseSensitive(@Nullable Boolean caseSensitive) {
            this.caseSensitive = caseSensitive;
            return this;
        }
        @CustomType.Setter
        public Builder compareOperationType(String compareOperationType) {
            this.compareOperationType = Objects.requireNonNull(compareOperationType);
            return this;
        }
        @CustomType.Setter
        public Builder doubleValue(@Nullable Double doubleValue) {
            this.doubleValue = doubleValue;
            return this;
        }
        @CustomType.Setter
        public Builder intValue(@Nullable Integer intValue) {
            this.intValue = intValue;
            return this;
        }
        @CustomType.Setter
        public Builder textValue(@Nullable String textValue) {
            this.textValue = textValue;
            return this;
        }
        public FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition build() {
            final var o = new FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition();
            o.caseSensitive = caseSensitive;
            o.compareOperationType = compareOperationType;
            o.doubleValue = doubleValue;
            o.intValue = intValue;
            o.textValue = textValue;
            return o;
        }
    }
}
