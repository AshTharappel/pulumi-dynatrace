// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.RequestNamingConditionsConditionComparison;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RequestNamingConditionsCondition {
    private String attribute;
    private RequestNamingConditionsConditionComparison comparison;

    private RequestNamingConditionsCondition() {}
    public String attribute() {
        return this.attribute;
    }
    public RequestNamingConditionsConditionComparison comparison() {
        return this.comparison;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RequestNamingConditionsCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attribute;
        private RequestNamingConditionsConditionComparison comparison;
        public Builder() {}
        public Builder(RequestNamingConditionsCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attribute = defaults.attribute;
    	      this.comparison = defaults.comparison;
        }

        @CustomType.Setter
        public Builder attribute(String attribute) {
            this.attribute = Objects.requireNonNull(attribute);
            return this;
        }
        @CustomType.Setter
        public Builder comparison(RequestNamingConditionsConditionComparison comparison) {
            this.comparison = Objects.requireNonNull(comparison);
            return this;
        }
        public RequestNamingConditionsCondition build() {
            final var o = new RequestNamingConditionsCondition();
            o.attribute = attribute;
            o.comparison = comparison;
            return o;
        }
    }
}
