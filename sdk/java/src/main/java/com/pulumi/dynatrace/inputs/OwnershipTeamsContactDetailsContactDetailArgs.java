// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.OwnershipTeamsContactDetailsContactDetailJiraArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OwnershipTeamsContactDetailsContactDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final OwnershipTeamsContactDetailsContactDetailArgs Empty = new OwnershipTeamsContactDetailsContactDetailArgs();

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    @Import(name="integrationType", required=true)
    private Output<String> integrationType;

    public Output<String> integrationType() {
        return this.integrationType;
    }

    @Import(name="jira")
    private @Nullable Output<OwnershipTeamsContactDetailsContactDetailJiraArgs> jira;

    public Optional<Output<OwnershipTeamsContactDetailsContactDetailJiraArgs>> jira() {
        return Optional.ofNullable(this.jira);
    }

    @Import(name="msTeams")
    private @Nullable Output<String> msTeams;

    public Optional<Output<String>> msTeams() {
        return Optional.ofNullable(this.msTeams);
    }

    @Import(name="slackChannel")
    private @Nullable Output<String> slackChannel;

    public Optional<Output<String>> slackChannel() {
        return Optional.ofNullable(this.slackChannel);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private OwnershipTeamsContactDetailsContactDetailArgs() {}

    private OwnershipTeamsContactDetailsContactDetailArgs(OwnershipTeamsContactDetailsContactDetailArgs $) {
        this.email = $.email;
        this.integrationType = $.integrationType;
        this.jira = $.jira;
        this.msTeams = $.msTeams;
        this.slackChannel = $.slackChannel;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OwnershipTeamsContactDetailsContactDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OwnershipTeamsContactDetailsContactDetailArgs $;

        public Builder() {
            $ = new OwnershipTeamsContactDetailsContactDetailArgs();
        }

        public Builder(OwnershipTeamsContactDetailsContactDetailArgs defaults) {
            $ = new OwnershipTeamsContactDetailsContactDetailArgs(Objects.requireNonNull(defaults));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder integrationType(Output<String> integrationType) {
            $.integrationType = integrationType;
            return this;
        }

        public Builder integrationType(String integrationType) {
            return integrationType(Output.of(integrationType));
        }

        public Builder jira(@Nullable Output<OwnershipTeamsContactDetailsContactDetailJiraArgs> jira) {
            $.jira = jira;
            return this;
        }

        public Builder jira(OwnershipTeamsContactDetailsContactDetailJiraArgs jira) {
            return jira(Output.of(jira));
        }

        public Builder msTeams(@Nullable Output<String> msTeams) {
            $.msTeams = msTeams;
            return this;
        }

        public Builder msTeams(String msTeams) {
            return msTeams(Output.of(msTeams));
        }

        public Builder slackChannel(@Nullable Output<String> slackChannel) {
            $.slackChannel = slackChannel;
            return this;
        }

        public Builder slackChannel(String slackChannel) {
            return slackChannel(Output.of(slackChannel));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public OwnershipTeamsContactDetailsContactDetailArgs build() {
            $.integrationType = Objects.requireNonNull($.integrationType, "expected parameter 'integrationType' to be non-null");
            return $;
        }
    }

}
