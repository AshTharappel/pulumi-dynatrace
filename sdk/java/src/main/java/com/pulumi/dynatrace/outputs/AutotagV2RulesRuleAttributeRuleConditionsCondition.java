// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutotagV2RulesRuleAttributeRuleConditionsCondition {
    private @Nullable Boolean caseSensitive;
    private @Nullable String dynamicKey;
    private @Nullable String dynamicKeySource;
    private @Nullable String entityId;
    private @Nullable String enumValue;
    private @Nullable Integer integerValue;
    private String key;
    private String operator;
    private @Nullable String stringValue;
    private @Nullable String tag;

    private AutotagV2RulesRuleAttributeRuleConditionsCondition() {}
    public Optional<Boolean> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }
    public Optional<String> dynamicKey() {
        return Optional.ofNullable(this.dynamicKey);
    }
    public Optional<String> dynamicKeySource() {
        return Optional.ofNullable(this.dynamicKeySource);
    }
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }
    public Optional<String> enumValue() {
        return Optional.ofNullable(this.enumValue);
    }
    public Optional<Integer> integerValue() {
        return Optional.ofNullable(this.integerValue);
    }
    public String key() {
        return this.key;
    }
    public String operator() {
        return this.operator;
    }
    public Optional<String> stringValue() {
        return Optional.ofNullable(this.stringValue);
    }
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutotagV2RulesRuleAttributeRuleConditionsCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean caseSensitive;
        private @Nullable String dynamicKey;
        private @Nullable String dynamicKeySource;
        private @Nullable String entityId;
        private @Nullable String enumValue;
        private @Nullable Integer integerValue;
        private String key;
        private String operator;
        private @Nullable String stringValue;
        private @Nullable String tag;
        public Builder() {}
        public Builder(AutotagV2RulesRuleAttributeRuleConditionsCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caseSensitive = defaults.caseSensitive;
    	      this.dynamicKey = defaults.dynamicKey;
    	      this.dynamicKeySource = defaults.dynamicKeySource;
    	      this.entityId = defaults.entityId;
    	      this.enumValue = defaults.enumValue;
    	      this.integerValue = defaults.integerValue;
    	      this.key = defaults.key;
    	      this.operator = defaults.operator;
    	      this.stringValue = defaults.stringValue;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder caseSensitive(@Nullable Boolean caseSensitive) {
            this.caseSensitive = caseSensitive;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicKey(@Nullable String dynamicKey) {
            this.dynamicKey = dynamicKey;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicKeySource(@Nullable String dynamicKeySource) {
            this.dynamicKeySource = dynamicKeySource;
            return this;
        }
        @CustomType.Setter
        public Builder entityId(@Nullable String entityId) {
            this.entityId = entityId;
            return this;
        }
        @CustomType.Setter
        public Builder enumValue(@Nullable String enumValue) {
            this.enumValue = enumValue;
            return this;
        }
        @CustomType.Setter
        public Builder integerValue(@Nullable Integer integerValue) {
            this.integerValue = integerValue;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder stringValue(@Nullable String stringValue) {
            this.stringValue = stringValue;
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }
        public AutotagV2RulesRuleAttributeRuleConditionsCondition build() {
            final var o = new AutotagV2RulesRuleAttributeRuleConditionsCondition();
            o.caseSensitive = caseSensitive;
            o.dynamicKey = dynamicKey;
            o.dynamicKeySource = dynamicKeySource;
            o.entityId = entityId;
            o.enumValue = enumValue;
            o.integerValue = integerValue;
            o.key = key;
            o.operator = operator;
            o.stringValue = stringValue;
            o.tag = tag;
            return o;
        }
    }
}
