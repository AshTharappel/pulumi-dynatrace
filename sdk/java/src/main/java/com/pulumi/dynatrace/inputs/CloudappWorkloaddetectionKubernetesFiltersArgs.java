// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.CloudappWorkloaddetectionKubernetesFiltersFilterArgs;
import java.util.List;
import java.util.Objects;


public final class CloudappWorkloaddetectionKubernetesFiltersArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudappWorkloaddetectionKubernetesFiltersArgs Empty = new CloudappWorkloaddetectionKubernetesFiltersArgs();

    @Import(name="filters", required=true)
    private Output<List<CloudappWorkloaddetectionKubernetesFiltersFilterArgs>> filters;

    public Output<List<CloudappWorkloaddetectionKubernetesFiltersFilterArgs>> filters() {
        return this.filters;
    }

    private CloudappWorkloaddetectionKubernetesFiltersArgs() {}

    private CloudappWorkloaddetectionKubernetesFiltersArgs(CloudappWorkloaddetectionKubernetesFiltersArgs $) {
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudappWorkloaddetectionKubernetesFiltersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudappWorkloaddetectionKubernetesFiltersArgs $;

        public Builder() {
            $ = new CloudappWorkloaddetectionKubernetesFiltersArgs();
        }

        public Builder(CloudappWorkloaddetectionKubernetesFiltersArgs defaults) {
            $ = new CloudappWorkloaddetectionKubernetesFiltersArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(Output<List<CloudappWorkloaddetectionKubernetesFiltersFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<CloudappWorkloaddetectionKubernetesFiltersFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(CloudappWorkloaddetectionKubernetesFiltersFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public CloudappWorkloaddetectionKubernetesFiltersArgs build() {
            $.filters = Objects.requireNonNull($.filters, "expected parameter 'filters' to be non-null");
            return $;
        }
    }

}
