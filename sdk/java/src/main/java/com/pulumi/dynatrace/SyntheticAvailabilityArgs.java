// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class SyntheticAvailabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticAvailabilityArgs Empty = new SyntheticAvailabilityArgs();

    /**
     * Exclude periods with maintenance windows from availability calculation
     * 
     */
    @Import(name="excludeMaintenanceWindows", required=true)
    private Output<Boolean> excludeMaintenanceWindows;

    /**
     * @return Exclude periods with maintenance windows from availability calculation
     * 
     */
    public Output<Boolean> excludeMaintenanceWindows() {
        return this.excludeMaintenanceWindows;
    }

    private SyntheticAvailabilityArgs() {}

    private SyntheticAvailabilityArgs(SyntheticAvailabilityArgs $) {
        this.excludeMaintenanceWindows = $.excludeMaintenanceWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticAvailabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticAvailabilityArgs $;

        public Builder() {
            $ = new SyntheticAvailabilityArgs();
        }

        public Builder(SyntheticAvailabilityArgs defaults) {
            $ = new SyntheticAvailabilityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeMaintenanceWindows Exclude periods with maintenance windows from availability calculation
         * 
         * @return builder
         * 
         */
        public Builder excludeMaintenanceWindows(Output<Boolean> excludeMaintenanceWindows) {
            $.excludeMaintenanceWindows = excludeMaintenanceWindows;
            return this;
        }

        /**
         * @param excludeMaintenanceWindows Exclude periods with maintenance windows from availability calculation
         * 
         * @return builder
         * 
         */
        public Builder excludeMaintenanceWindows(Boolean excludeMaintenanceWindows) {
            return excludeMaintenanceWindows(Output.of(excludeMaintenanceWindows));
        }

        public SyntheticAvailabilityArgs build() {
            $.excludeMaintenanceWindows = Objects.requireNonNull($.excludeMaintenanceWindows, "expected parameter 'excludeMaintenanceWindows' to be non-null");
            return $;
        }
    }

}
