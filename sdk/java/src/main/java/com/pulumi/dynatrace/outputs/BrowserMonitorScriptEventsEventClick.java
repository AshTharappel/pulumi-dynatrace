// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.BrowserMonitorScriptEventsEventClickTarget;
import com.pulumi.dynatrace.outputs.BrowserMonitorScriptEventsEventClickValidate;
import com.pulumi.dynatrace.outputs.BrowserMonitorScriptEventsEventClickWait;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BrowserMonitorScriptEventsEventClick {
    private Integer button;
    private @Nullable BrowserMonitorScriptEventsEventClickTarget target;
    private @Nullable BrowserMonitorScriptEventsEventClickValidate validate;
    private @Nullable BrowserMonitorScriptEventsEventClickWait wait;

    private BrowserMonitorScriptEventsEventClick() {}
    public Integer button() {
        return this.button;
    }
    public Optional<BrowserMonitorScriptEventsEventClickTarget> target() {
        return Optional.ofNullable(this.target);
    }
    public Optional<BrowserMonitorScriptEventsEventClickValidate> validate() {
        return Optional.ofNullable(this.validate);
    }
    public Optional<BrowserMonitorScriptEventsEventClickWait> wait_() {
        return Optional.ofNullable(this.wait);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BrowserMonitorScriptEventsEventClick defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer button;
        private @Nullable BrowserMonitorScriptEventsEventClickTarget target;
        private @Nullable BrowserMonitorScriptEventsEventClickValidate validate;
        private @Nullable BrowserMonitorScriptEventsEventClickWait wait;
        public Builder() {}
        public Builder(BrowserMonitorScriptEventsEventClick defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.button = defaults.button;
    	      this.target = defaults.target;
    	      this.validate = defaults.validate;
    	      this.wait = defaults.wait;
        }

        @CustomType.Setter
        public Builder button(Integer button) {
            this.button = Objects.requireNonNull(button);
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable BrowserMonitorScriptEventsEventClickTarget target) {
            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder validate(@Nullable BrowserMonitorScriptEventsEventClickValidate validate) {
            this.validate = validate;
            return this;
        }
        @CustomType.Setter("wait")
        public Builder wait_(@Nullable BrowserMonitorScriptEventsEventClickWait wait) {
            this.wait = wait;
            return this;
        }
        public BrowserMonitorScriptEventsEventClick build() {
            final var o = new BrowserMonitorScriptEventsEventClick();
            o.button = button;
            o.target = target;
            o.validate = validate;
            o.wait = wait;
            return o;
        }
    }
}
