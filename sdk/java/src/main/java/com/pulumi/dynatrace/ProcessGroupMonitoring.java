// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.ProcessGroupMonitoringArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.ProcessGroupMonitoringState;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/processGroupMonitoring:ProcessGroupMonitoring")
public class ProcessGroupMonitoring extends com.pulumi.resources.CustomResource {
    /**
     * Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`
     * 
     */
    @Export(name="monitoringState", refs={String.class}, tree="[0]")
    private Output<String> monitoringState;

    /**
     * @return Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`
     * 
     */
    public Output<String> monitoringState() {
        return this.monitoringState;
    }
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    @Export(name="processGroupId", refs={String.class}, tree="[0]")
    private Output<String> processGroupId;

    /**
     * @return The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    public Output<String> processGroupId() {
        return this.processGroupId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProcessGroupMonitoring(String name) {
        this(name, ProcessGroupMonitoringArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProcessGroupMonitoring(String name, ProcessGroupMonitoringArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProcessGroupMonitoring(String name, ProcessGroupMonitoringArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/processGroupMonitoring:ProcessGroupMonitoring", name, args == null ? ProcessGroupMonitoringArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProcessGroupMonitoring(String name, Output<String> id, @Nullable ProcessGroupMonitoringState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/processGroupMonitoring:ProcessGroupMonitoring", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProcessGroupMonitoring get(String name, Output<String> id, @Nullable ProcessGroupMonitoringState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProcessGroupMonitoring(name, id, state, options);
    }
}
