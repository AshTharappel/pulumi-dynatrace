// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GetEntitiesEntitiesEntityTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEntitiesEntitiesEntityArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetEntitiesEntitiesEntityArgs Empty = new GetEntitiesEntitiesEntityArgs();

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="entityId")
    private @Nullable Output<String> entityId;

    public Optional<Output<String>> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    @Import(name="tags")
    private @Nullable Output<List<GetEntitiesEntitiesEntityTagArgs>> tags;

    public Optional<Output<List<GetEntitiesEntitiesEntityTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetEntitiesEntitiesEntityArgs() {}

    private GetEntitiesEntitiesEntityArgs(GetEntitiesEntitiesEntityArgs $) {
        this.displayName = $.displayName;
        this.entityId = $.entityId;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntitiesEntitiesEntityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntitiesEntitiesEntityArgs $;

        public Builder() {
            $ = new GetEntitiesEntitiesEntityArgs();
        }

        public Builder(GetEntitiesEntitiesEntityArgs defaults) {
            $ = new GetEntitiesEntitiesEntityArgs(Objects.requireNonNull(defaults));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder entityId(@Nullable Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        public Builder tags(@Nullable Output<List<GetEntitiesEntitiesEntityTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<GetEntitiesEntitiesEntityTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(GetEntitiesEntitiesEntityTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetEntitiesEntitiesEntityArgs build() {
            return $;
        }
    }

}
