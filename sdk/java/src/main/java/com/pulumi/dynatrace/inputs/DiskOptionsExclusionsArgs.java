// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.DiskOptionsExclusionsExclusionArgs;
import java.util.List;
import java.util.Objects;


public final class DiskOptionsExclusionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskOptionsExclusionsArgs Empty = new DiskOptionsExclusionsArgs();

    @Import(name="exclusions", required=true)
    private Output<List<DiskOptionsExclusionsExclusionArgs>> exclusions;

    public Output<List<DiskOptionsExclusionsExclusionArgs>> exclusions() {
        return this.exclusions;
    }

    private DiskOptionsExclusionsArgs() {}

    private DiskOptionsExclusionsArgs(DiskOptionsExclusionsArgs $) {
        this.exclusions = $.exclusions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskOptionsExclusionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskOptionsExclusionsArgs $;

        public Builder() {
            $ = new DiskOptionsExclusionsArgs();
        }

        public Builder(DiskOptionsExclusionsArgs defaults) {
            $ = new DiskOptionsExclusionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder exclusions(Output<List<DiskOptionsExclusionsExclusionArgs>> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        public Builder exclusions(List<DiskOptionsExclusionsExclusionArgs> exclusions) {
            return exclusions(Output.of(exclusions));
        }

        public Builder exclusions(DiskOptionsExclusionsExclusionArgs... exclusions) {
            return exclusions(List.of(exclusions));
        }

        public DiskOptionsExclusionsArgs build() {
            $.exclusions = Objects.requireNonNull($.exclusions, "expected parameter 'exclusions' to be non-null");
            return $;
        }
    }

}
