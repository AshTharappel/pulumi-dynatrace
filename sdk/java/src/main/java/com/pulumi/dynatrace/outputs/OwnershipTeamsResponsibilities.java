// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class OwnershipTeamsResponsibilities {
    /**
     * @return Responsible for developing and maintaining high quality software. Development teams are responsible for making code changes to address performance regressions, errors, or security vulnerabilities.
     * 
     */
    private Boolean development;
    /**
     * @return Responsible for the administration, management, and support of the IT infrastructure including physical servers, virtualization, and cloud. Teams with infrastructure responsibility are responsible for addressing hardware issues, resource limits, and operating system vulnerabilities.
     * 
     */
    private Boolean infrastructure;
    /**
     * @return Responsible for ensuring that applications in development align with business needs and meet the usability requirements of users, stakeholders, customers, and external partners. Teams with line of business responsibility are responsible for understanding the customer experience and how it affects business goals.
     * 
     */
    private Boolean lineOfBusiness;
    /**
     * @return Responsible for deploying and managing software, with a focus on high availability and performance. Teams with operations responsibilities needs to understand the impact, priority, and team responsible for addressing problems detected by Dynatrace.
     * 
     */
    private Boolean operations;
    /**
     * @return Responsible for the security posture of the organization. Teams with security responsibility must understand the impact, priority, and team responsible for addressing security vulnerabilities.
     * 
     */
    private Boolean security;

    private OwnershipTeamsResponsibilities() {}
    /**
     * @return Responsible for developing and maintaining high quality software. Development teams are responsible for making code changes to address performance regressions, errors, or security vulnerabilities.
     * 
     */
    public Boolean development() {
        return this.development;
    }
    /**
     * @return Responsible for the administration, management, and support of the IT infrastructure including physical servers, virtualization, and cloud. Teams with infrastructure responsibility are responsible for addressing hardware issues, resource limits, and operating system vulnerabilities.
     * 
     */
    public Boolean infrastructure() {
        return this.infrastructure;
    }
    /**
     * @return Responsible for ensuring that applications in development align with business needs and meet the usability requirements of users, stakeholders, customers, and external partners. Teams with line of business responsibility are responsible for understanding the customer experience and how it affects business goals.
     * 
     */
    public Boolean lineOfBusiness() {
        return this.lineOfBusiness;
    }
    /**
     * @return Responsible for deploying and managing software, with a focus on high availability and performance. Teams with operations responsibilities needs to understand the impact, priority, and team responsible for addressing problems detected by Dynatrace.
     * 
     */
    public Boolean operations() {
        return this.operations;
    }
    /**
     * @return Responsible for the security posture of the organization. Teams with security responsibility must understand the impact, priority, and team responsible for addressing security vulnerabilities.
     * 
     */
    public Boolean security() {
        return this.security;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OwnershipTeamsResponsibilities defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean development;
        private Boolean infrastructure;
        private Boolean lineOfBusiness;
        private Boolean operations;
        private Boolean security;
        public Builder() {}
        public Builder(OwnershipTeamsResponsibilities defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.development = defaults.development;
    	      this.infrastructure = defaults.infrastructure;
    	      this.lineOfBusiness = defaults.lineOfBusiness;
    	      this.operations = defaults.operations;
    	      this.security = defaults.security;
        }

        @CustomType.Setter
        public Builder development(Boolean development) {
            this.development = Objects.requireNonNull(development);
            return this;
        }
        @CustomType.Setter
        public Builder infrastructure(Boolean infrastructure) {
            this.infrastructure = Objects.requireNonNull(infrastructure);
            return this;
        }
        @CustomType.Setter
        public Builder lineOfBusiness(Boolean lineOfBusiness) {
            this.lineOfBusiness = Objects.requireNonNull(lineOfBusiness);
            return this;
        }
        @CustomType.Setter
        public Builder operations(Boolean operations) {
            this.operations = Objects.requireNonNull(operations);
            return this;
        }
        @CustomType.Setter
        public Builder security(Boolean security) {
            this.security = Objects.requireNonNull(security);
            return this;
        }
        public OwnershipTeamsResponsibilities build() {
            final var o = new OwnershipTeamsResponsibilities();
            o.development = development;
            o.infrastructure = infrastructure;
            o.lineOfBusiness = lineOfBusiness;
            o.operations = operations;
            o.security = security;
            return o;
        }
    }
}
