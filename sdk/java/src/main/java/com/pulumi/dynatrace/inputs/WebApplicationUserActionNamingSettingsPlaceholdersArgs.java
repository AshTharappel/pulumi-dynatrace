// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs;
import java.util.List;
import java.util.Objects;


public final class WebApplicationUserActionNamingSettingsPlaceholdersArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationUserActionNamingSettingsPlaceholdersArgs Empty = new WebApplicationUserActionNamingSettingsPlaceholdersArgs();

    @Import(name="placeholders", required=true)
    private Output<List<WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs>> placeholders;

    public Output<List<WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs>> placeholders() {
        return this.placeholders;
    }

    private WebApplicationUserActionNamingSettingsPlaceholdersArgs() {}

    private WebApplicationUserActionNamingSettingsPlaceholdersArgs(WebApplicationUserActionNamingSettingsPlaceholdersArgs $) {
        this.placeholders = $.placeholders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationUserActionNamingSettingsPlaceholdersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationUserActionNamingSettingsPlaceholdersArgs $;

        public Builder() {
            $ = new WebApplicationUserActionNamingSettingsPlaceholdersArgs();
        }

        public Builder(WebApplicationUserActionNamingSettingsPlaceholdersArgs defaults) {
            $ = new WebApplicationUserActionNamingSettingsPlaceholdersArgs(Objects.requireNonNull(defaults));
        }

        public Builder placeholders(Output<List<WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs>> placeholders) {
            $.placeholders = placeholders;
            return this;
        }

        public Builder placeholders(List<WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs> placeholders) {
            return placeholders(Output.of(placeholders));
        }

        public Builder placeholders(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs... placeholders) {
            return placeholders(List.of(placeholders));
        }

        public WebApplicationUserActionNamingSettingsPlaceholdersArgs build() {
            $.placeholders = Objects.requireNonNull($.placeholders, "expected parameter 'placeholders' to be non-null");
            return $;
        }
    }

}
