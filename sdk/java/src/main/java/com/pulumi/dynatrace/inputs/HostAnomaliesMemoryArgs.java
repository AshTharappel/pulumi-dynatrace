// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HostAnomaliesMemoryThresholdsArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostAnomaliesMemoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAnomaliesMemoryArgs Empty = new HostAnomaliesMemoryArgs();

    /**
     * The detection is enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return The detection is enabled (`true`) or disabled (`false`)
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert
     * 
     */
    @Import(name="thresholds")
    private @Nullable Output<HostAnomaliesMemoryThresholdsArgs> thresholds;

    /**
     * @return Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert
     * 
     */
    public Optional<Output<HostAnomaliesMemoryThresholdsArgs>> thresholds() {
        return Optional.ofNullable(this.thresholds);
    }

    private HostAnomaliesMemoryArgs() {}

    private HostAnomaliesMemoryArgs(HostAnomaliesMemoryArgs $) {
        this.enabled = $.enabled;
        this.thresholds = $.thresholds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAnomaliesMemoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAnomaliesMemoryArgs $;

        public Builder() {
            $ = new HostAnomaliesMemoryArgs();
        }

        public Builder(HostAnomaliesMemoryArgs defaults) {
            $ = new HostAnomaliesMemoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled The detection is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled The detection is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param thresholds Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert
         * 
         * @return builder
         * 
         */
        public Builder thresholds(@Nullable Output<HostAnomaliesMemoryThresholdsArgs> thresholds) {
            $.thresholds = thresholds;
            return this;
        }

        /**
         * @param thresholds Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert
         * 
         * @return builder
         * 
         */
        public Builder thresholds(HostAnomaliesMemoryThresholdsArgs thresholds) {
            return thresholds(Output.of(thresholds));
        }

        public HostAnomaliesMemoryArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
