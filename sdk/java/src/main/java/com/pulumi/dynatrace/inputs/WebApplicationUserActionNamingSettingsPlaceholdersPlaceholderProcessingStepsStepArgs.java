// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs Empty = new WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs();

    @Import(name="fallbackToInput")
    private @Nullable Output<Boolean> fallbackToInput;

    public Optional<Output<Boolean>> fallbackToInput() {
        return Optional.ofNullable(this.fallbackToInput);
    }

    @Import(name="patternAfter")
    private @Nullable Output<String> patternAfter;

    public Optional<Output<String>> patternAfter() {
        return Optional.ofNullable(this.patternAfter);
    }

    @Import(name="patternAfterSearchType")
    private @Nullable Output<String> patternAfterSearchType;

    public Optional<Output<String>> patternAfterSearchType() {
        return Optional.ofNullable(this.patternAfterSearchType);
    }

    @Import(name="patternBefore")
    private @Nullable Output<String> patternBefore;

    public Optional<Output<String>> patternBefore() {
        return Optional.ofNullable(this.patternBefore);
    }

    @Import(name="patternBeforeSearchType")
    private @Nullable Output<String> patternBeforeSearchType;

    public Optional<Output<String>> patternBeforeSearchType() {
        return Optional.ofNullable(this.patternBeforeSearchType);
    }

    @Import(name="patternToReplace")
    private @Nullable Output<String> patternToReplace;

    public Optional<Output<String>> patternToReplace() {
        return Optional.ofNullable(this.patternToReplace);
    }

    @Import(name="regularExpression")
    private @Nullable Output<String> regularExpression;

    public Optional<Output<String>> regularExpression() {
        return Optional.ofNullable(this.regularExpression);
    }

    @Import(name="replacement")
    private @Nullable Output<String> replacement;

    public Optional<Output<String>> replacement() {
        return Optional.ofNullable(this.replacement);
    }

    /**
     * The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs() {}

    private WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs $) {
        this.fallbackToInput = $.fallbackToInput;
        this.patternAfter = $.patternAfter;
        this.patternAfterSearchType = $.patternAfterSearchType;
        this.patternBefore = $.patternBefore;
        this.patternBeforeSearchType = $.patternBeforeSearchType;
        this.patternToReplace = $.patternToReplace;
        this.regularExpression = $.regularExpression;
        this.replacement = $.replacement;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs $;

        public Builder() {
            $ = new WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs();
        }

        public Builder(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs defaults) {
            $ = new WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs(Objects.requireNonNull(defaults));
        }

        public Builder fallbackToInput(@Nullable Output<Boolean> fallbackToInput) {
            $.fallbackToInput = fallbackToInput;
            return this;
        }

        public Builder fallbackToInput(Boolean fallbackToInput) {
            return fallbackToInput(Output.of(fallbackToInput));
        }

        public Builder patternAfter(@Nullable Output<String> patternAfter) {
            $.patternAfter = patternAfter;
            return this;
        }

        public Builder patternAfter(String patternAfter) {
            return patternAfter(Output.of(patternAfter));
        }

        public Builder patternAfterSearchType(@Nullable Output<String> patternAfterSearchType) {
            $.patternAfterSearchType = patternAfterSearchType;
            return this;
        }

        public Builder patternAfterSearchType(String patternAfterSearchType) {
            return patternAfterSearchType(Output.of(patternAfterSearchType));
        }

        public Builder patternBefore(@Nullable Output<String> patternBefore) {
            $.patternBefore = patternBefore;
            return this;
        }

        public Builder patternBefore(String patternBefore) {
            return patternBefore(Output.of(patternBefore));
        }

        public Builder patternBeforeSearchType(@Nullable Output<String> patternBeforeSearchType) {
            $.patternBeforeSearchType = patternBeforeSearchType;
            return this;
        }

        public Builder patternBeforeSearchType(String patternBeforeSearchType) {
            return patternBeforeSearchType(Output.of(patternBeforeSearchType));
        }

        public Builder patternToReplace(@Nullable Output<String> patternToReplace) {
            $.patternToReplace = patternToReplace;
            return this;
        }

        public Builder patternToReplace(String patternToReplace) {
            return patternToReplace(Output.of(patternToReplace));
        }

        public Builder regularExpression(@Nullable Output<String> regularExpression) {
            $.regularExpression = regularExpression;
            return this;
        }

        public Builder regularExpression(String regularExpression) {
            return regularExpression(Output.of(regularExpression));
        }

        public Builder replacement(@Nullable Output<String> replacement) {
            $.replacement = replacement;
            return this;
        }

        public Builder replacement(String replacement) {
            return replacement(Output.of(replacement));
        }

        /**
         * @param type The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
