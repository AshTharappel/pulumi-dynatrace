// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.OsServicesDetectionConditionsWindowsDetectionConditionsWindowArgs;
import java.util.List;
import java.util.Objects;


public final class OsServicesDetectionConditionsWindowsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OsServicesDetectionConditionsWindowsArgs Empty = new OsServicesDetectionConditionsWindowsArgs();

    @Import(name="detectionConditionsWindows", required=true)
    private Output<List<OsServicesDetectionConditionsWindowsDetectionConditionsWindowArgs>> detectionConditionsWindows;

    public Output<List<OsServicesDetectionConditionsWindowsDetectionConditionsWindowArgs>> detectionConditionsWindows() {
        return this.detectionConditionsWindows;
    }

    private OsServicesDetectionConditionsWindowsArgs() {}

    private OsServicesDetectionConditionsWindowsArgs(OsServicesDetectionConditionsWindowsArgs $) {
        this.detectionConditionsWindows = $.detectionConditionsWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsServicesDetectionConditionsWindowsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsServicesDetectionConditionsWindowsArgs $;

        public Builder() {
            $ = new OsServicesDetectionConditionsWindowsArgs();
        }

        public Builder(OsServicesDetectionConditionsWindowsArgs defaults) {
            $ = new OsServicesDetectionConditionsWindowsArgs(Objects.requireNonNull(defaults));
        }

        public Builder detectionConditionsWindows(Output<List<OsServicesDetectionConditionsWindowsDetectionConditionsWindowArgs>> detectionConditionsWindows) {
            $.detectionConditionsWindows = detectionConditionsWindows;
            return this;
        }

        public Builder detectionConditionsWindows(List<OsServicesDetectionConditionsWindowsDetectionConditionsWindowArgs> detectionConditionsWindows) {
            return detectionConditionsWindows(Output.of(detectionConditionsWindows));
        }

        public Builder detectionConditionsWindows(OsServicesDetectionConditionsWindowsDetectionConditionsWindowArgs... detectionConditionsWindows) {
            return detectionConditionsWindows(List.of(detectionConditionsWindows));
        }

        public OsServicesDetectionConditionsWindowsArgs build() {
            $.detectionConditionsWindows = Objects.requireNonNull($.detectionConditionsWindows, "expected parameter 'detectionConditionsWindows' to be non-null");
            return $;
        }
    }

}
