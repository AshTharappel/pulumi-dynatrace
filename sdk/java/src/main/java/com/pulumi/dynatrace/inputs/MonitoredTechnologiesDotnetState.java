// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoredTechnologiesDotnetState extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredTechnologiesDotnetState Empty = new MonitoredTechnologiesDotnetState();

    /**
     * This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled
     * 
     */
    @Import(name="enabledDotNetCore")
    private @Nullable Output<Boolean> enabledDotNetCore;

    /**
     * @return Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled
     * 
     */
    public Optional<Output<Boolean>> enabledDotNetCore() {
        return Optional.ofNullable(this.enabledDotNetCore);
    }

    /**
     * The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    @Import(name="hostId")
    private @Nullable Output<String> hostId;

    /**
     * @return The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    public Optional<Output<String>> hostId() {
        return Optional.ofNullable(this.hostId);
    }

    private MonitoredTechnologiesDotnetState() {}

    private MonitoredTechnologiesDotnetState(MonitoredTechnologiesDotnetState $) {
        this.enabled = $.enabled;
        this.enabledDotNetCore = $.enabledDotNetCore;
        this.hostId = $.hostId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredTechnologiesDotnetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredTechnologiesDotnetState $;

        public Builder() {
            $ = new MonitoredTechnologiesDotnetState();
        }

        public Builder(MonitoredTechnologiesDotnetState defaults) {
            $ = new MonitoredTechnologiesDotnetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param enabledDotNetCore Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled
         * 
         * @return builder
         * 
         */
        public Builder enabledDotNetCore(@Nullable Output<Boolean> enabledDotNetCore) {
            $.enabledDotNetCore = enabledDotNetCore;
            return this;
        }

        /**
         * @param enabledDotNetCore Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled
         * 
         * @return builder
         * 
         */
        public Builder enabledDotNetCore(Boolean enabledDotNetCore) {
            return enabledDotNetCore(Output.of(enabledDotNetCore));
        }

        /**
         * @param hostId The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
         * 
         * @return builder
         * 
         */
        public Builder hostId(@Nullable Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
         * 
         * @return builder
         * 
         */
        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        public MonitoredTechnologiesDotnetState build() {
            return $;
        }
    }

}
