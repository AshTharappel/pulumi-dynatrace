// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrowserMonitorScriptConfigurationBandwidthArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptConfigurationBandwidthArgs Empty = new BrowserMonitorScriptConfigurationBandwidthArgs();

    @Import(name="download")
    private @Nullable Output<Integer> download;

    public Optional<Output<Integer>> download() {
        return Optional.ofNullable(this.download);
    }

    @Import(name="latency")
    private @Nullable Output<Integer> latency;

    public Optional<Output<Integer>> latency() {
        return Optional.ofNullable(this.latency);
    }

    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    @Import(name="upload")
    private @Nullable Output<Integer> upload;

    public Optional<Output<Integer>> upload() {
        return Optional.ofNullable(this.upload);
    }

    private BrowserMonitorScriptConfigurationBandwidthArgs() {}

    private BrowserMonitorScriptConfigurationBandwidthArgs(BrowserMonitorScriptConfigurationBandwidthArgs $) {
        this.download = $.download;
        this.latency = $.latency;
        this.networkType = $.networkType;
        this.upload = $.upload;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptConfigurationBandwidthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptConfigurationBandwidthArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptConfigurationBandwidthArgs();
        }

        public Builder(BrowserMonitorScriptConfigurationBandwidthArgs defaults) {
            $ = new BrowserMonitorScriptConfigurationBandwidthArgs(Objects.requireNonNull(defaults));
        }

        public Builder download(@Nullable Output<Integer> download) {
            $.download = download;
            return this;
        }

        public Builder download(Integer download) {
            return download(Output.of(download));
        }

        public Builder latency(@Nullable Output<Integer> latency) {
            $.latency = latency;
            return this;
        }

        public Builder latency(Integer latency) {
            return latency(Output.of(latency));
        }

        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        public Builder upload(@Nullable Output<Integer> upload) {
            $.upload = upload;
            return this;
        }

        public Builder upload(Integer upload) {
            return upload(Output.of(upload));
        }

        public BrowserMonitorScriptConfigurationBandwidthArgs build() {
            return $;
        }
    }

}
