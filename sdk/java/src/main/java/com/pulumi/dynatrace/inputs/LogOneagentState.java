// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogOneagentState extends com.pulumi.resources.ResourceArgs {

    public static final LogOneagentState Empty = new LogOneagentState();

    /**
     * Detect container time zones
     * 
     */
    @Import(name="containerTimezoneHeuristicEnabled")
    private @Nullable Output<Boolean> containerTimezoneHeuristicEnabled;

    /**
     * @return Detect container time zones
     * 
     */
    public Optional<Output<Boolean>> containerTimezoneHeuristicEnabled() {
        return Optional.ofNullable(this.containerTimezoneHeuristicEnabled);
    }

    /**
     * Detect logs inside containers
     * 
     */
    @Import(name="containersLogsDetectionEnabled")
    private @Nullable Output<Boolean> containersLogsDetectionEnabled;

    /**
     * @return Detect logs inside containers
     * 
     */
    public Optional<Output<Boolean>> containersLogsDetectionEnabled() {
        return Optional.ofNullable(this.containersLogsDetectionEnabled);
    }

    /**
     * Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
     * 
     */
    @Import(name="dateSearchLimitBytes")
    private @Nullable Output<Integer> dateSearchLimitBytes;

    /**
     * @return Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
     * 
     */
    public Optional<Output<Integer>> dateSearchLimitBytes() {
        return Optional.ofNullable(this.dateSearchLimitBytes);
    }

    /**
     * Default timezone for agent if more specific configurations is not defined.
     * 
     */
    @Import(name="defaultTimezone")
    private @Nullable Output<String> defaultTimezone;

    /**
     * @return Default timezone for agent if more specific configurations is not defined.
     * 
     */
    public Optional<Output<String>> defaultTimezone() {
        return Optional.ofNullable(this.defaultTimezone);
    }

    /**
     * Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs
     * 
     */
    @Import(name="eventLogQueryTimeoutSec")
    private @Nullable Output<Integer> eventLogQueryTimeoutSec;

    /**
     * @return Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs
     * 
     */
    public Optional<Output<Integer>> eventLogQueryTimeoutSec() {
        return Optional.ofNullable(this.eventLogQueryTimeoutSec);
    }

    /**
     * Detect IIS logs
     * 
     */
    @Import(name="iisdetectionEnabled")
    private @Nullable Output<Boolean> iisdetectionEnabled;

    /**
     * @return Detect IIS logs
     * 
     */
    public Optional<Output<Boolean>> iisdetectionEnabled() {
        return Optional.ofNullable(this.iisdetectionEnabled);
    }

    /**
     * Detect logs on Network File Systems (NFS)
     * 
     */
    @Import(name="logScannerLinuxNfsEnabled")
    private @Nullable Output<Boolean> logScannerLinuxNfsEnabled;

    /**
     * @return Detect logs on Network File Systems (NFS)
     * 
     */
    public Optional<Output<Boolean>> logScannerLinuxNfsEnabled() {
        return Optional.ofNullable(this.logScannerLinuxNfsEnabled);
    }

    /**
     * Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn&#39;t be added.
     * 
     */
    @Import(name="maxLgisPerEntityCount")
    private @Nullable Output<Integer> maxLgisPerEntityCount;

    /**
     * @return Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn&#39;t be added.
     * 
     */
    public Optional<Output<Integer>> maxLgisPerEntityCount() {
        return Optional.ofNullable(this.maxLgisPerEntityCount);
    }

    /**
     * Defines the minimum number of bytes in log file required for binary detection.
     * 
     */
    @Import(name="minBinaryDetectionLimitBytes")
    private @Nullable Output<Integer> minBinaryDetectionLimitBytes;

    /**
     * @return Defines the minimum number of bytes in log file required for binary detection.
     * 
     */
    public Optional<Output<Integer>> minBinaryDetectionLimitBytes() {
        return Optional.ofNullable(this.minBinaryDetectionLimitBytes);
    }

    /**
     * Enabling this option may affect your DDU consumption. For more details, see [documentation](https://dt-url.net/hp43ef8).
     * 
     */
    @Import(name="monitorOwnLogsEnabled")
    private @Nullable Output<Boolean> monitorOwnLogsEnabled;

    /**
     * @return Enabling this option may affect your DDU consumption. For more details, see [documentation](https://dt-url.net/hp43ef8).
     * 
     */
    public Optional<Output<Boolean>> monitorOwnLogsEnabled() {
        return Optional.ofNullable(this.monitorOwnLogsEnabled);
    }

    /**
     * Detect open log files
     * 
     */
    @Import(name="openLogFilesDetectionEnabled")
    private @Nullable Output<Boolean> openLogFilesDetectionEnabled;

    /**
     * @return Detect open log files
     * 
     */
    public Optional<Output<Boolean>> openLogFilesDetectionEnabled() {
        return Optional.ofNullable(this.openLogFilesDetectionEnabled);
    }

    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.
     * 
     */
    @Import(name="severityDetectionLimitBytes")
    private @Nullable Output<Integer> severityDetectionLimitBytes;

    /**
     * @return Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.
     * 
     */
    public Optional<Output<Integer>> severityDetectionLimitBytes() {
        return Optional.ofNullable(this.severityDetectionLimitBytes);
    }

    /**
     * Defines the number of the first lines of every log entry where severity is searched.
     * 
     */
    @Import(name="severityDetectionLinesLimit")
    private @Nullable Output<Integer> severityDetectionLinesLimit;

    /**
     * @return Defines the number of the first lines of every log entry where severity is searched.
     * 
     */
    public Optional<Output<Integer>> severityDetectionLinesLimit() {
        return Optional.ofNullable(this.severityDetectionLinesLimit);
    }

    /**
     * (Linux: syslog, message log) (Windows: system, application, security event logs)
     * 
     */
    @Import(name="systemLogsDetectionEnabled")
    private @Nullable Output<Boolean> systemLogsDetectionEnabled;

    /**
     * @return (Linux: syslog, message log) (Windows: system, application, security event logs)
     * 
     */
    public Optional<Output<Boolean>> systemLogsDetectionEnabled() {
        return Optional.ofNullable(this.systemLogsDetectionEnabled);
    }

    /**
     * Deprecated for OneAgent 1.247+
     * 
     */
    @Import(name="utcasDefaultContainerTimezone")
    private @Nullable Output<Boolean> utcasDefaultContainerTimezone;

    /**
     * @return Deprecated for OneAgent 1.247+
     * 
     */
    public Optional<Output<Boolean>> utcasDefaultContainerTimezone() {
        return Optional.ofNullable(this.utcasDefaultContainerTimezone);
    }

    private LogOneagentState() {}

    private LogOneagentState(LogOneagentState $) {
        this.containerTimezoneHeuristicEnabled = $.containerTimezoneHeuristicEnabled;
        this.containersLogsDetectionEnabled = $.containersLogsDetectionEnabled;
        this.dateSearchLimitBytes = $.dateSearchLimitBytes;
        this.defaultTimezone = $.defaultTimezone;
        this.eventLogQueryTimeoutSec = $.eventLogQueryTimeoutSec;
        this.iisdetectionEnabled = $.iisdetectionEnabled;
        this.logScannerLinuxNfsEnabled = $.logScannerLinuxNfsEnabled;
        this.maxLgisPerEntityCount = $.maxLgisPerEntityCount;
        this.minBinaryDetectionLimitBytes = $.minBinaryDetectionLimitBytes;
        this.monitorOwnLogsEnabled = $.monitorOwnLogsEnabled;
        this.openLogFilesDetectionEnabled = $.openLogFilesDetectionEnabled;
        this.scope = $.scope;
        this.severityDetectionLimitBytes = $.severityDetectionLimitBytes;
        this.severityDetectionLinesLimit = $.severityDetectionLinesLimit;
        this.systemLogsDetectionEnabled = $.systemLogsDetectionEnabled;
        this.utcasDefaultContainerTimezone = $.utcasDefaultContainerTimezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogOneagentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogOneagentState $;

        public Builder() {
            $ = new LogOneagentState();
        }

        public Builder(LogOneagentState defaults) {
            $ = new LogOneagentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerTimezoneHeuristicEnabled Detect container time zones
         * 
         * @return builder
         * 
         */
        public Builder containerTimezoneHeuristicEnabled(@Nullable Output<Boolean> containerTimezoneHeuristicEnabled) {
            $.containerTimezoneHeuristicEnabled = containerTimezoneHeuristicEnabled;
            return this;
        }

        /**
         * @param containerTimezoneHeuristicEnabled Detect container time zones
         * 
         * @return builder
         * 
         */
        public Builder containerTimezoneHeuristicEnabled(Boolean containerTimezoneHeuristicEnabled) {
            return containerTimezoneHeuristicEnabled(Output.of(containerTimezoneHeuristicEnabled));
        }

        /**
         * @param containersLogsDetectionEnabled Detect logs inside containers
         * 
         * @return builder
         * 
         */
        public Builder containersLogsDetectionEnabled(@Nullable Output<Boolean> containersLogsDetectionEnabled) {
            $.containersLogsDetectionEnabled = containersLogsDetectionEnabled;
            return this;
        }

        /**
         * @param containersLogsDetectionEnabled Detect logs inside containers
         * 
         * @return builder
         * 
         */
        public Builder containersLogsDetectionEnabled(Boolean containersLogsDetectionEnabled) {
            return containersLogsDetectionEnabled(Output.of(containersLogsDetectionEnabled));
        }

        /**
         * @param dateSearchLimitBytes Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
         * 
         * @return builder
         * 
         */
        public Builder dateSearchLimitBytes(@Nullable Output<Integer> dateSearchLimitBytes) {
            $.dateSearchLimitBytes = dateSearchLimitBytes;
            return this;
        }

        /**
         * @param dateSearchLimitBytes Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
         * 
         * @return builder
         * 
         */
        public Builder dateSearchLimitBytes(Integer dateSearchLimitBytes) {
            return dateSearchLimitBytes(Output.of(dateSearchLimitBytes));
        }

        /**
         * @param defaultTimezone Default timezone for agent if more specific configurations is not defined.
         * 
         * @return builder
         * 
         */
        public Builder defaultTimezone(@Nullable Output<String> defaultTimezone) {
            $.defaultTimezone = defaultTimezone;
            return this;
        }

        /**
         * @param defaultTimezone Default timezone for agent if more specific configurations is not defined.
         * 
         * @return builder
         * 
         */
        public Builder defaultTimezone(String defaultTimezone) {
            return defaultTimezone(Output.of(defaultTimezone));
        }

        /**
         * @param eventLogQueryTimeoutSec Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs
         * 
         * @return builder
         * 
         */
        public Builder eventLogQueryTimeoutSec(@Nullable Output<Integer> eventLogQueryTimeoutSec) {
            $.eventLogQueryTimeoutSec = eventLogQueryTimeoutSec;
            return this;
        }

        /**
         * @param eventLogQueryTimeoutSec Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs
         * 
         * @return builder
         * 
         */
        public Builder eventLogQueryTimeoutSec(Integer eventLogQueryTimeoutSec) {
            return eventLogQueryTimeoutSec(Output.of(eventLogQueryTimeoutSec));
        }

        /**
         * @param iisdetectionEnabled Detect IIS logs
         * 
         * @return builder
         * 
         */
        public Builder iisdetectionEnabled(@Nullable Output<Boolean> iisdetectionEnabled) {
            $.iisdetectionEnabled = iisdetectionEnabled;
            return this;
        }

        /**
         * @param iisdetectionEnabled Detect IIS logs
         * 
         * @return builder
         * 
         */
        public Builder iisdetectionEnabled(Boolean iisdetectionEnabled) {
            return iisdetectionEnabled(Output.of(iisdetectionEnabled));
        }

        /**
         * @param logScannerLinuxNfsEnabled Detect logs on Network File Systems (NFS)
         * 
         * @return builder
         * 
         */
        public Builder logScannerLinuxNfsEnabled(@Nullable Output<Boolean> logScannerLinuxNfsEnabled) {
            $.logScannerLinuxNfsEnabled = logScannerLinuxNfsEnabled;
            return this;
        }

        /**
         * @param logScannerLinuxNfsEnabled Detect logs on Network File Systems (NFS)
         * 
         * @return builder
         * 
         */
        public Builder logScannerLinuxNfsEnabled(Boolean logScannerLinuxNfsEnabled) {
            return logScannerLinuxNfsEnabled(Output.of(logScannerLinuxNfsEnabled));
        }

        /**
         * @param maxLgisPerEntityCount Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn&#39;t be added.
         * 
         * @return builder
         * 
         */
        public Builder maxLgisPerEntityCount(@Nullable Output<Integer> maxLgisPerEntityCount) {
            $.maxLgisPerEntityCount = maxLgisPerEntityCount;
            return this;
        }

        /**
         * @param maxLgisPerEntityCount Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn&#39;t be added.
         * 
         * @return builder
         * 
         */
        public Builder maxLgisPerEntityCount(Integer maxLgisPerEntityCount) {
            return maxLgisPerEntityCount(Output.of(maxLgisPerEntityCount));
        }

        /**
         * @param minBinaryDetectionLimitBytes Defines the minimum number of bytes in log file required for binary detection.
         * 
         * @return builder
         * 
         */
        public Builder minBinaryDetectionLimitBytes(@Nullable Output<Integer> minBinaryDetectionLimitBytes) {
            $.minBinaryDetectionLimitBytes = minBinaryDetectionLimitBytes;
            return this;
        }

        /**
         * @param minBinaryDetectionLimitBytes Defines the minimum number of bytes in log file required for binary detection.
         * 
         * @return builder
         * 
         */
        public Builder minBinaryDetectionLimitBytes(Integer minBinaryDetectionLimitBytes) {
            return minBinaryDetectionLimitBytes(Output.of(minBinaryDetectionLimitBytes));
        }

        /**
         * @param monitorOwnLogsEnabled Enabling this option may affect your DDU consumption. For more details, see [documentation](https://dt-url.net/hp43ef8).
         * 
         * @return builder
         * 
         */
        public Builder monitorOwnLogsEnabled(@Nullable Output<Boolean> monitorOwnLogsEnabled) {
            $.monitorOwnLogsEnabled = monitorOwnLogsEnabled;
            return this;
        }

        /**
         * @param monitorOwnLogsEnabled Enabling this option may affect your DDU consumption. For more details, see [documentation](https://dt-url.net/hp43ef8).
         * 
         * @return builder
         * 
         */
        public Builder monitorOwnLogsEnabled(Boolean monitorOwnLogsEnabled) {
            return monitorOwnLogsEnabled(Output.of(monitorOwnLogsEnabled));
        }

        /**
         * @param openLogFilesDetectionEnabled Detect open log files
         * 
         * @return builder
         * 
         */
        public Builder openLogFilesDetectionEnabled(@Nullable Output<Boolean> openLogFilesDetectionEnabled) {
            $.openLogFilesDetectionEnabled = openLogFilesDetectionEnabled;
            return this;
        }

        /**
         * @param openLogFilesDetectionEnabled Detect open log files
         * 
         * @return builder
         * 
         */
        public Builder openLogFilesDetectionEnabled(Boolean openLogFilesDetectionEnabled) {
            return openLogFilesDetectionEnabled(Output.of(openLogFilesDetectionEnabled));
        }

        /**
         * @param scope The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param severityDetectionLimitBytes Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.
         * 
         * @return builder
         * 
         */
        public Builder severityDetectionLimitBytes(@Nullable Output<Integer> severityDetectionLimitBytes) {
            $.severityDetectionLimitBytes = severityDetectionLimitBytes;
            return this;
        }

        /**
         * @param severityDetectionLimitBytes Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.
         * 
         * @return builder
         * 
         */
        public Builder severityDetectionLimitBytes(Integer severityDetectionLimitBytes) {
            return severityDetectionLimitBytes(Output.of(severityDetectionLimitBytes));
        }

        /**
         * @param severityDetectionLinesLimit Defines the number of the first lines of every log entry where severity is searched.
         * 
         * @return builder
         * 
         */
        public Builder severityDetectionLinesLimit(@Nullable Output<Integer> severityDetectionLinesLimit) {
            $.severityDetectionLinesLimit = severityDetectionLinesLimit;
            return this;
        }

        /**
         * @param severityDetectionLinesLimit Defines the number of the first lines of every log entry where severity is searched.
         * 
         * @return builder
         * 
         */
        public Builder severityDetectionLinesLimit(Integer severityDetectionLinesLimit) {
            return severityDetectionLinesLimit(Output.of(severityDetectionLinesLimit));
        }

        /**
         * @param systemLogsDetectionEnabled (Linux: syslog, message log) (Windows: system, application, security event logs)
         * 
         * @return builder
         * 
         */
        public Builder systemLogsDetectionEnabled(@Nullable Output<Boolean> systemLogsDetectionEnabled) {
            $.systemLogsDetectionEnabled = systemLogsDetectionEnabled;
            return this;
        }

        /**
         * @param systemLogsDetectionEnabled (Linux: syslog, message log) (Windows: system, application, security event logs)
         * 
         * @return builder
         * 
         */
        public Builder systemLogsDetectionEnabled(Boolean systemLogsDetectionEnabled) {
            return systemLogsDetectionEnabled(Output.of(systemLogsDetectionEnabled));
        }

        /**
         * @param utcasDefaultContainerTimezone Deprecated for OneAgent 1.247+
         * 
         * @return builder
         * 
         */
        public Builder utcasDefaultContainerTimezone(@Nullable Output<Boolean> utcasDefaultContainerTimezone) {
            $.utcasDefaultContainerTimezone = utcasDefaultContainerTimezone;
            return this;
        }

        /**
         * @param utcasDefaultContainerTimezone Deprecated for OneAgent 1.247+
         * 
         * @return builder
         * 
         */
        public Builder utcasDefaultContainerTimezone(Boolean utcasDefaultContainerTimezone) {
            return utcasDefaultContainerTimezone(Output.of(utcasDefaultContainerTimezone));
        }

        public LogOneagentState build() {
            return $;
        }
    }

}
