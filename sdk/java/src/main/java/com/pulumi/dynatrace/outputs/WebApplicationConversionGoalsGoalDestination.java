// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationConversionGoalsGoalDestination {
    private @Nullable Boolean caseSensitive;
    private @Nullable String matchType;
    private String urlOrPath;

    private WebApplicationConversionGoalsGoalDestination() {}
    public Optional<Boolean> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }
    public Optional<String> matchType() {
        return Optional.ofNullable(this.matchType);
    }
    public String urlOrPath() {
        return this.urlOrPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationConversionGoalsGoalDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean caseSensitive;
        private @Nullable String matchType;
        private String urlOrPath;
        public Builder() {}
        public Builder(WebApplicationConversionGoalsGoalDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caseSensitive = defaults.caseSensitive;
    	      this.matchType = defaults.matchType;
    	      this.urlOrPath = defaults.urlOrPath;
        }

        @CustomType.Setter
        public Builder caseSensitive(@Nullable Boolean caseSensitive) {
            this.caseSensitive = caseSensitive;
            return this;
        }
        @CustomType.Setter
        public Builder matchType(@Nullable String matchType) {
            this.matchType = matchType;
            return this;
        }
        @CustomType.Setter
        public Builder urlOrPath(String urlOrPath) {
            this.urlOrPath = Objects.requireNonNull(urlOrPath);
            return this;
        }
        public WebApplicationConversionGoalsGoalDestination build() {
            final var o = new WebApplicationConversionGoalsGoalDestination();
            o.caseSensitive = caseSensitive;
            o.matchType = matchType;
            o.urlOrPath = urlOrPath;
            return o;
        }
    }
}
