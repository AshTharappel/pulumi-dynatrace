// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.DiskSpecificAnomaliesV2Args;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.DiskSpecificAnomaliesV2State;
import com.pulumi.dynatrace.outputs.DiskSpecificAnomaliesV2DiskLowInodesDetection;
import com.pulumi.dynatrace.outputs.DiskSpecificAnomaliesV2DiskLowSpaceDetection;
import com.pulumi.dynatrace.outputs.DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/diskSpecificAnomaliesV2:DiskSpecificAnomaliesV2")
public class DiskSpecificAnomaliesV2 extends com.pulumi.resources.CustomResource {
    /**
     * The id for the disk anomaly detection
     * 
     */
    @Export(name="diskId", refs={String.class}, tree="[0]")
    private Output<String> diskId;

    /**
     * @return The id for the disk anomaly detection
     * 
     */
    public Output<String> diskId() {
        return this.diskId;
    }
    /**
     * no documentation available
     * 
     */
    @Export(name="diskLowInodesDetection", refs={DiskSpecificAnomaliesV2DiskLowInodesDetection.class}, tree="[0]")
    private Output</* @Nullable */ DiskSpecificAnomaliesV2DiskLowInodesDetection> diskLowInodesDetection;

    /**
     * @return no documentation available
     * 
     */
    public Output<Optional<DiskSpecificAnomaliesV2DiskLowInodesDetection>> diskLowInodesDetection() {
        return Codegen.optional(this.diskLowInodesDetection);
    }
    /**
     * no documentation available
     * 
     */
    @Export(name="diskLowSpaceDetection", refs={DiskSpecificAnomaliesV2DiskLowSpaceDetection.class}, tree="[0]")
    private Output</* @Nullable */ DiskSpecificAnomaliesV2DiskLowSpaceDetection> diskLowSpaceDetection;

    /**
     * @return no documentation available
     * 
     */
    public Output<Optional<DiskSpecificAnomaliesV2DiskLowSpaceDetection>> diskLowSpaceDetection() {
        return Codegen.optional(this.diskLowSpaceDetection);
    }
    /**
     * no documentation available
     * 
     */
    @Export(name="diskSlowWritesAndReadsDetection", refs={DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection.class}, tree="[0]")
    private Output</* @Nullable */ DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection> diskSlowWritesAndReadsDetection;

    /**
     * @return no documentation available
     * 
     */
    public Output<Optional<DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection>> diskSlowWritesAndReadsDetection() {
        return Codegen.optional(this.diskSlowWritesAndReadsDetection);
    }
    /**
     * Override low disk space detection settings
     * 
     */
    @Export(name="overrideDiskLowSpaceDetection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> overrideDiskLowSpaceDetection;

    /**
     * @return Override low disk space detection settings
     * 
     */
    public Output<Boolean> overrideDiskLowSpaceDetection() {
        return this.overrideDiskLowSpaceDetection;
    }
    /**
     * Override low inodes detection settings
     * 
     */
    @Export(name="overrideLowInodesDetection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> overrideLowInodesDetection;

    /**
     * @return Override low inodes detection settings
     * 
     */
    public Output<Boolean> overrideLowInodesDetection() {
        return this.overrideLowInodesDetection;
    }
    /**
     * Override slow writes and reads detection settings
     * 
     */
    @Export(name="overrideSlowWritesAndReadsDetection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> overrideSlowWritesAndReadsDetection;

    /**
     * @return Override slow writes and reads detection settings
     * 
     */
    public Output<Boolean> overrideSlowWritesAndReadsDetection() {
        return this.overrideSlowWritesAndReadsDetection;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiskSpecificAnomaliesV2(String name) {
        this(name, DiskSpecificAnomaliesV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiskSpecificAnomaliesV2(String name, DiskSpecificAnomaliesV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiskSpecificAnomaliesV2(String name, DiskSpecificAnomaliesV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/diskSpecificAnomaliesV2:DiskSpecificAnomaliesV2", name, args == null ? DiskSpecificAnomaliesV2Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DiskSpecificAnomaliesV2(String name, Output<String> id, @Nullable DiskSpecificAnomaliesV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/diskSpecificAnomaliesV2:DiskSpecificAnomaliesV2", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiskSpecificAnomaliesV2 get(String name, Output<String> id, @Nullable DiskSpecificAnomaliesV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiskSpecificAnomaliesV2(name, id, state, options);
    }
}
