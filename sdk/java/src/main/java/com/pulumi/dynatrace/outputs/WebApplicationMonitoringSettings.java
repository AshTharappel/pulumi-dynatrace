// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettingsBrowserRestrictionSettings;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettingsContentCapture;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettingsIpAddressRestrictionSettings;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettingsJavascriptFrameworkSupport;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettingsJavascriptInjectionRules;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationMonitoringSettings {
    /**
     * @return Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
     * 
     */
    private @Nullable Boolean addCrossOriginAnonymousAttribute;
    /**
     * @return Advanced JavaScript tag settings
     * 
     */
    private @Nullable WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings advancedJavascriptTagSettings;
    /**
     * @return The name of the angular package
     * 
     */
    private @Nullable String angularPackageName;
    /**
     * @return Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
     * 
     */
    private @Nullable WebApplicationMonitoringSettingsBrowserRestrictionSettings browserRestrictionSettings;
    /**
     * @return Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
     * 
     */
    private @Nullable Boolean cacheControlHeaderOptimizations;
    /**
     * @return Settings for content capture
     * 
     */
    private WebApplicationMonitoringSettingsContentCapture contentCapture;
    /**
     * @return Domain for cookie placement. Maximum 150 characters.
     * 
     */
    private @Nullable String cookiePlacementDomain;
    /**
     * @return To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
     * 
     */
    private @Nullable String correlationHeaderInclusionRegex;
    private @Nullable String customConfigurationProperties;
    private @Nullable String excludeXhrRegex;
    private @Nullable Boolean fetchRequests;
    /**
     * @return Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
     * 
     */
    private String injectionMode;
    private @Nullable WebApplicationMonitoringSettingsIpAddressRestrictionSettings ipAddressRestrictionSettings;
    private @Nullable WebApplicationMonitoringSettingsJavascriptFrameworkSupport javascriptFrameworkSupport;
    private @Nullable WebApplicationMonitoringSettingsJavascriptInjectionRules javascriptInjectionRules;
    private @Nullable String libraryFileLocation;
    private @Nullable String monitoringDataPath;
    private @Nullable Integer scriptTagCacheDurationInHours;
    private @Nullable Boolean secureCookieAttribute;
    private @Nullable String serverRequestPathId;
    private @Nullable Boolean xmlHttpRequest;

    private WebApplicationMonitoringSettings() {}
    /**
     * @return Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
     * 
     */
    public Optional<Boolean> addCrossOriginAnonymousAttribute() {
        return Optional.ofNullable(this.addCrossOriginAnonymousAttribute);
    }
    /**
     * @return Advanced JavaScript tag settings
     * 
     */
    public Optional<WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings> advancedJavascriptTagSettings() {
        return Optional.ofNullable(this.advancedJavascriptTagSettings);
    }
    /**
     * @return The name of the angular package
     * 
     */
    public Optional<String> angularPackageName() {
        return Optional.ofNullable(this.angularPackageName);
    }
    /**
     * @return Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
     * 
     */
    public Optional<WebApplicationMonitoringSettingsBrowserRestrictionSettings> browserRestrictionSettings() {
        return Optional.ofNullable(this.browserRestrictionSettings);
    }
    /**
     * @return Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
     * 
     */
    public Optional<Boolean> cacheControlHeaderOptimizations() {
        return Optional.ofNullable(this.cacheControlHeaderOptimizations);
    }
    /**
     * @return Settings for content capture
     * 
     */
    public WebApplicationMonitoringSettingsContentCapture contentCapture() {
        return this.contentCapture;
    }
    /**
     * @return Domain for cookie placement. Maximum 150 characters.
     * 
     */
    public Optional<String> cookiePlacementDomain() {
        return Optional.ofNullable(this.cookiePlacementDomain);
    }
    /**
     * @return To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
     * 
     */
    public Optional<String> correlationHeaderInclusionRegex() {
        return Optional.ofNullable(this.correlationHeaderInclusionRegex);
    }
    public Optional<String> customConfigurationProperties() {
        return Optional.ofNullable(this.customConfigurationProperties);
    }
    public Optional<String> excludeXhrRegex() {
        return Optional.ofNullable(this.excludeXhrRegex);
    }
    public Optional<Boolean> fetchRequests() {
        return Optional.ofNullable(this.fetchRequests);
    }
    /**
     * @return Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
     * 
     */
    public String injectionMode() {
        return this.injectionMode;
    }
    public Optional<WebApplicationMonitoringSettingsIpAddressRestrictionSettings> ipAddressRestrictionSettings() {
        return Optional.ofNullable(this.ipAddressRestrictionSettings);
    }
    public Optional<WebApplicationMonitoringSettingsJavascriptFrameworkSupport> javascriptFrameworkSupport() {
        return Optional.ofNullable(this.javascriptFrameworkSupport);
    }
    public Optional<WebApplicationMonitoringSettingsJavascriptInjectionRules> javascriptInjectionRules() {
        return Optional.ofNullable(this.javascriptInjectionRules);
    }
    public Optional<String> libraryFileLocation() {
        return Optional.ofNullable(this.libraryFileLocation);
    }
    public Optional<String> monitoringDataPath() {
        return Optional.ofNullable(this.monitoringDataPath);
    }
    public Optional<Integer> scriptTagCacheDurationInHours() {
        return Optional.ofNullable(this.scriptTagCacheDurationInHours);
    }
    public Optional<Boolean> secureCookieAttribute() {
        return Optional.ofNullable(this.secureCookieAttribute);
    }
    public Optional<String> serverRequestPathId() {
        return Optional.ofNullable(this.serverRequestPathId);
    }
    public Optional<Boolean> xmlHttpRequest() {
        return Optional.ofNullable(this.xmlHttpRequest);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationMonitoringSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean addCrossOriginAnonymousAttribute;
        private @Nullable WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings advancedJavascriptTagSettings;
        private @Nullable String angularPackageName;
        private @Nullable WebApplicationMonitoringSettingsBrowserRestrictionSettings browserRestrictionSettings;
        private @Nullable Boolean cacheControlHeaderOptimizations;
        private WebApplicationMonitoringSettingsContentCapture contentCapture;
        private @Nullable String cookiePlacementDomain;
        private @Nullable String correlationHeaderInclusionRegex;
        private @Nullable String customConfigurationProperties;
        private @Nullable String excludeXhrRegex;
        private @Nullable Boolean fetchRequests;
        private String injectionMode;
        private @Nullable WebApplicationMonitoringSettingsIpAddressRestrictionSettings ipAddressRestrictionSettings;
        private @Nullable WebApplicationMonitoringSettingsJavascriptFrameworkSupport javascriptFrameworkSupport;
        private @Nullable WebApplicationMonitoringSettingsJavascriptInjectionRules javascriptInjectionRules;
        private @Nullable String libraryFileLocation;
        private @Nullable String monitoringDataPath;
        private @Nullable Integer scriptTagCacheDurationInHours;
        private @Nullable Boolean secureCookieAttribute;
        private @Nullable String serverRequestPathId;
        private @Nullable Boolean xmlHttpRequest;
        public Builder() {}
        public Builder(WebApplicationMonitoringSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addCrossOriginAnonymousAttribute = defaults.addCrossOriginAnonymousAttribute;
    	      this.advancedJavascriptTagSettings = defaults.advancedJavascriptTagSettings;
    	      this.angularPackageName = defaults.angularPackageName;
    	      this.browserRestrictionSettings = defaults.browserRestrictionSettings;
    	      this.cacheControlHeaderOptimizations = defaults.cacheControlHeaderOptimizations;
    	      this.contentCapture = defaults.contentCapture;
    	      this.cookiePlacementDomain = defaults.cookiePlacementDomain;
    	      this.correlationHeaderInclusionRegex = defaults.correlationHeaderInclusionRegex;
    	      this.customConfigurationProperties = defaults.customConfigurationProperties;
    	      this.excludeXhrRegex = defaults.excludeXhrRegex;
    	      this.fetchRequests = defaults.fetchRequests;
    	      this.injectionMode = defaults.injectionMode;
    	      this.ipAddressRestrictionSettings = defaults.ipAddressRestrictionSettings;
    	      this.javascriptFrameworkSupport = defaults.javascriptFrameworkSupport;
    	      this.javascriptInjectionRules = defaults.javascriptInjectionRules;
    	      this.libraryFileLocation = defaults.libraryFileLocation;
    	      this.monitoringDataPath = defaults.monitoringDataPath;
    	      this.scriptTagCacheDurationInHours = defaults.scriptTagCacheDurationInHours;
    	      this.secureCookieAttribute = defaults.secureCookieAttribute;
    	      this.serverRequestPathId = defaults.serverRequestPathId;
    	      this.xmlHttpRequest = defaults.xmlHttpRequest;
        }

        @CustomType.Setter
        public Builder addCrossOriginAnonymousAttribute(@Nullable Boolean addCrossOriginAnonymousAttribute) {
            this.addCrossOriginAnonymousAttribute = addCrossOriginAnonymousAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder advancedJavascriptTagSettings(@Nullable WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings advancedJavascriptTagSettings) {
            this.advancedJavascriptTagSettings = advancedJavascriptTagSettings;
            return this;
        }
        @CustomType.Setter
        public Builder angularPackageName(@Nullable String angularPackageName) {
            this.angularPackageName = angularPackageName;
            return this;
        }
        @CustomType.Setter
        public Builder browserRestrictionSettings(@Nullable WebApplicationMonitoringSettingsBrowserRestrictionSettings browserRestrictionSettings) {
            this.browserRestrictionSettings = browserRestrictionSettings;
            return this;
        }
        @CustomType.Setter
        public Builder cacheControlHeaderOptimizations(@Nullable Boolean cacheControlHeaderOptimizations) {
            this.cacheControlHeaderOptimizations = cacheControlHeaderOptimizations;
            return this;
        }
        @CustomType.Setter
        public Builder contentCapture(WebApplicationMonitoringSettingsContentCapture contentCapture) {
            this.contentCapture = Objects.requireNonNull(contentCapture);
            return this;
        }
        @CustomType.Setter
        public Builder cookiePlacementDomain(@Nullable String cookiePlacementDomain) {
            this.cookiePlacementDomain = cookiePlacementDomain;
            return this;
        }
        @CustomType.Setter
        public Builder correlationHeaderInclusionRegex(@Nullable String correlationHeaderInclusionRegex) {
            this.correlationHeaderInclusionRegex = correlationHeaderInclusionRegex;
            return this;
        }
        @CustomType.Setter
        public Builder customConfigurationProperties(@Nullable String customConfigurationProperties) {
            this.customConfigurationProperties = customConfigurationProperties;
            return this;
        }
        @CustomType.Setter
        public Builder excludeXhrRegex(@Nullable String excludeXhrRegex) {
            this.excludeXhrRegex = excludeXhrRegex;
            return this;
        }
        @CustomType.Setter
        public Builder fetchRequests(@Nullable Boolean fetchRequests) {
            this.fetchRequests = fetchRequests;
            return this;
        }
        @CustomType.Setter
        public Builder injectionMode(String injectionMode) {
            this.injectionMode = Objects.requireNonNull(injectionMode);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressRestrictionSettings(@Nullable WebApplicationMonitoringSettingsIpAddressRestrictionSettings ipAddressRestrictionSettings) {
            this.ipAddressRestrictionSettings = ipAddressRestrictionSettings;
            return this;
        }
        @CustomType.Setter
        public Builder javascriptFrameworkSupport(@Nullable WebApplicationMonitoringSettingsJavascriptFrameworkSupport javascriptFrameworkSupport) {
            this.javascriptFrameworkSupport = javascriptFrameworkSupport;
            return this;
        }
        @CustomType.Setter
        public Builder javascriptInjectionRules(@Nullable WebApplicationMonitoringSettingsJavascriptInjectionRules javascriptInjectionRules) {
            this.javascriptInjectionRules = javascriptInjectionRules;
            return this;
        }
        @CustomType.Setter
        public Builder libraryFileLocation(@Nullable String libraryFileLocation) {
            this.libraryFileLocation = libraryFileLocation;
            return this;
        }
        @CustomType.Setter
        public Builder monitoringDataPath(@Nullable String monitoringDataPath) {
            this.monitoringDataPath = monitoringDataPath;
            return this;
        }
        @CustomType.Setter
        public Builder scriptTagCacheDurationInHours(@Nullable Integer scriptTagCacheDurationInHours) {
            this.scriptTagCacheDurationInHours = scriptTagCacheDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder secureCookieAttribute(@Nullable Boolean secureCookieAttribute) {
            this.secureCookieAttribute = secureCookieAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder serverRequestPathId(@Nullable String serverRequestPathId) {
            this.serverRequestPathId = serverRequestPathId;
            return this;
        }
        @CustomType.Setter
        public Builder xmlHttpRequest(@Nullable Boolean xmlHttpRequest) {
            this.xmlHttpRequest = xmlHttpRequest;
            return this;
        }
        public WebApplicationMonitoringSettings build() {
            final var o = new WebApplicationMonitoringSettings();
            o.addCrossOriginAnonymousAttribute = addCrossOriginAnonymousAttribute;
            o.advancedJavascriptTagSettings = advancedJavascriptTagSettings;
            o.angularPackageName = angularPackageName;
            o.browserRestrictionSettings = browserRestrictionSettings;
            o.cacheControlHeaderOptimizations = cacheControlHeaderOptimizations;
            o.contentCapture = contentCapture;
            o.cookiePlacementDomain = cookiePlacementDomain;
            o.correlationHeaderInclusionRegex = correlationHeaderInclusionRegex;
            o.customConfigurationProperties = customConfigurationProperties;
            o.excludeXhrRegex = excludeXhrRegex;
            o.fetchRequests = fetchRequests;
            o.injectionMode = injectionMode;
            o.ipAddressRestrictionSettings = ipAddressRestrictionSettings;
            o.javascriptFrameworkSupport = javascriptFrameworkSupport;
            o.javascriptInjectionRules = javascriptInjectionRules;
            o.libraryFileLocation = libraryFileLocation;
            o.monitoringDataPath = monitoringDataPath;
            o.scriptTagCacheDurationInHours = scriptTagCacheDurationInHours;
            o.secureCookieAttribute = secureCookieAttribute;
            o.serverRequestPathId = serverRequestPathId;
            o.xmlHttpRequest = xmlHttpRequest;
            return o;
        }
    }
}
