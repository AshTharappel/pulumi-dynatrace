// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceExternalWebRequestConditionsCondition {
    private String attribute;
    private String compareOperationType;
    private @Nullable List<String> frameworks;
    private @Nullable Boolean ignoreCase;
    private @Nullable Integer intValue;
    private @Nullable List<Integer> intValues;
    private @Nullable String ipRangeFrom;
    private @Nullable String ipRangeTo;
    private @Nullable List<String> tagValues;
    private @Nullable List<String> textValues;

    private ServiceExternalWebRequestConditionsCondition() {}
    public String attribute() {
        return this.attribute;
    }
    public String compareOperationType() {
        return this.compareOperationType;
    }
    public List<String> frameworks() {
        return this.frameworks == null ? List.of() : this.frameworks;
    }
    public Optional<Boolean> ignoreCase() {
        return Optional.ofNullable(this.ignoreCase);
    }
    public Optional<Integer> intValue() {
        return Optional.ofNullable(this.intValue);
    }
    public List<Integer> intValues() {
        return this.intValues == null ? List.of() : this.intValues;
    }
    public Optional<String> ipRangeFrom() {
        return Optional.ofNullable(this.ipRangeFrom);
    }
    public Optional<String> ipRangeTo() {
        return Optional.ofNullable(this.ipRangeTo);
    }
    public List<String> tagValues() {
        return this.tagValues == null ? List.of() : this.tagValues;
    }
    public List<String> textValues() {
        return this.textValues == null ? List.of() : this.textValues;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceExternalWebRequestConditionsCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attribute;
        private String compareOperationType;
        private @Nullable List<String> frameworks;
        private @Nullable Boolean ignoreCase;
        private @Nullable Integer intValue;
        private @Nullable List<Integer> intValues;
        private @Nullable String ipRangeFrom;
        private @Nullable String ipRangeTo;
        private @Nullable List<String> tagValues;
        private @Nullable List<String> textValues;
        public Builder() {}
        public Builder(ServiceExternalWebRequestConditionsCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attribute = defaults.attribute;
    	      this.compareOperationType = defaults.compareOperationType;
    	      this.frameworks = defaults.frameworks;
    	      this.ignoreCase = defaults.ignoreCase;
    	      this.intValue = defaults.intValue;
    	      this.intValues = defaults.intValues;
    	      this.ipRangeFrom = defaults.ipRangeFrom;
    	      this.ipRangeTo = defaults.ipRangeTo;
    	      this.tagValues = defaults.tagValues;
    	      this.textValues = defaults.textValues;
        }

        @CustomType.Setter
        public Builder attribute(String attribute) {
            this.attribute = Objects.requireNonNull(attribute);
            return this;
        }
        @CustomType.Setter
        public Builder compareOperationType(String compareOperationType) {
            this.compareOperationType = Objects.requireNonNull(compareOperationType);
            return this;
        }
        @CustomType.Setter
        public Builder frameworks(@Nullable List<String> frameworks) {
            this.frameworks = frameworks;
            return this;
        }
        public Builder frameworks(String... frameworks) {
            return frameworks(List.of(frameworks));
        }
        @CustomType.Setter
        public Builder ignoreCase(@Nullable Boolean ignoreCase) {
            this.ignoreCase = ignoreCase;
            return this;
        }
        @CustomType.Setter
        public Builder intValue(@Nullable Integer intValue) {
            this.intValue = intValue;
            return this;
        }
        @CustomType.Setter
        public Builder intValues(@Nullable List<Integer> intValues) {
            this.intValues = intValues;
            return this;
        }
        public Builder intValues(Integer... intValues) {
            return intValues(List.of(intValues));
        }
        @CustomType.Setter
        public Builder ipRangeFrom(@Nullable String ipRangeFrom) {
            this.ipRangeFrom = ipRangeFrom;
            return this;
        }
        @CustomType.Setter
        public Builder ipRangeTo(@Nullable String ipRangeTo) {
            this.ipRangeTo = ipRangeTo;
            return this;
        }
        @CustomType.Setter
        public Builder tagValues(@Nullable List<String> tagValues) {
            this.tagValues = tagValues;
            return this;
        }
        public Builder tagValues(String... tagValues) {
            return tagValues(List.of(tagValues));
        }
        @CustomType.Setter
        public Builder textValues(@Nullable List<String> textValues) {
            this.textValues = textValues;
            return this;
        }
        public Builder textValues(String... textValues) {
            return textValues(List.of(textValues));
        }
        public ServiceExternalWebRequestConditionsCondition build() {
            final var o = new ServiceExternalWebRequestConditionsCondition();
            o.attribute = attribute;
            o.compareOperationType = compareOperationType;
            o.frameworks = frameworks;
            o.ignoreCase = ignoreCase;
            o.intValue = intValue;
            o.intValues = intValues;
            o.ipRangeFrom = ipRangeFrom;
            o.ipRangeTo = ipRangeTo;
            o.tagValues = tagValues;
            o.textValues = textValues;
            return o;
        }
    }
}
