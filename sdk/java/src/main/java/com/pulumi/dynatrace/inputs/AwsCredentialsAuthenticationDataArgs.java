// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsCredentialsAuthenticationDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsCredentialsAuthenticationDataArgs Empty = new AwsCredentialsAuthenticationDataArgs();

    /**
     * the access key
     * 
     */
    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    /**
     * @return the access key
     * 
     */
    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    /**
     * the ID of the Amazon account
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return the ID of the Amazon account
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * the IAM role to be used by Dynatrace to get monitoring data
     * 
     */
    @Import(name="iamRole")
    private @Nullable Output<String> iamRole;

    /**
     * @return the IAM role to be used by Dynatrace to get monitoring data
     * 
     */
    public Optional<Output<String>> iamRole() {
        return Optional.ofNullable(this.iamRole);
    }

    /**
     * the secret access key
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return the secret access key
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * Any attributes that aren&#39;t yet supported by this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return Any attributes that aren&#39;t yet supported by this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private AwsCredentialsAuthenticationDataArgs() {}

    private AwsCredentialsAuthenticationDataArgs(AwsCredentialsAuthenticationDataArgs $) {
        this.accessKey = $.accessKey;
        this.accountId = $.accountId;
        this.externalId = $.externalId;
        this.iamRole = $.iamRole;
        this.secretKey = $.secretKey;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsCredentialsAuthenticationDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsCredentialsAuthenticationDataArgs $;

        public Builder() {
            $ = new AwsCredentialsAuthenticationDataArgs();
        }

        public Builder(AwsCredentialsAuthenticationDataArgs defaults) {
            $ = new AwsCredentialsAuthenticationDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey the access key
         * 
         * @return builder
         * 
         */
        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey the access key
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param accountId the ID of the Amazon account
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId the ID of the Amazon account
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param externalId the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param iamRole the IAM role to be used by Dynatrace to get monitoring data
         * 
         * @return builder
         * 
         */
        public Builder iamRole(@Nullable Output<String> iamRole) {
            $.iamRole = iamRole;
            return this;
        }

        /**
         * @param iamRole the IAM role to be used by Dynatrace to get monitoring data
         * 
         * @return builder
         * 
         */
        public Builder iamRole(String iamRole) {
            return iamRole(Output.of(iamRole));
        }

        /**
         * @param secretKey the secret access key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey the secret access key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param unknowns Any attributes that aren&#39;t yet supported by this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns Any attributes that aren&#39;t yet supported by this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public AwsCredentialsAuthenticationDataArgs build() {
            return $;
        }
    }

}
