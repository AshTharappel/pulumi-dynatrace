// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenericTypesRulesRuleAttributesAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericTypesRulesRuleAttributesAttributeArgs Empty = new GenericTypesRulesRuleAttributesAttributeArgs();

    /**
     * The human readable type name for this entity type.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The human readable type name for this entity type.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="pattern", required=true)
    private Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern;
    }

    private GenericTypesRulesRuleAttributesAttributeArgs() {}

    private GenericTypesRulesRuleAttributesAttributeArgs(GenericTypesRulesRuleAttributesAttributeArgs $) {
        this.displayName = $.displayName;
        this.key = $.key;
        this.pattern = $.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericTypesRulesRuleAttributesAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericTypesRulesRuleAttributesAttributeArgs $;

        public Builder() {
            $ = new GenericTypesRulesRuleAttributesAttributeArgs();
        }

        public Builder(GenericTypesRulesRuleAttributesAttributeArgs defaults) {
            $ = new GenericTypesRulesRuleAttributesAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName The human readable type name for this entity type.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The human readable type name for this entity type.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public GenericTypesRulesRuleAttributesAttributeArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.pattern = Objects.requireNonNull($.pattern, "expected parameter 'pattern' to be non-null");
            return $;
        }
    }

}
