// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.MobileAppCrashRateCrashRateIncreaseArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MobileAppCrashRateState extends com.pulumi.resources.ResourceArgs {

    public static final MobileAppCrashRateState Empty = new MobileAppCrashRateState();

    /**
     * The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Crash rate increase
     * 
     */
    @Import(name="crashRateIncrease")
    private @Nullable Output<MobileAppCrashRateCrashRateIncreaseArgs> crashRateIncrease;

    /**
     * @return Crash rate increase
     * 
     */
    public Optional<Output<MobileAppCrashRateCrashRateIncreaseArgs>> crashRateIncrease() {
        return Optional.ofNullable(this.crashRateIncrease);
    }

    private MobileAppCrashRateState() {}

    private MobileAppCrashRateState(MobileAppCrashRateState $) {
        this.applicationId = $.applicationId;
        this.crashRateIncrease = $.crashRateIncrease;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MobileAppCrashRateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MobileAppCrashRateState $;

        public Builder() {
            $ = new MobileAppCrashRateState();
        }

        public Builder(MobileAppCrashRateState defaults) {
            $ = new MobileAppCrashRateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param crashRateIncrease Crash rate increase
         * 
         * @return builder
         * 
         */
        public Builder crashRateIncrease(@Nullable Output<MobileAppCrashRateCrashRateIncreaseArgs> crashRateIncrease) {
            $.crashRateIncrease = crashRateIncrease;
            return this;
        }

        /**
         * @param crashRateIncrease Crash rate increase
         * 
         * @return builder
         * 
         */
        public Builder crashRateIncrease(MobileAppCrashRateCrashRateIncreaseArgs crashRateIncrease) {
            return crashRateIncrease(Output.of(crashRateIncrease));
        }

        public MobileAppCrashRateState build() {
            return $;
        }
    }

}
