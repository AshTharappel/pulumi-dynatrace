// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs Empty = new CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs();

    @Import(name="baselineViolationPercentage", required=true)
    private Output<Double> baselineViolationPercentage;

    public Output<Double> baselineViolationPercentage() {
        return this.baselineViolationPercentage;
    }

    @Import(name="concurrentUsers", required=true)
    private Output<Double> concurrentUsers;

    public Output<Double> concurrentUsers() {
        return this.concurrentUsers;
    }

    @Import(name="sensitivity", required=true)
    private Output<String> sensitivity;

    public Output<String> sensitivity() {
        return this.sensitivity;
    }

    private CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs() {}

    private CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs(CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs $) {
        this.baselineViolationPercentage = $.baselineViolationPercentage;
        this.concurrentUsers = $.concurrentUsers;
        this.sensitivity = $.sensitivity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs $;

        public Builder() {
            $ = new CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs();
        }

        public Builder(CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs defaults) {
            $ = new CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs(Objects.requireNonNull(defaults));
        }

        public Builder baselineViolationPercentage(Output<Double> baselineViolationPercentage) {
            $.baselineViolationPercentage = baselineViolationPercentage;
            return this;
        }

        public Builder baselineViolationPercentage(Double baselineViolationPercentage) {
            return baselineViolationPercentage(Output.of(baselineViolationPercentage));
        }

        public Builder concurrentUsers(Output<Double> concurrentUsers) {
            $.concurrentUsers = concurrentUsers;
            return this;
        }

        public Builder concurrentUsers(Double concurrentUsers) {
            return concurrentUsers(Output.of(concurrentUsers));
        }

        public Builder sensitivity(Output<String> sensitivity) {
            $.sensitivity = sensitivity;
            return this;
        }

        public Builder sensitivity(String sensitivity) {
            return sensitivity(Output.of(sensitivity));
        }

        public CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs build() {
            $.baselineViolationPercentage = Objects.requireNonNull($.baselineViolationPercentage, "expected parameter 'baselineViolationPercentage' to be non-null");
            $.concurrentUsers = Objects.requireNonNull($.concurrentUsers, "expected parameter 'concurrentUsers' to be non-null");
            $.sensitivity = Objects.requireNonNull($.sensitivity, "expected parameter 'sensitivity' to be non-null");
            return $;
        }
    }

}
