// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.MaintenanceScheduleDailyRecurrence;
import com.pulumi.dynatrace.outputs.MaintenanceScheduleMonthlyRecurrence;
import com.pulumi.dynatrace.outputs.MaintenanceScheduleOnceRecurrence;
import com.pulumi.dynatrace.outputs.MaintenanceScheduleWeeklyRecurrence;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MaintenanceSchedule {
    /**
     * @return The configuration for maintenance windows occuring daily
     * 
     */
    private @Nullable MaintenanceScheduleDailyRecurrence dailyRecurrence;
    /**
     * @return The configuration for maintenance windows occuring monthly
     * 
     */
    private @Nullable MaintenanceScheduleMonthlyRecurrence monthlyRecurrence;
    /**
     * @return The configuration for maintenance windows occuring once
     * 
     */
    private @Nullable MaintenanceScheduleOnceRecurrence onceRecurrence;
    /**
     * @return The time window of the maintenance window
     * 
     */
    private String type;
    /**
     * @return The configuration for maintenance windows occuring weekly
     * 
     */
    private @Nullable MaintenanceScheduleWeeklyRecurrence weeklyRecurrence;

    private MaintenanceSchedule() {}
    /**
     * @return The configuration for maintenance windows occuring daily
     * 
     */
    public Optional<MaintenanceScheduleDailyRecurrence> dailyRecurrence() {
        return Optional.ofNullable(this.dailyRecurrence);
    }
    /**
     * @return The configuration for maintenance windows occuring monthly
     * 
     */
    public Optional<MaintenanceScheduleMonthlyRecurrence> monthlyRecurrence() {
        return Optional.ofNullable(this.monthlyRecurrence);
    }
    /**
     * @return The configuration for maintenance windows occuring once
     * 
     */
    public Optional<MaintenanceScheduleOnceRecurrence> onceRecurrence() {
        return Optional.ofNullable(this.onceRecurrence);
    }
    /**
     * @return The time window of the maintenance window
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The configuration for maintenance windows occuring weekly
     * 
     */
    public Optional<MaintenanceScheduleWeeklyRecurrence> weeklyRecurrence() {
        return Optional.ofNullable(this.weeklyRecurrence);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MaintenanceScheduleDailyRecurrence dailyRecurrence;
        private @Nullable MaintenanceScheduleMonthlyRecurrence monthlyRecurrence;
        private @Nullable MaintenanceScheduleOnceRecurrence onceRecurrence;
        private String type;
        private @Nullable MaintenanceScheduleWeeklyRecurrence weeklyRecurrence;
        public Builder() {}
        public Builder(MaintenanceSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dailyRecurrence = defaults.dailyRecurrence;
    	      this.monthlyRecurrence = defaults.monthlyRecurrence;
    	      this.onceRecurrence = defaults.onceRecurrence;
    	      this.type = defaults.type;
    	      this.weeklyRecurrence = defaults.weeklyRecurrence;
        }

        @CustomType.Setter
        public Builder dailyRecurrence(@Nullable MaintenanceScheduleDailyRecurrence dailyRecurrence) {
            this.dailyRecurrence = dailyRecurrence;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyRecurrence(@Nullable MaintenanceScheduleMonthlyRecurrence monthlyRecurrence) {
            this.monthlyRecurrence = monthlyRecurrence;
            return this;
        }
        @CustomType.Setter
        public Builder onceRecurrence(@Nullable MaintenanceScheduleOnceRecurrence onceRecurrence) {
            this.onceRecurrence = onceRecurrence;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder weeklyRecurrence(@Nullable MaintenanceScheduleWeeklyRecurrence weeklyRecurrence) {
            this.weeklyRecurrence = weeklyRecurrence;
            return this;
        }
        public MaintenanceSchedule build() {
            final var o = new MaintenanceSchedule();
            o.dailyRecurrence = dailyRecurrence;
            o.monthlyRecurrence = monthlyRecurrence;
            o.onceRecurrence = onceRecurrence;
            o.type = type;
            o.weeklyRecurrence = weeklyRecurrence;
            return o;
        }
    }
}
