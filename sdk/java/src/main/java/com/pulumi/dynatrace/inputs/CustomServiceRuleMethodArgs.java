// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomServiceRuleMethodArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomServiceRuleMethodArgs Empty = new CustomServiceRuleMethodArgs();

    @Import(name="arguments")
    private @Nullable Output<List<String>> arguments;

    public Optional<Output<List<String>>> arguments() {
        return Optional.ofNullable(this.arguments);
    }

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of this resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="modifiers")
    private @Nullable Output<List<String>> modifiers;

    public Optional<Output<List<String>>> modifiers() {
        return Optional.ofNullable(this.modifiers);
    }

    /**
     * The name of the custom service, displayed in the UI
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the custom service, displayed in the UI
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="returns")
    private @Nullable Output<String> returns;

    public Optional<Output<String>> returns() {
        return Optional.ofNullable(this.returns);
    }

    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private CustomServiceRuleMethodArgs() {}

    private CustomServiceRuleMethodArgs(CustomServiceRuleMethodArgs $) {
        this.arguments = $.arguments;
        this.id = $.id;
        this.modifiers = $.modifiers;
        this.name = $.name;
        this.returns = $.returns;
        this.unknowns = $.unknowns;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomServiceRuleMethodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomServiceRuleMethodArgs $;

        public Builder() {
            $ = new CustomServiceRuleMethodArgs();
        }

        public Builder(CustomServiceRuleMethodArgs defaults) {
            $ = new CustomServiceRuleMethodArgs(Objects.requireNonNull(defaults));
        }

        public Builder arguments(@Nullable Output<List<String>> arguments) {
            $.arguments = arguments;
            return this;
        }

        public Builder arguments(List<String> arguments) {
            return arguments(Output.of(arguments));
        }

        public Builder arguments(String... arguments) {
            return arguments(List.of(arguments));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder modifiers(@Nullable Output<List<String>> modifiers) {
            $.modifiers = modifiers;
            return this;
        }

        public Builder modifiers(List<String> modifiers) {
            return modifiers(Output.of(modifiers));
        }

        public Builder modifiers(String... modifiers) {
            return modifiers(List.of(modifiers));
        }

        /**
         * @param name The name of the custom service, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the custom service, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder returns(@Nullable Output<String> returns) {
            $.returns = returns;
            return this;
        }

        public Builder returns(String returns) {
            return returns(Output.of(returns));
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public CustomServiceRuleMethodArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
