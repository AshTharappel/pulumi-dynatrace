// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class LogCustomSourceCustomLogSource {
    /**
     * @return Possible Values: `LOG_PATH_PATTERN`, `WINDOWS_EVENT_LOG`
     * 
     */
    private String type;
    /**
     * @return It might be either an absolute path to log(s) with optional wildcards or Windows Event Log name.
     * 
     */
    private List<String> values;

    private LogCustomSourceCustomLogSource() {}
    /**
     * @return Possible Values: `LOG_PATH_PATTERN`, `WINDOWS_EVENT_LOG`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return It might be either an absolute path to log(s) with optional wildcards or Windows Event Log name.
     * 
     */
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogCustomSourceCustomLogSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String type;
        private List<String> values;
        public Builder() {}
        public Builder(LogCustomSourceCustomLogSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder values(List<String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public LogCustomSourceCustomLogSource build() {
            final var o = new LogCustomSourceCustomLogSource();
            o.type = type;
            o.values = values;
            return o;
        }
    }
}
