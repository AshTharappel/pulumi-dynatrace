// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
    private Integer temporaryActionLimit;
    private Integer temporaryActionTotalTimeout;
    private @Nullable Boolean timedActionSupport;

    private WebApplicationMonitoringSettingsContentCaptureTimeoutSettings() {}
    public Integer temporaryActionLimit() {
        return this.temporaryActionLimit;
    }
    public Integer temporaryActionTotalTimeout() {
        return this.temporaryActionTotalTimeout;
    }
    public Optional<Boolean> timedActionSupport() {
        return Optional.ofNullable(this.timedActionSupport);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationMonitoringSettingsContentCaptureTimeoutSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer temporaryActionLimit;
        private Integer temporaryActionTotalTimeout;
        private @Nullable Boolean timedActionSupport;
        public Builder() {}
        public Builder(WebApplicationMonitoringSettingsContentCaptureTimeoutSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.temporaryActionLimit = defaults.temporaryActionLimit;
    	      this.temporaryActionTotalTimeout = defaults.temporaryActionTotalTimeout;
    	      this.timedActionSupport = defaults.timedActionSupport;
        }

        @CustomType.Setter
        public Builder temporaryActionLimit(Integer temporaryActionLimit) {
            this.temporaryActionLimit = Objects.requireNonNull(temporaryActionLimit);
            return this;
        }
        @CustomType.Setter
        public Builder temporaryActionTotalTimeout(Integer temporaryActionTotalTimeout) {
            this.temporaryActionTotalTimeout = Objects.requireNonNull(temporaryActionTotalTimeout);
            return this;
        }
        @CustomType.Setter
        public Builder timedActionSupport(@Nullable Boolean timedActionSupport) {
            this.timedActionSupport = timedActionSupport;
            return this;
        }
        public WebApplicationMonitoringSettingsContentCaptureTimeoutSettings build() {
            final var o = new WebApplicationMonitoringSettingsContentCaptureTimeoutSettings();
            o.temporaryActionLimit = temporaryActionLimit;
            o.temporaryActionTotalTimeout = temporaryActionTotalTimeout;
            o.timedActionSupport = timedActionSupport;
            return o;
        }
    }
}
