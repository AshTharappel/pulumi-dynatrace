// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebApplicationConversionGoalsGoalDestinationArgs;
import com.pulumi.dynatrace.inputs.WebApplicationConversionGoalsGoalUserActionArgs;
import com.pulumi.dynatrace.inputs.WebApplicationConversionGoalsGoalVisitDurationArgs;
import com.pulumi.dynatrace.inputs.WebApplicationConversionGoalsGoalVisitNumActionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationConversionGoalsGoalArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationConversionGoalsGoalArgs Empty = new WebApplicationConversionGoalsGoalArgs();

    @Import(name="destination")
    private @Nullable Output<WebApplicationConversionGoalsGoalDestinationArgs> destination;

    public Optional<Output<WebApplicationConversionGoalsGoalDestinationArgs>> destination() {
        return Optional.ofNullable(this.destination);
    }

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of this resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the web application, displayed in the UI
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the web application, displayed in the UI
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="userAction")
    private @Nullable Output<WebApplicationConversionGoalsGoalUserActionArgs> userAction;

    public Optional<Output<WebApplicationConversionGoalsGoalUserActionArgs>> userAction() {
        return Optional.ofNullable(this.userAction);
    }

    @Import(name="visitDuration")
    private @Nullable Output<WebApplicationConversionGoalsGoalVisitDurationArgs> visitDuration;

    public Optional<Output<WebApplicationConversionGoalsGoalVisitDurationArgs>> visitDuration() {
        return Optional.ofNullable(this.visitDuration);
    }

    @Import(name="visitNumAction")
    private @Nullable Output<WebApplicationConversionGoalsGoalVisitNumActionArgs> visitNumAction;

    public Optional<Output<WebApplicationConversionGoalsGoalVisitNumActionArgs>> visitNumAction() {
        return Optional.ofNullable(this.visitNumAction);
    }

    private WebApplicationConversionGoalsGoalArgs() {}

    private WebApplicationConversionGoalsGoalArgs(WebApplicationConversionGoalsGoalArgs $) {
        this.destination = $.destination;
        this.id = $.id;
        this.name = $.name;
        this.type = $.type;
        this.userAction = $.userAction;
        this.visitDuration = $.visitDuration;
        this.visitNumAction = $.visitNumAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationConversionGoalsGoalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationConversionGoalsGoalArgs $;

        public Builder() {
            $ = new WebApplicationConversionGoalsGoalArgs();
        }

        public Builder(WebApplicationConversionGoalsGoalArgs defaults) {
            $ = new WebApplicationConversionGoalsGoalArgs(Objects.requireNonNull(defaults));
        }

        public Builder destination(@Nullable Output<WebApplicationConversionGoalsGoalDestinationArgs> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(WebApplicationConversionGoalsGoalDestinationArgs destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The name of the web application, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the web application, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userAction(@Nullable Output<WebApplicationConversionGoalsGoalUserActionArgs> userAction) {
            $.userAction = userAction;
            return this;
        }

        public Builder userAction(WebApplicationConversionGoalsGoalUserActionArgs userAction) {
            return userAction(Output.of(userAction));
        }

        public Builder visitDuration(@Nullable Output<WebApplicationConversionGoalsGoalVisitDurationArgs> visitDuration) {
            $.visitDuration = visitDuration;
            return this;
        }

        public Builder visitDuration(WebApplicationConversionGoalsGoalVisitDurationArgs visitDuration) {
            return visitDuration(Output.of(visitDuration));
        }

        public Builder visitNumAction(@Nullable Output<WebApplicationConversionGoalsGoalVisitNumActionArgs> visitNumAction) {
            $.visitNumAction = visitNumAction;
            return this;
        }

        public Builder visitNumAction(WebApplicationConversionGoalsGoalVisitNumActionArgs visitNumAction) {
            return visitNumAction(Output.of(visitNumAction));
        }

        public WebApplicationConversionGoalsGoalArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
