// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DduPoolEventsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DduPoolEventsArgs Empty = new DduPoolEventsArgs();

    /**
     * Is the limit configuration enabled
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Is the limit configuration enabled
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Type of the limit applied: MONTHLY or ANNUAL
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the limit applied: MONTHLY or ANNUAL
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Value of the DDU limit applied for provided timerange
     * 
     */
    @Import(name="value")
    private @Nullable Output<Integer> value;

    /**
     * @return Value of the DDU limit applied for provided timerange
     * 
     */
    public Optional<Output<Integer>> value() {
        return Optional.ofNullable(this.value);
    }

    private DduPoolEventsArgs() {}

    private DduPoolEventsArgs(DduPoolEventsArgs $) {
        this.enabled = $.enabled;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DduPoolEventsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DduPoolEventsArgs $;

        public Builder() {
            $ = new DduPoolEventsArgs();
        }

        public Builder(DduPoolEventsArgs defaults) {
            $ = new DduPoolEventsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Is the limit configuration enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Is the limit configuration enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param type Type of the limit applied: MONTHLY or ANNUAL
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the limit applied: MONTHLY or ANNUAL
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value Value of the DDU limit applied for provided timerange
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<Integer> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value of the DDU limit applied for provided timerange
         * 
         * @return builder
         * 
         */
        public Builder value(Integer value) {
            return value(Output.of(value));
        }

        public DduPoolEventsArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
