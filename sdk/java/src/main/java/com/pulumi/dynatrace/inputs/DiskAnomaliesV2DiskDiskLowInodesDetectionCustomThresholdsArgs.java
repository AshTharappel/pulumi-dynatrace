// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs Empty = new DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs();

    @Import(name="freeInodesPercentage", required=true)
    private Output<Integer> freeInodesPercentage;

    public Output<Integer> freeInodesPercentage() {
        return this.freeInodesPercentage;
    }

    private DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs() {}

    private DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs(DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs $) {
        this.freeInodesPercentage = $.freeInodesPercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs $;

        public Builder() {
            $ = new DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs();
        }

        public Builder(DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs defaults) {
            $ = new DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder freeInodesPercentage(Output<Integer> freeInodesPercentage) {
            $.freeInodesPercentage = freeInodesPercentage;
            return this;
        }

        public Builder freeInodesPercentage(Integer freeInodesPercentage) {
            return freeInodesPercentage(Output.of(freeInodesPercentage));
        }

        public DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholdsArgs build() {
            $.freeInodesPercentage = Objects.requireNonNull($.freeInodesPercentage, "expected parameter 'freeInodesPercentage' to be non-null");
            return $;
        }
    }

}
