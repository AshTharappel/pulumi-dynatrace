// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholdsArgs;
import java.lang.Integer;
import java.util.Objects;


public final class HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs Empty = new HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs();

    @Import(name="eventThresholds", required=true)
    private Output<HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholdsArgs> eventThresholds;

    public Output<HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholdsArgs> eventThresholds() {
        return this.eventThresholds;
    }

    @Import(name="failedConnectionsNumberPerMinute", required=true)
    private Output<Integer> failedConnectionsNumberPerMinute;

    public Output<Integer> failedConnectionsNumberPerMinute() {
        return this.failedConnectionsNumberPerMinute;
    }

    @Import(name="newConnectionFailuresPercentage", required=true)
    private Output<Integer> newConnectionFailuresPercentage;

    public Output<Integer> newConnectionFailuresPercentage() {
        return this.newConnectionFailuresPercentage;
    }

    private HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs() {}

    private HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs(HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs $) {
        this.eventThresholds = $.eventThresholds;
        this.failedConnectionsNumberPerMinute = $.failedConnectionsNumberPerMinute;
        this.newConnectionFailuresPercentage = $.newConnectionFailuresPercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs $;

        public Builder() {
            $ = new HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs();
        }

        public Builder(HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs defaults) {
            $ = new HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder eventThresholds(Output<HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholdsArgs> eventThresholds) {
            $.eventThresholds = eventThresholds;
            return this;
        }

        public Builder eventThresholds(HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholdsArgs eventThresholds) {
            return eventThresholds(Output.of(eventThresholds));
        }

        public Builder failedConnectionsNumberPerMinute(Output<Integer> failedConnectionsNumberPerMinute) {
            $.failedConnectionsNumberPerMinute = failedConnectionsNumberPerMinute;
            return this;
        }

        public Builder failedConnectionsNumberPerMinute(Integer failedConnectionsNumberPerMinute) {
            return failedConnectionsNumberPerMinute(Output.of(failedConnectionsNumberPerMinute));
        }

        public Builder newConnectionFailuresPercentage(Output<Integer> newConnectionFailuresPercentage) {
            $.newConnectionFailuresPercentage = newConnectionFailuresPercentage;
            return this;
        }

        public Builder newConnectionFailuresPercentage(Integer newConnectionFailuresPercentage) {
            return newConnectionFailuresPercentage(Output.of(newConnectionFailuresPercentage));
        }

        public HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsArgs build() {
            $.eventThresholds = Objects.requireNonNull($.eventThresholds, "expected parameter 'eventThresholds' to be non-null");
            $.failedConnectionsNumberPerMinute = Objects.requireNonNull($.failedConnectionsNumberPerMinute, "expected parameter 'failedConnectionsNumberPerMinute' to be non-null");
            $.newConnectionFailuresPercentage = Objects.requireNonNull($.newConnectionFailuresPercentage, "expected parameter 'newConnectionFailuresPercentage' to be non-null");
            return $;
        }
    }

}
