// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GetEntitiesEntitiesEntityTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEntitiesEntitiesEntity extends com.pulumi.resources.InvokeArgs {

    public static final GetEntitiesEntitiesEntity Empty = new GetEntitiesEntitiesEntity();

    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="entityId")
    private @Nullable String entityId;

    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    @Import(name="tags")
    private @Nullable List<GetEntitiesEntitiesEntityTag> tags;

    public Optional<List<GetEntitiesEntitiesEntityTag>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetEntitiesEntitiesEntity() {}

    private GetEntitiesEntitiesEntity(GetEntitiesEntitiesEntity $) {
        this.displayName = $.displayName;
        this.entityId = $.entityId;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntitiesEntitiesEntity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntitiesEntitiesEntity $;

        public Builder() {
            $ = new GetEntitiesEntitiesEntity();
        }

        public Builder(GetEntitiesEntitiesEntity defaults) {
            $ = new GetEntitiesEntitiesEntity(Objects.requireNonNull(defaults));
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder entityId(@Nullable String entityId) {
            $.entityId = entityId;
            return this;
        }

        public Builder tags(@Nullable List<GetEntitiesEntitiesEntityTag> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(GetEntitiesEntitiesEntityTag... tags) {
            return tags(List.of(tags));
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetEntitiesEntitiesEntity build() {
            return $;
        }
    }

}
