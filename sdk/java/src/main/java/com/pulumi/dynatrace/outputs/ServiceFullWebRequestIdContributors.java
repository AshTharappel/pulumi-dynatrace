// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.ServiceFullWebRequestIdContributorsApplicationId;
import com.pulumi.dynatrace.outputs.ServiceFullWebRequestIdContributorsContextRoot;
import com.pulumi.dynatrace.outputs.ServiceFullWebRequestIdContributorsServerName;
import java.util.Objects;

@CustomType
public final class ServiceFullWebRequestIdContributors {
    /**
     * @return Application identifier
     * 
     */
    private ServiceFullWebRequestIdContributorsApplicationId applicationId;
    /**
     * @return The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the Service screen under **Properties and tags**.
     * 
     */
    private ServiceFullWebRequestIdContributorsContextRoot contextRoot;
    /**
     * @return Server Name
     * 
     */
    private ServiceFullWebRequestIdContributorsServerName serverName;

    private ServiceFullWebRequestIdContributors() {}
    /**
     * @return Application identifier
     * 
     */
    public ServiceFullWebRequestIdContributorsApplicationId applicationId() {
        return this.applicationId;
    }
    /**
     * @return The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the Service screen under **Properties and tags**.
     * 
     */
    public ServiceFullWebRequestIdContributorsContextRoot contextRoot() {
        return this.contextRoot;
    }
    /**
     * @return Server Name
     * 
     */
    public ServiceFullWebRequestIdContributorsServerName serverName() {
        return this.serverName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceFullWebRequestIdContributors defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ServiceFullWebRequestIdContributorsApplicationId applicationId;
        private ServiceFullWebRequestIdContributorsContextRoot contextRoot;
        private ServiceFullWebRequestIdContributorsServerName serverName;
        public Builder() {}
        public Builder(ServiceFullWebRequestIdContributors defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.contextRoot = defaults.contextRoot;
    	      this.serverName = defaults.serverName;
        }

        @CustomType.Setter
        public Builder applicationId(ServiceFullWebRequestIdContributorsApplicationId applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        @CustomType.Setter
        public Builder contextRoot(ServiceFullWebRequestIdContributorsContextRoot contextRoot) {
            this.contextRoot = Objects.requireNonNull(contextRoot);
            return this;
        }
        @CustomType.Setter
        public Builder serverName(ServiceFullWebRequestIdContributorsServerName serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }
        public ServiceFullWebRequestIdContributors build() {
            final var o = new ServiceFullWebRequestIdContributors();
            o.applicationId = applicationId;
            o.contextRoot = contextRoot;
            o.serverName = serverName;
            return o;
        }
    }
}
