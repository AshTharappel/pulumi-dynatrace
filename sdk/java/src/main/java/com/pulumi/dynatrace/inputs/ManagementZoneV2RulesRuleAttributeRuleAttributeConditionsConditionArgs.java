// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs Empty = new ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs();

    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    @Import(name="dynamicKey")
    private @Nullable Output<String> dynamicKey;

    public Optional<Output<String>> dynamicKey() {
        return Optional.ofNullable(this.dynamicKey);
    }

    @Import(name="dynamicKeySource")
    private @Nullable Output<String> dynamicKeySource;

    public Optional<Output<String>> dynamicKeySource() {
        return Optional.ofNullable(this.dynamicKeySource);
    }

    @Import(name="entityId")
    private @Nullable Output<String> entityId;

    public Optional<Output<String>> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    @Import(name="enumValue")
    private @Nullable Output<String> enumValue;

    public Optional<Output<String>> enumValue() {
        return Optional.ofNullable(this.enumValue);
    }

    @Import(name="integerValue")
    private @Nullable Output<Integer> integerValue;

    public Optional<Output<Integer>> integerValue() {
        return Optional.ofNullable(this.integerValue);
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="operator", required=true)
    private Output<String> operator;

    public Output<String> operator() {
        return this.operator;
    }

    @Import(name="stringValue")
    private @Nullable Output<String> stringValue;

    public Optional<Output<String>> stringValue() {
        return Optional.ofNullable(this.stringValue);
    }

    @Import(name="tag")
    private @Nullable Output<String> tag;

    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs() {}

    private ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs(ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs $) {
        this.caseSensitive = $.caseSensitive;
        this.dynamicKey = $.dynamicKey;
        this.dynamicKeySource = $.dynamicKeySource;
        this.entityId = $.entityId;
        this.enumValue = $.enumValue;
        this.integerValue = $.integerValue;
        this.key = $.key;
        this.operator = $.operator;
        this.stringValue = $.stringValue;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs $;

        public Builder() {
            $ = new ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs();
        }

        public Builder(ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs defaults) {
            $ = new ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        public Builder dynamicKey(@Nullable Output<String> dynamicKey) {
            $.dynamicKey = dynamicKey;
            return this;
        }

        public Builder dynamicKey(String dynamicKey) {
            return dynamicKey(Output.of(dynamicKey));
        }

        public Builder dynamicKeySource(@Nullable Output<String> dynamicKeySource) {
            $.dynamicKeySource = dynamicKeySource;
            return this;
        }

        public Builder dynamicKeySource(String dynamicKeySource) {
            return dynamicKeySource(Output.of(dynamicKeySource));
        }

        public Builder entityId(@Nullable Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        public Builder enumValue(@Nullable Output<String> enumValue) {
            $.enumValue = enumValue;
            return this;
        }

        public Builder enumValue(String enumValue) {
            return enumValue(Output.of(enumValue));
        }

        public Builder integerValue(@Nullable Output<Integer> integerValue) {
            $.integerValue = integerValue;
            return this;
        }

        public Builder integerValue(Integer integerValue) {
            return integerValue(Output.of(integerValue));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public Builder stringValue(@Nullable Output<String> stringValue) {
            $.stringValue = stringValue;
            return this;
        }

        public Builder stringValue(String stringValue) {
            return stringValue(Output.of(stringValue));
        }

        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        public ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsConditionArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            return $;
        }
    }

}
