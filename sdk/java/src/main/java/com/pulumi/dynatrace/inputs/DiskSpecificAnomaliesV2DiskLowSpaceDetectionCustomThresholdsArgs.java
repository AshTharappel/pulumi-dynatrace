// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs Empty = new DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs();

    @Import(name="freeSpacePercentage", required=true)
    private Output<Integer> freeSpacePercentage;

    public Output<Integer> freeSpacePercentage() {
        return this.freeSpacePercentage;
    }

    private DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs() {}

    private DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs(DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs $) {
        this.freeSpacePercentage = $.freeSpacePercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs $;

        public Builder() {
            $ = new DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs();
        }

        public Builder(DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs defaults) {
            $ = new DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder freeSpacePercentage(Output<Integer> freeSpacePercentage) {
            $.freeSpacePercentage = freeSpacePercentage;
            return this;
        }

        public Builder freeSpacePercentage(Integer freeSpacePercentage) {
            return freeSpacePercentage(Output.of(freeSpacePercentage));
        }

        public DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholdsArgs build() {
            $.freeSpacePercentage = Objects.requireNonNull($.freeSpacePercentage, "expected parameter 'freeSpacePercentage' to be non-null");
            return $;
        }
    }

}
