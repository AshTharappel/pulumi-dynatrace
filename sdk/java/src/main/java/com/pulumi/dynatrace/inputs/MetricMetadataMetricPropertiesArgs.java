// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricMetadataMetricPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricMetadataMetricPropertiesArgs Empty = new MetricMetadataMetricPropertiesArgs();

    /**
     * Whether (true or false) the metric is relevant to a problem&#39;s impact.
     * 
     */
    @Import(name="impactRelevant")
    private @Nullable Output<Boolean> impactRelevant;

    /**
     * @return Whether (true or false) the metric is relevant to a problem&#39;s impact.
     * 
     */
    public Optional<Output<Boolean>> impactRelevant() {
        return Optional.ofNullable(this.impactRelevant);
    }

    @Import(name="latency")
    private @Nullable Output<Integer> latency;

    public Optional<Output<Integer>> latency() {
        return Optional.ofNullable(this.latency);
    }

    @Import(name="maxValue")
    private @Nullable Output<Double> maxValue;

    public Optional<Output<Double>> maxValue() {
        return Optional.ofNullable(this.maxValue);
    }

    @Import(name="minValue")
    private @Nullable Output<Double> minValue;

    public Optional<Output<Double>> minValue() {
        return Optional.ofNullable(this.minValue);
    }

    @Import(name="rootCauseRelevant")
    private @Nullable Output<Boolean> rootCauseRelevant;

    public Optional<Output<Boolean>> rootCauseRelevant() {
        return Optional.ofNullable(this.rootCauseRelevant);
    }

    /**
     * Possible Values: `Error`, `Score`, `Unknown`
     * 
     */
    @Import(name="valueType", required=true)
    private Output<String> valueType;

    /**
     * @return Possible Values: `Error`, `Score`, `Unknown`
     * 
     */
    public Output<String> valueType() {
        return this.valueType;
    }

    private MetricMetadataMetricPropertiesArgs() {}

    private MetricMetadataMetricPropertiesArgs(MetricMetadataMetricPropertiesArgs $) {
        this.impactRelevant = $.impactRelevant;
        this.latency = $.latency;
        this.maxValue = $.maxValue;
        this.minValue = $.minValue;
        this.rootCauseRelevant = $.rootCauseRelevant;
        this.valueType = $.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricMetadataMetricPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricMetadataMetricPropertiesArgs $;

        public Builder() {
            $ = new MetricMetadataMetricPropertiesArgs();
        }

        public Builder(MetricMetadataMetricPropertiesArgs defaults) {
            $ = new MetricMetadataMetricPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param impactRelevant Whether (true or false) the metric is relevant to a problem&#39;s impact.
         * 
         * @return builder
         * 
         */
        public Builder impactRelevant(@Nullable Output<Boolean> impactRelevant) {
            $.impactRelevant = impactRelevant;
            return this;
        }

        /**
         * @param impactRelevant Whether (true or false) the metric is relevant to a problem&#39;s impact.
         * 
         * @return builder
         * 
         */
        public Builder impactRelevant(Boolean impactRelevant) {
            return impactRelevant(Output.of(impactRelevant));
        }

        public Builder latency(@Nullable Output<Integer> latency) {
            $.latency = latency;
            return this;
        }

        public Builder latency(Integer latency) {
            return latency(Output.of(latency));
        }

        public Builder maxValue(@Nullable Output<Double> maxValue) {
            $.maxValue = maxValue;
            return this;
        }

        public Builder maxValue(Double maxValue) {
            return maxValue(Output.of(maxValue));
        }

        public Builder minValue(@Nullable Output<Double> minValue) {
            $.minValue = minValue;
            return this;
        }

        public Builder minValue(Double minValue) {
            return minValue(Output.of(minValue));
        }

        public Builder rootCauseRelevant(@Nullable Output<Boolean> rootCauseRelevant) {
            $.rootCauseRelevant = rootCauseRelevant;
            return this;
        }

        public Builder rootCauseRelevant(Boolean rootCauseRelevant) {
            return rootCauseRelevant(Output.of(rootCauseRelevant));
        }

        /**
         * @param valueType Possible Values: `Error`, `Score`, `Unknown`
         * 
         * @return builder
         * 
         */
        public Builder valueType(Output<String> valueType) {
            $.valueType = valueType;
            return this;
        }

        /**
         * @param valueType Possible Values: `Error`, `Score`, `Unknown`
         * 
         * @return builder
         * 
         */
        public Builder valueType(String valueType) {
            return valueType(Output.of(valueType));
        }

        public MetricMetadataMetricPropertiesArgs build() {
            $.valueType = Objects.requireNonNull($.valueType, "expected parameter 'valueType' to be non-null");
            return $;
        }
    }

}
