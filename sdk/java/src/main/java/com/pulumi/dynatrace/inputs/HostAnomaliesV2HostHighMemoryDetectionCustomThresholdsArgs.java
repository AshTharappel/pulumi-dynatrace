// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholdsArgs;
import java.lang.Integer;
import java.util.Objects;


public final class HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs Empty = new HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs();

    @Import(name="eventThresholds", required=true)
    private Output<HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholdsArgs> eventThresholds;

    public Output<HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholdsArgs> eventThresholds() {
        return this.eventThresholds;
    }

    @Import(name="pageFaultsPerSecondNonWindows", required=true)
    private Output<Integer> pageFaultsPerSecondNonWindows;

    public Output<Integer> pageFaultsPerSecondNonWindows() {
        return this.pageFaultsPerSecondNonWindows;
    }

    @Import(name="pageFaultsPerSecondWindows", required=true)
    private Output<Integer> pageFaultsPerSecondWindows;

    public Output<Integer> pageFaultsPerSecondWindows() {
        return this.pageFaultsPerSecondWindows;
    }

    @Import(name="usedMemoryPercentageNonWindows", required=true)
    private Output<Integer> usedMemoryPercentageNonWindows;

    public Output<Integer> usedMemoryPercentageNonWindows() {
        return this.usedMemoryPercentageNonWindows;
    }

    @Import(name="usedMemoryPercentageWindows", required=true)
    private Output<Integer> usedMemoryPercentageWindows;

    public Output<Integer> usedMemoryPercentageWindows() {
        return this.usedMemoryPercentageWindows;
    }

    private HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs() {}

    private HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs(HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs $) {
        this.eventThresholds = $.eventThresholds;
        this.pageFaultsPerSecondNonWindows = $.pageFaultsPerSecondNonWindows;
        this.pageFaultsPerSecondWindows = $.pageFaultsPerSecondWindows;
        this.usedMemoryPercentageNonWindows = $.usedMemoryPercentageNonWindows;
        this.usedMemoryPercentageWindows = $.usedMemoryPercentageWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs $;

        public Builder() {
            $ = new HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs();
        }

        public Builder(HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs defaults) {
            $ = new HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder eventThresholds(Output<HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholdsArgs> eventThresholds) {
            $.eventThresholds = eventThresholds;
            return this;
        }

        public Builder eventThresholds(HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholdsArgs eventThresholds) {
            return eventThresholds(Output.of(eventThresholds));
        }

        public Builder pageFaultsPerSecondNonWindows(Output<Integer> pageFaultsPerSecondNonWindows) {
            $.pageFaultsPerSecondNonWindows = pageFaultsPerSecondNonWindows;
            return this;
        }

        public Builder pageFaultsPerSecondNonWindows(Integer pageFaultsPerSecondNonWindows) {
            return pageFaultsPerSecondNonWindows(Output.of(pageFaultsPerSecondNonWindows));
        }

        public Builder pageFaultsPerSecondWindows(Output<Integer> pageFaultsPerSecondWindows) {
            $.pageFaultsPerSecondWindows = pageFaultsPerSecondWindows;
            return this;
        }

        public Builder pageFaultsPerSecondWindows(Integer pageFaultsPerSecondWindows) {
            return pageFaultsPerSecondWindows(Output.of(pageFaultsPerSecondWindows));
        }

        public Builder usedMemoryPercentageNonWindows(Output<Integer> usedMemoryPercentageNonWindows) {
            $.usedMemoryPercentageNonWindows = usedMemoryPercentageNonWindows;
            return this;
        }

        public Builder usedMemoryPercentageNonWindows(Integer usedMemoryPercentageNonWindows) {
            return usedMemoryPercentageNonWindows(Output.of(usedMemoryPercentageNonWindows));
        }

        public Builder usedMemoryPercentageWindows(Output<Integer> usedMemoryPercentageWindows) {
            $.usedMemoryPercentageWindows = usedMemoryPercentageWindows;
            return this;
        }

        public Builder usedMemoryPercentageWindows(Integer usedMemoryPercentageWindows) {
            return usedMemoryPercentageWindows(Output.of(usedMemoryPercentageWindows));
        }

        public HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsArgs build() {
            $.eventThresholds = Objects.requireNonNull($.eventThresholds, "expected parameter 'eventThresholds' to be non-null");
            $.pageFaultsPerSecondNonWindows = Objects.requireNonNull($.pageFaultsPerSecondNonWindows, "expected parameter 'pageFaultsPerSecondNonWindows' to be non-null");
            $.pageFaultsPerSecondWindows = Objects.requireNonNull($.pageFaultsPerSecondWindows, "expected parameter 'pageFaultsPerSecondWindows' to be non-null");
            $.usedMemoryPercentageNonWindows = Objects.requireNonNull($.usedMemoryPercentageNonWindows, "expected parameter 'usedMemoryPercentageNonWindows' to be non-null");
            $.usedMemoryPercentageWindows = Objects.requireNonNull($.usedMemoryPercentageWindows, "expected parameter 'usedMemoryPercentageWindows' to be non-null");
            return $;
        }
    }

}
