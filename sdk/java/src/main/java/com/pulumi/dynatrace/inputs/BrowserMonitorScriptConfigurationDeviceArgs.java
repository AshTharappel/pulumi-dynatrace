// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrowserMonitorScriptConfigurationDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptConfigurationDeviceArgs Empty = new BrowserMonitorScriptConfigurationDeviceArgs();

    @Import(name="height")
    private @Nullable Output<Integer> height;

    public Optional<Output<Integer>> height() {
        return Optional.ofNullable(this.height);
    }

    @Import(name="mobile")
    private @Nullable Output<Boolean> mobile;

    public Optional<Output<Boolean>> mobile() {
        return Optional.ofNullable(this.mobile);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="orientation")
    private @Nullable Output<String> orientation;

    public Optional<Output<String>> orientation() {
        return Optional.ofNullable(this.orientation);
    }

    @Import(name="scaleFactor")
    private @Nullable Output<Integer> scaleFactor;

    public Optional<Output<Integer>> scaleFactor() {
        return Optional.ofNullable(this.scaleFactor);
    }

    @Import(name="touchEnabled")
    private @Nullable Output<Boolean> touchEnabled;

    public Optional<Output<Boolean>> touchEnabled() {
        return Optional.ofNullable(this.touchEnabled);
    }

    @Import(name="width")
    private @Nullable Output<Integer> width;

    public Optional<Output<Integer>> width() {
        return Optional.ofNullable(this.width);
    }

    private BrowserMonitorScriptConfigurationDeviceArgs() {}

    private BrowserMonitorScriptConfigurationDeviceArgs(BrowserMonitorScriptConfigurationDeviceArgs $) {
        this.height = $.height;
        this.mobile = $.mobile;
        this.name = $.name;
        this.orientation = $.orientation;
        this.scaleFactor = $.scaleFactor;
        this.touchEnabled = $.touchEnabled;
        this.width = $.width;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptConfigurationDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptConfigurationDeviceArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptConfigurationDeviceArgs();
        }

        public Builder(BrowserMonitorScriptConfigurationDeviceArgs defaults) {
            $ = new BrowserMonitorScriptConfigurationDeviceArgs(Objects.requireNonNull(defaults));
        }

        public Builder height(@Nullable Output<Integer> height) {
            $.height = height;
            return this;
        }

        public Builder height(Integer height) {
            return height(Output.of(height));
        }

        public Builder mobile(@Nullable Output<Boolean> mobile) {
            $.mobile = mobile;
            return this;
        }

        public Builder mobile(Boolean mobile) {
            return mobile(Output.of(mobile));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder orientation(@Nullable Output<String> orientation) {
            $.orientation = orientation;
            return this;
        }

        public Builder orientation(String orientation) {
            return orientation(Output.of(orientation));
        }

        public Builder scaleFactor(@Nullable Output<Integer> scaleFactor) {
            $.scaleFactor = scaleFactor;
            return this;
        }

        public Builder scaleFactor(Integer scaleFactor) {
            return scaleFactor(Output.of(scaleFactor));
        }

        public Builder touchEnabled(@Nullable Output<Boolean> touchEnabled) {
            $.touchEnabled = touchEnabled;
            return this;
        }

        public Builder touchEnabled(Boolean touchEnabled) {
            return touchEnabled(Output.of(touchEnabled));
        }

        public Builder width(@Nullable Output<Integer> width) {
            $.width = width;
            return this;
        }

        public Builder width(Integer width) {
            return width(Output.of(width));
        }

        public BrowserMonitorScriptConfigurationDeviceArgs build() {
            return $;
        }
    }

}
