// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.ServiceFullWebServiceIdContributorsApplicationId;
import com.pulumi.dynatrace.outputs.ServiceFullWebServiceIdContributorsContextRoot;
import com.pulumi.dynatrace.outputs.ServiceFullWebServiceIdContributorsServerName;
import com.pulumi.dynatrace.outputs.ServiceFullWebServiceIdContributorsWebServiceName;
import com.pulumi.dynatrace.outputs.ServiceFullWebServiceIdContributorsWebServiceNamespace;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceFullWebServiceIdContributors {
    private @Nullable ServiceFullWebServiceIdContributorsApplicationId applicationId;
    private @Nullable ServiceFullWebServiceIdContributorsContextRoot contextRoot;
    /**
     * @return Detect the matching requests as full web services (false) or web request services (true).
     * 
     */
    private Boolean detectAsWebRequestService;
    private @Nullable ServiceFullWebServiceIdContributorsServerName serverName;
    private @Nullable ServiceFullWebServiceIdContributorsWebServiceName webServiceName;
    private @Nullable ServiceFullWebServiceIdContributorsWebServiceNamespace webServiceNamespace;

    private ServiceFullWebServiceIdContributors() {}
    public Optional<ServiceFullWebServiceIdContributorsApplicationId> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }
    public Optional<ServiceFullWebServiceIdContributorsContextRoot> contextRoot() {
        return Optional.ofNullable(this.contextRoot);
    }
    /**
     * @return Detect the matching requests as full web services (false) or web request services (true).
     * 
     */
    public Boolean detectAsWebRequestService() {
        return this.detectAsWebRequestService;
    }
    public Optional<ServiceFullWebServiceIdContributorsServerName> serverName() {
        return Optional.ofNullable(this.serverName);
    }
    public Optional<ServiceFullWebServiceIdContributorsWebServiceName> webServiceName() {
        return Optional.ofNullable(this.webServiceName);
    }
    public Optional<ServiceFullWebServiceIdContributorsWebServiceNamespace> webServiceNamespace() {
        return Optional.ofNullable(this.webServiceNamespace);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceFullWebServiceIdContributors defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ServiceFullWebServiceIdContributorsApplicationId applicationId;
        private @Nullable ServiceFullWebServiceIdContributorsContextRoot contextRoot;
        private Boolean detectAsWebRequestService;
        private @Nullable ServiceFullWebServiceIdContributorsServerName serverName;
        private @Nullable ServiceFullWebServiceIdContributorsWebServiceName webServiceName;
        private @Nullable ServiceFullWebServiceIdContributorsWebServiceNamespace webServiceNamespace;
        public Builder() {}
        public Builder(ServiceFullWebServiceIdContributors defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.contextRoot = defaults.contextRoot;
    	      this.detectAsWebRequestService = defaults.detectAsWebRequestService;
    	      this.serverName = defaults.serverName;
    	      this.webServiceName = defaults.webServiceName;
    	      this.webServiceNamespace = defaults.webServiceNamespace;
        }

        @CustomType.Setter
        public Builder applicationId(@Nullable ServiceFullWebServiceIdContributorsApplicationId applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder contextRoot(@Nullable ServiceFullWebServiceIdContributorsContextRoot contextRoot) {
            this.contextRoot = contextRoot;
            return this;
        }
        @CustomType.Setter
        public Builder detectAsWebRequestService(Boolean detectAsWebRequestService) {
            this.detectAsWebRequestService = Objects.requireNonNull(detectAsWebRequestService);
            return this;
        }
        @CustomType.Setter
        public Builder serverName(@Nullable ServiceFullWebServiceIdContributorsServerName serverName) {
            this.serverName = serverName;
            return this;
        }
        @CustomType.Setter
        public Builder webServiceName(@Nullable ServiceFullWebServiceIdContributorsWebServiceName webServiceName) {
            this.webServiceName = webServiceName;
            return this;
        }
        @CustomType.Setter
        public Builder webServiceNamespace(@Nullable ServiceFullWebServiceIdContributorsWebServiceNamespace webServiceNamespace) {
            this.webServiceNamespace = webServiceNamespace;
            return this;
        }
        public ServiceFullWebServiceIdContributors build() {
            final var o = new ServiceFullWebServiceIdContributors();
            o.applicationId = applicationId;
            o.contextRoot = contextRoot;
            o.detectAsWebRequestService = detectAsWebRequestService;
            o.serverName = serverName;
            o.webServiceName = webServiceName;
            o.webServiceNamespace = webServiceNamespace;
            return o;
        }
    }
}
