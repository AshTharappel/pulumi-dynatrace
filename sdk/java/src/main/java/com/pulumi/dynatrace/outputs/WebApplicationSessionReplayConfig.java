// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationSessionReplayConfig {
    /**
     * @return (Field has overlap with `dynatrace.WebAppEnablement`) Session replay sampling rating in percent
     * 
     */
    private Integer costControlPercentage;
    /**
     * @return (Field has overlap with `dynatrace.SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
     * 
     */
    private @Nullable List<String> cssResourceCapturingExclusionRules;
    /**
     * @return (Field has overlap with `dynatrace.SessionReplayResourceCapture`) Capture (`true`) or don&#39;t capture (`false`) CSS resources from the session
     * 
     */
    private @Nullable Boolean enableCssResourceCapturing;
    /**
     * @return (Field has overlap with `dynatrace.WebAppEnablement`) SessionReplay Enabled/Disabled
     * 
     */
    private @Nullable Boolean enabled;

    private WebApplicationSessionReplayConfig() {}
    /**
     * @return (Field has overlap with `dynatrace.WebAppEnablement`) Session replay sampling rating in percent
     * 
     */
    public Integer costControlPercentage() {
        return this.costControlPercentage;
    }
    /**
     * @return (Field has overlap with `dynatrace.SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
     * 
     */
    public List<String> cssResourceCapturingExclusionRules() {
        return this.cssResourceCapturingExclusionRules == null ? List.of() : this.cssResourceCapturingExclusionRules;
    }
    /**
     * @return (Field has overlap with `dynatrace.SessionReplayResourceCapture`) Capture (`true`) or don&#39;t capture (`false`) CSS resources from the session
     * 
     */
    public Optional<Boolean> enableCssResourceCapturing() {
        return Optional.ofNullable(this.enableCssResourceCapturing);
    }
    /**
     * @return (Field has overlap with `dynatrace.WebAppEnablement`) SessionReplay Enabled/Disabled
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationSessionReplayConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer costControlPercentage;
        private @Nullable List<String> cssResourceCapturingExclusionRules;
        private @Nullable Boolean enableCssResourceCapturing;
        private @Nullable Boolean enabled;
        public Builder() {}
        public Builder(WebApplicationSessionReplayConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costControlPercentage = defaults.costControlPercentage;
    	      this.cssResourceCapturingExclusionRules = defaults.cssResourceCapturingExclusionRules;
    	      this.enableCssResourceCapturing = defaults.enableCssResourceCapturing;
    	      this.enabled = defaults.enabled;
        }

        @CustomType.Setter
        public Builder costControlPercentage(Integer costControlPercentage) {
            this.costControlPercentage = Objects.requireNonNull(costControlPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder cssResourceCapturingExclusionRules(@Nullable List<String> cssResourceCapturingExclusionRules) {
            this.cssResourceCapturingExclusionRules = cssResourceCapturingExclusionRules;
            return this;
        }
        public Builder cssResourceCapturingExclusionRules(String... cssResourceCapturingExclusionRules) {
            return cssResourceCapturingExclusionRules(List.of(cssResourceCapturingExclusionRules));
        }
        @CustomType.Setter
        public Builder enableCssResourceCapturing(@Nullable Boolean enableCssResourceCapturing) {
            this.enableCssResourceCapturing = enableCssResourceCapturing;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public WebApplicationSessionReplayConfig build() {
            final var o = new WebApplicationSessionReplayConfig();
            o.costControlPercentage = costControlPercentage;
            o.cssResourceCapturingExclusionRules = cssResourceCapturingExclusionRules;
            o.enableCssResourceCapturing = enableCssResourceCapturing;
            o.enabled = enabled;
            return o;
        }
    }
}
