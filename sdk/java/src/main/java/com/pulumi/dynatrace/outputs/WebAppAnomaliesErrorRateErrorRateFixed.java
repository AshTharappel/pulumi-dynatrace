// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WebAppAnomaliesErrorRateErrorRateFixed {
    private Double errorRateReqPerMin;
    private String errorRateSensitivity;
    private Double maxFailureRateIncrease;
    private Double minutesAbnormalState;

    private WebAppAnomaliesErrorRateErrorRateFixed() {}
    public Double errorRateReqPerMin() {
        return this.errorRateReqPerMin;
    }
    public String errorRateSensitivity() {
        return this.errorRateSensitivity;
    }
    public Double maxFailureRateIncrease() {
        return this.maxFailureRateIncrease;
    }
    public Double minutesAbnormalState() {
        return this.minutesAbnormalState;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAppAnomaliesErrorRateErrorRateFixed defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double errorRateReqPerMin;
        private String errorRateSensitivity;
        private Double maxFailureRateIncrease;
        private Double minutesAbnormalState;
        public Builder() {}
        public Builder(WebAppAnomaliesErrorRateErrorRateFixed defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorRateReqPerMin = defaults.errorRateReqPerMin;
    	      this.errorRateSensitivity = defaults.errorRateSensitivity;
    	      this.maxFailureRateIncrease = defaults.maxFailureRateIncrease;
    	      this.minutesAbnormalState = defaults.minutesAbnormalState;
        }

        @CustomType.Setter
        public Builder errorRateReqPerMin(Double errorRateReqPerMin) {
            this.errorRateReqPerMin = Objects.requireNonNull(errorRateReqPerMin);
            return this;
        }
        @CustomType.Setter
        public Builder errorRateSensitivity(String errorRateSensitivity) {
            this.errorRateSensitivity = Objects.requireNonNull(errorRateSensitivity);
            return this;
        }
        @CustomType.Setter
        public Builder maxFailureRateIncrease(Double maxFailureRateIncrease) {
            this.maxFailureRateIncrease = Objects.requireNonNull(maxFailureRateIncrease);
            return this;
        }
        @CustomType.Setter
        public Builder minutesAbnormalState(Double minutesAbnormalState) {
            this.minutesAbnormalState = Objects.requireNonNull(minutesAbnormalState);
            return this;
        }
        public WebAppAnomaliesErrorRateErrorRateFixed build() {
            final var o = new WebAppAnomaliesErrorRateErrorRateFixed();
            o.errorRateReqPerMin = errorRateReqPerMin;
            o.errorRateSensitivity = errorRateSensitivity;
            o.maxFailureRateIncrease = maxFailureRateIncrease;
            o.minutesAbnormalState = minutesAbnormalState;
            return o;
        }
    }
}
