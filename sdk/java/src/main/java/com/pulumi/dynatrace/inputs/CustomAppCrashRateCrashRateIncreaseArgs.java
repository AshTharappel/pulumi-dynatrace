// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs;
import com.pulumi.dynatrace.inputs.CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixedArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomAppCrashRateCrashRateIncreaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomAppCrashRateCrashRateIncreaseArgs Empty = new CustomAppCrashRateCrashRateIncreaseArgs();

    /**
     * Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users
     * 
     */
    @Import(name="crashRateIncreaseAuto")
    private @Nullable Output<CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs> crashRateIncreaseAuto;

    /**
     * @return Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users
     * 
     */
    public Optional<Output<CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs>> crashRateIncreaseAuto() {
        return Optional.ofNullable(this.crashRateIncreaseAuto);
    }

    /**
     * Alert crash rate increases when the defined threshold is exceeded by a certain number of users
     * 
     */
    @Import(name="crashRateIncreaseFixed")
    private @Nullable Output<CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixedArgs> crashRateIncreaseFixed;

    /**
     * @return Alert crash rate increases when the defined threshold is exceeded by a certain number of users
     * 
     */
    public Optional<Output<CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixedArgs>> crashRateIncreaseFixed() {
        return Optional.ofNullable(this.crashRateIncreaseFixed);
    }

    /**
     * Possible Values: `Auto`, `Fixed`
     * 
     */
    @Import(name="detectionMode")
    private @Nullable Output<String> detectionMode;

    /**
     * @return Possible Values: `Auto`, `Fixed`
     * 
     */
    public Optional<Output<String>> detectionMode() {
        return Optional.ofNullable(this.detectionMode);
    }

    /**
     * This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    private CustomAppCrashRateCrashRateIncreaseArgs() {}

    private CustomAppCrashRateCrashRateIncreaseArgs(CustomAppCrashRateCrashRateIncreaseArgs $) {
        this.crashRateIncreaseAuto = $.crashRateIncreaseAuto;
        this.crashRateIncreaseFixed = $.crashRateIncreaseFixed;
        this.detectionMode = $.detectionMode;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomAppCrashRateCrashRateIncreaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomAppCrashRateCrashRateIncreaseArgs $;

        public Builder() {
            $ = new CustomAppCrashRateCrashRateIncreaseArgs();
        }

        public Builder(CustomAppCrashRateCrashRateIncreaseArgs defaults) {
            $ = new CustomAppCrashRateCrashRateIncreaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param crashRateIncreaseAuto Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users
         * 
         * @return builder
         * 
         */
        public Builder crashRateIncreaseAuto(@Nullable Output<CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs> crashRateIncreaseAuto) {
            $.crashRateIncreaseAuto = crashRateIncreaseAuto;
            return this;
        }

        /**
         * @param crashRateIncreaseAuto Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users
         * 
         * @return builder
         * 
         */
        public Builder crashRateIncreaseAuto(CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAutoArgs crashRateIncreaseAuto) {
            return crashRateIncreaseAuto(Output.of(crashRateIncreaseAuto));
        }

        /**
         * @param crashRateIncreaseFixed Alert crash rate increases when the defined threshold is exceeded by a certain number of users
         * 
         * @return builder
         * 
         */
        public Builder crashRateIncreaseFixed(@Nullable Output<CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixedArgs> crashRateIncreaseFixed) {
            $.crashRateIncreaseFixed = crashRateIncreaseFixed;
            return this;
        }

        /**
         * @param crashRateIncreaseFixed Alert crash rate increases when the defined threshold is exceeded by a certain number of users
         * 
         * @return builder
         * 
         */
        public Builder crashRateIncreaseFixed(CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixedArgs crashRateIncreaseFixed) {
            return crashRateIncreaseFixed(Output.of(crashRateIncreaseFixed));
        }

        /**
         * @param detectionMode Possible Values: `Auto`, `Fixed`
         * 
         * @return builder
         * 
         */
        public Builder detectionMode(@Nullable Output<String> detectionMode) {
            $.detectionMode = detectionMode;
            return this;
        }

        /**
         * @param detectionMode Possible Values: `Auto`, `Fixed`
         * 
         * @return builder
         * 
         */
        public Builder detectionMode(String detectionMode) {
            return detectionMode(Output.of(detectionMode));
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public CustomAppCrashRateCrashRateIncreaseArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
