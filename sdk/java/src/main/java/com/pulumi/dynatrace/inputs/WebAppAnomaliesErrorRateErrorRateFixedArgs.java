// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class WebAppAnomaliesErrorRateErrorRateFixedArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppAnomaliesErrorRateErrorRateFixedArgs Empty = new WebAppAnomaliesErrorRateErrorRateFixedArgs();

    @Import(name="errorRateReqPerMin", required=true)
    private Output<Double> errorRateReqPerMin;

    public Output<Double> errorRateReqPerMin() {
        return this.errorRateReqPerMin;
    }

    @Import(name="errorRateSensitivity", required=true)
    private Output<String> errorRateSensitivity;

    public Output<String> errorRateSensitivity() {
        return this.errorRateSensitivity;
    }

    @Import(name="maxFailureRateIncrease", required=true)
    private Output<Double> maxFailureRateIncrease;

    public Output<Double> maxFailureRateIncrease() {
        return this.maxFailureRateIncrease;
    }

    @Import(name="minutesAbnormalState", required=true)
    private Output<Double> minutesAbnormalState;

    public Output<Double> minutesAbnormalState() {
        return this.minutesAbnormalState;
    }

    private WebAppAnomaliesErrorRateErrorRateFixedArgs() {}

    private WebAppAnomaliesErrorRateErrorRateFixedArgs(WebAppAnomaliesErrorRateErrorRateFixedArgs $) {
        this.errorRateReqPerMin = $.errorRateReqPerMin;
        this.errorRateSensitivity = $.errorRateSensitivity;
        this.maxFailureRateIncrease = $.maxFailureRateIncrease;
        this.minutesAbnormalState = $.minutesAbnormalState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppAnomaliesErrorRateErrorRateFixedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppAnomaliesErrorRateErrorRateFixedArgs $;

        public Builder() {
            $ = new WebAppAnomaliesErrorRateErrorRateFixedArgs();
        }

        public Builder(WebAppAnomaliesErrorRateErrorRateFixedArgs defaults) {
            $ = new WebAppAnomaliesErrorRateErrorRateFixedArgs(Objects.requireNonNull(defaults));
        }

        public Builder errorRateReqPerMin(Output<Double> errorRateReqPerMin) {
            $.errorRateReqPerMin = errorRateReqPerMin;
            return this;
        }

        public Builder errorRateReqPerMin(Double errorRateReqPerMin) {
            return errorRateReqPerMin(Output.of(errorRateReqPerMin));
        }

        public Builder errorRateSensitivity(Output<String> errorRateSensitivity) {
            $.errorRateSensitivity = errorRateSensitivity;
            return this;
        }

        public Builder errorRateSensitivity(String errorRateSensitivity) {
            return errorRateSensitivity(Output.of(errorRateSensitivity));
        }

        public Builder maxFailureRateIncrease(Output<Double> maxFailureRateIncrease) {
            $.maxFailureRateIncrease = maxFailureRateIncrease;
            return this;
        }

        public Builder maxFailureRateIncrease(Double maxFailureRateIncrease) {
            return maxFailureRateIncrease(Output.of(maxFailureRateIncrease));
        }

        public Builder minutesAbnormalState(Output<Double> minutesAbnormalState) {
            $.minutesAbnormalState = minutesAbnormalState;
            return this;
        }

        public Builder minutesAbnormalState(Double minutesAbnormalState) {
            return minutesAbnormalState(Output.of(minutesAbnormalState));
        }

        public WebAppAnomaliesErrorRateErrorRateFixedArgs build() {
            $.errorRateReqPerMin = Objects.requireNonNull($.errorRateReqPerMin, "expected parameter 'errorRateReqPerMin' to be non-null");
            $.errorRateSensitivity = Objects.requireNonNull($.errorRateSensitivity, "expected parameter 'errorRateSensitivity' to be non-null");
            $.maxFailureRateIncrease = Objects.requireNonNull($.maxFailureRateIncrease, "expected parameter 'maxFailureRateIncrease' to be non-null");
            $.minutesAbnormalState = Objects.requireNonNull($.minutesAbnormalState, "expected parameter 'minutesAbnormalState' to be non-null");
            return $;
        }
    }

}
