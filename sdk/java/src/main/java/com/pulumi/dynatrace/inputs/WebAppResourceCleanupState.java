// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppResourceCleanupState extends com.pulumi.resources.ResourceArgs {

    public static final WebAppResourceCleanupState Empty = new WebAppResourceCleanupState();

    /**
     * For example: *Mask journeyId*
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return For example: *Mask journeyId*
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * For example: `(.*)(journeyId=)-?\d+(.*)`
     * 
     */
    @Import(name="regularExpression")
    private @Nullable Output<String> regularExpression;

    /**
     * @return For example: `(.*)(journeyId=)-?\d+(.*)`
     * 
     */
    public Optional<Output<String>> regularExpression() {
        return Optional.ofNullable(this.regularExpression);
    }

    /**
     * For example: `$1$2\*$3`
     * 
     */
    @Import(name="replaceWith")
    private @Nullable Output<String> replaceWith;

    /**
     * @return For example: `$1$2\*$3`
     * 
     */
    public Optional<Output<String>> replaceWith() {
        return Optional.ofNullable(this.replaceWith);
    }

    private WebAppResourceCleanupState() {}

    private WebAppResourceCleanupState(WebAppResourceCleanupState $) {
        this.name = $.name;
        this.regularExpression = $.regularExpression;
        this.replaceWith = $.replaceWith;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppResourceCleanupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppResourceCleanupState $;

        public Builder() {
            $ = new WebAppResourceCleanupState();
        }

        public Builder(WebAppResourceCleanupState defaults) {
            $ = new WebAppResourceCleanupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name For example: *Mask journeyId*
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name For example: *Mask journeyId*
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param regularExpression For example: `(.*)(journeyId=)-?\d+(.*)`
         * 
         * @return builder
         * 
         */
        public Builder regularExpression(@Nullable Output<String> regularExpression) {
            $.regularExpression = regularExpression;
            return this;
        }

        /**
         * @param regularExpression For example: `(.*)(journeyId=)-?\d+(.*)`
         * 
         * @return builder
         * 
         */
        public Builder regularExpression(String regularExpression) {
            return regularExpression(Output.of(regularExpression));
        }

        /**
         * @param replaceWith For example: `$1$2\*$3`
         * 
         * @return builder
         * 
         */
        public Builder replaceWith(@Nullable Output<String> replaceWith) {
            $.replaceWith = replaceWith;
            return this;
        }

        /**
         * @param replaceWith For example: `$1$2\*$3`
         * 
         * @return builder
         * 
         */
        public Builder replaceWith(String replaceWith) {
            return replaceWith(Output.of(replaceWith));
        }

        public WebAppResourceCleanupState build() {
            return $;
        }
    }

}
