// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BrowserMonitorScriptConfigurationBandwidth {
    private @Nullable Integer download;
    private @Nullable Integer latency;
    private @Nullable String networkType;
    private @Nullable Integer upload;

    private BrowserMonitorScriptConfigurationBandwidth() {}
    public Optional<Integer> download() {
        return Optional.ofNullable(this.download);
    }
    public Optional<Integer> latency() {
        return Optional.ofNullable(this.latency);
    }
    public Optional<String> networkType() {
        return Optional.ofNullable(this.networkType);
    }
    public Optional<Integer> upload() {
        return Optional.ofNullable(this.upload);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BrowserMonitorScriptConfigurationBandwidth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer download;
        private @Nullable Integer latency;
        private @Nullable String networkType;
        private @Nullable Integer upload;
        public Builder() {}
        public Builder(BrowserMonitorScriptConfigurationBandwidth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.download = defaults.download;
    	      this.latency = defaults.latency;
    	      this.networkType = defaults.networkType;
    	      this.upload = defaults.upload;
        }

        @CustomType.Setter
        public Builder download(@Nullable Integer download) {
            this.download = download;
            return this;
        }
        @CustomType.Setter
        public Builder latency(@Nullable Integer latency) {
            this.latency = latency;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(@Nullable String networkType) {
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder upload(@Nullable Integer upload) {
            this.upload = upload;
            return this;
        }
        public BrowserMonitorScriptConfigurationBandwidth build() {
            final var o = new BrowserMonitorScriptConfigurationBandwidth();
            o.download = download;
            o.latency = latency;
            o.networkType = networkType;
            o.upload = upload;
            return o;
        }
    }
}
