// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GenericTypesRulesRuleSourcesSourceArgs;
import java.util.List;
import java.util.Objects;


public final class GenericTypesRulesRuleSourcesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericTypesRulesRuleSourcesArgs Empty = new GenericTypesRulesRuleSourcesArgs();

    @Import(name="sources", required=true)
    private Output<List<GenericTypesRulesRuleSourcesSourceArgs>> sources;

    public Output<List<GenericTypesRulesRuleSourcesSourceArgs>> sources() {
        return this.sources;
    }

    private GenericTypesRulesRuleSourcesArgs() {}

    private GenericTypesRulesRuleSourcesArgs(GenericTypesRulesRuleSourcesArgs $) {
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericTypesRulesRuleSourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericTypesRulesRuleSourcesArgs $;

        public Builder() {
            $ = new GenericTypesRulesRuleSourcesArgs();
        }

        public Builder(GenericTypesRulesRuleSourcesArgs defaults) {
            $ = new GenericTypesRulesRuleSourcesArgs(Objects.requireNonNull(defaults));
        }

        public Builder sources(Output<List<GenericTypesRulesRuleSourcesSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        public Builder sources(List<GenericTypesRulesRuleSourcesSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        public Builder sources(GenericTypesRulesRuleSourcesSourceArgs... sources) {
            return sources(List.of(sources));
        }

        public GenericTypesRulesRuleSourcesArgs build() {
            $.sources = Objects.requireNonNull($.sources, "expected parameter 'sources' to be non-null");
            return $;
        }
    }

}
