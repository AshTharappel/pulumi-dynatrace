// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventCookieCookiesArgs;
import java.util.Objects;


public final class BrowserMonitorScriptEventsEventCookieArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptEventsEventCookieArgs Empty = new BrowserMonitorScriptEventsEventCookieArgs();

    @Import(name="cookies", required=true)
    private Output<BrowserMonitorScriptEventsEventCookieCookiesArgs> cookies;

    public Output<BrowserMonitorScriptEventsEventCookieCookiesArgs> cookies() {
        return this.cookies;
    }

    private BrowserMonitorScriptEventsEventCookieArgs() {}

    private BrowserMonitorScriptEventsEventCookieArgs(BrowserMonitorScriptEventsEventCookieArgs $) {
        this.cookies = $.cookies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptEventsEventCookieArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptEventsEventCookieArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptEventsEventCookieArgs();
        }

        public Builder(BrowserMonitorScriptEventsEventCookieArgs defaults) {
            $ = new BrowserMonitorScriptEventsEventCookieArgs(Objects.requireNonNull(defaults));
        }

        public Builder cookies(Output<BrowserMonitorScriptEventsEventCookieCookiesArgs> cookies) {
            $.cookies = cookies;
            return this;
        }

        public Builder cookies(BrowserMonitorScriptEventsEventCookieCookiesArgs cookies) {
            return cookies(Output.of(cookies));
        }

        public BrowserMonitorScriptEventsEventCookieArgs build() {
            $.cookies = Objects.requireNonNull($.cookies, "expected parameter 'cookies' to be non-null");
            return $;
        }
    }

}
