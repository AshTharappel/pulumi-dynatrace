// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs Empty = new CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs();

    @Import(name="matchOperator", required=true)
    private Output<String> matchOperator;

    public Output<String> matchOperator() {
        return this.matchOperator;
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs() {}

    private CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs(CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs $) {
        this.matchOperator = $.matchOperator;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs $;

        public Builder() {
            $ = new CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs();
        }

        public Builder(CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs defaults) {
            $ = new CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder matchOperator(Output<String> matchOperator) {
            $.matchOperator = matchOperator;
            return this;
        }

        public Builder matchOperator(String matchOperator) {
            return matchOperator(Output.of(matchOperator));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilterArgs build() {
            $.matchOperator = Objects.requireNonNull($.matchOperator, "expected parameter 'matchOperator' to be non-null");
            return $;
        }
    }

}
