// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs;
import java.util.List;
import java.util.Objects;


public final class SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs Empty = new SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs();

    @Import(name="allowListRules", required=true)
    private Output<List<SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs>> allowListRules;

    public Output<List<SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs>> allowListRules() {
        return this.allowListRules;
    }

    private SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs() {}

    private SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs $) {
        this.allowListRules = $.allowListRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs $;

        public Builder() {
            $ = new SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs();
        }

        public Builder(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs defaults) {
            $ = new SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowListRules(Output<List<SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs>> allowListRules) {
            $.allowListRules = allowListRules;
            return this;
        }

        public Builder allowListRules(List<SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs> allowListRules) {
            return allowListRules(Output.of(allowListRules));
        }

        public Builder allowListRules(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs... allowListRules) {
            return allowListRules(List.of(allowListRules));
        }

        public SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs build() {
            $.allowListRules = Objects.requireNonNull($.allowListRules, "expected parameter 'allowListRules' to be non-null");
            return $;
        }
    }

}
