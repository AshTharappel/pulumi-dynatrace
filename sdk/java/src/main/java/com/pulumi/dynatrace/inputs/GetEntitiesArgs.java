// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GetEntitiesEntitiesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEntitiesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEntitiesArgs Empty = new GetEntitiesArgs();

    @Import(name="entities")
    private @Nullable Output<GetEntitiesEntitiesArgs> entities;

    public Optional<Output<GetEntitiesEntitiesArgs>> entities() {
        return Optional.ofNullable(this.entities);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private GetEntitiesArgs() {}

    private GetEntitiesArgs(GetEntitiesArgs $) {
        this.entities = $.entities;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntitiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntitiesArgs $;

        public Builder() {
            $ = new GetEntitiesArgs();
        }

        public Builder(GetEntitiesArgs defaults) {
            $ = new GetEntitiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder entities(@Nullable Output<GetEntitiesEntitiesArgs> entities) {
            $.entities = entities;
            return this;
        }

        public Builder entities(GetEntitiesEntitiesArgs entities) {
            return entities(Output.of(entities));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetEntitiesArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
