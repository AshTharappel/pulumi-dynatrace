// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class SloNormalizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloNormalizationArgs Empty = new SloNormalizationArgs();

    /**
     * When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).
     * 
     */
    @Import(name="normalize", required=true)
    private Output<Boolean> normalize;

    /**
     * @return When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).
     * 
     */
    public Output<Boolean> normalize() {
        return this.normalize;
    }

    private SloNormalizationArgs() {}

    private SloNormalizationArgs(SloNormalizationArgs $) {
        this.normalize = $.normalize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloNormalizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloNormalizationArgs $;

        public Builder() {
            $ = new SloNormalizationArgs();
        }

        public Builder(SloNormalizationArgs defaults) {
            $ = new SloNormalizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param normalize When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).
         * 
         * @return builder
         * 
         */
        public Builder normalize(Output<Boolean> normalize) {
            $.normalize = normalize;
            return this;
        }

        /**
         * @param normalize When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).
         * 
         * @return builder
         * 
         */
        public Builder normalize(Boolean normalize) {
            return normalize(Output.of(normalize));
        }

        public SloNormalizationArgs build() {
            $.normalize = Objects.requireNonNull($.normalize, "expected parameter 'normalize' to be non-null");
            return $;
        }
    }

}
