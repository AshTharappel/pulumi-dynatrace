// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationXhrActionApdexSettings {
    /**
     * @return Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
     * 
     */
    private @Nullable Integer frustratingFallbackThreshold;
    /**
     * @return Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
     * 
     */
    private @Nullable Integer frustratingThreshold;
    /**
     * @return no documentation available
     * 
     */
    private @Nullable Integer threshold;
    /**
     * @return Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
     * 
     */
    private @Nullable Integer toleratedFallbackThreshold;
    /**
     * @return Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
     * 
     */
    private @Nullable Integer toleratedThreshold;

    private WebApplicationXhrActionApdexSettings() {}
    /**
     * @return Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
     * 
     */
    public Optional<Integer> frustratingFallbackThreshold() {
        return Optional.ofNullable(this.frustratingFallbackThreshold);
    }
    /**
     * @return Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
     * 
     */
    public Optional<Integer> frustratingThreshold() {
        return Optional.ofNullable(this.frustratingThreshold);
    }
    /**
     * @return no documentation available
     * 
     */
    public Optional<Integer> threshold() {
        return Optional.ofNullable(this.threshold);
    }
    /**
     * @return Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
     * 
     */
    public Optional<Integer> toleratedFallbackThreshold() {
        return Optional.ofNullable(this.toleratedFallbackThreshold);
    }
    /**
     * @return Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
     * 
     */
    public Optional<Integer> toleratedThreshold() {
        return Optional.ofNullable(this.toleratedThreshold);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationXhrActionApdexSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer frustratingFallbackThreshold;
        private @Nullable Integer frustratingThreshold;
        private @Nullable Integer threshold;
        private @Nullable Integer toleratedFallbackThreshold;
        private @Nullable Integer toleratedThreshold;
        public Builder() {}
        public Builder(WebApplicationXhrActionApdexSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.frustratingFallbackThreshold = defaults.frustratingFallbackThreshold;
    	      this.frustratingThreshold = defaults.frustratingThreshold;
    	      this.threshold = defaults.threshold;
    	      this.toleratedFallbackThreshold = defaults.toleratedFallbackThreshold;
    	      this.toleratedThreshold = defaults.toleratedThreshold;
        }

        @CustomType.Setter
        public Builder frustratingFallbackThreshold(@Nullable Integer frustratingFallbackThreshold) {
            this.frustratingFallbackThreshold = frustratingFallbackThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder frustratingThreshold(@Nullable Integer frustratingThreshold) {
            this.frustratingThreshold = frustratingThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable Integer threshold) {
            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder toleratedFallbackThreshold(@Nullable Integer toleratedFallbackThreshold) {
            this.toleratedFallbackThreshold = toleratedFallbackThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder toleratedThreshold(@Nullable Integer toleratedThreshold) {
            this.toleratedThreshold = toleratedThreshold;
            return this;
        }
        public WebApplicationXhrActionApdexSettings build() {
            final var o = new WebApplicationXhrActionApdexSettings();
            o.frustratingFallbackThreshold = frustratingFallbackThreshold;
            o.frustratingThreshold = frustratingThreshold;
            o.threshold = threshold;
            o.toleratedFallbackThreshold = toleratedFallbackThreshold;
            o.toleratedThreshold = toleratedThreshold;
            return o;
        }
    }
}
