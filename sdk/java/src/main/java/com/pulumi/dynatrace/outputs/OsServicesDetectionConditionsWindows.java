// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.OsServicesDetectionConditionsWindowsDetectionConditionsWindow;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OsServicesDetectionConditionsWindows {
    private List<OsServicesDetectionConditionsWindowsDetectionConditionsWindow> detectionConditionsWindows;

    private OsServicesDetectionConditionsWindows() {}
    public List<OsServicesDetectionConditionsWindowsDetectionConditionsWindow> detectionConditionsWindows() {
        return this.detectionConditionsWindows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsServicesDetectionConditionsWindows defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<OsServicesDetectionConditionsWindowsDetectionConditionsWindow> detectionConditionsWindows;
        public Builder() {}
        public Builder(OsServicesDetectionConditionsWindows defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectionConditionsWindows = defaults.detectionConditionsWindows;
        }

        @CustomType.Setter
        public Builder detectionConditionsWindows(List<OsServicesDetectionConditionsWindowsDetectionConditionsWindow> detectionConditionsWindows) {
            this.detectionConditionsWindows = Objects.requireNonNull(detectionConditionsWindows);
            return this;
        }
        public Builder detectionConditionsWindows(OsServicesDetectionConditionsWindowsDetectionConditionsWindow... detectionConditionsWindows) {
            return detectionConditionsWindows(List.of(detectionConditionsWindows));
        }
        public OsServicesDetectionConditionsWindows build() {
            final var o = new OsServicesDetectionConditionsWindows();
            o.detectionConditionsWindows = detectionConditionsWindows;
            return o;
        }
    }
}
