// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.ExtensionExecutionRemoteArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.ExtensionExecutionRemoteState;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/extensionExecutionRemote:ExtensionExecutionRemote")
public class ExtensionExecutionRemote extends com.pulumi.resources.CustomResource {
    /**
     * Select performance profile for Extension Execution Controller [Documentation](https://www.dynatrace.com/support/help/shortlink/extensions-concepts#resource-consumption)
     * 
     */
    @Export(name="performanceProfile", refs={String.class}, tree="[0]")
    private Output<String> performanceProfile;

    /**
     * @return Select performance profile for Extension Execution Controller [Documentation](https://www.dynatrace.com/support/help/shortlink/extensions-concepts#resource-consumption)
     * 
     */
    public Output<String> performanceProfile() {
        return this.performanceProfile;
    }
    /**
     * The scope of this setting (ENVIRONMENT*ACTIVE*GATE)
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    /**
     * @return The scope of this setting (ENVIRONMENT*ACTIVE*GATE)
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExtensionExecutionRemote(String name) {
        this(name, ExtensionExecutionRemoteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExtensionExecutionRemote(String name, ExtensionExecutionRemoteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExtensionExecutionRemote(String name, ExtensionExecutionRemoteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/extensionExecutionRemote:ExtensionExecutionRemote", name, args == null ? ExtensionExecutionRemoteArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExtensionExecutionRemote(String name, Output<String> id, @Nullable ExtensionExecutionRemoteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/extensionExecutionRemote:ExtensionExecutionRemote", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExtensionExecutionRemote get(String name, Output<String> id, @Nullable ExtensionExecutionRemoteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExtensionExecutionRemote(name, id, state, options);
    }
}
