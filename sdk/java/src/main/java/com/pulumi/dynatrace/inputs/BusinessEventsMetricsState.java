// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BusinessEventsMetricsState extends com.pulumi.resources.ResourceArgs {

    public static final BusinessEventsMetricsState Empty = new BusinessEventsMetricsState();

    /**
     * no documentation available
     * 
     */
    @Import(name="dimensions")
    private @Nullable Output<List<String>> dimensions;

    /**
     * @return no documentation available
     * 
     */
    public Optional<Output<List<String>>> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Key
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Key
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * [See our documentation](https://dt-url.net/bp234rv)
     * 
     */
    @Import(name="matcher")
    private @Nullable Output<String> matcher;

    /**
     * @return [See our documentation](https://dt-url.net/bp234rv)
     * 
     */
    public Optional<Output<String>> matcher() {
        return Optional.ofNullable(this.matcher);
    }

    /**
     * Possible Values: `ATTRIBUTE`, `OCCURRENCE`
     * 
     */
    @Import(name="measure")
    private @Nullable Output<String> measure;

    /**
     * @return Possible Values: `ATTRIBUTE`, `OCCURRENCE`
     * 
     */
    public Optional<Output<String>> measure() {
        return Optional.ofNullable(this.measure);
    }

    /**
     * Attribute
     * 
     */
    @Import(name="measureAttribute")
    private @Nullable Output<String> measureAttribute;

    /**
     * @return Attribute
     * 
     */
    public Optional<Output<String>> measureAttribute() {
        return Optional.ofNullable(this.measureAttribute);
    }

    private BusinessEventsMetricsState() {}

    private BusinessEventsMetricsState(BusinessEventsMetricsState $) {
        this.dimensions = $.dimensions;
        this.enabled = $.enabled;
        this.key = $.key;
        this.matcher = $.matcher;
        this.measure = $.measure;
        this.measureAttribute = $.measureAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BusinessEventsMetricsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BusinessEventsMetricsState $;

        public Builder() {
            $ = new BusinessEventsMetricsState();
        }

        public Builder(BusinessEventsMetricsState defaults) {
            $ = new BusinessEventsMetricsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dimensions no documentation available
         * 
         * @return builder
         * 
         */
        public Builder dimensions(@Nullable Output<List<String>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions no documentation available
         * 
         * @return builder
         * 
         */
        public Builder dimensions(List<String> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param dimensions no documentation available
         * 
         * @return builder
         * 
         */
        public Builder dimensions(String... dimensions) {
            return dimensions(List.of(dimensions));
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param key Key
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Key
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param matcher [See our documentation](https://dt-url.net/bp234rv)
         * 
         * @return builder
         * 
         */
        public Builder matcher(@Nullable Output<String> matcher) {
            $.matcher = matcher;
            return this;
        }

        /**
         * @param matcher [See our documentation](https://dt-url.net/bp234rv)
         * 
         * @return builder
         * 
         */
        public Builder matcher(String matcher) {
            return matcher(Output.of(matcher));
        }

        /**
         * @param measure Possible Values: `ATTRIBUTE`, `OCCURRENCE`
         * 
         * @return builder
         * 
         */
        public Builder measure(@Nullable Output<String> measure) {
            $.measure = measure;
            return this;
        }

        /**
         * @param measure Possible Values: `ATTRIBUTE`, `OCCURRENCE`
         * 
         * @return builder
         * 
         */
        public Builder measure(String measure) {
            return measure(Output.of(measure));
        }

        /**
         * @param measureAttribute Attribute
         * 
         * @return builder
         * 
         */
        public Builder measureAttribute(@Nullable Output<String> measureAttribute) {
            $.measureAttribute = measureAttribute;
            return this;
        }

        /**
         * @param measureAttribute Attribute
         * 
         * @return builder
         * 
         */
        public Builder measureAttribute(String measureAttribute) {
            return measureAttribute(Output.of(measureAttribute));
        }

        public BusinessEventsMetricsState build() {
            return $;
        }
    }

}
