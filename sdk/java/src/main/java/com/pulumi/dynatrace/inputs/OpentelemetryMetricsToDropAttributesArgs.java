// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.OpentelemetryMetricsToDropAttributesToDropAttributeArgs;
import java.util.List;
import java.util.Objects;


public final class OpentelemetryMetricsToDropAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpentelemetryMetricsToDropAttributesArgs Empty = new OpentelemetryMetricsToDropAttributesArgs();

    @Import(name="toDropAttributes", required=true)
    private Output<List<OpentelemetryMetricsToDropAttributesToDropAttributeArgs>> toDropAttributes;

    public Output<List<OpentelemetryMetricsToDropAttributesToDropAttributeArgs>> toDropAttributes() {
        return this.toDropAttributes;
    }

    private OpentelemetryMetricsToDropAttributesArgs() {}

    private OpentelemetryMetricsToDropAttributesArgs(OpentelemetryMetricsToDropAttributesArgs $) {
        this.toDropAttributes = $.toDropAttributes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpentelemetryMetricsToDropAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpentelemetryMetricsToDropAttributesArgs $;

        public Builder() {
            $ = new OpentelemetryMetricsToDropAttributesArgs();
        }

        public Builder(OpentelemetryMetricsToDropAttributesArgs defaults) {
            $ = new OpentelemetryMetricsToDropAttributesArgs(Objects.requireNonNull(defaults));
        }

        public Builder toDropAttributes(Output<List<OpentelemetryMetricsToDropAttributesToDropAttributeArgs>> toDropAttributes) {
            $.toDropAttributes = toDropAttributes;
            return this;
        }

        public Builder toDropAttributes(List<OpentelemetryMetricsToDropAttributesToDropAttributeArgs> toDropAttributes) {
            return toDropAttributes(Output.of(toDropAttributes));
        }

        public Builder toDropAttributes(OpentelemetryMetricsToDropAttributesToDropAttributeArgs... toDropAttributes) {
            return toDropAttributes(List.of(toDropAttributes));
        }

        public OpentelemetryMetricsToDropAttributesArgs build() {
            $.toDropAttributes = Objects.requireNonNull($.toDropAttributes, "expected parameter 'toDropAttributes' to be non-null");
            return $;
        }
    }

}
