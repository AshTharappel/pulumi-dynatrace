// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.OwnershipTeamsArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.OwnershipTeamsState;
import com.pulumi.dynatrace.outputs.OwnershipTeamsAdditionalInformation;
import com.pulumi.dynatrace.outputs.OwnershipTeamsContactDetails;
import com.pulumi.dynatrace.outputs.OwnershipTeamsLinks;
import com.pulumi.dynatrace.outputs.OwnershipTeamsResponsibilities;
import com.pulumi.dynatrace.outputs.OwnershipTeamsSupplementaryIdentifiers;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/ownershipTeams:OwnershipTeams")
public class OwnershipTeams extends com.pulumi.resources.CustomResource {
    /**
     * Define key/value pairs that further describe this team — for example, cost center, solution type, or business unit assignments.
     * 
     */
    @Export(name="additionalInformation", refs={OwnershipTeamsAdditionalInformation.class}, tree="[0]")
    private Output</* @Nullable */ OwnershipTeamsAdditionalInformation> additionalInformation;

    /**
     * @return Define key/value pairs that further describe this team — for example, cost center, solution type, or business unit assignments.
     * 
     */
    public Output<Optional<OwnershipTeamsAdditionalInformation>> additionalInformation() {
        return Codegen.optional(this.additionalInformation);
    }
    /**
     * Define options for messaging integration or other means of contacting this team.
     * 
     */
    @Export(name="contactDetails", refs={OwnershipTeamsContactDetails.class}, tree="[0]")
    private Output</* @Nullable */ OwnershipTeamsContactDetails> contactDetails;

    /**
     * @return Define options for messaging integration or other means of contacting this team.
     * 
     */
    public Output<Optional<OwnershipTeamsContactDetails>> contactDetails() {
        return Codegen.optional(this.contactDetails);
    }
    /**
     * Description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * This field should only be used for the automation purpose when importing team information. Once the external ID is created it can’t be changed.
     * 
     */
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalId;

    /**
     * @return This field should only be used for the automation purpose when importing team information. Once the external ID is created it can’t be changed.
     * 
     */
    public Output<Optional<String>> externalId() {
        return Codegen.optional(this.externalId);
    }
    /**
     * The team identifier is used to reference the team from any entity in Dynatrace. This identifier can’t be edited once the team has been created.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return The team identifier is used to reference the team from any entity in Dynatrace. This identifier can’t be edited once the team has been created.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Include links to online resources where information relevant to this team’s responsibilities can be found.
     * 
     */
    @Export(name="links", refs={OwnershipTeamsLinks.class}, tree="[0]")
    private Output</* @Nullable */ OwnershipTeamsLinks> links;

    /**
     * @return Include links to online resources where information relevant to this team’s responsibilities can be found.
     * 
     */
    public Output<Optional<OwnershipTeamsLinks>> links() {
        return Codegen.optional(this.links);
    }
    /**
     * Team name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Team name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Turn on all responsibility assignments that apply to this team.
     * 
     */
    @Export(name="responsibilities", refs={OwnershipTeamsResponsibilities.class}, tree="[0]")
    private Output<OwnershipTeamsResponsibilities> responsibilities;

    /**
     * @return Turn on all responsibility assignments that apply to this team.
     * 
     */
    public Output<OwnershipTeamsResponsibilities> responsibilities() {
        return this.responsibilities;
    }
    /**
     * The supplementary team identifiers can be optionally used in addition to the main team identifier to reference this team from any entity in Dynatrace. Up to 3 supplementary identifiers are supported.
     * 
     */
    @Export(name="supplementaryIdentifiers", refs={OwnershipTeamsSupplementaryIdentifiers.class}, tree="[0]")
    private Output</* @Nullable */ OwnershipTeamsSupplementaryIdentifiers> supplementaryIdentifiers;

    /**
     * @return The supplementary team identifiers can be optionally used in addition to the main team identifier to reference this team from any entity in Dynatrace. Up to 3 supplementary identifiers are supported.
     * 
     */
    public Output<Optional<OwnershipTeamsSupplementaryIdentifiers>> supplementaryIdentifiers() {
        return Codegen.optional(this.supplementaryIdentifiers);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OwnershipTeams(String name) {
        this(name, OwnershipTeamsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OwnershipTeams(String name, OwnershipTeamsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OwnershipTeams(String name, OwnershipTeamsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/ownershipTeams:OwnershipTeams", name, args == null ? OwnershipTeamsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OwnershipTeams(String name, Output<String> id, @Nullable OwnershipTeamsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/ownershipTeams:OwnershipTeams", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OwnershipTeams get(String name, Output<String> id, @Nullable OwnershipTeamsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OwnershipTeams(name, id, state, options);
    }
}
