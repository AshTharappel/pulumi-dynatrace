// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.IamGroupPermissionsPermissionArgs;
import java.util.List;
import java.util.Objects;


public final class IamGroupPermissionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamGroupPermissionsArgs Empty = new IamGroupPermissionsArgs();

    /**
     * A Permission
     * 
     */
    @Import(name="permissions", required=true)
    private Output<List<IamGroupPermissionsPermissionArgs>> permissions;

    /**
     * @return A Permission
     * 
     */
    public Output<List<IamGroupPermissionsPermissionArgs>> permissions() {
        return this.permissions;
    }

    private IamGroupPermissionsArgs() {}

    private IamGroupPermissionsArgs(IamGroupPermissionsArgs $) {
        this.permissions = $.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamGroupPermissionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamGroupPermissionsArgs $;

        public Builder() {
            $ = new IamGroupPermissionsArgs();
        }

        public Builder(IamGroupPermissionsArgs defaults) {
            $ = new IamGroupPermissionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param permissions A Permission
         * 
         * @return builder
         * 
         */
        public Builder permissions(Output<List<IamGroupPermissionsPermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions A Permission
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<IamGroupPermissionsPermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions A Permission
         * 
         * @return builder
         * 
         */
        public Builder permissions(IamGroupPermissionsPermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        public IamGroupPermissionsArgs build() {
            $.permissions = Objects.requireNonNull($.permissions, "expected parameter 'permissions' to be non-null");
            return $;
        }
    }

}
