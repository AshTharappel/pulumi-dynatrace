// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs;
import java.util.List;
import java.util.Objects;


public final class FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs Empty = new FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs();

    @Import(name="customHandledExceptions", required=true)
    private Output<List<FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs>> customHandledExceptions;

    public Output<List<FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs>> customHandledExceptions() {
        return this.customHandledExceptions;
    }

    private FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs() {}

    private FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs(FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs $) {
        this.customHandledExceptions = $.customHandledExceptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs $;

        public Builder() {
            $ = new FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs();
        }

        public Builder(FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs defaults) {
            $ = new FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder customHandledExceptions(Output<List<FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs>> customHandledExceptions) {
            $.customHandledExceptions = customHandledExceptions;
            return this;
        }

        public Builder customHandledExceptions(List<FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs> customHandledExceptions) {
            return customHandledExceptions(Output.of(customHandledExceptions));
        }

        public Builder customHandledExceptions(FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs... customHandledExceptions) {
            return customHandledExceptions(List.of(customHandledExceptions));
        }

        public FailureDetectionParametersExceptionRulesCustomHandledExceptionsArgs build() {
            $.customHandledExceptions = Objects.requireNonNull($.customHandledExceptions, "expected parameter 'customHandledExceptions' to be non-null");
            return $;
        }
    }

}
