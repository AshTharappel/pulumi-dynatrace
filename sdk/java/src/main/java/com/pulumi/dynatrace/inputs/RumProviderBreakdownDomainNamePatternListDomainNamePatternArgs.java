// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs extends com.pulumi.resources.ResourceArgs {

    public static final RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs Empty = new RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs();

    @Import(name="pattern", required=true)
    private Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern;
    }

    private RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs() {}

    private RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs(RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs $) {
        this.pattern = $.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs $;

        public Builder() {
            $ = new RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs();
        }

        public Builder(RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs defaults) {
            $ = new RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs(Objects.requireNonNull(defaults));
        }

        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs build() {
            $.pattern = Objects.requireNonNull($.pattern, "expected parameter 'pattern' to be non-null");
            return $;
        }
    }

}
