// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FailureDetectionRulesConditionsConditionPredicateArgs extends com.pulumi.resources.ResourceArgs {

    public static final FailureDetectionRulesConditionsConditionPredicateArgs Empty = new FailureDetectionRulesConditionsConditionPredicateArgs();

    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    @Import(name="managementZones")
    private @Nullable Output<List<String>> managementZones;

    public Optional<Output<List<String>>> managementZones() {
        return Optional.ofNullable(this.managementZones);
    }

    @Import(name="predicateType", required=true)
    private Output<String> predicateType;

    public Output<String> predicateType() {
        return this.predicateType;
    }

    @Import(name="serviceTypes")
    private @Nullable Output<List<String>> serviceTypes;

    public Optional<Output<List<String>>> serviceTypes() {
        return Optional.ofNullable(this.serviceTypes);
    }

    @Import(name="tagKeys")
    private @Nullable Output<List<String>> tagKeys;

    public Optional<Output<List<String>>> tagKeys() {
        return Optional.ofNullable(this.tagKeys);
    }

    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="textValues")
    private @Nullable Output<List<String>> textValues;

    public Optional<Output<List<String>>> textValues() {
        return Optional.ofNullable(this.textValues);
    }

    private FailureDetectionRulesConditionsConditionPredicateArgs() {}

    private FailureDetectionRulesConditionsConditionPredicateArgs(FailureDetectionRulesConditionsConditionPredicateArgs $) {
        this.caseSensitive = $.caseSensitive;
        this.managementZones = $.managementZones;
        this.predicateType = $.predicateType;
        this.serviceTypes = $.serviceTypes;
        this.tagKeys = $.tagKeys;
        this.tags = $.tags;
        this.textValues = $.textValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailureDetectionRulesConditionsConditionPredicateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailureDetectionRulesConditionsConditionPredicateArgs $;

        public Builder() {
            $ = new FailureDetectionRulesConditionsConditionPredicateArgs();
        }

        public Builder(FailureDetectionRulesConditionsConditionPredicateArgs defaults) {
            $ = new FailureDetectionRulesConditionsConditionPredicateArgs(Objects.requireNonNull(defaults));
        }

        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        public Builder managementZones(@Nullable Output<List<String>> managementZones) {
            $.managementZones = managementZones;
            return this;
        }

        public Builder managementZones(List<String> managementZones) {
            return managementZones(Output.of(managementZones));
        }

        public Builder managementZones(String... managementZones) {
            return managementZones(List.of(managementZones));
        }

        public Builder predicateType(Output<String> predicateType) {
            $.predicateType = predicateType;
            return this;
        }

        public Builder predicateType(String predicateType) {
            return predicateType(Output.of(predicateType));
        }

        public Builder serviceTypes(@Nullable Output<List<String>> serviceTypes) {
            $.serviceTypes = serviceTypes;
            return this;
        }

        public Builder serviceTypes(List<String> serviceTypes) {
            return serviceTypes(Output.of(serviceTypes));
        }

        public Builder serviceTypes(String... serviceTypes) {
            return serviceTypes(List.of(serviceTypes));
        }

        public Builder tagKeys(@Nullable Output<List<String>> tagKeys) {
            $.tagKeys = tagKeys;
            return this;
        }

        public Builder tagKeys(List<String> tagKeys) {
            return tagKeys(Output.of(tagKeys));
        }

        public Builder tagKeys(String... tagKeys) {
            return tagKeys(List.of(tagKeys));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder textValues(@Nullable Output<List<String>> textValues) {
            $.textValues = textValues;
            return this;
        }

        public Builder textValues(List<String> textValues) {
            return textValues(Output.of(textValues));
        }

        public Builder textValues(String... textValues) {
            return textValues(List.of(textValues));
        }

        public FailureDetectionRulesConditionsConditionPredicateArgs build() {
            $.predicateType = Objects.requireNonNull($.predicateType, "expected parameter 'predicateType' to be non-null");
            return $;
        }
    }

}
