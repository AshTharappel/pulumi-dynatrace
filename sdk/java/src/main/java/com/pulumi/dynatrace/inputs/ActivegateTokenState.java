// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActivegateTokenState extends com.pulumi.resources.ResourceArgs {

    public static final ActivegateTokenState Empty = new ActivegateTokenState();

    /**
     * Manually enforce ActiveGate token authentication
     * 
     */
    @Import(name="authTokenEnforcementManuallyEnabled")
    private @Nullable Output<Boolean> authTokenEnforcementManuallyEnabled;

    /**
     * @return Manually enforce ActiveGate token authentication
     * 
     */
    public Optional<Output<Boolean>> authTokenEnforcementManuallyEnabled() {
        return Optional.ofNullable(this.authTokenEnforcementManuallyEnabled);
    }

    /**
     * Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))
     * 
     */
    @Import(name="expiringTokenNotificationsEnabled")
    private @Nullable Output<Boolean> expiringTokenNotificationsEnabled;

    /**
     * @return Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))
     * 
     */
    public Optional<Output<Boolean>> expiringTokenNotificationsEnabled() {
        return Optional.ofNullable(this.expiringTokenNotificationsEnabled);
    }

    private ActivegateTokenState() {}

    private ActivegateTokenState(ActivegateTokenState $) {
        this.authTokenEnforcementManuallyEnabled = $.authTokenEnforcementManuallyEnabled;
        this.expiringTokenNotificationsEnabled = $.expiringTokenNotificationsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActivegateTokenState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActivegateTokenState $;

        public Builder() {
            $ = new ActivegateTokenState();
        }

        public Builder(ActivegateTokenState defaults) {
            $ = new ActivegateTokenState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authTokenEnforcementManuallyEnabled Manually enforce ActiveGate token authentication
         * 
         * @return builder
         * 
         */
        public Builder authTokenEnforcementManuallyEnabled(@Nullable Output<Boolean> authTokenEnforcementManuallyEnabled) {
            $.authTokenEnforcementManuallyEnabled = authTokenEnforcementManuallyEnabled;
            return this;
        }

        /**
         * @param authTokenEnforcementManuallyEnabled Manually enforce ActiveGate token authentication
         * 
         * @return builder
         * 
         */
        public Builder authTokenEnforcementManuallyEnabled(Boolean authTokenEnforcementManuallyEnabled) {
            return authTokenEnforcementManuallyEnabled(Output.of(authTokenEnforcementManuallyEnabled));
        }

        /**
         * @param expiringTokenNotificationsEnabled Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))
         * 
         * @return builder
         * 
         */
        public Builder expiringTokenNotificationsEnabled(@Nullable Output<Boolean> expiringTokenNotificationsEnabled) {
            $.expiringTokenNotificationsEnabled = expiringTokenNotificationsEnabled;
            return this;
        }

        /**
         * @param expiringTokenNotificationsEnabled Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))
         * 
         * @return builder
         * 
         */
        public Builder expiringTokenNotificationsEnabled(Boolean expiringTokenNotificationsEnabled) {
            return expiringTokenNotificationsEnabled(Output.of(expiringTokenNotificationsEnabled));
        }

        public ActivegateTokenState build() {
            return $;
        }
    }

}
