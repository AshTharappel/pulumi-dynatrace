// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class DiskAnomalyRulesSampleLimit {
    /**
     * @return .. within the last
     * 
     */
    private Integer samples;
    /**
     * @return Minimum number of violating samples
     * 
     */
    private Integer violatingSamples;

    private DiskAnomalyRulesSampleLimit() {}
    /**
     * @return .. within the last
     * 
     */
    public Integer samples() {
        return this.samples;
    }
    /**
     * @return Minimum number of violating samples
     * 
     */
    public Integer violatingSamples() {
        return this.violatingSamples;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskAnomalyRulesSampleLimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer samples;
        private Integer violatingSamples;
        public Builder() {}
        public Builder(DiskAnomalyRulesSampleLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.samples = defaults.samples;
    	      this.violatingSamples = defaults.violatingSamples;
        }

        @CustomType.Setter
        public Builder samples(Integer samples) {
            this.samples = Objects.requireNonNull(samples);
            return this;
        }
        @CustomType.Setter
        public Builder violatingSamples(Integer violatingSamples) {
            this.violatingSamples = Objects.requireNonNull(violatingSamples);
            return this;
        }
        public DiskAnomalyRulesSampleLimit build() {
            final var o = new DiskAnomalyRulesSampleLimit();
            o.samples = samples;
            o.violatingSamples = violatingSamples;
            return o;
        }
    }
}
