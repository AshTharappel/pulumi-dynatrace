// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings;
import com.pulumi.dynatrace.outputs.WebAppRequestErrorsErrorRulesErrorRuleFilterSettings;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebAppRequestErrorsErrorRulesErrorRule {
    private WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings captureSettings;
    private Boolean considerCspViolations;
    private Boolean considerFailedImages;
    private @Nullable String errorCodes;
    private WebAppRequestErrorsErrorRulesErrorRuleFilterSettings filterSettings;

    private WebAppRequestErrorsErrorRulesErrorRule() {}
    public WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings captureSettings() {
        return this.captureSettings;
    }
    public Boolean considerCspViolations() {
        return this.considerCspViolations;
    }
    public Boolean considerFailedImages() {
        return this.considerFailedImages;
    }
    public Optional<String> errorCodes() {
        return Optional.ofNullable(this.errorCodes);
    }
    public WebAppRequestErrorsErrorRulesErrorRuleFilterSettings filterSettings() {
        return this.filterSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAppRequestErrorsErrorRulesErrorRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings captureSettings;
        private Boolean considerCspViolations;
        private Boolean considerFailedImages;
        private @Nullable String errorCodes;
        private WebAppRequestErrorsErrorRulesErrorRuleFilterSettings filterSettings;
        public Builder() {}
        public Builder(WebAppRequestErrorsErrorRulesErrorRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.captureSettings = defaults.captureSettings;
    	      this.considerCspViolations = defaults.considerCspViolations;
    	      this.considerFailedImages = defaults.considerFailedImages;
    	      this.errorCodes = defaults.errorCodes;
    	      this.filterSettings = defaults.filterSettings;
        }

        @CustomType.Setter
        public Builder captureSettings(WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings captureSettings) {
            this.captureSettings = Objects.requireNonNull(captureSettings);
            return this;
        }
        @CustomType.Setter
        public Builder considerCspViolations(Boolean considerCspViolations) {
            this.considerCspViolations = Objects.requireNonNull(considerCspViolations);
            return this;
        }
        @CustomType.Setter
        public Builder considerFailedImages(Boolean considerFailedImages) {
            this.considerFailedImages = Objects.requireNonNull(considerFailedImages);
            return this;
        }
        @CustomType.Setter
        public Builder errorCodes(@Nullable String errorCodes) {
            this.errorCodes = errorCodes;
            return this;
        }
        @CustomType.Setter
        public Builder filterSettings(WebAppRequestErrorsErrorRulesErrorRuleFilterSettings filterSettings) {
            this.filterSettings = Objects.requireNonNull(filterSettings);
            return this;
        }
        public WebAppRequestErrorsErrorRulesErrorRule build() {
            final var o = new WebAppRequestErrorsErrorRulesErrorRule();
            o.captureSettings = captureSettings;
            o.considerCspViolations = considerCspViolations;
            o.considerFailedImages = considerFailedImages;
            o.errorCodes = errorCodes;
            o.filterSettings = filterSettings;
            return o;
        }
    }
}
