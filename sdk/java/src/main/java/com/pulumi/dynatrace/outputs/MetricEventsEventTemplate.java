// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.MetricEventsEventTemplateMetadata;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricEventsEventTemplate {
    /**
     * @return Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
     * 
     */
    private @Nullable Boolean davisMerge;
    /**
     * @return The description of the event to trigger.
     * 
     */
    private String description;
    /**
     * @return The event type to trigger.
     * 
     */
    private String eventType;
    /**
     * @return Set of additional key-value properties to be attached to the triggered event.
     * 
     */
    private @Nullable List<MetricEventsEventTemplateMetadata> metadatas;
    /**
     * @return The title of the event to trigger.
     * 
     */
    private String title;

    private MetricEventsEventTemplate() {}
    /**
     * @return Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
     * 
     */
    public Optional<Boolean> davisMerge() {
        return Optional.ofNullable(this.davisMerge);
    }
    /**
     * @return The description of the event to trigger.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The event type to trigger.
     * 
     */
    public String eventType() {
        return this.eventType;
    }
    /**
     * @return Set of additional key-value properties to be attached to the triggered event.
     * 
     */
    public List<MetricEventsEventTemplateMetadata> metadatas() {
        return this.metadatas == null ? List.of() : this.metadatas;
    }
    /**
     * @return The title of the event to trigger.
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricEventsEventTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean davisMerge;
        private String description;
        private String eventType;
        private @Nullable List<MetricEventsEventTemplateMetadata> metadatas;
        private String title;
        public Builder() {}
        public Builder(MetricEventsEventTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.davisMerge = defaults.davisMerge;
    	      this.description = defaults.description;
    	      this.eventType = defaults.eventType;
    	      this.metadatas = defaults.metadatas;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder davisMerge(@Nullable Boolean davisMerge) {
            this.davisMerge = davisMerge;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder eventType(String eventType) {
            this.eventType = Objects.requireNonNull(eventType);
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(@Nullable List<MetricEventsEventTemplateMetadata> metadatas) {
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(MetricEventsEventTemplateMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        public MetricEventsEventTemplate build() {
            final var o = new MetricEventsEventTemplate();
            o.davisMerge = davisMerge;
            o.description = description;
            o.eventType = eventType;
            o.metadatas = metadatas;
            o.title = title;
            return o;
        }
    }
}
