// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserGroupPermissionsGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupPermissionsGrantArgs Empty = new UserGroupPermissionsGrantArgs();

    @Import(name="environments")
    private @Nullable Output<List<String>> environments;

    public Optional<Output<List<String>>> environments() {
        return Optional.ofNullable(this.environments);
    }

    @Import(name="permission", required=true)
    private Output<String> permission;

    public Output<String> permission() {
        return this.permission;
    }

    private UserGroupPermissionsGrantArgs() {}

    private UserGroupPermissionsGrantArgs(UserGroupPermissionsGrantArgs $) {
        this.environments = $.environments;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserGroupPermissionsGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserGroupPermissionsGrantArgs $;

        public Builder() {
            $ = new UserGroupPermissionsGrantArgs();
        }

        public Builder(UserGroupPermissionsGrantArgs defaults) {
            $ = new UserGroupPermissionsGrantArgs(Objects.requireNonNull(defaults));
        }

        public Builder environments(@Nullable Output<List<String>> environments) {
            $.environments = environments;
            return this;
        }

        public Builder environments(List<String> environments) {
            return environments(Output.of(environments));
        }

        public Builder environments(String... environments) {
            return environments(List.of(environments));
        }

        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public UserGroupPermissionsGrantArgs build() {
            $.permission = Objects.requireNonNull($.permission, "expected parameter 'permission' to be non-null");
            return $;
        }
    }

}
