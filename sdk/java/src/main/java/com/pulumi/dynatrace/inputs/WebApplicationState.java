// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebApplicationConversionGoalsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationCustomActionApdexSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationKeyUserActionArgs;
import com.pulumi.dynatrace.inputs.WebApplicationLoadActionApdexSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMetaDataCaptureSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationSessionReplayConfigArgs;
import com.pulumi.dynatrace.inputs.WebApplicationUserActionAndSessionPropertiesArgs;
import com.pulumi.dynatrace.inputs.WebApplicationUserActionNamingSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationUserTagsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationWaterfallSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationXhrActionApdexSettingsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationState extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationState Empty = new WebApplicationState();

    /**
     * A list of conversion goals of the application
     * 
     */
    @Import(name="conversionGoals")
    private @Nullable Output<WebApplicationConversionGoalsArgs> conversionGoals;

    /**
     * @return A list of conversion goals of the application
     * 
     */
    public Optional<Output<WebApplicationConversionGoalsArgs>> conversionGoals() {
        return Optional.ofNullable(this.conversionGoals);
    }

    /**
     * Analize *X*% of user sessions
     * 
     */
    @Import(name="costControlUserSessionPercentage")
    private @Nullable Output<Integer> costControlUserSessionPercentage;

    /**
     * @return Analize *X*% of user sessions
     * 
     */
    public Optional<Output<Integer>> costControlUserSessionPercentage() {
        return Optional.ofNullable(this.costControlUserSessionPercentage);
    }

    /**
     * Defines the Custom Action Apdex settings of an application
     * 
     */
    @Import(name="customActionApdexSettings")
    private @Nullable Output<WebApplicationCustomActionApdexSettingsArgs> customActionApdexSettings;

    /**
     * @return Defines the Custom Action Apdex settings of an application
     * 
     */
    public Optional<Output<WebApplicationCustomActionApdexSettingsArgs>> customActionApdexSettings() {
        return Optional.ofNullable(this.customActionApdexSettings);
    }

    /**
     * User Action names to be flagged as Key User Actions
     * 
     */
    @Import(name="keyUserActions")
    private @Nullable Output<List<WebApplicationKeyUserActionArgs>> keyUserActions;

    /**
     * @return User Action names to be flagged as Key User Actions
     * 
     */
    public Optional<Output<List<WebApplicationKeyUserActionArgs>>> keyUserActions() {
        return Optional.ofNullable(this.keyUserActions);
    }

    /**
     * Defines the Load Action Apdex settings of an application
     * 
     */
    @Import(name="loadActionApdexSettings")
    private @Nullable Output<WebApplicationLoadActionApdexSettingsArgs> loadActionApdexSettings;

    /**
     * @return Defines the Load Action Apdex settings of an application
     * 
     */
    public Optional<Output<WebApplicationLoadActionApdexSettingsArgs>> loadActionApdexSettings() {
        return Optional.ofNullable(this.loadActionApdexSettings);
    }

    /**
     * The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
     * 
     */
    @Import(name="loadActionKeyPerformanceMetric")
    private @Nullable Output<String> loadActionKeyPerformanceMetric;

    /**
     * @return The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
     * 
     */
    public Optional<Output<String>> loadActionKeyPerformanceMetric() {
        return Optional.ofNullable(this.loadActionKeyPerformanceMetric);
    }

    /**
     * Java script agent meta data capture settings
     * 
     */
    @Import(name="metaDataCaptureSettings")
    private @Nullable Output<WebApplicationMetaDataCaptureSettingsArgs> metaDataCaptureSettings;

    /**
     * @return Java script agent meta data capture settings
     * 
     */
    public Optional<Output<WebApplicationMetaDataCaptureSettingsArgs>> metaDataCaptureSettings() {
        return Optional.ofNullable(this.metaDataCaptureSettings);
    }

    /**
     * Real user monitoring settings
     * 
     */
    @Import(name="monitoringSettings")
    private @Nullable Output<WebApplicationMonitoringSettingsArgs> monitoringSettings;

    /**
     * @return Real user monitoring settings
     * 
     */
    public Optional<Output<WebApplicationMonitoringSettingsArgs>> monitoringSettings() {
        return Optional.ofNullable(this.monitoringSettings);
    }

    /**
     * The name of the web application, displayed in the UI
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the web application, displayed in the UI
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Real user monitoring enabled/disabled
     * 
     */
    @Import(name="realUserMonitoringEnabled")
    private @Nullable Output<Boolean> realUserMonitoringEnabled;

    /**
     * @return Real user monitoring enabled/disabled
     * 
     */
    public Optional<Output<Boolean>> realUserMonitoringEnabled() {
        return Optional.ofNullable(this.realUserMonitoringEnabled);
    }

    /**
     * Settings regarding Session Replay
     * 
     */
    @Import(name="sessionReplayConfig")
    private @Nullable Output<WebApplicationSessionReplayConfigArgs> sessionReplayConfig;

    /**
     * @return Settings regarding Session Replay
     * 
     */
    public Optional<Output<WebApplicationSessionReplayConfigArgs>> sessionReplayConfig() {
        return Optional.ofNullable(this.sessionReplayConfig);
    }

    /**
     * The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * URL injection pattern for manual web application
     * 
     */
    @Import(name="urlInjectionPattern")
    private @Nullable Output<String> urlInjectionPattern;

    /**
     * @return URL injection pattern for manual web application
     * 
     */
    public Optional<Output<String>> urlInjectionPattern() {
        return Optional.ofNullable(this.urlInjectionPattern);
    }

    /**
     * User action and session properties settings
     * 
     */
    @Import(name="userActionAndSessionProperties")
    private @Nullable Output<WebApplicationUserActionAndSessionPropertiesArgs> userActionAndSessionProperties;

    /**
     * @return User action and session properties settings
     * 
     */
    public Optional<Output<WebApplicationUserActionAndSessionPropertiesArgs>> userActionAndSessionProperties() {
        return Optional.ofNullable(this.userActionAndSessionProperties);
    }

    /**
     * The settings of user action naming
     * 
     */
    @Import(name="userActionNamingSettings")
    private @Nullable Output<WebApplicationUserActionNamingSettingsArgs> userActionNamingSettings;

    /**
     * @return The settings of user action naming
     * 
     */
    public Optional<Output<WebApplicationUserActionNamingSettingsArgs>> userActionNamingSettings() {
        return Optional.ofNullable(this.userActionNamingSettings);
    }

    /**
     * User tags settings
     * 
     */
    @Import(name="userTags")
    private @Nullable Output<WebApplicationUserTagsArgs> userTags;

    /**
     * @return User tags settings
     * 
     */
    public Optional<Output<WebApplicationUserTagsArgs>> userTags() {
        return Optional.ofNullable(this.userTags);
    }

    /**
     * These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
     * 
     */
    @Import(name="waterfallSettings")
    private @Nullable Output<WebApplicationWaterfallSettingsArgs> waterfallSettings;

    /**
     * @return These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
     * 
     */
    public Optional<Output<WebApplicationWaterfallSettingsArgs>> waterfallSettings() {
        return Optional.ofNullable(this.waterfallSettings);
    }

    /**
     * Defines the XHR Action Apdex settings of an application
     * 
     */
    @Import(name="xhrActionApdexSettings")
    private @Nullable Output<WebApplicationXhrActionApdexSettingsArgs> xhrActionApdexSettings;

    /**
     * @return Defines the XHR Action Apdex settings of an application
     * 
     */
    public Optional<Output<WebApplicationXhrActionApdexSettingsArgs>> xhrActionApdexSettings() {
        return Optional.ofNullable(this.xhrActionApdexSettings);
    }

    /**
     * The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
     * 
     */
    @Import(name="xhrActionKeyPerformanceMetric")
    private @Nullable Output<String> xhrActionKeyPerformanceMetric;

    /**
     * @return The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
     * 
     */
    public Optional<Output<String>> xhrActionKeyPerformanceMetric() {
        return Optional.ofNullable(this.xhrActionKeyPerformanceMetric);
    }

    private WebApplicationState() {}

    private WebApplicationState(WebApplicationState $) {
        this.conversionGoals = $.conversionGoals;
        this.costControlUserSessionPercentage = $.costControlUserSessionPercentage;
        this.customActionApdexSettings = $.customActionApdexSettings;
        this.keyUserActions = $.keyUserActions;
        this.loadActionApdexSettings = $.loadActionApdexSettings;
        this.loadActionKeyPerformanceMetric = $.loadActionKeyPerformanceMetric;
        this.metaDataCaptureSettings = $.metaDataCaptureSettings;
        this.monitoringSettings = $.monitoringSettings;
        this.name = $.name;
        this.realUserMonitoringEnabled = $.realUserMonitoringEnabled;
        this.sessionReplayConfig = $.sessionReplayConfig;
        this.type = $.type;
        this.urlInjectionPattern = $.urlInjectionPattern;
        this.userActionAndSessionProperties = $.userActionAndSessionProperties;
        this.userActionNamingSettings = $.userActionNamingSettings;
        this.userTags = $.userTags;
        this.waterfallSettings = $.waterfallSettings;
        this.xhrActionApdexSettings = $.xhrActionApdexSettings;
        this.xhrActionKeyPerformanceMetric = $.xhrActionKeyPerformanceMetric;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationState $;

        public Builder() {
            $ = new WebApplicationState();
        }

        public Builder(WebApplicationState defaults) {
            $ = new WebApplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param conversionGoals A list of conversion goals of the application
         * 
         * @return builder
         * 
         */
        public Builder conversionGoals(@Nullable Output<WebApplicationConversionGoalsArgs> conversionGoals) {
            $.conversionGoals = conversionGoals;
            return this;
        }

        /**
         * @param conversionGoals A list of conversion goals of the application
         * 
         * @return builder
         * 
         */
        public Builder conversionGoals(WebApplicationConversionGoalsArgs conversionGoals) {
            return conversionGoals(Output.of(conversionGoals));
        }

        /**
         * @param costControlUserSessionPercentage Analize *X*% of user sessions
         * 
         * @return builder
         * 
         */
        public Builder costControlUserSessionPercentage(@Nullable Output<Integer> costControlUserSessionPercentage) {
            $.costControlUserSessionPercentage = costControlUserSessionPercentage;
            return this;
        }

        /**
         * @param costControlUserSessionPercentage Analize *X*% of user sessions
         * 
         * @return builder
         * 
         */
        public Builder costControlUserSessionPercentage(Integer costControlUserSessionPercentage) {
            return costControlUserSessionPercentage(Output.of(costControlUserSessionPercentage));
        }

        /**
         * @param customActionApdexSettings Defines the Custom Action Apdex settings of an application
         * 
         * @return builder
         * 
         */
        public Builder customActionApdexSettings(@Nullable Output<WebApplicationCustomActionApdexSettingsArgs> customActionApdexSettings) {
            $.customActionApdexSettings = customActionApdexSettings;
            return this;
        }

        /**
         * @param customActionApdexSettings Defines the Custom Action Apdex settings of an application
         * 
         * @return builder
         * 
         */
        public Builder customActionApdexSettings(WebApplicationCustomActionApdexSettingsArgs customActionApdexSettings) {
            return customActionApdexSettings(Output.of(customActionApdexSettings));
        }

        /**
         * @param keyUserActions User Action names to be flagged as Key User Actions
         * 
         * @return builder
         * 
         */
        public Builder keyUserActions(@Nullable Output<List<WebApplicationKeyUserActionArgs>> keyUserActions) {
            $.keyUserActions = keyUserActions;
            return this;
        }

        /**
         * @param keyUserActions User Action names to be flagged as Key User Actions
         * 
         * @return builder
         * 
         */
        public Builder keyUserActions(List<WebApplicationKeyUserActionArgs> keyUserActions) {
            return keyUserActions(Output.of(keyUserActions));
        }

        /**
         * @param keyUserActions User Action names to be flagged as Key User Actions
         * 
         * @return builder
         * 
         */
        public Builder keyUserActions(WebApplicationKeyUserActionArgs... keyUserActions) {
            return keyUserActions(List.of(keyUserActions));
        }

        /**
         * @param loadActionApdexSettings Defines the Load Action Apdex settings of an application
         * 
         * @return builder
         * 
         */
        public Builder loadActionApdexSettings(@Nullable Output<WebApplicationLoadActionApdexSettingsArgs> loadActionApdexSettings) {
            $.loadActionApdexSettings = loadActionApdexSettings;
            return this;
        }

        /**
         * @param loadActionApdexSettings Defines the Load Action Apdex settings of an application
         * 
         * @return builder
         * 
         */
        public Builder loadActionApdexSettings(WebApplicationLoadActionApdexSettingsArgs loadActionApdexSettings) {
            return loadActionApdexSettings(Output.of(loadActionApdexSettings));
        }

        /**
         * @param loadActionKeyPerformanceMetric The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
         * 
         * @return builder
         * 
         */
        public Builder loadActionKeyPerformanceMetric(@Nullable Output<String> loadActionKeyPerformanceMetric) {
            $.loadActionKeyPerformanceMetric = loadActionKeyPerformanceMetric;
            return this;
        }

        /**
         * @param loadActionKeyPerformanceMetric The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
         * 
         * @return builder
         * 
         */
        public Builder loadActionKeyPerformanceMetric(String loadActionKeyPerformanceMetric) {
            return loadActionKeyPerformanceMetric(Output.of(loadActionKeyPerformanceMetric));
        }

        /**
         * @param metaDataCaptureSettings Java script agent meta data capture settings
         * 
         * @return builder
         * 
         */
        public Builder metaDataCaptureSettings(@Nullable Output<WebApplicationMetaDataCaptureSettingsArgs> metaDataCaptureSettings) {
            $.metaDataCaptureSettings = metaDataCaptureSettings;
            return this;
        }

        /**
         * @param metaDataCaptureSettings Java script agent meta data capture settings
         * 
         * @return builder
         * 
         */
        public Builder metaDataCaptureSettings(WebApplicationMetaDataCaptureSettingsArgs metaDataCaptureSettings) {
            return metaDataCaptureSettings(Output.of(metaDataCaptureSettings));
        }

        /**
         * @param monitoringSettings Real user monitoring settings
         * 
         * @return builder
         * 
         */
        public Builder monitoringSettings(@Nullable Output<WebApplicationMonitoringSettingsArgs> monitoringSettings) {
            $.monitoringSettings = monitoringSettings;
            return this;
        }

        /**
         * @param monitoringSettings Real user monitoring settings
         * 
         * @return builder
         * 
         */
        public Builder monitoringSettings(WebApplicationMonitoringSettingsArgs monitoringSettings) {
            return monitoringSettings(Output.of(monitoringSettings));
        }

        /**
         * @param name The name of the web application, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the web application, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param realUserMonitoringEnabled Real user monitoring enabled/disabled
         * 
         * @return builder
         * 
         */
        public Builder realUserMonitoringEnabled(@Nullable Output<Boolean> realUserMonitoringEnabled) {
            $.realUserMonitoringEnabled = realUserMonitoringEnabled;
            return this;
        }

        /**
         * @param realUserMonitoringEnabled Real user monitoring enabled/disabled
         * 
         * @return builder
         * 
         */
        public Builder realUserMonitoringEnabled(Boolean realUserMonitoringEnabled) {
            return realUserMonitoringEnabled(Output.of(realUserMonitoringEnabled));
        }

        /**
         * @param sessionReplayConfig Settings regarding Session Replay
         * 
         * @return builder
         * 
         */
        public Builder sessionReplayConfig(@Nullable Output<WebApplicationSessionReplayConfigArgs> sessionReplayConfig) {
            $.sessionReplayConfig = sessionReplayConfig;
            return this;
        }

        /**
         * @param sessionReplayConfig Settings regarding Session Replay
         * 
         * @return builder
         * 
         */
        public Builder sessionReplayConfig(WebApplicationSessionReplayConfigArgs sessionReplayConfig) {
            return sessionReplayConfig(Output.of(sessionReplayConfig));
        }

        /**
         * @param type The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param urlInjectionPattern URL injection pattern for manual web application
         * 
         * @return builder
         * 
         */
        public Builder urlInjectionPattern(@Nullable Output<String> urlInjectionPattern) {
            $.urlInjectionPattern = urlInjectionPattern;
            return this;
        }

        /**
         * @param urlInjectionPattern URL injection pattern for manual web application
         * 
         * @return builder
         * 
         */
        public Builder urlInjectionPattern(String urlInjectionPattern) {
            return urlInjectionPattern(Output.of(urlInjectionPattern));
        }

        /**
         * @param userActionAndSessionProperties User action and session properties settings
         * 
         * @return builder
         * 
         */
        public Builder userActionAndSessionProperties(@Nullable Output<WebApplicationUserActionAndSessionPropertiesArgs> userActionAndSessionProperties) {
            $.userActionAndSessionProperties = userActionAndSessionProperties;
            return this;
        }

        /**
         * @param userActionAndSessionProperties User action and session properties settings
         * 
         * @return builder
         * 
         */
        public Builder userActionAndSessionProperties(WebApplicationUserActionAndSessionPropertiesArgs userActionAndSessionProperties) {
            return userActionAndSessionProperties(Output.of(userActionAndSessionProperties));
        }

        /**
         * @param userActionNamingSettings The settings of user action naming
         * 
         * @return builder
         * 
         */
        public Builder userActionNamingSettings(@Nullable Output<WebApplicationUserActionNamingSettingsArgs> userActionNamingSettings) {
            $.userActionNamingSettings = userActionNamingSettings;
            return this;
        }

        /**
         * @param userActionNamingSettings The settings of user action naming
         * 
         * @return builder
         * 
         */
        public Builder userActionNamingSettings(WebApplicationUserActionNamingSettingsArgs userActionNamingSettings) {
            return userActionNamingSettings(Output.of(userActionNamingSettings));
        }

        /**
         * @param userTags User tags settings
         * 
         * @return builder
         * 
         */
        public Builder userTags(@Nullable Output<WebApplicationUserTagsArgs> userTags) {
            $.userTags = userTags;
            return this;
        }

        /**
         * @param userTags User tags settings
         * 
         * @return builder
         * 
         */
        public Builder userTags(WebApplicationUserTagsArgs userTags) {
            return userTags(Output.of(userTags));
        }

        /**
         * @param waterfallSettings These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
         * 
         * @return builder
         * 
         */
        public Builder waterfallSettings(@Nullable Output<WebApplicationWaterfallSettingsArgs> waterfallSettings) {
            $.waterfallSettings = waterfallSettings;
            return this;
        }

        /**
         * @param waterfallSettings These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
         * 
         * @return builder
         * 
         */
        public Builder waterfallSettings(WebApplicationWaterfallSettingsArgs waterfallSettings) {
            return waterfallSettings(Output.of(waterfallSettings));
        }

        /**
         * @param xhrActionApdexSettings Defines the XHR Action Apdex settings of an application
         * 
         * @return builder
         * 
         */
        public Builder xhrActionApdexSettings(@Nullable Output<WebApplicationXhrActionApdexSettingsArgs> xhrActionApdexSettings) {
            $.xhrActionApdexSettings = xhrActionApdexSettings;
            return this;
        }

        /**
         * @param xhrActionApdexSettings Defines the XHR Action Apdex settings of an application
         * 
         * @return builder
         * 
         */
        public Builder xhrActionApdexSettings(WebApplicationXhrActionApdexSettingsArgs xhrActionApdexSettings) {
            return xhrActionApdexSettings(Output.of(xhrActionApdexSettings));
        }

        /**
         * @param xhrActionKeyPerformanceMetric The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
         * 
         * @return builder
         * 
         */
        public Builder xhrActionKeyPerformanceMetric(@Nullable Output<String> xhrActionKeyPerformanceMetric) {
            $.xhrActionKeyPerformanceMetric = xhrActionKeyPerformanceMetric;
            return this;
        }

        /**
         * @param xhrActionKeyPerformanceMetric The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
         * 
         * @return builder
         * 
         */
        public Builder xhrActionKeyPerformanceMetric(String xhrActionKeyPerformanceMetric) {
            return xhrActionKeyPerformanceMetric(Output.of(xhrActionKeyPerformanceMetric));
        }

        public WebApplicationState build() {
            return $;
        }
    }

}
