// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OsServicesDetectionConditionsLinuxLinuxDetectionCondition {
    private @Nullable String condition;
    private String property;
    private @Nullable String startupCondition;

    private OsServicesDetectionConditionsLinuxLinuxDetectionCondition() {}
    public Optional<String> condition() {
        return Optional.ofNullable(this.condition);
    }
    public String property() {
        return this.property;
    }
    public Optional<String> startupCondition() {
        return Optional.ofNullable(this.startupCondition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsServicesDetectionConditionsLinuxLinuxDetectionCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String condition;
        private String property;
        private @Nullable String startupCondition;
        public Builder() {}
        public Builder(OsServicesDetectionConditionsLinuxLinuxDetectionCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.property = defaults.property;
    	      this.startupCondition = defaults.startupCondition;
        }

        @CustomType.Setter
        public Builder condition(@Nullable String condition) {
            this.condition = condition;
            return this;
        }
        @CustomType.Setter
        public Builder property(String property) {
            this.property = Objects.requireNonNull(property);
            return this;
        }
        @CustomType.Setter
        public Builder startupCondition(@Nullable String startupCondition) {
            this.startupCondition = startupCondition;
            return this;
        }
        public OsServicesDetectionConditionsLinuxLinuxDetectionCondition build() {
            final var o = new OsServicesDetectionConditionsLinuxLinuxDetectionCondition();
            o.condition = condition;
            o.property = property;
            o.startupCondition = startupCondition;
            return o;
        }
    }
}
