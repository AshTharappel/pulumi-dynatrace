// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebApplicationConversionGoalsGoalArgs;
import java.util.List;
import java.util.Objects;


public final class WebApplicationConversionGoalsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationConversionGoalsArgs Empty = new WebApplicationConversionGoalsArgs();

    /**
     * A conversion goal of the application
     * 
     */
    @Import(name="goals", required=true)
    private Output<List<WebApplicationConversionGoalsGoalArgs>> goals;

    /**
     * @return A conversion goal of the application
     * 
     */
    public Output<List<WebApplicationConversionGoalsGoalArgs>> goals() {
        return this.goals;
    }

    private WebApplicationConversionGoalsArgs() {}

    private WebApplicationConversionGoalsArgs(WebApplicationConversionGoalsArgs $) {
        this.goals = $.goals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationConversionGoalsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationConversionGoalsArgs $;

        public Builder() {
            $ = new WebApplicationConversionGoalsArgs();
        }

        public Builder(WebApplicationConversionGoalsArgs defaults) {
            $ = new WebApplicationConversionGoalsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param goals A conversion goal of the application
         * 
         * @return builder
         * 
         */
        public Builder goals(Output<List<WebApplicationConversionGoalsGoalArgs>> goals) {
            $.goals = goals;
            return this;
        }

        /**
         * @param goals A conversion goal of the application
         * 
         * @return builder
         * 
         */
        public Builder goals(List<WebApplicationConversionGoalsGoalArgs> goals) {
            return goals(Output.of(goals));
        }

        /**
         * @param goals A conversion goal of the application
         * 
         * @return builder
         * 
         */
        public Builder goals(WebApplicationConversionGoalsGoalArgs... goals) {
            return goals(List.of(goals));
        }

        public WebApplicationConversionGoalsArgs build() {
            $.goals = Objects.requireNonNull($.goals, "expected parameter 'goals' to be non-null");
            return $;
        }
    }

}
