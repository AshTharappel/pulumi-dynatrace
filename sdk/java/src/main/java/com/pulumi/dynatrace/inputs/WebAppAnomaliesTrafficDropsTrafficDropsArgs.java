// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


public final class WebAppAnomaliesTrafficDropsTrafficDropsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppAnomaliesTrafficDropsTrafficDropsArgs Empty = new WebAppAnomaliesTrafficDropsTrafficDropsArgs();

    @Import(name="abnormalStateAbnormalState", required=true)
    private Output<Double> abnormalStateAbnormalState;

    public Output<Double> abnormalStateAbnormalState() {
        return this.abnormalStateAbnormalState;
    }

    @Import(name="trafficDropPercentage", required=true)
    private Output<Double> trafficDropPercentage;

    public Output<Double> trafficDropPercentage() {
        return this.trafficDropPercentage;
    }

    private WebAppAnomaliesTrafficDropsTrafficDropsArgs() {}

    private WebAppAnomaliesTrafficDropsTrafficDropsArgs(WebAppAnomaliesTrafficDropsTrafficDropsArgs $) {
        this.abnormalStateAbnormalState = $.abnormalStateAbnormalState;
        this.trafficDropPercentage = $.trafficDropPercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppAnomaliesTrafficDropsTrafficDropsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppAnomaliesTrafficDropsTrafficDropsArgs $;

        public Builder() {
            $ = new WebAppAnomaliesTrafficDropsTrafficDropsArgs();
        }

        public Builder(WebAppAnomaliesTrafficDropsTrafficDropsArgs defaults) {
            $ = new WebAppAnomaliesTrafficDropsTrafficDropsArgs(Objects.requireNonNull(defaults));
        }

        public Builder abnormalStateAbnormalState(Output<Double> abnormalStateAbnormalState) {
            $.abnormalStateAbnormalState = abnormalStateAbnormalState;
            return this;
        }

        public Builder abnormalStateAbnormalState(Double abnormalStateAbnormalState) {
            return abnormalStateAbnormalState(Output.of(abnormalStateAbnormalState));
        }

        public Builder trafficDropPercentage(Output<Double> trafficDropPercentage) {
            $.trafficDropPercentage = trafficDropPercentage;
            return this;
        }

        public Builder trafficDropPercentage(Double trafficDropPercentage) {
            return trafficDropPercentage(Output.of(trafficDropPercentage));
        }

        public WebAppAnomaliesTrafficDropsTrafficDropsArgs build() {
            $.abnormalStateAbnormalState = Objects.requireNonNull($.abnormalStateAbnormalState, "expected parameter 'abnormalStateAbnormalState' to be non-null");
            $.trafficDropPercentage = Objects.requireNonNull($.trafficDropPercentage, "expected parameter 'trafficDropPercentage' to be non-null");
            return $;
        }
    }

}
