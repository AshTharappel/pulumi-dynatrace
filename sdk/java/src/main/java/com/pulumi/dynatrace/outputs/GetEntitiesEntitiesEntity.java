// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.GetEntitiesEntitiesEntityTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEntitiesEntitiesEntity {
    private @Nullable String displayName;
    private @Nullable String entityId;
    private @Nullable List<GetEntitiesEntitiesEntityTag> tags;
    private @Nullable String type;

    private GetEntitiesEntitiesEntity() {}
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }
    public List<GetEntitiesEntitiesEntityTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntitiesEntitiesEntity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable String entityId;
        private @Nullable List<GetEntitiesEntitiesEntityTag> tags;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetEntitiesEntitiesEntity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.entityId = defaults.entityId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder entityId(@Nullable String entityId) {
            this.entityId = entityId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetEntitiesEntitiesEntityTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetEntitiesEntitiesEntityTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetEntitiesEntitiesEntity build() {
            final var o = new GetEntitiesEntitiesEntity();
            o.displayName = displayName;
            o.entityId = entityId;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
