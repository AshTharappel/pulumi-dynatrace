// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeCustomDeviceGroupNameArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeEntityArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeHostGroupNameArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeHostNameArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeManagementZoneArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeNameArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeProcessGroupIdArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeProcessGroupNameArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeScopeArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesScopeTagArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomAnomaliesScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomAnomaliesScopeArgs Empty = new CustomAnomaliesScopeArgs();

    /**
     * A scope filter for the related custom device group name
     * 
     */
    @Import(name="customDeviceGroupNames")
    private @Nullable Output<List<CustomAnomaliesScopeCustomDeviceGroupNameArgs>> customDeviceGroupNames;

    /**
     * @return A scope filter for the related custom device group name
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeCustomDeviceGroupNameArgs>>> customDeviceGroupNames() {
        return Optional.ofNullable(this.customDeviceGroupNames);
    }

    /**
     * A scope filter for a monitored entity identifier
     * 
     */
    @Import(name="entities")
    private @Nullable Output<List<CustomAnomaliesScopeEntityArgs>> entities;

    /**
     * @return A scope filter for a monitored entity identifier
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeEntityArgs>>> entities() {
        return Optional.ofNullable(this.entities);
    }

    /**
     * A scope filter for the related host group name
     * 
     */
    @Import(name="hostGroupNames")
    private @Nullable Output<List<CustomAnomaliesScopeHostGroupNameArgs>> hostGroupNames;

    /**
     * @return A scope filter for the related host group name
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeHostGroupNameArgs>>> hostGroupNames() {
        return Optional.ofNullable(this.hostGroupNames);
    }

    /**
     * A scope filter for the related host name
     * 
     */
    @Import(name="hostNames")
    private @Nullable Output<List<CustomAnomaliesScopeHostNameArgs>> hostNames;

    /**
     * @return A scope filter for the related host name
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeHostNameArgs>>> hostNames() {
        return Optional.ofNullable(this.hostNames);
    }

    /**
     * A scope filter for a management zone identifier
     * 
     */
    @Import(name="managementZones")
    private @Nullable Output<List<CustomAnomaliesScopeManagementZoneArgs>> managementZones;

    /**
     * @return A scope filter for a management zone identifier
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeManagementZoneArgs>>> managementZones() {
        return Optional.ofNullable(this.managementZones);
    }

    /**
     * A scope filter for a monitored entity name
     * 
     */
    @Import(name="names")
    private @Nullable Output<List<CustomAnomaliesScopeNameArgs>> names;

    /**
     * @return A scope filter for a monitored entity name
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeNameArgs>>> names() {
        return Optional.ofNullable(this.names);
    }

    /**
     * A scope filter for a process group identifier
     * 
     */
    @Import(name="processGroupIds")
    private @Nullable Output<List<CustomAnomaliesScopeProcessGroupIdArgs>> processGroupIds;

    /**
     * @return A scope filter for a process group identifier
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeProcessGroupIdArgs>>> processGroupIds() {
        return Optional.ofNullable(this.processGroupIds);
    }

    /**
     * A scope filter for the related process group name
     * 
     */
    @Import(name="processGroupNames")
    private @Nullable Output<List<CustomAnomaliesScopeProcessGroupNameArgs>> processGroupNames;

    /**
     * @return A scope filter for the related process group name
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeProcessGroupNameArgs>>> processGroupNames() {
        return Optional.ofNullable(this.processGroupNames);
    }

    /**
     * A generic scope filter
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<CustomAnomaliesScopeScopeArgs>> scopes;

    /**
     * @return A generic scope filter
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeScopeArgs>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * A scope filter for tags on entities
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<CustomAnomaliesScopeTagArgs>> tags;

    /**
     * @return A scope filter for tags on entities
     * 
     */
    public Optional<Output<List<CustomAnomaliesScopeTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CustomAnomaliesScopeArgs() {}

    private CustomAnomaliesScopeArgs(CustomAnomaliesScopeArgs $) {
        this.customDeviceGroupNames = $.customDeviceGroupNames;
        this.entities = $.entities;
        this.hostGroupNames = $.hostGroupNames;
        this.hostNames = $.hostNames;
        this.managementZones = $.managementZones;
        this.names = $.names;
        this.processGroupIds = $.processGroupIds;
        this.processGroupNames = $.processGroupNames;
        this.scopes = $.scopes;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomAnomaliesScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomAnomaliesScopeArgs $;

        public Builder() {
            $ = new CustomAnomaliesScopeArgs();
        }

        public Builder(CustomAnomaliesScopeArgs defaults) {
            $ = new CustomAnomaliesScopeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDeviceGroupNames A scope filter for the related custom device group name
         * 
         * @return builder
         * 
         */
        public Builder customDeviceGroupNames(@Nullable Output<List<CustomAnomaliesScopeCustomDeviceGroupNameArgs>> customDeviceGroupNames) {
            $.customDeviceGroupNames = customDeviceGroupNames;
            return this;
        }

        /**
         * @param customDeviceGroupNames A scope filter for the related custom device group name
         * 
         * @return builder
         * 
         */
        public Builder customDeviceGroupNames(List<CustomAnomaliesScopeCustomDeviceGroupNameArgs> customDeviceGroupNames) {
            return customDeviceGroupNames(Output.of(customDeviceGroupNames));
        }

        /**
         * @param customDeviceGroupNames A scope filter for the related custom device group name
         * 
         * @return builder
         * 
         */
        public Builder customDeviceGroupNames(CustomAnomaliesScopeCustomDeviceGroupNameArgs... customDeviceGroupNames) {
            return customDeviceGroupNames(List.of(customDeviceGroupNames));
        }

        /**
         * @param entities A scope filter for a monitored entity identifier
         * 
         * @return builder
         * 
         */
        public Builder entities(@Nullable Output<List<CustomAnomaliesScopeEntityArgs>> entities) {
            $.entities = entities;
            return this;
        }

        /**
         * @param entities A scope filter for a monitored entity identifier
         * 
         * @return builder
         * 
         */
        public Builder entities(List<CustomAnomaliesScopeEntityArgs> entities) {
            return entities(Output.of(entities));
        }

        /**
         * @param entities A scope filter for a monitored entity identifier
         * 
         * @return builder
         * 
         */
        public Builder entities(CustomAnomaliesScopeEntityArgs... entities) {
            return entities(List.of(entities));
        }

        /**
         * @param hostGroupNames A scope filter for the related host group name
         * 
         * @return builder
         * 
         */
        public Builder hostGroupNames(@Nullable Output<List<CustomAnomaliesScopeHostGroupNameArgs>> hostGroupNames) {
            $.hostGroupNames = hostGroupNames;
            return this;
        }

        /**
         * @param hostGroupNames A scope filter for the related host group name
         * 
         * @return builder
         * 
         */
        public Builder hostGroupNames(List<CustomAnomaliesScopeHostGroupNameArgs> hostGroupNames) {
            return hostGroupNames(Output.of(hostGroupNames));
        }

        /**
         * @param hostGroupNames A scope filter for the related host group name
         * 
         * @return builder
         * 
         */
        public Builder hostGroupNames(CustomAnomaliesScopeHostGroupNameArgs... hostGroupNames) {
            return hostGroupNames(List.of(hostGroupNames));
        }

        /**
         * @param hostNames A scope filter for the related host name
         * 
         * @return builder
         * 
         */
        public Builder hostNames(@Nullable Output<List<CustomAnomaliesScopeHostNameArgs>> hostNames) {
            $.hostNames = hostNames;
            return this;
        }

        /**
         * @param hostNames A scope filter for the related host name
         * 
         * @return builder
         * 
         */
        public Builder hostNames(List<CustomAnomaliesScopeHostNameArgs> hostNames) {
            return hostNames(Output.of(hostNames));
        }

        /**
         * @param hostNames A scope filter for the related host name
         * 
         * @return builder
         * 
         */
        public Builder hostNames(CustomAnomaliesScopeHostNameArgs... hostNames) {
            return hostNames(List.of(hostNames));
        }

        /**
         * @param managementZones A scope filter for a management zone identifier
         * 
         * @return builder
         * 
         */
        public Builder managementZones(@Nullable Output<List<CustomAnomaliesScopeManagementZoneArgs>> managementZones) {
            $.managementZones = managementZones;
            return this;
        }

        /**
         * @param managementZones A scope filter for a management zone identifier
         * 
         * @return builder
         * 
         */
        public Builder managementZones(List<CustomAnomaliesScopeManagementZoneArgs> managementZones) {
            return managementZones(Output.of(managementZones));
        }

        /**
         * @param managementZones A scope filter for a management zone identifier
         * 
         * @return builder
         * 
         */
        public Builder managementZones(CustomAnomaliesScopeManagementZoneArgs... managementZones) {
            return managementZones(List.of(managementZones));
        }

        /**
         * @param names A scope filter for a monitored entity name
         * 
         * @return builder
         * 
         */
        public Builder names(@Nullable Output<List<CustomAnomaliesScopeNameArgs>> names) {
            $.names = names;
            return this;
        }

        /**
         * @param names A scope filter for a monitored entity name
         * 
         * @return builder
         * 
         */
        public Builder names(List<CustomAnomaliesScopeNameArgs> names) {
            return names(Output.of(names));
        }

        /**
         * @param names A scope filter for a monitored entity name
         * 
         * @return builder
         * 
         */
        public Builder names(CustomAnomaliesScopeNameArgs... names) {
            return names(List.of(names));
        }

        /**
         * @param processGroupIds A scope filter for a process group identifier
         * 
         * @return builder
         * 
         */
        public Builder processGroupIds(@Nullable Output<List<CustomAnomaliesScopeProcessGroupIdArgs>> processGroupIds) {
            $.processGroupIds = processGroupIds;
            return this;
        }

        /**
         * @param processGroupIds A scope filter for a process group identifier
         * 
         * @return builder
         * 
         */
        public Builder processGroupIds(List<CustomAnomaliesScopeProcessGroupIdArgs> processGroupIds) {
            return processGroupIds(Output.of(processGroupIds));
        }

        /**
         * @param processGroupIds A scope filter for a process group identifier
         * 
         * @return builder
         * 
         */
        public Builder processGroupIds(CustomAnomaliesScopeProcessGroupIdArgs... processGroupIds) {
            return processGroupIds(List.of(processGroupIds));
        }

        /**
         * @param processGroupNames A scope filter for the related process group name
         * 
         * @return builder
         * 
         */
        public Builder processGroupNames(@Nullable Output<List<CustomAnomaliesScopeProcessGroupNameArgs>> processGroupNames) {
            $.processGroupNames = processGroupNames;
            return this;
        }

        /**
         * @param processGroupNames A scope filter for the related process group name
         * 
         * @return builder
         * 
         */
        public Builder processGroupNames(List<CustomAnomaliesScopeProcessGroupNameArgs> processGroupNames) {
            return processGroupNames(Output.of(processGroupNames));
        }

        /**
         * @param processGroupNames A scope filter for the related process group name
         * 
         * @return builder
         * 
         */
        public Builder processGroupNames(CustomAnomaliesScopeProcessGroupNameArgs... processGroupNames) {
            return processGroupNames(List.of(processGroupNames));
        }

        /**
         * @param scopes A generic scope filter
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<CustomAnomaliesScopeScopeArgs>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes A generic scope filter
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<CustomAnomaliesScopeScopeArgs> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes A generic scope filter
         * 
         * @return builder
         * 
         */
        public Builder scopes(CustomAnomaliesScopeScopeArgs... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param tags A scope filter for tags on entities
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<CustomAnomaliesScopeTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A scope filter for tags on entities
         * 
         * @return builder
         * 
         */
        public Builder tags(List<CustomAnomaliesScopeTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A scope filter for tags on entities
         * 
         * @return builder
         * 
         */
        public Builder tags(CustomAnomaliesScopeTagArgs... tags) {
            return tags(List.of(tags));
        }

        public CustomAnomaliesScopeArgs build() {
            return $;
        }
    }

}
