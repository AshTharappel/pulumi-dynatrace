// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementZoneDimensionalRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementZoneDimensionalRuleConditionArgs Empty = new ManagementZoneDimensionalRuleConditionArgs();

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="match", required=true)
    private Output<String> match;

    public Output<String> match() {
        return this.match;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private ManagementZoneDimensionalRuleConditionArgs() {}

    private ManagementZoneDimensionalRuleConditionArgs(ManagementZoneDimensionalRuleConditionArgs $) {
        this.key = $.key;
        this.match = $.match;
        this.type = $.type;
        this.unknowns = $.unknowns;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementZoneDimensionalRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementZoneDimensionalRuleConditionArgs $;

        public Builder() {
            $ = new ManagementZoneDimensionalRuleConditionArgs();
        }

        public Builder(ManagementZoneDimensionalRuleConditionArgs defaults) {
            $ = new ManagementZoneDimensionalRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder match(Output<String> match) {
            $.match = match;
            return this;
        }

        public Builder match(String match) {
            return match(Output.of(match));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ManagementZoneDimensionalRuleConditionArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.match = Objects.requireNonNull($.match, "expected parameter 'match' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
