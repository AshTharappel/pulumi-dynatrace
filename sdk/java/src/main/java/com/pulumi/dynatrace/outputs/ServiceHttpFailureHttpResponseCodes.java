// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServiceHttpFailureHttpResponseCodes {
    /**
     * @return HTTP response codes which indicate client side errors
     * 
     */
    private String clientSideErrors;
    /**
     * @return Treat missing HTTP response code as client side error
     * 
     */
    private Boolean failOnMissingResponseCodeClientSide;
    /**
     * @return Treat missing HTTP response code as server side errors
     * 
     */
    private Boolean failOnMissingResponseCodeServerSide;
    /**
     * @return HTTP response codes which indicate an error on the server side
     * 
     */
    private String serverSideErrors;

    private ServiceHttpFailureHttpResponseCodes() {}
    /**
     * @return HTTP response codes which indicate client side errors
     * 
     */
    public String clientSideErrors() {
        return this.clientSideErrors;
    }
    /**
     * @return Treat missing HTTP response code as client side error
     * 
     */
    public Boolean failOnMissingResponseCodeClientSide() {
        return this.failOnMissingResponseCodeClientSide;
    }
    /**
     * @return Treat missing HTTP response code as server side errors
     * 
     */
    public Boolean failOnMissingResponseCodeServerSide() {
        return this.failOnMissingResponseCodeServerSide;
    }
    /**
     * @return HTTP response codes which indicate an error on the server side
     * 
     */
    public String serverSideErrors() {
        return this.serverSideErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceHttpFailureHttpResponseCodes defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientSideErrors;
        private Boolean failOnMissingResponseCodeClientSide;
        private Boolean failOnMissingResponseCodeServerSide;
        private String serverSideErrors;
        public Builder() {}
        public Builder(ServiceHttpFailureHttpResponseCodes defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientSideErrors = defaults.clientSideErrors;
    	      this.failOnMissingResponseCodeClientSide = defaults.failOnMissingResponseCodeClientSide;
    	      this.failOnMissingResponseCodeServerSide = defaults.failOnMissingResponseCodeServerSide;
    	      this.serverSideErrors = defaults.serverSideErrors;
        }

        @CustomType.Setter
        public Builder clientSideErrors(String clientSideErrors) {
            this.clientSideErrors = Objects.requireNonNull(clientSideErrors);
            return this;
        }
        @CustomType.Setter
        public Builder failOnMissingResponseCodeClientSide(Boolean failOnMissingResponseCodeClientSide) {
            this.failOnMissingResponseCodeClientSide = Objects.requireNonNull(failOnMissingResponseCodeClientSide);
            return this;
        }
        @CustomType.Setter
        public Builder failOnMissingResponseCodeServerSide(Boolean failOnMissingResponseCodeServerSide) {
            this.failOnMissingResponseCodeServerSide = Objects.requireNonNull(failOnMissingResponseCodeServerSide);
            return this;
        }
        @CustomType.Setter
        public Builder serverSideErrors(String serverSideErrors) {
            this.serverSideErrors = Objects.requireNonNull(serverSideErrors);
            return this;
        }
        public ServiceHttpFailureHttpResponseCodes build() {
            final var o = new ServiceHttpFailureHttpResponseCodes();
            o.clientSideErrors = clientSideErrors;
            o.failOnMissingResponseCodeClientSide = failOnMissingResponseCodeClientSide;
            o.failOnMissingResponseCodeServerSide = failOnMissingResponseCodeServerSide;
            o.serverSideErrors = serverSideErrors;
            return o;
        }
    }
}
