// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.DatabaseAnomaliesArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.DatabaseAnomaliesState;
import com.pulumi.dynatrace.outputs.DatabaseAnomaliesDbConnectFailures;
import com.pulumi.dynatrace.outputs.DatabaseAnomaliesFailureRate;
import com.pulumi.dynatrace.outputs.DatabaseAnomaliesLoad;
import com.pulumi.dynatrace.outputs.DatabaseAnomaliesResponseTime;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/databaseAnomalies:DatabaseAnomalies")
public class DatabaseAnomalies extends com.pulumi.resources.CustomResource {
    /**
     * Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period
     * 
     */
    @Export(name="dbConnectFailures", type=DatabaseAnomaliesDbConnectFailures.class, parameters={})
    private Output</* @Nullable */ DatabaseAnomaliesDbConnectFailures> dbConnectFailures;

    /**
     * @return Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period
     * 
     */
    public Output<Optional<DatabaseAnomaliesDbConnectFailures>> dbConnectFailures() {
        return Codegen.optional(this.dbConnectFailures);
    }
    /**
     * Configuration of failure rate increase detection
     * 
     */
    @Export(name="failureRate", type=DatabaseAnomaliesFailureRate.class, parameters={})
    private Output</* @Nullable */ DatabaseAnomaliesFailureRate> failureRate;

    /**
     * @return Configuration of failure rate increase detection
     * 
     */
    public Output<Optional<DatabaseAnomaliesFailureRate>> failureRate() {
        return Codegen.optional(this.failureRate);
    }
    /**
     * Configuration for anomalies regarding load drops and spikes
     * 
     */
    @Export(name="load", type=DatabaseAnomaliesLoad.class, parameters={})
    private Output</* @Nullable */ DatabaseAnomaliesLoad> load;

    /**
     * @return Configuration for anomalies regarding load drops and spikes
     * 
     */
    public Output<Optional<DatabaseAnomaliesLoad>> load() {
        return Codegen.optional(this.load);
    }
    /**
     * Configuration of response time degradation detection
     * 
     */
    @Export(name="responseTime", type=DatabaseAnomaliesResponseTime.class, parameters={})
    private Output</* @Nullable */ DatabaseAnomaliesResponseTime> responseTime;

    /**
     * @return Configuration of response time degradation detection
     * 
     */
    public Output<Optional<DatabaseAnomaliesResponseTime>> responseTime() {
        return Codegen.optional(this.responseTime);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseAnomalies(String name) {
        this(name, DatabaseAnomaliesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseAnomalies(String name, @Nullable DatabaseAnomaliesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseAnomalies(String name, @Nullable DatabaseAnomaliesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/databaseAnomalies:DatabaseAnomalies", name, args == null ? DatabaseAnomaliesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatabaseAnomalies(String name, Output<String> id, @Nullable DatabaseAnomaliesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/databaseAnomalies:DatabaseAnomalies", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseAnomalies get(String name, Output<String> id, @Nullable DatabaseAnomaliesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseAnomalies(name, id, state, options);
    }
}
