// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs Empty = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs();

    @Import(name="selector", required=true)
    private Output<String> selector;

    public Output<String> selector() {
        return this.selector;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="userInteractionHidden")
    private @Nullable Output<Boolean> userInteractionHidden;

    public Optional<Output<Boolean>> userInteractionHidden() {
        return Optional.ofNullable(this.userInteractionHidden);
    }

    private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs() {}

    private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs $) {
        this.selector = $.selector;
        this.type = $.type;
        this.userInteractionHidden = $.userInteractionHidden;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs $;

        public Builder() {
            $ = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs();
        }

        public Builder(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs defaults) {
            $ = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder selector(Output<String> selector) {
            $.selector = selector;
            return this;
        }

        public Builder selector(String selector) {
            return selector(Output.of(selector));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userInteractionHidden(@Nullable Output<Boolean> userInteractionHidden) {
            $.userInteractionHidden = userInteractionHidden;
            return this;
        }

        public Builder userInteractionHidden(Boolean userInteractionHidden) {
            return userInteractionHidden(Output.of(userInteractionHidden));
        }

        public ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRuleArgs build() {
            $.selector = Objects.requireNonNull($.selector, "expected parameter 'selector' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
