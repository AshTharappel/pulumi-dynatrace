// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.OpentelemetryMetricsAdditionalAttributesArgs;
import com.pulumi.dynatrace.inputs.OpentelemetryMetricsToDropAttributesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpentelemetryMetricsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpentelemetryMetricsArgs Empty = new OpentelemetryMetricsArgs();

    /**
     * When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are
     * present in the OpenTelemetry resource or in the instrumentation scope. **Notes:** * Modifying this setting (renaming,
     * disabling or removing attributes) will cause the metric to change. This may have an impact on existing dashboards,
     * events and alerts that make use of these dimensions. In this case, they will need to be updated manually. * Dynatrace
     * does not recommend changing/removing the attributes starting with &#34;dt.&#34;. Dynatrace leverages these attributes to [Enrich
     * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
     * 
     */
    @Import(name="additionalAttributes")
    private @Nullable Output<OpentelemetryMetricsAdditionalAttributesArgs> additionalAttributes;

    /**
     * @return When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are
     * present in the OpenTelemetry resource or in the instrumentation scope. **Notes:** * Modifying this setting (renaming,
     * disabling or removing attributes) will cause the metric to change. This may have an impact on existing dashboards,
     * events and alerts that make use of these dimensions. In this case, they will need to be updated manually. * Dynatrace
     * does not recommend changing/removing the attributes starting with &#34;dt.&#34;. Dynatrace leverages these attributes to [Enrich
     * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
     * 
     */
    public Optional<Output<OpentelemetryMetricsAdditionalAttributesArgs>> additionalAttributes() {
        return Optional.ofNullable(this.additionalAttributes);
    }

    /**
     * Add the resource and scope attributes configured below as dimensions
     * 
     */
    @Import(name="additionalAttributesToDimensionEnabled", required=true)
    private Output<Boolean> additionalAttributesToDimensionEnabled;

    /**
     * @return Add the resource and scope attributes configured below as dimensions
     * 
     */
    public Output<Boolean> additionalAttributesToDimensionEnabled() {
        return this.additionalAttributesToDimensionEnabled;
    }

    /**
     * When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs) and version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics.
     * 
     */
    @Import(name="meterNameToDimensionEnabled", required=true)
    private Output<Boolean> meterNameToDimensionEnabled;

    /**
     * @return When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs) and version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics.
     * 
     */
    public Output<Boolean> meterNameToDimensionEnabled() {
        return this.meterNameToDimensionEnabled;
    }

    /**
     * The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:
     * resource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny
     * list therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this
     * setting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on
     * existing dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated
     * manually. * Dynatrace does not recommend including attributes starting with &#34;dt.&#34; to the deny list. Dynatrace leverages
     * these attributes to [Enrich
     * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
     * 
     */
    @Import(name="toDropAttributes")
    private @Nullable Output<OpentelemetryMetricsToDropAttributesArgs> toDropAttributes;

    /**
     * @return The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:
     * resource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny
     * list therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this
     * setting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on
     * existing dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated
     * manually. * Dynatrace does not recommend including attributes starting with &#34;dt.&#34; to the deny list. Dynatrace leverages
     * these attributes to [Enrich
     * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
     * 
     */
    public Optional<Output<OpentelemetryMetricsToDropAttributesArgs>> toDropAttributes() {
        return Optional.ofNullable(this.toDropAttributes);
    }

    private OpentelemetryMetricsArgs() {}

    private OpentelemetryMetricsArgs(OpentelemetryMetricsArgs $) {
        this.additionalAttributes = $.additionalAttributes;
        this.additionalAttributesToDimensionEnabled = $.additionalAttributesToDimensionEnabled;
        this.meterNameToDimensionEnabled = $.meterNameToDimensionEnabled;
        this.scope = $.scope;
        this.toDropAttributes = $.toDropAttributes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpentelemetryMetricsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpentelemetryMetricsArgs $;

        public Builder() {
            $ = new OpentelemetryMetricsArgs();
        }

        public Builder(OpentelemetryMetricsArgs defaults) {
            $ = new OpentelemetryMetricsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalAttributes When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are
         * present in the OpenTelemetry resource or in the instrumentation scope. **Notes:** * Modifying this setting (renaming,
         * disabling or removing attributes) will cause the metric to change. This may have an impact on existing dashboards,
         * events and alerts that make use of these dimensions. In this case, they will need to be updated manually. * Dynatrace
         * does not recommend changing/removing the attributes starting with &#34;dt.&#34;. Dynatrace leverages these attributes to [Enrich
         * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
         * 
         * @return builder
         * 
         */
        public Builder additionalAttributes(@Nullable Output<OpentelemetryMetricsAdditionalAttributesArgs> additionalAttributes) {
            $.additionalAttributes = additionalAttributes;
            return this;
        }

        /**
         * @param additionalAttributes When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are
         * present in the OpenTelemetry resource or in the instrumentation scope. **Notes:** * Modifying this setting (renaming,
         * disabling or removing attributes) will cause the metric to change. This may have an impact on existing dashboards,
         * events and alerts that make use of these dimensions. In this case, they will need to be updated manually. * Dynatrace
         * does not recommend changing/removing the attributes starting with &#34;dt.&#34;. Dynatrace leverages these attributes to [Enrich
         * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
         * 
         * @return builder
         * 
         */
        public Builder additionalAttributes(OpentelemetryMetricsAdditionalAttributesArgs additionalAttributes) {
            return additionalAttributes(Output.of(additionalAttributes));
        }

        /**
         * @param additionalAttributesToDimensionEnabled Add the resource and scope attributes configured below as dimensions
         * 
         * @return builder
         * 
         */
        public Builder additionalAttributesToDimensionEnabled(Output<Boolean> additionalAttributesToDimensionEnabled) {
            $.additionalAttributesToDimensionEnabled = additionalAttributesToDimensionEnabled;
            return this;
        }

        /**
         * @param additionalAttributesToDimensionEnabled Add the resource and scope attributes configured below as dimensions
         * 
         * @return builder
         * 
         */
        public Builder additionalAttributesToDimensionEnabled(Boolean additionalAttributesToDimensionEnabled) {
            return additionalAttributesToDimensionEnabled(Output.of(additionalAttributesToDimensionEnabled));
        }

        /**
         * @param meterNameToDimensionEnabled When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs) and version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics.
         * 
         * @return builder
         * 
         */
        public Builder meterNameToDimensionEnabled(Output<Boolean> meterNameToDimensionEnabled) {
            $.meterNameToDimensionEnabled = meterNameToDimensionEnabled;
            return this;
        }

        /**
         * @param meterNameToDimensionEnabled When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs) and version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics.
         * 
         * @return builder
         * 
         */
        public Builder meterNameToDimensionEnabled(Boolean meterNameToDimensionEnabled) {
            return meterNameToDimensionEnabled(Output.of(meterNameToDimensionEnabled));
        }

        /**
         * @param scope The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param toDropAttributes The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:
         * resource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny
         * list therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this
         * setting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on
         * existing dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated
         * manually. * Dynatrace does not recommend including attributes starting with &#34;dt.&#34; to the deny list. Dynatrace leverages
         * these attributes to [Enrich
         * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
         * 
         * @return builder
         * 
         */
        public Builder toDropAttributes(@Nullable Output<OpentelemetryMetricsToDropAttributesArgs> toDropAttributes) {
            $.toDropAttributes = toDropAttributes;
            return this;
        }

        /**
         * @param toDropAttributes The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:
         * resource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny
         * list therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this
         * setting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on
         * existing dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated
         * manually. * Dynatrace does not recommend including attributes starting with &#34;dt.&#34; to the deny list. Dynatrace leverages
         * these attributes to [Enrich
         * metrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).
         * 
         * @return builder
         * 
         */
        public Builder toDropAttributes(OpentelemetryMetricsToDropAttributesArgs toDropAttributes) {
            return toDropAttributes(Output.of(toDropAttributes));
        }

        public OpentelemetryMetricsArgs build() {
            $.additionalAttributesToDimensionEnabled = Objects.requireNonNull($.additionalAttributesToDimensionEnabled, "expected parameter 'additionalAttributesToDimensionEnabled' to be non-null");
            $.meterNameToDimensionEnabled = Objects.requireNonNull($.meterNameToDimensionEnabled, "expected parameter 'meterNameToDimensionEnabled' to be non-null");
            return $;
        }
    }

}
