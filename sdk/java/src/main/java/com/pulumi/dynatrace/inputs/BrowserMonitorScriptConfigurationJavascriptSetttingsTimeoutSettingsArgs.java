// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs Empty = new BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs();

    @Import(name="actionLimit", required=true)
    private Output<Integer> actionLimit;

    public Output<Integer> actionLimit() {
        return this.actionLimit;
    }

    @Import(name="totalTimeout", required=true)
    private Output<Integer> totalTimeout;

    public Output<Integer> totalTimeout() {
        return this.totalTimeout;
    }

    private BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs() {}

    private BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs(BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs $) {
        this.actionLimit = $.actionLimit;
        this.totalTimeout = $.totalTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs();
        }

        public Builder(BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs defaults) {
            $ = new BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionLimit(Output<Integer> actionLimit) {
            $.actionLimit = actionLimit;
            return this;
        }

        public Builder actionLimit(Integer actionLimit) {
            return actionLimit(Output.of(actionLimit));
        }

        public Builder totalTimeout(Output<Integer> totalTimeout) {
            $.totalTimeout = totalTimeout;
            return this;
        }

        public Builder totalTimeout(Integer totalTimeout) {
            return totalTimeout(Output.of(totalTimeout));
        }

        public BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettingsArgs build() {
            $.actionLimit = Objects.requireNonNull($.actionLimit, "expected parameter 'actionLimit' to be non-null");
            $.totalTimeout = Objects.requireNonNull($.totalTimeout, "expected parameter 'totalTimeout' to be non-null");
            return $;
        }
    }

}
