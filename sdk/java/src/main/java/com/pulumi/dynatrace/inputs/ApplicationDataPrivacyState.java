// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ApplicationDataPrivacySessionReplayDataPrivacyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationDataPrivacyState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationDataPrivacyState Empty = new ApplicationDataPrivacyState();

    /**
     * Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
     * 
     */
    @Import(name="dataCaptureOptIn")
    private @Nullable Output<Boolean> dataCaptureOptIn;

    /**
     * @return Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
     * 
     */
    public Optional<Output<Boolean>> dataCaptureOptIn() {
        return Optional.ofNullable(this.dataCaptureOptIn);
    }

    /**
     * How to handle the &#34;Do Not Track&#34; header:
     * 
     */
    @Import(name="doNotTrackBehaviour")
    private @Nullable Output<String> doNotTrackBehaviour;

    /**
     * @return How to handle the &#34;Do Not Track&#34; header:
     * 
     */
    public Optional<Output<String>> doNotTrackBehaviour() {
        return Optional.ofNullable(this.doNotTrackBehaviour);
    }

    /**
     * Set to `true` to set persistent cookie in order to recognize returning devices
     * 
     */
    @Import(name="persistentCookieForUserTracking")
    private @Nullable Output<Boolean> persistentCookieForUserTracking;

    /**
     * @return Set to `true` to set persistent cookie in order to recognize returning devices
     * 
     */
    public Optional<Output<Boolean>> persistentCookieForUserTracking() {
        return Optional.ofNullable(this.persistentCookieForUserTracking);
    }

    /**
     * Data privacy settings for Session Replay
     * 
     */
    @Import(name="sessionReplayDataPrivacy")
    private @Nullable Output<ApplicationDataPrivacySessionReplayDataPrivacyArgs> sessionReplayDataPrivacy;

    /**
     * @return Data privacy settings for Session Replay
     * 
     */
    public Optional<Output<ApplicationDataPrivacySessionReplayDataPrivacyArgs>> sessionReplayDataPrivacy() {
        return Optional.ofNullable(this.sessionReplayDataPrivacy);
    }

    /**
     * Dynatrace entity ID of the web application
     * 
     */
    @Import(name="webApplicationId")
    private @Nullable Output<String> webApplicationId;

    /**
     * @return Dynatrace entity ID of the web application
     * 
     */
    public Optional<Output<String>> webApplicationId() {
        return Optional.ofNullable(this.webApplicationId);
    }

    private ApplicationDataPrivacyState() {}

    private ApplicationDataPrivacyState(ApplicationDataPrivacyState $) {
        this.dataCaptureOptIn = $.dataCaptureOptIn;
        this.doNotTrackBehaviour = $.doNotTrackBehaviour;
        this.persistentCookieForUserTracking = $.persistentCookieForUserTracking;
        this.sessionReplayDataPrivacy = $.sessionReplayDataPrivacy;
        this.webApplicationId = $.webApplicationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationDataPrivacyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationDataPrivacyState $;

        public Builder() {
            $ = new ApplicationDataPrivacyState();
        }

        public Builder(ApplicationDataPrivacyState defaults) {
            $ = new ApplicationDataPrivacyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCaptureOptIn Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
         * 
         * @return builder
         * 
         */
        public Builder dataCaptureOptIn(@Nullable Output<Boolean> dataCaptureOptIn) {
            $.dataCaptureOptIn = dataCaptureOptIn;
            return this;
        }

        /**
         * @param dataCaptureOptIn Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
         * 
         * @return builder
         * 
         */
        public Builder dataCaptureOptIn(Boolean dataCaptureOptIn) {
            return dataCaptureOptIn(Output.of(dataCaptureOptIn));
        }

        /**
         * @param doNotTrackBehaviour How to handle the &#34;Do Not Track&#34; header:
         * 
         * @return builder
         * 
         */
        public Builder doNotTrackBehaviour(@Nullable Output<String> doNotTrackBehaviour) {
            $.doNotTrackBehaviour = doNotTrackBehaviour;
            return this;
        }

        /**
         * @param doNotTrackBehaviour How to handle the &#34;Do Not Track&#34; header:
         * 
         * @return builder
         * 
         */
        public Builder doNotTrackBehaviour(String doNotTrackBehaviour) {
            return doNotTrackBehaviour(Output.of(doNotTrackBehaviour));
        }

        /**
         * @param persistentCookieForUserTracking Set to `true` to set persistent cookie in order to recognize returning devices
         * 
         * @return builder
         * 
         */
        public Builder persistentCookieForUserTracking(@Nullable Output<Boolean> persistentCookieForUserTracking) {
            $.persistentCookieForUserTracking = persistentCookieForUserTracking;
            return this;
        }

        /**
         * @param persistentCookieForUserTracking Set to `true` to set persistent cookie in order to recognize returning devices
         * 
         * @return builder
         * 
         */
        public Builder persistentCookieForUserTracking(Boolean persistentCookieForUserTracking) {
            return persistentCookieForUserTracking(Output.of(persistentCookieForUserTracking));
        }

        /**
         * @param sessionReplayDataPrivacy Data privacy settings for Session Replay
         * 
         * @return builder
         * 
         */
        public Builder sessionReplayDataPrivacy(@Nullable Output<ApplicationDataPrivacySessionReplayDataPrivacyArgs> sessionReplayDataPrivacy) {
            $.sessionReplayDataPrivacy = sessionReplayDataPrivacy;
            return this;
        }

        /**
         * @param sessionReplayDataPrivacy Data privacy settings for Session Replay
         * 
         * @return builder
         * 
         */
        public Builder sessionReplayDataPrivacy(ApplicationDataPrivacySessionReplayDataPrivacyArgs sessionReplayDataPrivacy) {
            return sessionReplayDataPrivacy(Output.of(sessionReplayDataPrivacy));
        }

        /**
         * @param webApplicationId Dynatrace entity ID of the web application
         * 
         * @return builder
         * 
         */
        public Builder webApplicationId(@Nullable Output<String> webApplicationId) {
            $.webApplicationId = webApplicationId;
            return this;
        }

        /**
         * @param webApplicationId Dynatrace entity ID of the web application
         * 
         * @return builder
         * 
         */
        public Builder webApplicationId(String webApplicationId) {
            return webApplicationId(Output.of(webApplicationId));
        }

        public ApplicationDataPrivacyState build() {
            return $;
        }
    }

}
