// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.DashboardTileFilterConfigFiltersFilterArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardTileFilterConfigFiltersArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardTileFilterConfigFiltersArgs Empty = new DashboardTileFilterConfigFiltersArgs();

    @Import(name="filters")
    private @Nullable Output<List<DashboardTileFilterConfigFiltersFilterArgs>> filters;

    public Optional<Output<List<DashboardTileFilterConfigFiltersFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private DashboardTileFilterConfigFiltersArgs() {}

    private DashboardTileFilterConfigFiltersArgs(DashboardTileFilterConfigFiltersArgs $) {
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardTileFilterConfigFiltersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardTileFilterConfigFiltersArgs $;

        public Builder() {
            $ = new DashboardTileFilterConfigFiltersArgs();
        }

        public Builder(DashboardTileFilterConfigFiltersArgs defaults) {
            $ = new DashboardTileFilterConfigFiltersArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<DashboardTileFilterConfigFiltersFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<DashboardTileFilterConfigFiltersFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(DashboardTileFilterConfigFiltersFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public DashboardTileFilterConfigFiltersArgs build() {
            return $;
        }
    }

}
