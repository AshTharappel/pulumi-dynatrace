// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamPermissionState extends com.pulumi.resources.ResourceArgs {

    public static final IamPermissionState Empty = new IamPermissionState();

    /**
     * The UUID of the account this permission is valid for
     * 
     */
    @Import(name="account")
    private @Nullable Output<String> account;

    /**
     * @return The UUID of the account this permission is valid for
     * 
     */
    public Optional<Output<String>> account() {
        return Optional.ofNullable(this.account);
    }

    /**
     * The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * The ID of the group this permission is valid for
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return The ID of the group this permission is valid for
     * 
     */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
     * 
     */
    @Import(name="managementZone")
    private @Nullable Output<String> managementZone;

    /**
     * @return The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
     * 
     */
    public Optional<Output<String>> managementZone() {
        return Optional.ofNullable(this.managementZone);
    }

    /**
     * Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-manage-support-tickets`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-manage-support-tickets`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private IamPermissionState() {}

    private IamPermissionState(IamPermissionState $) {
        this.account = $.account;
        this.environment = $.environment;
        this.group = $.group;
        this.managementZone = $.managementZone;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamPermissionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamPermissionState $;

        public Builder() {
            $ = new IamPermissionState();
        }

        public Builder(IamPermissionState defaults) {
            $ = new IamPermissionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param account The UUID of the account this permission is valid for
         * 
         * @return builder
         * 
         */
        public Builder account(@Nullable Output<String> account) {
            $.account = account;
            return this;
        }

        /**
         * @param account The UUID of the account this permission is valid for
         * 
         * @return builder
         * 
         */
        public Builder account(String account) {
            return account(Output.of(account));
        }

        /**
         * @param environment The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param group The ID of the group this permission is valid for
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group The ID of the group this permission is valid for
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param managementZone The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
         * 
         * @return builder
         * 
         */
        public Builder managementZone(@Nullable Output<String> managementZone) {
            $.managementZone = managementZone;
            return this;
        }

        /**
         * @param managementZone The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
         * 
         * @return builder
         * 
         */
        public Builder managementZone(String managementZone) {
            return managementZone(Output.of(managementZone));
        }

        /**
         * @param name Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-manage-support-tickets`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-manage-support-tickets`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public IamPermissionState build() {
            return $;
        }
    }

}
