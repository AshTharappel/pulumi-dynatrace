// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsContentCaptureArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs;
import com.pulumi.dynatrace.inputs.WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationMonitoringSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationMonitoringSettingsArgs Empty = new WebApplicationMonitoringSettingsArgs();

    /**
     * Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
     * 
     */
    @Import(name="addCrossOriginAnonymousAttribute")
    private @Nullable Output<Boolean> addCrossOriginAnonymousAttribute;

    /**
     * @return Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
     * 
     */
    public Optional<Output<Boolean>> addCrossOriginAnonymousAttribute() {
        return Optional.ofNullable(this.addCrossOriginAnonymousAttribute);
    }

    /**
     * Advanced JavaScript tag settings
     * 
     */
    @Import(name="advancedJavascriptTagSettings")
    private @Nullable Output<WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs> advancedJavascriptTagSettings;

    /**
     * @return Advanced JavaScript tag settings
     * 
     */
    public Optional<Output<WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs>> advancedJavascriptTagSettings() {
        return Optional.ofNullable(this.advancedJavascriptTagSettings);
    }

    /**
     * The name of the angular package
     * 
     */
    @Import(name="angularPackageName")
    private @Nullable Output<String> angularPackageName;

    /**
     * @return The name of the angular package
     * 
     */
    public Optional<Output<String>> angularPackageName() {
        return Optional.ofNullable(this.angularPackageName);
    }

    /**
     * Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
     * 
     */
    @Import(name="browserRestrictionSettings")
    private @Nullable Output<WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs> browserRestrictionSettings;

    /**
     * @return Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
     * 
     */
    public Optional<Output<WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs>> browserRestrictionSettings() {
        return Optional.ofNullable(this.browserRestrictionSettings);
    }

    /**
     * Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
     * 
     */
    @Import(name="cacheControlHeaderOptimizations")
    private @Nullable Output<Boolean> cacheControlHeaderOptimizations;

    /**
     * @return Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
     * 
     */
    public Optional<Output<Boolean>> cacheControlHeaderOptimizations() {
        return Optional.ofNullable(this.cacheControlHeaderOptimizations);
    }

    /**
     * Settings for content capture
     * 
     */
    @Import(name="contentCapture", required=true)
    private Output<WebApplicationMonitoringSettingsContentCaptureArgs> contentCapture;

    /**
     * @return Settings for content capture
     * 
     */
    public Output<WebApplicationMonitoringSettingsContentCaptureArgs> contentCapture() {
        return this.contentCapture;
    }

    /**
     * Domain for cookie placement. Maximum 150 characters.
     * 
     */
    @Import(name="cookiePlacementDomain")
    private @Nullable Output<String> cookiePlacementDomain;

    /**
     * @return Domain for cookie placement. Maximum 150 characters.
     * 
     */
    public Optional<Output<String>> cookiePlacementDomain() {
        return Optional.ofNullable(this.cookiePlacementDomain);
    }

    /**
     * To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
     * 
     */
    @Import(name="correlationHeaderInclusionRegex")
    private @Nullable Output<String> correlationHeaderInclusionRegex;

    /**
     * @return To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
     * 
     */
    public Optional<Output<String>> correlationHeaderInclusionRegex() {
        return Optional.ofNullable(this.correlationHeaderInclusionRegex);
    }

    @Import(name="customConfigurationProperties")
    private @Nullable Output<String> customConfigurationProperties;

    public Optional<Output<String>> customConfigurationProperties() {
        return Optional.ofNullable(this.customConfigurationProperties);
    }

    @Import(name="excludeXhrRegex")
    private @Nullable Output<String> excludeXhrRegex;

    public Optional<Output<String>> excludeXhrRegex() {
        return Optional.ofNullable(this.excludeXhrRegex);
    }

    @Import(name="fetchRequests")
    private @Nullable Output<Boolean> fetchRequests;

    public Optional<Output<Boolean>> fetchRequests() {
        return Optional.ofNullable(this.fetchRequests);
    }

    /**
     * Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
     * 
     */
    @Import(name="injectionMode", required=true)
    private Output<String> injectionMode;

    /**
     * @return Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
     * 
     */
    public Output<String> injectionMode() {
        return this.injectionMode;
    }

    @Import(name="ipAddressRestrictionSettings")
    private @Nullable Output<WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs> ipAddressRestrictionSettings;

    public Optional<Output<WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs>> ipAddressRestrictionSettings() {
        return Optional.ofNullable(this.ipAddressRestrictionSettings);
    }

    @Import(name="javascriptFrameworkSupport")
    private @Nullable Output<WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs> javascriptFrameworkSupport;

    public Optional<Output<WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs>> javascriptFrameworkSupport() {
        return Optional.ofNullable(this.javascriptFrameworkSupport);
    }

    @Import(name="javascriptInjectionRules")
    private @Nullable Output<WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs> javascriptInjectionRules;

    public Optional<Output<WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs>> javascriptInjectionRules() {
        return Optional.ofNullable(this.javascriptInjectionRules);
    }

    @Import(name="libraryFileLocation")
    private @Nullable Output<String> libraryFileLocation;

    public Optional<Output<String>> libraryFileLocation() {
        return Optional.ofNullable(this.libraryFileLocation);
    }

    @Import(name="monitoringDataPath")
    private @Nullable Output<String> monitoringDataPath;

    public Optional<Output<String>> monitoringDataPath() {
        return Optional.ofNullable(this.monitoringDataPath);
    }

    @Import(name="scriptTagCacheDurationInHours")
    private @Nullable Output<Integer> scriptTagCacheDurationInHours;

    public Optional<Output<Integer>> scriptTagCacheDurationInHours() {
        return Optional.ofNullable(this.scriptTagCacheDurationInHours);
    }

    @Import(name="secureCookieAttribute")
    private @Nullable Output<Boolean> secureCookieAttribute;

    public Optional<Output<Boolean>> secureCookieAttribute() {
        return Optional.ofNullable(this.secureCookieAttribute);
    }

    @Import(name="serverRequestPathId")
    private @Nullable Output<String> serverRequestPathId;

    public Optional<Output<String>> serverRequestPathId() {
        return Optional.ofNullable(this.serverRequestPathId);
    }

    @Import(name="xmlHttpRequest")
    private @Nullable Output<Boolean> xmlHttpRequest;

    public Optional<Output<Boolean>> xmlHttpRequest() {
        return Optional.ofNullable(this.xmlHttpRequest);
    }

    private WebApplicationMonitoringSettingsArgs() {}

    private WebApplicationMonitoringSettingsArgs(WebApplicationMonitoringSettingsArgs $) {
        this.addCrossOriginAnonymousAttribute = $.addCrossOriginAnonymousAttribute;
        this.advancedJavascriptTagSettings = $.advancedJavascriptTagSettings;
        this.angularPackageName = $.angularPackageName;
        this.browserRestrictionSettings = $.browserRestrictionSettings;
        this.cacheControlHeaderOptimizations = $.cacheControlHeaderOptimizations;
        this.contentCapture = $.contentCapture;
        this.cookiePlacementDomain = $.cookiePlacementDomain;
        this.correlationHeaderInclusionRegex = $.correlationHeaderInclusionRegex;
        this.customConfigurationProperties = $.customConfigurationProperties;
        this.excludeXhrRegex = $.excludeXhrRegex;
        this.fetchRequests = $.fetchRequests;
        this.injectionMode = $.injectionMode;
        this.ipAddressRestrictionSettings = $.ipAddressRestrictionSettings;
        this.javascriptFrameworkSupport = $.javascriptFrameworkSupport;
        this.javascriptInjectionRules = $.javascriptInjectionRules;
        this.libraryFileLocation = $.libraryFileLocation;
        this.monitoringDataPath = $.monitoringDataPath;
        this.scriptTagCacheDurationInHours = $.scriptTagCacheDurationInHours;
        this.secureCookieAttribute = $.secureCookieAttribute;
        this.serverRequestPathId = $.serverRequestPathId;
        this.xmlHttpRequest = $.xmlHttpRequest;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationMonitoringSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationMonitoringSettingsArgs $;

        public Builder() {
            $ = new WebApplicationMonitoringSettingsArgs();
        }

        public Builder(WebApplicationMonitoringSettingsArgs defaults) {
            $ = new WebApplicationMonitoringSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addCrossOriginAnonymousAttribute Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
         * 
         * @return builder
         * 
         */
        public Builder addCrossOriginAnonymousAttribute(@Nullable Output<Boolean> addCrossOriginAnonymousAttribute) {
            $.addCrossOriginAnonymousAttribute = addCrossOriginAnonymousAttribute;
            return this;
        }

        /**
         * @param addCrossOriginAnonymousAttribute Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
         * 
         * @return builder
         * 
         */
        public Builder addCrossOriginAnonymousAttribute(Boolean addCrossOriginAnonymousAttribute) {
            return addCrossOriginAnonymousAttribute(Output.of(addCrossOriginAnonymousAttribute));
        }

        /**
         * @param advancedJavascriptTagSettings Advanced JavaScript tag settings
         * 
         * @return builder
         * 
         */
        public Builder advancedJavascriptTagSettings(@Nullable Output<WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs> advancedJavascriptTagSettings) {
            $.advancedJavascriptTagSettings = advancedJavascriptTagSettings;
            return this;
        }

        /**
         * @param advancedJavascriptTagSettings Advanced JavaScript tag settings
         * 
         * @return builder
         * 
         */
        public Builder advancedJavascriptTagSettings(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs advancedJavascriptTagSettings) {
            return advancedJavascriptTagSettings(Output.of(advancedJavascriptTagSettings));
        }

        /**
         * @param angularPackageName The name of the angular package
         * 
         * @return builder
         * 
         */
        public Builder angularPackageName(@Nullable Output<String> angularPackageName) {
            $.angularPackageName = angularPackageName;
            return this;
        }

        /**
         * @param angularPackageName The name of the angular package
         * 
         * @return builder
         * 
         */
        public Builder angularPackageName(String angularPackageName) {
            return angularPackageName(Output.of(angularPackageName));
        }

        /**
         * @param browserRestrictionSettings Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
         * 
         * @return builder
         * 
         */
        public Builder browserRestrictionSettings(@Nullable Output<WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs> browserRestrictionSettings) {
            $.browserRestrictionSettings = browserRestrictionSettings;
            return this;
        }

        /**
         * @param browserRestrictionSettings Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
         * 
         * @return builder
         * 
         */
        public Builder browserRestrictionSettings(WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs browserRestrictionSettings) {
            return browserRestrictionSettings(Output.of(browserRestrictionSettings));
        }

        /**
         * @param cacheControlHeaderOptimizations Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
         * 
         * @return builder
         * 
         */
        public Builder cacheControlHeaderOptimizations(@Nullable Output<Boolean> cacheControlHeaderOptimizations) {
            $.cacheControlHeaderOptimizations = cacheControlHeaderOptimizations;
            return this;
        }

        /**
         * @param cacheControlHeaderOptimizations Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
         * 
         * @return builder
         * 
         */
        public Builder cacheControlHeaderOptimizations(Boolean cacheControlHeaderOptimizations) {
            return cacheControlHeaderOptimizations(Output.of(cacheControlHeaderOptimizations));
        }

        /**
         * @param contentCapture Settings for content capture
         * 
         * @return builder
         * 
         */
        public Builder contentCapture(Output<WebApplicationMonitoringSettingsContentCaptureArgs> contentCapture) {
            $.contentCapture = contentCapture;
            return this;
        }

        /**
         * @param contentCapture Settings for content capture
         * 
         * @return builder
         * 
         */
        public Builder contentCapture(WebApplicationMonitoringSettingsContentCaptureArgs contentCapture) {
            return contentCapture(Output.of(contentCapture));
        }

        /**
         * @param cookiePlacementDomain Domain for cookie placement. Maximum 150 characters.
         * 
         * @return builder
         * 
         */
        public Builder cookiePlacementDomain(@Nullable Output<String> cookiePlacementDomain) {
            $.cookiePlacementDomain = cookiePlacementDomain;
            return this;
        }

        /**
         * @param cookiePlacementDomain Domain for cookie placement. Maximum 150 characters.
         * 
         * @return builder
         * 
         */
        public Builder cookiePlacementDomain(String cookiePlacementDomain) {
            return cookiePlacementDomain(Output.of(cookiePlacementDomain));
        }

        /**
         * @param correlationHeaderInclusionRegex To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
         * 
         * @return builder
         * 
         */
        public Builder correlationHeaderInclusionRegex(@Nullable Output<String> correlationHeaderInclusionRegex) {
            $.correlationHeaderInclusionRegex = correlationHeaderInclusionRegex;
            return this;
        }

        /**
         * @param correlationHeaderInclusionRegex To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
         * 
         * @return builder
         * 
         */
        public Builder correlationHeaderInclusionRegex(String correlationHeaderInclusionRegex) {
            return correlationHeaderInclusionRegex(Output.of(correlationHeaderInclusionRegex));
        }

        public Builder customConfigurationProperties(@Nullable Output<String> customConfigurationProperties) {
            $.customConfigurationProperties = customConfigurationProperties;
            return this;
        }

        public Builder customConfigurationProperties(String customConfigurationProperties) {
            return customConfigurationProperties(Output.of(customConfigurationProperties));
        }

        public Builder excludeXhrRegex(@Nullable Output<String> excludeXhrRegex) {
            $.excludeXhrRegex = excludeXhrRegex;
            return this;
        }

        public Builder excludeXhrRegex(String excludeXhrRegex) {
            return excludeXhrRegex(Output.of(excludeXhrRegex));
        }

        public Builder fetchRequests(@Nullable Output<Boolean> fetchRequests) {
            $.fetchRequests = fetchRequests;
            return this;
        }

        public Builder fetchRequests(Boolean fetchRequests) {
            return fetchRequests(Output.of(fetchRequests));
        }

        /**
         * @param injectionMode Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
         * 
         * @return builder
         * 
         */
        public Builder injectionMode(Output<String> injectionMode) {
            $.injectionMode = injectionMode;
            return this;
        }

        /**
         * @param injectionMode Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
         * 
         * @return builder
         * 
         */
        public Builder injectionMode(String injectionMode) {
            return injectionMode(Output.of(injectionMode));
        }

        public Builder ipAddressRestrictionSettings(@Nullable Output<WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs> ipAddressRestrictionSettings) {
            $.ipAddressRestrictionSettings = ipAddressRestrictionSettings;
            return this;
        }

        public Builder ipAddressRestrictionSettings(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs ipAddressRestrictionSettings) {
            return ipAddressRestrictionSettings(Output.of(ipAddressRestrictionSettings));
        }

        public Builder javascriptFrameworkSupport(@Nullable Output<WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs> javascriptFrameworkSupport) {
            $.javascriptFrameworkSupport = javascriptFrameworkSupport;
            return this;
        }

        public Builder javascriptFrameworkSupport(WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs javascriptFrameworkSupport) {
            return javascriptFrameworkSupport(Output.of(javascriptFrameworkSupport));
        }

        public Builder javascriptInjectionRules(@Nullable Output<WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs> javascriptInjectionRules) {
            $.javascriptInjectionRules = javascriptInjectionRules;
            return this;
        }

        public Builder javascriptInjectionRules(WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs javascriptInjectionRules) {
            return javascriptInjectionRules(Output.of(javascriptInjectionRules));
        }

        public Builder libraryFileLocation(@Nullable Output<String> libraryFileLocation) {
            $.libraryFileLocation = libraryFileLocation;
            return this;
        }

        public Builder libraryFileLocation(String libraryFileLocation) {
            return libraryFileLocation(Output.of(libraryFileLocation));
        }

        public Builder monitoringDataPath(@Nullable Output<String> monitoringDataPath) {
            $.monitoringDataPath = monitoringDataPath;
            return this;
        }

        public Builder monitoringDataPath(String monitoringDataPath) {
            return monitoringDataPath(Output.of(monitoringDataPath));
        }

        public Builder scriptTagCacheDurationInHours(@Nullable Output<Integer> scriptTagCacheDurationInHours) {
            $.scriptTagCacheDurationInHours = scriptTagCacheDurationInHours;
            return this;
        }

        public Builder scriptTagCacheDurationInHours(Integer scriptTagCacheDurationInHours) {
            return scriptTagCacheDurationInHours(Output.of(scriptTagCacheDurationInHours));
        }

        public Builder secureCookieAttribute(@Nullable Output<Boolean> secureCookieAttribute) {
            $.secureCookieAttribute = secureCookieAttribute;
            return this;
        }

        public Builder secureCookieAttribute(Boolean secureCookieAttribute) {
            return secureCookieAttribute(Output.of(secureCookieAttribute));
        }

        public Builder serverRequestPathId(@Nullable Output<String> serverRequestPathId) {
            $.serverRequestPathId = serverRequestPathId;
            return this;
        }

        public Builder serverRequestPathId(String serverRequestPathId) {
            return serverRequestPathId(Output.of(serverRequestPathId));
        }

        public Builder xmlHttpRequest(@Nullable Output<Boolean> xmlHttpRequest) {
            $.xmlHttpRequest = xmlHttpRequest;
            return this;
        }

        public Builder xmlHttpRequest(Boolean xmlHttpRequest) {
            return xmlHttpRequest(Output.of(xmlHttpRequest));
        }

        public WebApplicationMonitoringSettingsArgs build() {
            $.contentCapture = Objects.requireNonNull($.contentCapture, "expected parameter 'contentCapture' to be non-null");
            $.injectionMode = Objects.requireNonNull($.injectionMode, "expected parameter 'injectionMode' to be non-null");
            return $;
        }
    }

}
