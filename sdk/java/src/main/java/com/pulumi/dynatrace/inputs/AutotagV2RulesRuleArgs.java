// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.AutotagV2RulesRuleAttributeRuleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutotagV2RulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutotagV2RulesRuleArgs Empty = new AutotagV2RulesRuleArgs();

    @Import(name="attributeRule")
    private @Nullable Output<AutotagV2RulesRuleAttributeRuleArgs> attributeRule;

    public Optional<Output<AutotagV2RulesRuleAttributeRuleArgs>> attributeRule() {
        return Optional.ofNullable(this.attributeRule);
    }

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="entitySelector")
    private @Nullable Output<String> entitySelector;

    public Optional<Output<String>> entitySelector() {
        return Optional.ofNullable(this.entitySelector);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="valueFormat")
    private @Nullable Output<String> valueFormat;

    public Optional<Output<String>> valueFormat() {
        return Optional.ofNullable(this.valueFormat);
    }

    @Import(name="valueNormalization", required=true)
    private Output<String> valueNormalization;

    public Output<String> valueNormalization() {
        return this.valueNormalization;
    }

    private AutotagV2RulesRuleArgs() {}

    private AutotagV2RulesRuleArgs(AutotagV2RulesRuleArgs $) {
        this.attributeRule = $.attributeRule;
        this.enabled = $.enabled;
        this.entitySelector = $.entitySelector;
        this.type = $.type;
        this.valueFormat = $.valueFormat;
        this.valueNormalization = $.valueNormalization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutotagV2RulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutotagV2RulesRuleArgs $;

        public Builder() {
            $ = new AutotagV2RulesRuleArgs();
        }

        public Builder(AutotagV2RulesRuleArgs defaults) {
            $ = new AutotagV2RulesRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributeRule(@Nullable Output<AutotagV2RulesRuleAttributeRuleArgs> attributeRule) {
            $.attributeRule = attributeRule;
            return this;
        }

        public Builder attributeRule(AutotagV2RulesRuleAttributeRuleArgs attributeRule) {
            return attributeRule(Output.of(attributeRule));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder entitySelector(@Nullable Output<String> entitySelector) {
            $.entitySelector = entitySelector;
            return this;
        }

        public Builder entitySelector(String entitySelector) {
            return entitySelector(Output.of(entitySelector));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder valueFormat(@Nullable Output<String> valueFormat) {
            $.valueFormat = valueFormat;
            return this;
        }

        public Builder valueFormat(String valueFormat) {
            return valueFormat(Output.of(valueFormat));
        }

        public Builder valueNormalization(Output<String> valueNormalization) {
            $.valueNormalization = valueNormalization;
            return this;
        }

        public Builder valueNormalization(String valueNormalization) {
            return valueNormalization(Output.of(valueNormalization));
        }

        public AutotagV2RulesRuleArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.valueNormalization = Objects.requireNonNull($.valueNormalization, "expected parameter 'valueNormalization' to be non-null");
            return $;
        }
    }

}
