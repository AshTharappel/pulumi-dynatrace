// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticAvailabilityState extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticAvailabilityState Empty = new SyntheticAvailabilityState();

    /**
     * Exclude periods with maintenance windows from availability calculation
     * 
     */
    @Import(name="excludeMaintenanceWindows")
    private @Nullable Output<Boolean> excludeMaintenanceWindows;

    /**
     * @return Exclude periods with maintenance windows from availability calculation
     * 
     */
    public Optional<Output<Boolean>> excludeMaintenanceWindows() {
        return Optional.ofNullable(this.excludeMaintenanceWindows);
    }

    private SyntheticAvailabilityState() {}

    private SyntheticAvailabilityState(SyntheticAvailabilityState $) {
        this.excludeMaintenanceWindows = $.excludeMaintenanceWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticAvailabilityState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticAvailabilityState $;

        public Builder() {
            $ = new SyntheticAvailabilityState();
        }

        public Builder(SyntheticAvailabilityState defaults) {
            $ = new SyntheticAvailabilityState(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeMaintenanceWindows Exclude periods with maintenance windows from availability calculation
         * 
         * @return builder
         * 
         */
        public Builder excludeMaintenanceWindows(@Nullable Output<Boolean> excludeMaintenanceWindows) {
            $.excludeMaintenanceWindows = excludeMaintenanceWindows;
            return this;
        }

        /**
         * @param excludeMaintenanceWindows Exclude periods with maintenance windows from availability calculation
         * 
         * @return builder
         * 
         */
        public Builder excludeMaintenanceWindows(Boolean excludeMaintenanceWindows) {
            return excludeMaintenanceWindows(Output.of(excludeMaintenanceWindows));
        }

        public SyntheticAvailabilityState build() {
            return $;
        }
    }

}
