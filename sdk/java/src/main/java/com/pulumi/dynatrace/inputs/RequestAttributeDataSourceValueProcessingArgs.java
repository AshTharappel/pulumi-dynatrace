// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.RequestAttributeDataSourceValueProcessingExtractSubstringArgs;
import com.pulumi.dynatrace.inputs.RequestAttributeDataSourceValueProcessingValueConditionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestAttributeDataSourceValueProcessingArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestAttributeDataSourceValueProcessingArgs Empty = new RequestAttributeDataSourceValueProcessingArgs();

    @Import(name="extractSubstring")
    private @Nullable Output<RequestAttributeDataSourceValueProcessingExtractSubstringArgs> extractSubstring;

    public Optional<Output<RequestAttributeDataSourceValueProcessingExtractSubstringArgs>> extractSubstring() {
        return Optional.ofNullable(this.extractSubstring);
    }

    @Import(name="splitAt")
    private @Nullable Output<String> splitAt;

    public Optional<Output<String>> splitAt() {
        return Optional.ofNullable(this.splitAt);
    }

    @Import(name="trim")
    private @Nullable Output<Boolean> trim;

    public Optional<Output<Boolean>> trim() {
        return Optional.ofNullable(this.trim);
    }

    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    @Import(name="valueCondition")
    private @Nullable Output<RequestAttributeDataSourceValueProcessingValueConditionArgs> valueCondition;

    public Optional<Output<RequestAttributeDataSourceValueProcessingValueConditionArgs>> valueCondition() {
        return Optional.ofNullable(this.valueCondition);
    }

    @Import(name="valueExtractorRegex")
    private @Nullable Output<String> valueExtractorRegex;

    public Optional<Output<String>> valueExtractorRegex() {
        return Optional.ofNullable(this.valueExtractorRegex);
    }

    private RequestAttributeDataSourceValueProcessingArgs() {}

    private RequestAttributeDataSourceValueProcessingArgs(RequestAttributeDataSourceValueProcessingArgs $) {
        this.extractSubstring = $.extractSubstring;
        this.splitAt = $.splitAt;
        this.trim = $.trim;
        this.unknowns = $.unknowns;
        this.valueCondition = $.valueCondition;
        this.valueExtractorRegex = $.valueExtractorRegex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestAttributeDataSourceValueProcessingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestAttributeDataSourceValueProcessingArgs $;

        public Builder() {
            $ = new RequestAttributeDataSourceValueProcessingArgs();
        }

        public Builder(RequestAttributeDataSourceValueProcessingArgs defaults) {
            $ = new RequestAttributeDataSourceValueProcessingArgs(Objects.requireNonNull(defaults));
        }

        public Builder extractSubstring(@Nullable Output<RequestAttributeDataSourceValueProcessingExtractSubstringArgs> extractSubstring) {
            $.extractSubstring = extractSubstring;
            return this;
        }

        public Builder extractSubstring(RequestAttributeDataSourceValueProcessingExtractSubstringArgs extractSubstring) {
            return extractSubstring(Output.of(extractSubstring));
        }

        public Builder splitAt(@Nullable Output<String> splitAt) {
            $.splitAt = splitAt;
            return this;
        }

        public Builder splitAt(String splitAt) {
            return splitAt(Output.of(splitAt));
        }

        public Builder trim(@Nullable Output<Boolean> trim) {
            $.trim = trim;
            return this;
        }

        public Builder trim(Boolean trim) {
            return trim(Output.of(trim));
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public Builder valueCondition(@Nullable Output<RequestAttributeDataSourceValueProcessingValueConditionArgs> valueCondition) {
            $.valueCondition = valueCondition;
            return this;
        }

        public Builder valueCondition(RequestAttributeDataSourceValueProcessingValueConditionArgs valueCondition) {
            return valueCondition(Output.of(valueCondition));
        }

        public Builder valueExtractorRegex(@Nullable Output<String> valueExtractorRegex) {
            $.valueExtractorRegex = valueExtractorRegex;
            return this;
        }

        public Builder valueExtractorRegex(String valueExtractorRegex) {
            return valueExtractorRegex(Output.of(valueExtractorRegex));
        }

        public RequestAttributeDataSourceValueProcessingArgs build() {
            return $;
        }
    }

}
