// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpanContextPropagationMatchesMatch {
    private @Nullable Boolean caseSensitive;
    private String comparison;
    private @Nullable String key;
    private String source;
    private @Nullable String value;

    private SpanContextPropagationMatchesMatch() {}
    public Optional<Boolean> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }
    public String comparison() {
        return this.comparison;
    }
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    public String source() {
        return this.source;
    }
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpanContextPropagationMatchesMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean caseSensitive;
        private String comparison;
        private @Nullable String key;
        private String source;
        private @Nullable String value;
        public Builder() {}
        public Builder(SpanContextPropagationMatchesMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caseSensitive = defaults.caseSensitive;
    	      this.comparison = defaults.comparison;
    	      this.key = defaults.key;
    	      this.source = defaults.source;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder caseSensitive(@Nullable Boolean caseSensitive) {
            this.caseSensitive = caseSensitive;
            return this;
        }
        @CustomType.Setter
        public Builder comparison(String comparison) {
            this.comparison = Objects.requireNonNull(comparison);
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public SpanContextPropagationMatchesMatch build() {
            final var o = new SpanContextPropagationMatchesMatch();
            o.caseSensitive = caseSensitive;
            o.comparison = comparison;
            o.key = key;
            o.source = source;
            o.value = value;
            return o;
        }
    }
}
