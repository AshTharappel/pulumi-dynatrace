// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HttpMonitorScriptRequestConfigurationHeadersHeaderArgs;
import java.util.List;
import java.util.Objects;


public final class HttpMonitorScriptRequestConfigurationHeadersArgs extends com.pulumi.resources.ResourceArgs {

    public static final HttpMonitorScriptRequestConfigurationHeadersArgs Empty = new HttpMonitorScriptRequestConfigurationHeadersArgs();

    @Import(name="headers", required=true)
    private Output<List<HttpMonitorScriptRequestConfigurationHeadersHeaderArgs>> headers;

    public Output<List<HttpMonitorScriptRequestConfigurationHeadersHeaderArgs>> headers() {
        return this.headers;
    }

    private HttpMonitorScriptRequestConfigurationHeadersArgs() {}

    private HttpMonitorScriptRequestConfigurationHeadersArgs(HttpMonitorScriptRequestConfigurationHeadersArgs $) {
        this.headers = $.headers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpMonitorScriptRequestConfigurationHeadersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpMonitorScriptRequestConfigurationHeadersArgs $;

        public Builder() {
            $ = new HttpMonitorScriptRequestConfigurationHeadersArgs();
        }

        public Builder(HttpMonitorScriptRequestConfigurationHeadersArgs defaults) {
            $ = new HttpMonitorScriptRequestConfigurationHeadersArgs(Objects.requireNonNull(defaults));
        }

        public Builder headers(Output<List<HttpMonitorScriptRequestConfigurationHeadersHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(List<HttpMonitorScriptRequestConfigurationHeadersHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        public Builder headers(HttpMonitorScriptRequestConfigurationHeadersHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        public HttpMonitorScriptRequestConfigurationHeadersArgs build() {
            $.headers = Objects.requireNonNull($.headers, "expected parameter 'headers' to be non-null");
            return $;
        }
    }

}
