// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.DashboardTileFilterConfigChartConfig;
import com.pulumi.dynatrace.outputs.DashboardTileFilterConfigFilters;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardTileFilterConfig {
    private @Nullable DashboardTileFilterConfigChartConfig chartConfig;
    private String customName;
    private String defaultName;
    private @Nullable DashboardTileFilterConfigFilters filters;
    private String type;
    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    private @Nullable String unknowns;

    private DashboardTileFilterConfig() {}
    public Optional<DashboardTileFilterConfigChartConfig> chartConfig() {
        return Optional.ofNullable(this.chartConfig);
    }
    public String customName() {
        return this.customName;
    }
    public String defaultName() {
        return this.defaultName;
    }
    public Optional<DashboardTileFilterConfigFilters> filters() {
        return Optional.ofNullable(this.filters);
    }
    public String type() {
        return this.type;
    }
    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<String> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardTileFilterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardTileFilterConfigChartConfig chartConfig;
        private String customName;
        private String defaultName;
        private @Nullable DashboardTileFilterConfigFilters filters;
        private String type;
        private @Nullable String unknowns;
        public Builder() {}
        public Builder(DashboardTileFilterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartConfig = defaults.chartConfig;
    	      this.customName = defaults.customName;
    	      this.defaultName = defaults.defaultName;
    	      this.filters = defaults.filters;
    	      this.type = defaults.type;
    	      this.unknowns = defaults.unknowns;
        }

        @CustomType.Setter
        public Builder chartConfig(@Nullable DashboardTileFilterConfigChartConfig chartConfig) {
            this.chartConfig = chartConfig;
            return this;
        }
        @CustomType.Setter
        public Builder customName(String customName) {
            this.customName = Objects.requireNonNull(customName);
            return this;
        }
        @CustomType.Setter
        public Builder defaultName(String defaultName) {
            this.defaultName = Objects.requireNonNull(defaultName);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable DashboardTileFilterConfigFilters filters) {
            this.filters = filters;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder unknowns(@Nullable String unknowns) {
            this.unknowns = unknowns;
            return this;
        }
        public DashboardTileFilterConfig build() {
            final var o = new DashboardTileFilterConfig();
            o.chartConfig = chartConfig;
            o.customName = customName;
            o.defaultName = defaultName;
            o.filters = filters;
            o.type = type;
            o.unknowns = unknowns;
            return o;
        }
    }
}
