// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomAppAnomaliesUnexpectedHighLoad {
    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    private Boolean enabled;
    /**
     * @return Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
     * 
     */
    private @Nullable Double thresholdPercentage;

    private CustomAppAnomaliesUnexpectedHighLoad() {}
    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
     * 
     */
    public Optional<Double> thresholdPercentage() {
        return Optional.ofNullable(this.thresholdPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomAppAnomaliesUnexpectedHighLoad defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable Double thresholdPercentage;
        public Builder() {}
        public Builder(CustomAppAnomaliesUnexpectedHighLoad defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.thresholdPercentage = defaults.thresholdPercentage;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder thresholdPercentage(@Nullable Double thresholdPercentage) {
            this.thresholdPercentage = thresholdPercentage;
            return this;
        }
        public CustomAppAnomaliesUnexpectedHighLoad build() {
            final var o = new CustomAppAnomaliesUnexpectedHighLoad();
            o.enabled = enabled;
            o.thresholdPercentage = thresholdPercentage;
            return o;
        }
    }
}
