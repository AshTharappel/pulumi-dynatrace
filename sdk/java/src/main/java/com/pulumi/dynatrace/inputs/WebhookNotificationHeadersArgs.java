// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebhookNotificationHeadersHeaderArgs;
import java.util.List;
import java.util.Objects;


public final class WebhookNotificationHeadersArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhookNotificationHeadersArgs Empty = new WebhookNotificationHeadersArgs();

    /**
     * An additional HTTP Header to include when sending requests
     * 
     */
    @Import(name="headers", required=true)
    private Output<List<WebhookNotificationHeadersHeaderArgs>> headers;

    /**
     * @return An additional HTTP Header to include when sending requests
     * 
     */
    public Output<List<WebhookNotificationHeadersHeaderArgs>> headers() {
        return this.headers;
    }

    private WebhookNotificationHeadersArgs() {}

    private WebhookNotificationHeadersArgs(WebhookNotificationHeadersArgs $) {
        this.headers = $.headers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhookNotificationHeadersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhookNotificationHeadersArgs $;

        public Builder() {
            $ = new WebhookNotificationHeadersArgs();
        }

        public Builder(WebhookNotificationHeadersArgs defaults) {
            $ = new WebhookNotificationHeadersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param headers An additional HTTP Header to include when sending requests
         * 
         * @return builder
         * 
         */
        public Builder headers(Output<List<WebhookNotificationHeadersHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers An additional HTTP Header to include when sending requests
         * 
         * @return builder
         * 
         */
        public Builder headers(List<WebhookNotificationHeadersHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param headers An additional HTTP Header to include when sending requests
         * 
         * @return builder
         * 
         */
        public Builder headers(WebhookNotificationHeadersHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        public WebhookNotificationHeadersArgs build() {
            $.headers = Objects.requireNonNull($.headers, "expected parameter 'headers' to be non-null");
            return $;
        }
    }

}
