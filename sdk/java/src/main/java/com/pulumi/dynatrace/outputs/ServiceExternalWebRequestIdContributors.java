// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.ServiceExternalWebRequestIdContributorsApplicationId;
import com.pulumi.dynatrace.outputs.ServiceExternalWebRequestIdContributorsContextRoot;
import com.pulumi.dynatrace.outputs.ServiceExternalWebRequestIdContributorsPublicDomainName;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class ServiceExternalWebRequestIdContributors {
    /**
     * @return Application identifier
     * 
     */
    private ServiceExternalWebRequestIdContributorsApplicationId applicationId;
    /**
     * @return URL context root
     * 
     */
    private ServiceExternalWebRequestIdContributorsContextRoot contextRoot;
    /**
     * @return Let the Port contribute to the Service Id
     * 
     */
    private Boolean portForServiceId;
    /**
     * @return Public domain name
     * 
     */
    private ServiceExternalWebRequestIdContributorsPublicDomainName publicDomainName;

    private ServiceExternalWebRequestIdContributors() {}
    /**
     * @return Application identifier
     * 
     */
    public ServiceExternalWebRequestIdContributorsApplicationId applicationId() {
        return this.applicationId;
    }
    /**
     * @return URL context root
     * 
     */
    public ServiceExternalWebRequestIdContributorsContextRoot contextRoot() {
        return this.contextRoot;
    }
    /**
     * @return Let the Port contribute to the Service Id
     * 
     */
    public Boolean portForServiceId() {
        return this.portForServiceId;
    }
    /**
     * @return Public domain name
     * 
     */
    public ServiceExternalWebRequestIdContributorsPublicDomainName publicDomainName() {
        return this.publicDomainName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceExternalWebRequestIdContributors defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ServiceExternalWebRequestIdContributorsApplicationId applicationId;
        private ServiceExternalWebRequestIdContributorsContextRoot contextRoot;
        private Boolean portForServiceId;
        private ServiceExternalWebRequestIdContributorsPublicDomainName publicDomainName;
        public Builder() {}
        public Builder(ServiceExternalWebRequestIdContributors defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.contextRoot = defaults.contextRoot;
    	      this.portForServiceId = defaults.portForServiceId;
    	      this.publicDomainName = defaults.publicDomainName;
        }

        @CustomType.Setter
        public Builder applicationId(ServiceExternalWebRequestIdContributorsApplicationId applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        @CustomType.Setter
        public Builder contextRoot(ServiceExternalWebRequestIdContributorsContextRoot contextRoot) {
            this.contextRoot = Objects.requireNonNull(contextRoot);
            return this;
        }
        @CustomType.Setter
        public Builder portForServiceId(Boolean portForServiceId) {
            this.portForServiceId = Objects.requireNonNull(portForServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder publicDomainName(ServiceExternalWebRequestIdContributorsPublicDomainName publicDomainName) {
            this.publicDomainName = Objects.requireNonNull(publicDomainName);
            return this;
        }
        public ServiceExternalWebRequestIdContributors build() {
            final var o = new ServiceExternalWebRequestIdContributors();
            o.applicationId = applicationId;
            o.contextRoot = contextRoot;
            o.portForServiceId = portForServiceId;
            o.publicDomainName = publicDomainName;
            return o;
        }
    }
}
