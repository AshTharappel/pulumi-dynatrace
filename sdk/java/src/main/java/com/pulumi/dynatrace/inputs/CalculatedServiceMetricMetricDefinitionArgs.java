// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CalculatedServiceMetricMetricDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CalculatedServiceMetricMetricDefinitionArgs Empty = new CalculatedServiceMetricMetricDefinitionArgs();

    @Import(name="metric", required=true)
    private Output<String> metric;

    public Output<String> metric() {
        return this.metric;
    }

    @Import(name="requestAttribute")
    private @Nullable Output<String> requestAttribute;

    public Optional<Output<String>> requestAttribute() {
        return Optional.ofNullable(this.requestAttribute);
    }

    private CalculatedServiceMetricMetricDefinitionArgs() {}

    private CalculatedServiceMetricMetricDefinitionArgs(CalculatedServiceMetricMetricDefinitionArgs $) {
        this.metric = $.metric;
        this.requestAttribute = $.requestAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CalculatedServiceMetricMetricDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CalculatedServiceMetricMetricDefinitionArgs $;

        public Builder() {
            $ = new CalculatedServiceMetricMetricDefinitionArgs();
        }

        public Builder(CalculatedServiceMetricMetricDefinitionArgs defaults) {
            $ = new CalculatedServiceMetricMetricDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder metric(Output<String> metric) {
            $.metric = metric;
            return this;
        }

        public Builder metric(String metric) {
            return metric(Output.of(metric));
        }

        public Builder requestAttribute(@Nullable Output<String> requestAttribute) {
            $.requestAttribute = requestAttribute;
            return this;
        }

        public Builder requestAttribute(String requestAttribute) {
            return requestAttribute(Output.of(requestAttribute));
        }

        public CalculatedServiceMetricMetricDefinitionArgs build() {
            $.metric = Objects.requireNonNull($.metric, "expected parameter 'metric' to be non-null");
            return $;
        }
    }

}
