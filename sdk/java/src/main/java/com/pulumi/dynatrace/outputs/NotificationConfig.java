// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NotificationConfig {
    /**
     * @return The configuration is enabled (`true`) or disabled (`false`)
     * 
     */
    private Boolean active;
    /**
     * @return The ID of the associated alerting profile
     * 
     */
    private String alertingProfile;
    /**
     * @return The name of the notification configuration
     * 
     */
    private String name;
    /**
     * @return Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` &gt; EmailNotificationConfig  * `PAGER_DUTY` &gt; PagerDutyNotificationConfig  * `WEBHOOK` &gt; WebHookNotificationConfig  * `SLACK` &gt; SlackNotificationConfig  * `HIPCHAT` &gt; HipChatNotificationConfig  * `VICTOROPS` &gt; VictorOpsNotificationConfig  * `SERVICE_NOW` &gt; ServiceNowNotificationConfig  * `XMATTERS` &gt; XMattersNotificationConfig  * `ANSIBLETOWER` &gt; AnsibleTowerNotificationConfig  * `OPS_GENIE` &gt; OpsGenieNotificationConfig  * `JIRA` &gt; JiraNotificationConfig  * `TRELLO` &gt; TrelloNotificationConfig
     * 
     */
    private String type;
    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    private @Nullable String unknowns;

    private NotificationConfig() {}
    /**
     * @return The configuration is enabled (`true`) or disabled (`false`)
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return The ID of the associated alerting profile
     * 
     */
    public String alertingProfile() {
        return this.alertingProfile;
    }
    /**
     * @return The name of the notification configuration
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` &gt; EmailNotificationConfig  * `PAGER_DUTY` &gt; PagerDutyNotificationConfig  * `WEBHOOK` &gt; WebHookNotificationConfig  * `SLACK` &gt; SlackNotificationConfig  * `HIPCHAT` &gt; HipChatNotificationConfig  * `VICTOROPS` &gt; VictorOpsNotificationConfig  * `SERVICE_NOW` &gt; ServiceNowNotificationConfig  * `XMATTERS` &gt; XMattersNotificationConfig  * `ANSIBLETOWER` &gt; AnsibleTowerNotificationConfig  * `OPS_GENIE` &gt; OpsGenieNotificationConfig  * `JIRA` &gt; JiraNotificationConfig  * `TRELLO` &gt; TrelloNotificationConfig
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<String> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean active;
        private String alertingProfile;
        private String name;
        private String type;
        private @Nullable String unknowns;
        public Builder() {}
        public Builder(NotificationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.alertingProfile = defaults.alertingProfile;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.unknowns = defaults.unknowns;
        }

        @CustomType.Setter
        public Builder active(Boolean active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        @CustomType.Setter
        public Builder alertingProfile(String alertingProfile) {
            this.alertingProfile = Objects.requireNonNull(alertingProfile);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder unknowns(@Nullable String unknowns) {
            this.unknowns = unknowns;
            return this;
        }
        public NotificationConfig build() {
            final var o = new NotificationConfig();
            o.active = active;
            o.alertingProfile = alertingProfile;
            o.name = name;
            o.type = type;
            o.unknowns = unknowns;
            return o;
        }
    }
}
