// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.EnvironmentStorageLimits;
import com.pulumi.dynatrace.outputs.EnvironmentStorageRetention;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentStorage {
    private @Nullable EnvironmentStorageLimits limits;
    private @Nullable EnvironmentStorageRetention retention;
    /**
     * @return Maximum number of newly monitored entry point PurePaths captured per process/minute on environment level. Can be set to any value from 100 to 100000
     * 
     */
    private Integer transactions;
    /**
     * @return Maximum number of user actions generated per minute on environment level. Can be set to any value from 1 to 2147483646 or left unlimited by omitting this property
     * 
     */
    private @Nullable Integer userActions;

    private EnvironmentStorage() {}
    public Optional<EnvironmentStorageLimits> limits() {
        return Optional.ofNullable(this.limits);
    }
    public Optional<EnvironmentStorageRetention> retention() {
        return Optional.ofNullable(this.retention);
    }
    /**
     * @return Maximum number of newly monitored entry point PurePaths captured per process/minute on environment level. Can be set to any value from 100 to 100000
     * 
     */
    public Integer transactions() {
        return this.transactions;
    }
    /**
     * @return Maximum number of user actions generated per minute on environment level. Can be set to any value from 1 to 2147483646 or left unlimited by omitting this property
     * 
     */
    public Optional<Integer> userActions() {
        return Optional.ofNullable(this.userActions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable EnvironmentStorageLimits limits;
        private @Nullable EnvironmentStorageRetention retention;
        private Integer transactions;
        private @Nullable Integer userActions;
        public Builder() {}
        public Builder(EnvironmentStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limits = defaults.limits;
    	      this.retention = defaults.retention;
    	      this.transactions = defaults.transactions;
    	      this.userActions = defaults.userActions;
        }

        @CustomType.Setter
        public Builder limits(@Nullable EnvironmentStorageLimits limits) {
            this.limits = limits;
            return this;
        }
        @CustomType.Setter
        public Builder retention(@Nullable EnvironmentStorageRetention retention) {
            this.retention = retention;
            return this;
        }
        @CustomType.Setter
        public Builder transactions(Integer transactions) {
            this.transactions = Objects.requireNonNull(transactions);
            return this;
        }
        @CustomType.Setter
        public Builder userActions(@Nullable Integer userActions) {
            this.userActions = userActions;
            return this;
        }
        public EnvironmentStorage build() {
            final var o = new EnvironmentStorage();
            o.limits = limits;
            o.retention = retention;
            o.transactions = transactions;
            o.userActions = userActions;
            return o;
        }
    }
}
