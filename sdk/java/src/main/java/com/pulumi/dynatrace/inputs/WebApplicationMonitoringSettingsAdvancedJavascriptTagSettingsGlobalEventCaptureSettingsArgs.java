// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs Empty = new WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs();

    @Import(name="additionalEventCapturedAsUserInput")
    private @Nullable Output<String> additionalEventCapturedAsUserInput;

    public Optional<Output<String>> additionalEventCapturedAsUserInput() {
        return Optional.ofNullable(this.additionalEventCapturedAsUserInput);
    }

    @Import(name="click")
    private @Nullable Output<Boolean> click;

    public Optional<Output<Boolean>> click() {
        return Optional.ofNullable(this.click);
    }

    @Import(name="doubleclick")
    private @Nullable Output<Boolean> doubleclick;

    public Optional<Output<Boolean>> doubleclick() {
        return Optional.ofNullable(this.doubleclick);
    }

    @Import(name="keydown")
    private @Nullable Output<Boolean> keydown;

    public Optional<Output<Boolean>> keydown() {
        return Optional.ofNullable(this.keydown);
    }

    @Import(name="keyup")
    private @Nullable Output<Boolean> keyup;

    public Optional<Output<Boolean>> keyup() {
        return Optional.ofNullable(this.keyup);
    }

    @Import(name="mousedown")
    private @Nullable Output<Boolean> mousedown;

    public Optional<Output<Boolean>> mousedown() {
        return Optional.ofNullable(this.mousedown);
    }

    @Import(name="mouseup")
    private @Nullable Output<Boolean> mouseup;

    public Optional<Output<Boolean>> mouseup() {
        return Optional.ofNullable(this.mouseup);
    }

    @Import(name="scroll")
    private @Nullable Output<Boolean> scroll;

    public Optional<Output<Boolean>> scroll() {
        return Optional.ofNullable(this.scroll);
    }

    private WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs() {}

    private WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs $) {
        this.additionalEventCapturedAsUserInput = $.additionalEventCapturedAsUserInput;
        this.click = $.click;
        this.doubleclick = $.doubleclick;
        this.keydown = $.keydown;
        this.keyup = $.keyup;
        this.mousedown = $.mousedown;
        this.mouseup = $.mouseup;
        this.scroll = $.scroll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs $;

        public Builder() {
            $ = new WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs();
        }

        public Builder(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs defaults) {
            $ = new WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalEventCapturedAsUserInput(@Nullable Output<String> additionalEventCapturedAsUserInput) {
            $.additionalEventCapturedAsUserInput = additionalEventCapturedAsUserInput;
            return this;
        }

        public Builder additionalEventCapturedAsUserInput(String additionalEventCapturedAsUserInput) {
            return additionalEventCapturedAsUserInput(Output.of(additionalEventCapturedAsUserInput));
        }

        public Builder click(@Nullable Output<Boolean> click) {
            $.click = click;
            return this;
        }

        public Builder click(Boolean click) {
            return click(Output.of(click));
        }

        public Builder doubleclick(@Nullable Output<Boolean> doubleclick) {
            $.doubleclick = doubleclick;
            return this;
        }

        public Builder doubleclick(Boolean doubleclick) {
            return doubleclick(Output.of(doubleclick));
        }

        public Builder keydown(@Nullable Output<Boolean> keydown) {
            $.keydown = keydown;
            return this;
        }

        public Builder keydown(Boolean keydown) {
            return keydown(Output.of(keydown));
        }

        public Builder keyup(@Nullable Output<Boolean> keyup) {
            $.keyup = keyup;
            return this;
        }

        public Builder keyup(Boolean keyup) {
            return keyup(Output.of(keyup));
        }

        public Builder mousedown(@Nullable Output<Boolean> mousedown) {
            $.mousedown = mousedown;
            return this;
        }

        public Builder mousedown(Boolean mousedown) {
            return mousedown(Output.of(mousedown));
        }

        public Builder mouseup(@Nullable Output<Boolean> mouseup) {
            $.mouseup = mouseup;
            return this;
        }

        public Builder mouseup(Boolean mouseup) {
            return mouseup(Output.of(mouseup));
        }

        public Builder scroll(@Nullable Output<Boolean> scroll) {
            $.scroll = scroll;
            return this;
        }

        public Builder scroll(Boolean scroll) {
            return scroll(Output.of(scroll));
        }

        public WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs build() {
            return $;
        }
    }

}
