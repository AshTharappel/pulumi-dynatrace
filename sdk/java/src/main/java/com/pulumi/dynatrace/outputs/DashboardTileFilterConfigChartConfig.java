// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.DashboardTileFilterConfigChartConfigResultMetadata;
import com.pulumi.dynatrace.outputs.DashboardTileFilterConfigChartConfigSeries;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardTileFilterConfigChartConfig {
    private @Nullable Map<String,Double> axisLimits;
    private @Nullable String leftAxisCustomUnit;
    private @Nullable Boolean legend;
    private @Nullable List<DashboardTileFilterConfigChartConfigResultMetadata> resultMetadatas;
    private @Nullable String rightAxisCustomUnit;
    private @Nullable List<DashboardTileFilterConfigChartConfigSeries> series;
    private String type;
    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    private @Nullable String unknowns;

    private DashboardTileFilterConfigChartConfig() {}
    public Map<String,Double> axisLimits() {
        return this.axisLimits == null ? Map.of() : this.axisLimits;
    }
    public Optional<String> leftAxisCustomUnit() {
        return Optional.ofNullable(this.leftAxisCustomUnit);
    }
    public Optional<Boolean> legend() {
        return Optional.ofNullable(this.legend);
    }
    public List<DashboardTileFilterConfigChartConfigResultMetadata> resultMetadatas() {
        return this.resultMetadatas == null ? List.of() : this.resultMetadatas;
    }
    public Optional<String> rightAxisCustomUnit() {
        return Optional.ofNullable(this.rightAxisCustomUnit);
    }
    public List<DashboardTileFilterConfigChartConfigSeries> series() {
        return this.series == null ? List.of() : this.series;
    }
    public String type() {
        return this.type;
    }
    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<String> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardTileFilterConfigChartConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Double> axisLimits;
        private @Nullable String leftAxisCustomUnit;
        private @Nullable Boolean legend;
        private @Nullable List<DashboardTileFilterConfigChartConfigResultMetadata> resultMetadatas;
        private @Nullable String rightAxisCustomUnit;
        private @Nullable List<DashboardTileFilterConfigChartConfigSeries> series;
        private String type;
        private @Nullable String unknowns;
        public Builder() {}
        public Builder(DashboardTileFilterConfigChartConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.axisLimits = defaults.axisLimits;
    	      this.leftAxisCustomUnit = defaults.leftAxisCustomUnit;
    	      this.legend = defaults.legend;
    	      this.resultMetadatas = defaults.resultMetadatas;
    	      this.rightAxisCustomUnit = defaults.rightAxisCustomUnit;
    	      this.series = defaults.series;
    	      this.type = defaults.type;
    	      this.unknowns = defaults.unknowns;
        }

        @CustomType.Setter
        public Builder axisLimits(@Nullable Map<String,Double> axisLimits) {
            this.axisLimits = axisLimits;
            return this;
        }
        @CustomType.Setter
        public Builder leftAxisCustomUnit(@Nullable String leftAxisCustomUnit) {
            this.leftAxisCustomUnit = leftAxisCustomUnit;
            return this;
        }
        @CustomType.Setter
        public Builder legend(@Nullable Boolean legend) {
            this.legend = legend;
            return this;
        }
        @CustomType.Setter
        public Builder resultMetadatas(@Nullable List<DashboardTileFilterConfigChartConfigResultMetadata> resultMetadatas) {
            this.resultMetadatas = resultMetadatas;
            return this;
        }
        public Builder resultMetadatas(DashboardTileFilterConfigChartConfigResultMetadata... resultMetadatas) {
            return resultMetadatas(List.of(resultMetadatas));
        }
        @CustomType.Setter
        public Builder rightAxisCustomUnit(@Nullable String rightAxisCustomUnit) {
            this.rightAxisCustomUnit = rightAxisCustomUnit;
            return this;
        }
        @CustomType.Setter
        public Builder series(@Nullable List<DashboardTileFilterConfigChartConfigSeries> series) {
            this.series = series;
            return this;
        }
        public Builder series(DashboardTileFilterConfigChartConfigSeries... series) {
            return series(List.of(series));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder unknowns(@Nullable String unknowns) {
            this.unknowns = unknowns;
            return this;
        }
        public DashboardTileFilterConfigChartConfig build() {
            final var o = new DashboardTileFilterConfigChartConfig();
            o.axisLimits = axisLimits;
            o.leftAxisCustomUnit = leftAxisCustomUnit;
            o.legend = legend;
            o.resultMetadatas = resultMetadatas;
            o.rightAxisCustomUnit = rightAxisCustomUnit;
            o.series = series;
            o.type = type;
            o.unknowns = unknowns;
            return o;
        }
    }
}
