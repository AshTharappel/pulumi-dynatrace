// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GenericTypesRulesRuleAttributesAttributeArgs;
import java.util.List;
import java.util.Objects;


public final class GenericTypesRulesRuleAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericTypesRulesRuleAttributesArgs Empty = new GenericTypesRulesRuleAttributesArgs();

    @Import(name="attributes", required=true)
    private Output<List<GenericTypesRulesRuleAttributesAttributeArgs>> attributes;

    public Output<List<GenericTypesRulesRuleAttributesAttributeArgs>> attributes() {
        return this.attributes;
    }

    private GenericTypesRulesRuleAttributesArgs() {}

    private GenericTypesRulesRuleAttributesArgs(GenericTypesRulesRuleAttributesArgs $) {
        this.attributes = $.attributes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericTypesRulesRuleAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericTypesRulesRuleAttributesArgs $;

        public Builder() {
            $ = new GenericTypesRulesRuleAttributesArgs();
        }

        public Builder(GenericTypesRulesRuleAttributesArgs defaults) {
            $ = new GenericTypesRulesRuleAttributesArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributes(Output<List<GenericTypesRulesRuleAttributesAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder attributes(List<GenericTypesRulesRuleAttributesAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        public Builder attributes(GenericTypesRulesRuleAttributesAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        public GenericTypesRulesRuleAttributesArgs build() {
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            return $;
        }
    }

}
