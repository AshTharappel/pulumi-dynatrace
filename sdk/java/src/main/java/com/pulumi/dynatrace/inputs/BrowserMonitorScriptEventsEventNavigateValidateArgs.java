// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventNavigateValidateValidationArgs;
import java.util.List;
import java.util.Objects;


public final class BrowserMonitorScriptEventsEventNavigateValidateArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptEventsEventNavigateValidateArgs Empty = new BrowserMonitorScriptEventsEventNavigateValidateArgs();

    @Import(name="validations", required=true)
    private Output<List<BrowserMonitorScriptEventsEventNavigateValidateValidationArgs>> validations;

    public Output<List<BrowserMonitorScriptEventsEventNavigateValidateValidationArgs>> validations() {
        return this.validations;
    }

    private BrowserMonitorScriptEventsEventNavigateValidateArgs() {}

    private BrowserMonitorScriptEventsEventNavigateValidateArgs(BrowserMonitorScriptEventsEventNavigateValidateArgs $) {
        this.validations = $.validations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptEventsEventNavigateValidateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptEventsEventNavigateValidateArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptEventsEventNavigateValidateArgs();
        }

        public Builder(BrowserMonitorScriptEventsEventNavigateValidateArgs defaults) {
            $ = new BrowserMonitorScriptEventsEventNavigateValidateArgs(Objects.requireNonNull(defaults));
        }

        public Builder validations(Output<List<BrowserMonitorScriptEventsEventNavigateValidateValidationArgs>> validations) {
            $.validations = validations;
            return this;
        }

        public Builder validations(List<BrowserMonitorScriptEventsEventNavigateValidateValidationArgs> validations) {
            return validations(Output.of(validations));
        }

        public Builder validations(BrowserMonitorScriptEventsEventNavigateValidateValidationArgs... validations) {
            return validations(List.of(validations));
        }

        public BrowserMonitorScriptEventsEventNavigateValidateArgs build() {
            $.validations = Objects.requireNonNull($.validations, "expected parameter 'validations' to be non-null");
            return $;
        }
    }

}
