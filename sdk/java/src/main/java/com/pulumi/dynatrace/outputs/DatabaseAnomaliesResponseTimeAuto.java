// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseAnomaliesResponseTimeAuto {
    /**
     * @return Configuration for anomalies regarding load drops and spikes
     * 
     */
    private String load;
    private Integer milliseconds;
    private Integer percent;
    private Integer slowestMilliseconds;
    private Integer slowestPercent;
    private @Nullable String unknowns;

    private DatabaseAnomaliesResponseTimeAuto() {}
    /**
     * @return Configuration for anomalies regarding load drops and spikes
     * 
     */
    public String load() {
        return this.load;
    }
    public Integer milliseconds() {
        return this.milliseconds;
    }
    public Integer percent() {
        return this.percent;
    }
    public Integer slowestMilliseconds() {
        return this.slowestMilliseconds;
    }
    public Integer slowestPercent() {
        return this.slowestPercent;
    }
    public Optional<String> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseAnomaliesResponseTimeAuto defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String load;
        private Integer milliseconds;
        private Integer percent;
        private Integer slowestMilliseconds;
        private Integer slowestPercent;
        private @Nullable String unknowns;
        public Builder() {}
        public Builder(DatabaseAnomaliesResponseTimeAuto defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.load = defaults.load;
    	      this.milliseconds = defaults.milliseconds;
    	      this.percent = defaults.percent;
    	      this.slowestMilliseconds = defaults.slowestMilliseconds;
    	      this.slowestPercent = defaults.slowestPercent;
    	      this.unknowns = defaults.unknowns;
        }

        @CustomType.Setter
        public Builder load(String load) {
            this.load = Objects.requireNonNull(load);
            return this;
        }
        @CustomType.Setter
        public Builder milliseconds(Integer milliseconds) {
            this.milliseconds = Objects.requireNonNull(milliseconds);
            return this;
        }
        @CustomType.Setter
        public Builder percent(Integer percent) {
            this.percent = Objects.requireNonNull(percent);
            return this;
        }
        @CustomType.Setter
        public Builder slowestMilliseconds(Integer slowestMilliseconds) {
            this.slowestMilliseconds = Objects.requireNonNull(slowestMilliseconds);
            return this;
        }
        @CustomType.Setter
        public Builder slowestPercent(Integer slowestPercent) {
            this.slowestPercent = Objects.requireNonNull(slowestPercent);
            return this;
        }
        @CustomType.Setter
        public Builder unknowns(@Nullable String unknowns) {
            this.unknowns = unknowns;
            return this;
        }
        public DatabaseAnomaliesResponseTimeAuto build() {
            final var o = new DatabaseAnomaliesResponseTimeAuto();
            o.load = load;
            o.milliseconds = milliseconds;
            o.percent = percent;
            o.slowestMilliseconds = slowestMilliseconds;
            o.slowestPercent = slowestPercent;
            o.unknowns = unknowns;
            return o;
        }
    }
}
