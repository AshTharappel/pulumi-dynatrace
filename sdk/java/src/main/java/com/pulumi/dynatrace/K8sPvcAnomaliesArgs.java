// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.K8sPvcAnomaliesLowDiskSpaceCriticalArgs;
import com.pulumi.dynatrace.inputs.K8sPvcAnomaliesLowDiskSpaceCriticalPercentageArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class K8sPvcAnomaliesArgs extends com.pulumi.resources.ResourceArgs {

    public static final K8sPvcAnomaliesArgs Empty = new K8sPvcAnomaliesArgs();

    /**
     * Alerts on low disk space in megabytes for a persistent volume claim.
     * 
     */
    @Import(name="lowDiskSpaceCritical", required=true)
    private Output<K8sPvcAnomaliesLowDiskSpaceCriticalArgs> lowDiskSpaceCritical;

    /**
     * @return Alerts on low disk space in megabytes for a persistent volume claim.
     * 
     */
    public Output<K8sPvcAnomaliesLowDiskSpaceCriticalArgs> lowDiskSpaceCritical() {
        return this.lowDiskSpaceCritical;
    }

    /**
     * Alerts on low disk space in % for a persistent volume claim.
     * 
     */
    @Import(name="lowDiskSpaceCriticalPercentage", required=true)
    private Output<K8sPvcAnomaliesLowDiskSpaceCriticalPercentageArgs> lowDiskSpaceCriticalPercentage;

    /**
     * @return Alerts on low disk space in % for a persistent volume claim.
     * 
     */
    public Output<K8sPvcAnomaliesLowDiskSpaceCriticalPercentageArgs> lowDiskSpaceCriticalPercentage() {
        return this.lowDiskSpaceCriticalPercentage;
    }

    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private K8sPvcAnomaliesArgs() {}

    private K8sPvcAnomaliesArgs(K8sPvcAnomaliesArgs $) {
        this.lowDiskSpaceCritical = $.lowDiskSpaceCritical;
        this.lowDiskSpaceCriticalPercentage = $.lowDiskSpaceCriticalPercentage;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(K8sPvcAnomaliesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private K8sPvcAnomaliesArgs $;

        public Builder() {
            $ = new K8sPvcAnomaliesArgs();
        }

        public Builder(K8sPvcAnomaliesArgs defaults) {
            $ = new K8sPvcAnomaliesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lowDiskSpaceCritical Alerts on low disk space in megabytes for a persistent volume claim.
         * 
         * @return builder
         * 
         */
        public Builder lowDiskSpaceCritical(Output<K8sPvcAnomaliesLowDiskSpaceCriticalArgs> lowDiskSpaceCritical) {
            $.lowDiskSpaceCritical = lowDiskSpaceCritical;
            return this;
        }

        /**
         * @param lowDiskSpaceCritical Alerts on low disk space in megabytes for a persistent volume claim.
         * 
         * @return builder
         * 
         */
        public Builder lowDiskSpaceCritical(K8sPvcAnomaliesLowDiskSpaceCriticalArgs lowDiskSpaceCritical) {
            return lowDiskSpaceCritical(Output.of(lowDiskSpaceCritical));
        }

        /**
         * @param lowDiskSpaceCriticalPercentage Alerts on low disk space in % for a persistent volume claim.
         * 
         * @return builder
         * 
         */
        public Builder lowDiskSpaceCriticalPercentage(Output<K8sPvcAnomaliesLowDiskSpaceCriticalPercentageArgs> lowDiskSpaceCriticalPercentage) {
            $.lowDiskSpaceCriticalPercentage = lowDiskSpaceCriticalPercentage;
            return this;
        }

        /**
         * @param lowDiskSpaceCriticalPercentage Alerts on low disk space in % for a persistent volume claim.
         * 
         * @return builder
         * 
         */
        public Builder lowDiskSpaceCriticalPercentage(K8sPvcAnomaliesLowDiskSpaceCriticalPercentageArgs lowDiskSpaceCriticalPercentage) {
            return lowDiskSpaceCriticalPercentage(Output.of(lowDiskSpaceCriticalPercentage));
        }

        /**
         * @param scope The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public K8sPvcAnomaliesArgs build() {
            $.lowDiskSpaceCritical = Objects.requireNonNull($.lowDiskSpaceCritical, "expected parameter 'lowDiskSpaceCritical' to be non-null");
            $.lowDiskSpaceCriticalPercentage = Objects.requireNonNull($.lowDiskSpaceCriticalPercentage, "expected parameter 'lowDiskSpaceCriticalPercentage' to be non-null");
            return $;
        }
    }

}
