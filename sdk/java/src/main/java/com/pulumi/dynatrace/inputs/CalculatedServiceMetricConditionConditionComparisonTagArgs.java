// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.CalculatedServiceMetricConditionConditionComparisonTagValueArgs;
import com.pulumi.dynatrace.inputs.CalculatedServiceMetricConditionConditionComparisonTagValuesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CalculatedServiceMetricConditionConditionComparisonTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final CalculatedServiceMetricConditionConditionComparisonTagArgs Empty = new CalculatedServiceMetricConditionConditionComparisonTagArgs();

    @Import(name="operator")
    private @Nullable Output<String> operator;

    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    @Import(name="value")
    private @Nullable Output<CalculatedServiceMetricConditionConditionComparisonTagValueArgs> value;

    public Optional<Output<CalculatedServiceMetricConditionConditionComparisonTagValueArgs>> value() {
        return Optional.ofNullable(this.value);
    }

    @Import(name="values")
    private @Nullable Output<CalculatedServiceMetricConditionConditionComparisonTagValuesArgs> values;

    public Optional<Output<CalculatedServiceMetricConditionConditionComparisonTagValuesArgs>> values() {
        return Optional.ofNullable(this.values);
    }

    private CalculatedServiceMetricConditionConditionComparisonTagArgs() {}

    private CalculatedServiceMetricConditionConditionComparisonTagArgs(CalculatedServiceMetricConditionConditionComparisonTagArgs $) {
        this.operator = $.operator;
        this.unknowns = $.unknowns;
        this.value = $.value;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CalculatedServiceMetricConditionConditionComparisonTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CalculatedServiceMetricConditionConditionComparisonTagArgs $;

        public Builder() {
            $ = new CalculatedServiceMetricConditionConditionComparisonTagArgs();
        }

        public Builder(CalculatedServiceMetricConditionConditionComparisonTagArgs defaults) {
            $ = new CalculatedServiceMetricConditionConditionComparisonTagArgs(Objects.requireNonNull(defaults));
        }

        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public Builder value(@Nullable Output<CalculatedServiceMetricConditionConditionComparisonTagValueArgs> value) {
            $.value = value;
            return this;
        }

        public Builder value(CalculatedServiceMetricConditionConditionComparisonTagValueArgs value) {
            return value(Output.of(value));
        }

        public Builder values(@Nullable Output<CalculatedServiceMetricConditionConditionComparisonTagValuesArgs> values) {
            $.values = values;
            return this;
        }

        public Builder values(CalculatedServiceMetricConditionConditionComparisonTagValuesArgs values) {
            return values(Output.of(values));
        }

        public CalculatedServiceMetricConditionConditionComparisonTagArgs build() {
            return $;
        }
    }

}
