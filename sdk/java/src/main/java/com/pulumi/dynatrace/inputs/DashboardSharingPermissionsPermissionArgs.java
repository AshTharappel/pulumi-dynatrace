// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardSharingPermissionsPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardSharingPermissionsPermissionArgs Empty = new DashboardSharingPermissionsPermissionArgs();

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of this resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="level", required=true)
    private Output<String> level;

    public Output<String> level() {
        return this.level;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private DashboardSharingPermissionsPermissionArgs() {}

    private DashboardSharingPermissionsPermissionArgs(DashboardSharingPermissionsPermissionArgs $) {
        this.id = $.id;
        this.level = $.level;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardSharingPermissionsPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardSharingPermissionsPermissionArgs $;

        public Builder() {
            $ = new DashboardSharingPermissionsPermissionArgs();
        }

        public Builder(DashboardSharingPermissionsPermissionArgs defaults) {
            $ = new DashboardSharingPermissionsPermissionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder level(Output<String> level) {
            $.level = level;
            return this;
        }

        public Builder level(String level) {
            return level(Output.of(level));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DashboardSharingPermissionsPermissionArgs build() {
            $.level = Objects.requireNonNull($.level, "expected parameter 'level' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
