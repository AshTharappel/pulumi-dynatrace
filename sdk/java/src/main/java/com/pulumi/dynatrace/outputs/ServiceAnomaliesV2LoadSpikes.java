// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceAnomaliesV2LoadSpikes {
    /**
     * @return Detect service load spikes
     * 
     */
    private Boolean enabled;
    /**
     * @return Threshold
     * 
     */
    private @Nullable Double loadSpikePercent;
    /**
     * @return Time span
     * 
     */
    private @Nullable Integer minutesAbnormalState;

    private ServiceAnomaliesV2LoadSpikes() {}
    /**
     * @return Detect service load spikes
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Threshold
     * 
     */
    public Optional<Double> loadSpikePercent() {
        return Optional.ofNullable(this.loadSpikePercent);
    }
    /**
     * @return Time span
     * 
     */
    public Optional<Integer> minutesAbnormalState() {
        return Optional.ofNullable(this.minutesAbnormalState);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAnomaliesV2LoadSpikes defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable Double loadSpikePercent;
        private @Nullable Integer minutesAbnormalState;
        public Builder() {}
        public Builder(ServiceAnomaliesV2LoadSpikes defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.loadSpikePercent = defaults.loadSpikePercent;
    	      this.minutesAbnormalState = defaults.minutesAbnormalState;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder loadSpikePercent(@Nullable Double loadSpikePercent) {
            this.loadSpikePercent = loadSpikePercent;
            return this;
        }
        @CustomType.Setter
        public Builder minutesAbnormalState(@Nullable Integer minutesAbnormalState) {
            this.minutesAbnormalState = minutesAbnormalState;
            return this;
        }
        public ServiceAnomaliesV2LoadSpikes build() {
            final var o = new ServiceAnomaliesV2LoadSpikes();
            o.enabled = enabled;
            o.loadSpikePercent = loadSpikePercent;
            o.minutesAbnormalState = minutesAbnormalState;
            return o;
        }
    }
}
