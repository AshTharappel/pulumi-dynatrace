// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HostAnomaliesDisksInodesArgs;
import com.pulumi.dynatrace.inputs.HostAnomaliesDisksSpaceArgs;
import com.pulumi.dynatrace.inputs.HostAnomaliesDisksSpeedArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostAnomaliesDisksArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAnomaliesDisksArgs Empty = new HostAnomaliesDisksArgs();

    /**
     * Configuration of low disk inodes number detection
     * 
     */
    @Import(name="inodes")
    private @Nullable Output<HostAnomaliesDisksInodesArgs> inodes;

    /**
     * @return Configuration of low disk inodes number detection
     * 
     */
    public Optional<Output<HostAnomaliesDisksInodesArgs>> inodes() {
        return Optional.ofNullable(this.inodes);
    }

    /**
     * Configuration of low disk space detection
     * 
     */
    @Import(name="space")
    private @Nullable Output<HostAnomaliesDisksSpaceArgs> space;

    /**
     * @return Configuration of low disk space detection
     * 
     */
    public Optional<Output<HostAnomaliesDisksSpaceArgs>> space() {
        return Optional.ofNullable(this.space);
    }

    /**
     * Configuration of slow running disks detection
     * 
     */
    @Import(name="speed")
    private @Nullable Output<HostAnomaliesDisksSpeedArgs> speed;

    /**
     * @return Configuration of slow running disks detection
     * 
     */
    public Optional<Output<HostAnomaliesDisksSpeedArgs>> speed() {
        return Optional.ofNullable(this.speed);
    }

    private HostAnomaliesDisksArgs() {}

    private HostAnomaliesDisksArgs(HostAnomaliesDisksArgs $) {
        this.inodes = $.inodes;
        this.space = $.space;
        this.speed = $.speed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAnomaliesDisksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAnomaliesDisksArgs $;

        public Builder() {
            $ = new HostAnomaliesDisksArgs();
        }

        public Builder(HostAnomaliesDisksArgs defaults) {
            $ = new HostAnomaliesDisksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inodes Configuration of low disk inodes number detection
         * 
         * @return builder
         * 
         */
        public Builder inodes(@Nullable Output<HostAnomaliesDisksInodesArgs> inodes) {
            $.inodes = inodes;
            return this;
        }

        /**
         * @param inodes Configuration of low disk inodes number detection
         * 
         * @return builder
         * 
         */
        public Builder inodes(HostAnomaliesDisksInodesArgs inodes) {
            return inodes(Output.of(inodes));
        }

        /**
         * @param space Configuration of low disk space detection
         * 
         * @return builder
         * 
         */
        public Builder space(@Nullable Output<HostAnomaliesDisksSpaceArgs> space) {
            $.space = space;
            return this;
        }

        /**
         * @param space Configuration of low disk space detection
         * 
         * @return builder
         * 
         */
        public Builder space(HostAnomaliesDisksSpaceArgs space) {
            return space(Output.of(space));
        }

        /**
         * @param speed Configuration of slow running disks detection
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<HostAnomaliesDisksSpeedArgs> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Configuration of slow running disks detection
         * 
         * @return builder
         * 
         */
        public Builder speed(HostAnomaliesDisksSpeedArgs speed) {
            return speed(Output.of(speed));
        }

        public HostAnomaliesDisksArgs build() {
            return $;
        }
    }

}
