// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class MetricEventsQueryDefinitionDimensionFilterFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricEventsQueryDefinitionDimensionFilterFilterArgs Empty = new MetricEventsQueryDefinitionDimensionFilterFilterArgs();

    @Import(name="dimensionKey", required=true)
    private Output<String> dimensionKey;

    public Output<String> dimensionKey() {
        return this.dimensionKey;
    }

    @Import(name="dimensionValue", required=true)
    private Output<String> dimensionValue;

    public Output<String> dimensionValue() {
        return this.dimensionValue;
    }

    private MetricEventsQueryDefinitionDimensionFilterFilterArgs() {}

    private MetricEventsQueryDefinitionDimensionFilterFilterArgs(MetricEventsQueryDefinitionDimensionFilterFilterArgs $) {
        this.dimensionKey = $.dimensionKey;
        this.dimensionValue = $.dimensionValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricEventsQueryDefinitionDimensionFilterFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricEventsQueryDefinitionDimensionFilterFilterArgs $;

        public Builder() {
            $ = new MetricEventsQueryDefinitionDimensionFilterFilterArgs();
        }

        public Builder(MetricEventsQueryDefinitionDimensionFilterFilterArgs defaults) {
            $ = new MetricEventsQueryDefinitionDimensionFilterFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder dimensionKey(Output<String> dimensionKey) {
            $.dimensionKey = dimensionKey;
            return this;
        }

        public Builder dimensionKey(String dimensionKey) {
            return dimensionKey(Output.of(dimensionKey));
        }

        public Builder dimensionValue(Output<String> dimensionValue) {
            $.dimensionValue = dimensionValue;
            return this;
        }

        public Builder dimensionValue(String dimensionValue) {
            return dimensionValue(Output.of(dimensionValue));
        }

        public MetricEventsQueryDefinitionDimensionFilterFilterArgs build() {
            $.dimensionKey = Objects.requireNonNull($.dimensionKey, "expected parameter 'dimensionKey' to be non-null");
            $.dimensionValue = Objects.requireNonNull($.dimensionValue, "expected parameter 'dimensionValue' to be non-null");
            return $;
        }
    }

}
