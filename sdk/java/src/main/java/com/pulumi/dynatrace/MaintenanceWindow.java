// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.MaintenanceWindowArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.MaintenanceWindowState;
import com.pulumi.dynatrace.outputs.MaintenanceWindowSchedule;
import com.pulumi.dynatrace.outputs.MaintenanceWindowScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/maintenanceWindow:MaintenanceWindow")
public class MaintenanceWindow extends com.pulumi.resources.CustomResource {
    /**
     * A short description of the maintenance purpose
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A short description of the maintenance purpose
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Maintenance Window is enabled or disabled
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return The Maintenance Window is enabled or disabled
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The name of the maintenance window, displayed in the UI
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the maintenance window, displayed in the UI
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The schedule of the maintenance window
     * 
     */
    @Export(name="schedule", refs={MaintenanceWindowSchedule.class}, tree="[0]")
    private Output</* @Nullable */ MaintenanceWindowSchedule> schedule;

    /**
     * @return The schedule of the maintenance window
     * 
     */
    public Output<Optional<MaintenanceWindowSchedule>> schedule() {
        return Codegen.optional(this.schedule);
    }
    /**
     * the tiles this Dashboard consist of
     * 
     */
    @Export(name="scope", refs={MaintenanceWindowScope.class}, tree="[0]")
    private Output</* @Nullable */ MaintenanceWindowScope> scope;

    /**
     * @return the tiles this Dashboard consist of
     * 
     */
    public Output<Optional<MaintenanceWindowScope>> scope() {
        return Codegen.optional(this.scope);
    }
    /**
     * Suppress execution of synthetic monitors during the maintenance
     * 
     */
    @Export(name="suppressSynthMonExec", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> suppressSynthMonExec;

    /**
     * @return Suppress execution of synthetic monitors during the maintenance
     * 
     */
    public Output<Optional<Boolean>> suppressSynthMonExec() {
        return Codegen.optional(this.suppressSynthMonExec);
    }
    /**
     * The type of suppression of alerting and problem detection during the maintenance
     * 
     */
    @Export(name="suppression", refs={String.class}, tree="[0]")
    private Output<String> suppression;

    /**
     * @return The type of suppression of alerting and problem detection during the maintenance
     * 
     */
    public Output<String> suppression() {
        return this.suppression;
    }
    /**
     * The type of the maintenance: planned or unplanned
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the maintenance: planned or unplanned
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Export(name="unknowns", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Output<Optional<String>> unknowns() {
        return Codegen.optional(this.unknowns);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MaintenanceWindow(String name) {
        this(name, MaintenanceWindowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MaintenanceWindow(String name, MaintenanceWindowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MaintenanceWindow(String name, MaintenanceWindowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/maintenanceWindow:MaintenanceWindow", name, args == null ? MaintenanceWindowArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MaintenanceWindow(String name, Output<String> id, @Nullable MaintenanceWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/maintenanceWindow:MaintenanceWindow", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MaintenanceWindow get(String name, Output<String> id, @Nullable MaintenanceWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MaintenanceWindow(name, id, state, options);
    }
}
