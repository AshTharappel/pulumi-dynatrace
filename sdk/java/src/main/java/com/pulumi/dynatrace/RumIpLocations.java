// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.RumIpLocationsArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.RumIpLocationsState;
import java.lang.Double;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/rumIpLocations:RumIpLocations")
public class RumIpLocations extends com.pulumi.resources.CustomResource {
    /**
     * The city name of the location.
     * 
     */
    @Export(name="city", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> city;

    /**
     * @return The city name of the location.
     * 
     */
    public Output<Optional<String>> city() {
        return Codegen.optional(this.city);
    }
    /**
     * The country code of the location.
     * 
     */
    @Export(name="countryCode", refs={String.class}, tree="[0]")
    private Output<String> countryCode;

    /**
     * @return The country code of the location.
     * 
     */
    public Output<String> countryCode() {
        return this.countryCode;
    }
    /**
     * Single IP or IP range start address
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return Single IP or IP range start address
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * IP range end
     * 
     */
    @Export(name="ipTo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipTo;

    /**
     * @return IP range end
     * 
     */
    public Output<Optional<String>> ipTo() {
        return Codegen.optional(this.ipTo);
    }
    /**
     * Latitude
     * 
     */
    @Export(name="latitude", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> latitude;

    /**
     * @return Latitude
     * 
     */
    public Output<Optional<Double>> latitude() {
        return Codegen.optional(this.latitude);
    }
    /**
     * Longitude
     * 
     */
    @Export(name="longitude", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> longitude;

    /**
     * @return Longitude
     * 
     */
    public Output<Optional<Double>> longitude() {
        return Codegen.optional(this.longitude);
    }
    /**
     * The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)
     * use ISO 3166-2 state codes without `US-` or `CA-` prefix. For the rest of the world use [FIPS 10-4
     * codes](https://dt-url.net/fipscodes) without country prefix.
     * 
     */
    @Export(name="regionCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> regionCode;

    /**
     * @return The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)
     * use ISO 3166-2 state codes without `US-` or `CA-` prefix. For the rest of the world use [FIPS 10-4
     * codes](https://dt-url.net/fipscodes) without country prefix.
     * 
     */
    public Output<Optional<String>> regionCode() {
        return Codegen.optional(this.regionCode);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RumIpLocations(String name) {
        this(name, RumIpLocationsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RumIpLocations(String name, RumIpLocationsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RumIpLocations(String name, RumIpLocationsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/rumIpLocations:RumIpLocations", name, args == null ? RumIpLocationsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RumIpLocations(String name, Output<String> id, @Nullable RumIpLocationsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/rumIpLocations:RumIpLocations", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RumIpLocations get(String name, Output<String> id, @Nullable RumIpLocationsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RumIpLocations(name, id, state, options);
    }
}
