// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleConditionArgs;
import java.lang.String;
import java.util.Objects;


public final class ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs Empty = new ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs();

    @Import(name="condition", required=true)
    private Output<ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleConditionArgs> condition;

    public Output<ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleConditionArgs> condition() {
        return this.condition;
    }

    @Import(name="requestAttribute", required=true)
    private Output<String> requestAttribute;

    public Output<String> requestAttribute() {
        return this.requestAttribute;
    }

    private ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs() {}

    private ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs(ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs $) {
        this.condition = $.condition;
        this.requestAttribute = $.requestAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs $;

        public Builder() {
            $ = new ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs();
        }

        public Builder(ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs defaults) {
            $ = new ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(Output<ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder requestAttribute(Output<String> requestAttribute) {
            $.requestAttribute = requestAttribute;
            return this;
        }

        public Builder requestAttribute(String requestAttribute) {
            return requestAttribute(Output.of(requestAttribute));
        }

        public ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleArgs build() {
            $.condition = Objects.requireNonNull($.condition, "expected parameter 'condition' to be non-null");
            $.requestAttribute = Objects.requireNonNull($.requestAttribute, "expected parameter 'requestAttribute' to be non-null");
            return $;
        }
    }

}
