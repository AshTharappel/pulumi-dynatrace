// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GenericRelationshipsSourcesSourceArgs;
import java.util.List;
import java.util.Objects;


public final class GenericRelationshipsSourcesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericRelationshipsSourcesArgs Empty = new GenericRelationshipsSourcesArgs();

    @Import(name="sources", required=true)
    private Output<List<GenericRelationshipsSourcesSourceArgs>> sources;

    public Output<List<GenericRelationshipsSourcesSourceArgs>> sources() {
        return this.sources;
    }

    private GenericRelationshipsSourcesArgs() {}

    private GenericRelationshipsSourcesArgs(GenericRelationshipsSourcesArgs $) {
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericRelationshipsSourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericRelationshipsSourcesArgs $;

        public Builder() {
            $ = new GenericRelationshipsSourcesArgs();
        }

        public Builder(GenericRelationshipsSourcesArgs defaults) {
            $ = new GenericRelationshipsSourcesArgs(Objects.requireNonNull(defaults));
        }

        public Builder sources(Output<List<GenericRelationshipsSourcesSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        public Builder sources(List<GenericRelationshipsSourcesSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        public Builder sources(GenericRelationshipsSourcesSourceArgs... sources) {
            return sources(List.of(sources));
        }

        public GenericRelationshipsSourcesArgs build() {
            $.sources = Objects.requireNonNull($.sources, "expected parameter 'sources' to be non-null");
            return $;
        }
    }

}
