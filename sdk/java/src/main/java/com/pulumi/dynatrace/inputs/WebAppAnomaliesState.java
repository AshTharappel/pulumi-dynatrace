// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebAppAnomaliesErrorRateArgs;
import com.pulumi.dynatrace.inputs.WebAppAnomaliesResponseTimeArgs;
import com.pulumi.dynatrace.inputs.WebAppAnomaliesTrafficDropsArgs;
import com.pulumi.dynatrace.inputs.WebAppAnomaliesTrafficSpikesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppAnomaliesState extends com.pulumi.resources.ResourceArgs {

    public static final WebAppAnomaliesState Empty = new WebAppAnomaliesState();

    /**
     * Error rate
     * 
     */
    @Import(name="errorRate")
    private @Nullable Output<WebAppAnomaliesErrorRateArgs> errorRate;

    /**
     * @return Error rate
     * 
     */
    public Optional<Output<WebAppAnomaliesErrorRateArgs>> errorRate() {
        return Optional.ofNullable(this.errorRate);
    }

    /**
     * Response time
     * 
     */
    @Import(name="responseTime")
    private @Nullable Output<WebAppAnomaliesResponseTimeArgs> responseTime;

    /**
     * @return Response time
     * 
     */
    public Optional<Output<WebAppAnomaliesResponseTimeArgs>> responseTime() {
        return Optional.ofNullable(this.responseTime);
    }

    /**
     * The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Detect traffic drops
     * 
     */
    @Import(name="trafficDrops")
    private @Nullable Output<WebAppAnomaliesTrafficDropsArgs> trafficDrops;

    /**
     * @return Detect traffic drops
     * 
     */
    public Optional<Output<WebAppAnomaliesTrafficDropsArgs>> trafficDrops() {
        return Optional.ofNullable(this.trafficDrops);
    }

    /**
     * Detect traffic spikes
     * 
     */
    @Import(name="trafficSpikes")
    private @Nullable Output<WebAppAnomaliesTrafficSpikesArgs> trafficSpikes;

    /**
     * @return Detect traffic spikes
     * 
     */
    public Optional<Output<WebAppAnomaliesTrafficSpikesArgs>> trafficSpikes() {
        return Optional.ofNullable(this.trafficSpikes);
    }

    private WebAppAnomaliesState() {}

    private WebAppAnomaliesState(WebAppAnomaliesState $) {
        this.errorRate = $.errorRate;
        this.responseTime = $.responseTime;
        this.scope = $.scope;
        this.trafficDrops = $.trafficDrops;
        this.trafficSpikes = $.trafficSpikes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppAnomaliesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppAnomaliesState $;

        public Builder() {
            $ = new WebAppAnomaliesState();
        }

        public Builder(WebAppAnomaliesState defaults) {
            $ = new WebAppAnomaliesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param errorRate Error rate
         * 
         * @return builder
         * 
         */
        public Builder errorRate(@Nullable Output<WebAppAnomaliesErrorRateArgs> errorRate) {
            $.errorRate = errorRate;
            return this;
        }

        /**
         * @param errorRate Error rate
         * 
         * @return builder
         * 
         */
        public Builder errorRate(WebAppAnomaliesErrorRateArgs errorRate) {
            return errorRate(Output.of(errorRate));
        }

        /**
         * @param responseTime Response time
         * 
         * @return builder
         * 
         */
        public Builder responseTime(@Nullable Output<WebAppAnomaliesResponseTimeArgs> responseTime) {
            $.responseTime = responseTime;
            return this;
        }

        /**
         * @param responseTime Response time
         * 
         * @return builder
         * 
         */
        public Builder responseTime(WebAppAnomaliesResponseTimeArgs responseTime) {
            return responseTime(Output.of(responseTime));
        }

        /**
         * @param scope The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param trafficDrops Detect traffic drops
         * 
         * @return builder
         * 
         */
        public Builder trafficDrops(@Nullable Output<WebAppAnomaliesTrafficDropsArgs> trafficDrops) {
            $.trafficDrops = trafficDrops;
            return this;
        }

        /**
         * @param trafficDrops Detect traffic drops
         * 
         * @return builder
         * 
         */
        public Builder trafficDrops(WebAppAnomaliesTrafficDropsArgs trafficDrops) {
            return trafficDrops(Output.of(trafficDrops));
        }

        /**
         * @param trafficSpikes Detect traffic spikes
         * 
         * @return builder
         * 
         */
        public Builder trafficSpikes(@Nullable Output<WebAppAnomaliesTrafficSpikesArgs> trafficSpikes) {
            $.trafficSpikes = trafficSpikes;
            return this;
        }

        /**
         * @param trafficSpikes Detect traffic spikes
         * 
         * @return builder
         * 
         */
        public Builder trafficSpikes(WebAppAnomaliesTrafficSpikesArgs trafficSpikes) {
            return trafficSpikes(Output.of(trafficSpikes));
        }

        public WebAppAnomaliesState build() {
            return $;
        }
    }

}
