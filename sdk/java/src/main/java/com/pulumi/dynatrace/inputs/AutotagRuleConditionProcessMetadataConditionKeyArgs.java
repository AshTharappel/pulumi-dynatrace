// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutotagRuleConditionProcessMetadataConditionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutotagRuleConditionProcessMetadataConditionKeyArgs Empty = new AutotagRuleConditionProcessMetadataConditionKeyArgs();

    @Import(name="attribute", required=true)
    private Output<String> attribute;

    public Output<String> attribute() {
        return this.attribute;
    }

    @Import(name="dynamicKey", required=true)
    private Output<String> dynamicKey;

    public Output<String> dynamicKey() {
        return this.dynamicKey;
    }

    /**
     * @deprecated
     * The value of the attribute type is implicit, therefore shouldn&#39;t get specified
     * 
     */
    @Deprecated /* The value of the attribute type is implicit, therefore shouldn't get specified */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @deprecated
     * The value of the attribute type is implicit, therefore shouldn&#39;t get specified
     * 
     */
    @Deprecated /* The value of the attribute type is implicit, therefore shouldn't get specified */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private AutotagRuleConditionProcessMetadataConditionKeyArgs() {}

    private AutotagRuleConditionProcessMetadataConditionKeyArgs(AutotagRuleConditionProcessMetadataConditionKeyArgs $) {
        this.attribute = $.attribute;
        this.dynamicKey = $.dynamicKey;
        this.type = $.type;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutotagRuleConditionProcessMetadataConditionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutotagRuleConditionProcessMetadataConditionKeyArgs $;

        public Builder() {
            $ = new AutotagRuleConditionProcessMetadataConditionKeyArgs();
        }

        public Builder(AutotagRuleConditionProcessMetadataConditionKeyArgs defaults) {
            $ = new AutotagRuleConditionProcessMetadataConditionKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder attribute(Output<String> attribute) {
            $.attribute = attribute;
            return this;
        }

        public Builder attribute(String attribute) {
            return attribute(Output.of(attribute));
        }

        public Builder dynamicKey(Output<String> dynamicKey) {
            $.dynamicKey = dynamicKey;
            return this;
        }

        public Builder dynamicKey(String dynamicKey) {
            return dynamicKey(Output.of(dynamicKey));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The value of the attribute type is implicit, therefore shouldn&#39;t get specified
         * 
         */
        @Deprecated /* The value of the attribute type is implicit, therefore shouldn't get specified */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The value of the attribute type is implicit, therefore shouldn&#39;t get specified
         * 
         */
        @Deprecated /* The value of the attribute type is implicit, therefore shouldn't get specified */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public AutotagRuleConditionProcessMetadataConditionKeyArgs build() {
            $.attribute = Objects.requireNonNull($.attribute, "expected parameter 'attribute' to be non-null");
            $.dynamicKey = Objects.requireNonNull($.dynamicKey, "expected parameter 'dynamicKey' to be non-null");
            return $;
        }
    }

}
