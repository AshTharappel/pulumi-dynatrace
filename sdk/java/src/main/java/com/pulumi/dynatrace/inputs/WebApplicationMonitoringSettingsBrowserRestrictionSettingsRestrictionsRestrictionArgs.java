// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs Empty = new WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs();

    @Import(name="browserType", required=true)
    private Output<String> browserType;

    public Output<String> browserType() {
        return this.browserType;
    }

    @Import(name="browserVersion")
    private @Nullable Output<String> browserVersion;

    public Optional<Output<String>> browserVersion() {
        return Optional.ofNullable(this.browserVersion);
    }

    @Import(name="comparator")
    private @Nullable Output<String> comparator;

    public Optional<Output<String>> comparator() {
        return Optional.ofNullable(this.comparator);
    }

    @Import(name="platform")
    private @Nullable Output<String> platform;

    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    private WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs() {}

    private WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs $) {
        this.browserType = $.browserType;
        this.browserVersion = $.browserVersion;
        this.comparator = $.comparator;
        this.platform = $.platform;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs $;

        public Builder() {
            $ = new WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs();
        }

        public Builder(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs defaults) {
            $ = new WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs(Objects.requireNonNull(defaults));
        }

        public Builder browserType(Output<String> browserType) {
            $.browserType = browserType;
            return this;
        }

        public Builder browserType(String browserType) {
            return browserType(Output.of(browserType));
        }

        public Builder browserVersion(@Nullable Output<String> browserVersion) {
            $.browserVersion = browserVersion;
            return this;
        }

        public Builder browserVersion(String browserVersion) {
            return browserVersion(Output.of(browserVersion));
        }

        public Builder comparator(@Nullable Output<String> comparator) {
            $.comparator = comparator;
            return this;
        }

        public Builder comparator(String comparator) {
            return comparator(Output.of(comparator));
        }

        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        public WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs build() {
            $.browserType = Objects.requireNonNull($.browserType, "expected parameter 'browserType' to be non-null");
            return $;
        }
    }

}
