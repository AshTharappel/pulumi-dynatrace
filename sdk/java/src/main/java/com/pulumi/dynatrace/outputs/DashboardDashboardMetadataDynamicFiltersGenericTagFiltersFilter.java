// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter {
    private List<String> entityTypes;
    private @Nullable String name;
    private @Nullable String suggestionsFromEntityType;
    private @Nullable String tagKey;

    private DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter() {}
    public List<String> entityTypes() {
        return this.entityTypes;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> suggestionsFromEntityType() {
        return Optional.ofNullable(this.suggestionsFromEntityType);
    }
    public Optional<String> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> entityTypes;
        private @Nullable String name;
        private @Nullable String suggestionsFromEntityType;
        private @Nullable String tagKey;
        public Builder() {}
        public Builder(DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityTypes = defaults.entityTypes;
    	      this.name = defaults.name;
    	      this.suggestionsFromEntityType = defaults.suggestionsFromEntityType;
    	      this.tagKey = defaults.tagKey;
        }

        @CustomType.Setter
        public Builder entityTypes(List<String> entityTypes) {
            this.entityTypes = Objects.requireNonNull(entityTypes);
            return this;
        }
        public Builder entityTypes(String... entityTypes) {
            return entityTypes(List.of(entityTypes));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder suggestionsFromEntityType(@Nullable String suggestionsFromEntityType) {
            this.suggestionsFromEntityType = suggestionsFromEntityType;
            return this;
        }
        @CustomType.Setter
        public Builder tagKey(@Nullable String tagKey) {
            this.tagKey = tagKey;
            return this;
        }
        public DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter build() {
            final var o = new DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter();
            o.entityTypes = entityTypes;
            o.name = name;
            o.suggestionsFromEntityType = suggestionsFromEntityType;
            o.tagKey = tagKey;
            return o;
        }
    }
}
