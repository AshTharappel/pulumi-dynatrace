// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.MetricMetadataArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.MetricMetadataState;
import com.pulumi.dynatrace.outputs.MetricMetadataDimensions;
import com.pulumi.dynatrace.outputs.MetricMetadataMetricProperties;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/metricMetadata:MetricMetadata")
public class MetricMetadata extends com.pulumi.resources.CustomResource {
    /**
     * Description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Define metadata per metric dimension.
     * 
     */
    @Export(name="dimensions", refs={MetricMetadataDimensions.class}, tree="[0]")
    private Output</* @Nullable */ MetricMetadataDimensions> dimensions;

    /**
     * @return Define metadata per metric dimension.
     * 
     */
    public Output<Optional<MetricMetadataDimensions>> dimensions() {
        return Codegen.optional(this.dimensions);
    }
    /**
     * Display name
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Display name
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * The scope of this setting (metric)
     * 
     */
    @Export(name="metricId", refs={String.class}, tree="[0]")
    private Output<String> metricId;

    /**
     * @return The scope of this setting (metric)
     * 
     */
    public Output<String> metricId() {
        return this.metricId;
    }
    /**
     * Metric properties
     * 
     */
    @Export(name="metricProperties", refs={MetricMetadataMetricProperties.class}, tree="[0]")
    private Output</* @Nullable */ MetricMetadataMetricProperties> metricProperties;

    /**
     * @return Metric properties
     * 
     */
    public Output<Optional<MetricMetadataMetricProperties>> metricProperties() {
        return Codegen.optional(this.metricProperties);
    }
    /**
     * Specifies which entity dimension should be used as the primary dimension. The property can only be configured for metrics ingested with the Metrics API.
     * 
     */
    @Export(name="sourceEntityType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceEntityType;

    /**
     * @return Specifies which entity dimension should be used as the primary dimension. The property can only be configured for metrics ingested with the Metrics API.
     * 
     */
    public Output<Optional<String>> sourceEntityType() {
        return Codegen.optional(this.sourceEntityType);
    }
    /**
     * Tags
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Unit
     * 
     */
    @Export(name="unit", refs={String.class}, tree="[0]")
    private Output<String> unit;

    /**
     * @return Unit
     * 
     */
    public Output<String> unit() {
        return this.unit;
    }
    /**
     * The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:
     * 
     */
    @Export(name="unitDisplayFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> unitDisplayFormat;

    /**
     * @return The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:
     * 
     */
    public Output<Optional<String>> unitDisplayFormat() {
        return Codegen.optional(this.unitDisplayFormat);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricMetadata(String name) {
        this(name, MetricMetadataArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricMetadata(String name, MetricMetadataArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricMetadata(String name, MetricMetadataArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/metricMetadata:MetricMetadata", name, args == null ? MetricMetadataArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MetricMetadata(String name, Output<String> id, @Nullable MetricMetadataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/metricMetadata:MetricMetadata", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricMetadata get(String name, Output<String> id, @Nullable MetricMetadataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricMetadata(name, id, state, options);
    }
}
