// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.DashboardsAllowlistAllowlistArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardsAllowlistState extends com.pulumi.resources.ResourceArgs {

    public static final DashboardsAllowlistState Empty = new DashboardsAllowlistState();

    /**
     * List of URL pattern matchers
     * 
     */
    @Import(name="allowlist")
    private @Nullable Output<DashboardsAllowlistAllowlistArgs> allowlist;

    /**
     * @return List of URL pattern matchers
     * 
     */
    public Optional<Output<DashboardsAllowlistAllowlistArgs>> allowlist() {
        return Optional.ofNullable(this.allowlist);
    }

    private DashboardsAllowlistState() {}

    private DashboardsAllowlistState(DashboardsAllowlistState $) {
        this.allowlist = $.allowlist;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardsAllowlistState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardsAllowlistState $;

        public Builder() {
            $ = new DashboardsAllowlistState();
        }

        public Builder(DashboardsAllowlistState defaults) {
            $ = new DashboardsAllowlistState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowlist List of URL pattern matchers
         * 
         * @return builder
         * 
         */
        public Builder allowlist(@Nullable Output<DashboardsAllowlistAllowlistArgs> allowlist) {
            $.allowlist = allowlist;
            return this;
        }

        /**
         * @param allowlist List of URL pattern matchers
         * 
         * @return builder
         * 
         */
        public Builder allowlist(DashboardsAllowlistAllowlistArgs allowlist) {
            return allowlist(Output.of(allowlist));
        }

        public DashboardsAllowlistState build() {
            return $;
        }
    }

}
