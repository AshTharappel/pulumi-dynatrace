// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.AutotagArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.AutotagState;
import com.pulumi.dynatrace.outputs.AutotagEntitySelectorBasedRule;
import com.pulumi.dynatrace.outputs.AutotagMetadata;
import com.pulumi.dynatrace.outputs.AutotagRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/autotag:Autotag")
public class Autotag extends com.pulumi.resources.CustomResource {
    /**
     * A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies
     * 
     */
    @Export(name="entitySelectorBasedRules", type=List.class, parameters={AutotagEntitySelectorBasedRule.class})
    private Output</* @Nullable */ List<AutotagEntitySelectorBasedRule>> entitySelectorBasedRules;

    /**
     * @return A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies
     * 
     */
    public Output<Optional<List<AutotagEntitySelectorBasedRule>>> entitySelectorBasedRules() {
        return Codegen.optional(this.entitySelectorBasedRules);
    }
    /**
     * `metadata` exists for backwards compatibility but shouldn&#39;t get specified anymore
     * 
     * @deprecated
     * `metadata` exists for backwards compatibility but shouldn&#39;t get specified anymore
     * 
     */
    @Deprecated /* `metadata` exists for backwards compatibility but shouldn't get specified anymore */
    @Export(name="metadata", type=AutotagMetadata.class, parameters={})
    private Output</* @Nullable */ AutotagMetadata> metadata;

    /**
     * @return `metadata` exists for backwards compatibility but shouldn&#39;t get specified anymore
     * 
     */
    public Output<Optional<AutotagMetadata>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.
     * In that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to
     * `Infrastructure:Windows` and `Infrastructure:Linux`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.
     * In that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to
     * `Infrastructure:Windows` and `Infrastructure:Linux`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A list of rules for management zone usage. Each rule is evaluated independently of all other rules
     * 
     */
    @Export(name="rules", type=List.class, parameters={AutotagRule.class})
    private Output</* @Nullable */ List<AutotagRule>> rules;

    /**
     * @return A list of rules for management zone usage. Each rule is evaluated independently of all other rules
     * 
     */
    public Output<Optional<List<AutotagRule>>> rules() {
        return Codegen.optional(this.rules);
    }
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Export(name="unknowns", type=String.class, parameters={})
    private Output</* @Nullable */ String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Output<Optional<String>> unknowns() {
        return Codegen.optional(this.unknowns);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Autotag(String name) {
        this(name, AutotagArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Autotag(String name, @Nullable AutotagArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Autotag(String name, @Nullable AutotagArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/autotag:Autotag", name, args == null ? AutotagArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Autotag(String name, Output<String> id, @Nullable AutotagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/autotag:Autotag", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Autotag get(String name, Output<String> id, @Nullable AutotagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Autotag(name, id, state, options);
    }
}
