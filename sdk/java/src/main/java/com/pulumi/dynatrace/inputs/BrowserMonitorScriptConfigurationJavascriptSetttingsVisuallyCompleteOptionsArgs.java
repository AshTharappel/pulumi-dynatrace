// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs Empty = new BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs();

    @Import(name="excludedElements")
    private @Nullable Output<List<String>> excludedElements;

    public Optional<Output<List<String>>> excludedElements() {
        return Optional.ofNullable(this.excludedElements);
    }

    @Import(name="excludedUrls")
    private @Nullable Output<List<String>> excludedUrls;

    public Optional<Output<List<String>>> excludedUrls() {
        return Optional.ofNullable(this.excludedUrls);
    }

    @Import(name="imageSizeThreshold", required=true)
    private Output<Integer> imageSizeThreshold;

    public Output<Integer> imageSizeThreshold() {
        return this.imageSizeThreshold;
    }

    @Import(name="inactivityTimeout", required=true)
    private Output<Integer> inactivityTimeout;

    public Output<Integer> inactivityTimeout() {
        return this.inactivityTimeout;
    }

    @Import(name="mutationTimeout", required=true)
    private Output<Integer> mutationTimeout;

    public Output<Integer> mutationTimeout() {
        return this.mutationTimeout;
    }

    private BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs() {}

    private BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs(BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs $) {
        this.excludedElements = $.excludedElements;
        this.excludedUrls = $.excludedUrls;
        this.imageSizeThreshold = $.imageSizeThreshold;
        this.inactivityTimeout = $.inactivityTimeout;
        this.mutationTimeout = $.mutationTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs();
        }

        public Builder(BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs defaults) {
            $ = new BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludedElements(@Nullable Output<List<String>> excludedElements) {
            $.excludedElements = excludedElements;
            return this;
        }

        public Builder excludedElements(List<String> excludedElements) {
            return excludedElements(Output.of(excludedElements));
        }

        public Builder excludedElements(String... excludedElements) {
            return excludedElements(List.of(excludedElements));
        }

        public Builder excludedUrls(@Nullable Output<List<String>> excludedUrls) {
            $.excludedUrls = excludedUrls;
            return this;
        }

        public Builder excludedUrls(List<String> excludedUrls) {
            return excludedUrls(Output.of(excludedUrls));
        }

        public Builder excludedUrls(String... excludedUrls) {
            return excludedUrls(List.of(excludedUrls));
        }

        public Builder imageSizeThreshold(Output<Integer> imageSizeThreshold) {
            $.imageSizeThreshold = imageSizeThreshold;
            return this;
        }

        public Builder imageSizeThreshold(Integer imageSizeThreshold) {
            return imageSizeThreshold(Output.of(imageSizeThreshold));
        }

        public Builder inactivityTimeout(Output<Integer> inactivityTimeout) {
            $.inactivityTimeout = inactivityTimeout;
            return this;
        }

        public Builder inactivityTimeout(Integer inactivityTimeout) {
            return inactivityTimeout(Output.of(inactivityTimeout));
        }

        public Builder mutationTimeout(Output<Integer> mutationTimeout) {
            $.mutationTimeout = mutationTimeout;
            return this;
        }

        public Builder mutationTimeout(Integer mutationTimeout) {
            return mutationTimeout(Output.of(mutationTimeout));
        }

        public BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsArgs build() {
            $.imageSizeThreshold = Objects.requireNonNull($.imageSizeThreshold, "expected parameter 'imageSizeThreshold' to be non-null");
            $.inactivityTimeout = Objects.requireNonNull($.inactivityTimeout, "expected parameter 'inactivityTimeout' to be non-null");
            $.mutationTimeout = Objects.requireNonNull($.mutationTimeout, "expected parameter 'mutationTimeout' to be non-null");
            return $;
        }
    }

}
