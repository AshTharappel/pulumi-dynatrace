// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JsonDashboardState extends com.pulumi.resources.ResourceArgs {

    public static final JsonDashboardState Empty = new JsonDashboardState();

    /**
     * Contains the JSON Code of the Dashboard
     * 
     */
    @Import(name="contents")
    private @Nullable Output<String> contents;

    /**
     * @return Contains the JSON Code of the Dashboard
     * 
     */
    public Optional<Output<String>> contents() {
        return Optional.ofNullable(this.contents);
    }

    private JsonDashboardState() {}

    private JsonDashboardState(JsonDashboardState $) {
        this.contents = $.contents;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JsonDashboardState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JsonDashboardState $;

        public Builder() {
            $ = new JsonDashboardState();
        }

        public Builder(JsonDashboardState defaults) {
            $ = new JsonDashboardState(Objects.requireNonNull(defaults));
        }

        /**
         * @param contents Contains the JSON Code of the Dashboard
         * 
         * @return builder
         * 
         */
        public Builder contents(@Nullable Output<String> contents) {
            $.contents = contents;
            return this;
        }

        /**
         * @param contents Contains the JSON Code of the Dashboard
         * 
         * @return builder
         * 
         */
        public Builder contents(String contents) {
            return contents(Output.of(contents));
        }

        public JsonDashboardState build() {
            return $;
        }
    }

}
