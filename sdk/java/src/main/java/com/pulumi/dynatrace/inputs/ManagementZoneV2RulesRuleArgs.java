// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ManagementZoneV2RulesRuleAttributeRuleArgs;
import com.pulumi.dynatrace.inputs.ManagementZoneV2RulesRuleDimensionRuleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementZoneV2RulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementZoneV2RulesRuleArgs Empty = new ManagementZoneV2RulesRuleArgs();

    @Import(name="attributeRule")
    private @Nullable Output<ManagementZoneV2RulesRuleAttributeRuleArgs> attributeRule;

    public Optional<Output<ManagementZoneV2RulesRuleAttributeRuleArgs>> attributeRule() {
        return Optional.ofNullable(this.attributeRule);
    }

    @Import(name="dimensionRule")
    private @Nullable Output<ManagementZoneV2RulesRuleDimensionRuleArgs> dimensionRule;

    public Optional<Output<ManagementZoneV2RulesRuleDimensionRuleArgs>> dimensionRule() {
        return Optional.ofNullable(this.dimensionRule);
    }

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="entitySelector")
    private @Nullable Output<String> entitySelector;

    public Optional<Output<String>> entitySelector() {
        return Optional.ofNullable(this.entitySelector);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ManagementZoneV2RulesRuleArgs() {}

    private ManagementZoneV2RulesRuleArgs(ManagementZoneV2RulesRuleArgs $) {
        this.attributeRule = $.attributeRule;
        this.dimensionRule = $.dimensionRule;
        this.enabled = $.enabled;
        this.entitySelector = $.entitySelector;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementZoneV2RulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementZoneV2RulesRuleArgs $;

        public Builder() {
            $ = new ManagementZoneV2RulesRuleArgs();
        }

        public Builder(ManagementZoneV2RulesRuleArgs defaults) {
            $ = new ManagementZoneV2RulesRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributeRule(@Nullable Output<ManagementZoneV2RulesRuleAttributeRuleArgs> attributeRule) {
            $.attributeRule = attributeRule;
            return this;
        }

        public Builder attributeRule(ManagementZoneV2RulesRuleAttributeRuleArgs attributeRule) {
            return attributeRule(Output.of(attributeRule));
        }

        public Builder dimensionRule(@Nullable Output<ManagementZoneV2RulesRuleDimensionRuleArgs> dimensionRule) {
            $.dimensionRule = dimensionRule;
            return this;
        }

        public Builder dimensionRule(ManagementZoneV2RulesRuleDimensionRuleArgs dimensionRule) {
            return dimensionRule(Output.of(dimensionRule));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder entitySelector(@Nullable Output<String> entitySelector) {
            $.entitySelector = entitySelector;
            return this;
        }

        public Builder entitySelector(String entitySelector) {
            return entitySelector(Output.of(entitySelector));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ManagementZoneV2RulesRuleArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
