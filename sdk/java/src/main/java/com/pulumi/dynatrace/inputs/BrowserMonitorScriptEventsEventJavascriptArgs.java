// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventJavascriptTargetArgs;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventJavascriptWaitArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrowserMonitorScriptEventsEventJavascriptArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptEventsEventJavascriptArgs Empty = new BrowserMonitorScriptEventsEventJavascriptArgs();

    @Import(name="code", required=true)
    private Output<String> code;

    public Output<String> code() {
        return this.code;
    }

    @Import(name="target")
    private @Nullable Output<BrowserMonitorScriptEventsEventJavascriptTargetArgs> target;

    public Optional<Output<BrowserMonitorScriptEventsEventJavascriptTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="wait")
    private @Nullable Output<BrowserMonitorScriptEventsEventJavascriptWaitArgs> wait;

    public Optional<Output<BrowserMonitorScriptEventsEventJavascriptWaitArgs>> wait_() {
        return Optional.ofNullable(this.wait);
    }

    private BrowserMonitorScriptEventsEventJavascriptArgs() {}

    private BrowserMonitorScriptEventsEventJavascriptArgs(BrowserMonitorScriptEventsEventJavascriptArgs $) {
        this.code = $.code;
        this.target = $.target;
        this.wait = $.wait;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptEventsEventJavascriptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptEventsEventJavascriptArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptEventsEventJavascriptArgs();
        }

        public Builder(BrowserMonitorScriptEventsEventJavascriptArgs defaults) {
            $ = new BrowserMonitorScriptEventsEventJavascriptArgs(Objects.requireNonNull(defaults));
        }

        public Builder code(Output<String> code) {
            $.code = code;
            return this;
        }

        public Builder code(String code) {
            return code(Output.of(code));
        }

        public Builder target(@Nullable Output<BrowserMonitorScriptEventsEventJavascriptTargetArgs> target) {
            $.target = target;
            return this;
        }

        public Builder target(BrowserMonitorScriptEventsEventJavascriptTargetArgs target) {
            return target(Output.of(target));
        }

        public Builder wait_(@Nullable Output<BrowserMonitorScriptEventsEventJavascriptWaitArgs> wait) {
            $.wait = wait;
            return this;
        }

        public Builder wait_(BrowserMonitorScriptEventsEventJavascriptWaitArgs wait) {
            return wait_(Output.of(wait));
        }

        public BrowserMonitorScriptEventsEventJavascriptArgs build() {
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            return $;
        }
    }

}
