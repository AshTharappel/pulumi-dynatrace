// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.AlertingProfileEventTypeFilterCustomEventFilterArgs;
import com.pulumi.dynatrace.inputs.AlertingProfileEventTypeFilterPredefinedEventFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertingProfileEventTypeFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertingProfileEventTypeFilterArgs Empty = new AlertingProfileEventTypeFilterArgs();

    /**
     * Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     * 
     */
    @Import(name="customEventFilters")
    private @Nullable Output<List<AlertingProfileEventTypeFilterCustomEventFilterArgs>> customEventFilters;

    /**
     * @return Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     * 
     */
    public Optional<Output<List<AlertingProfileEventTypeFilterCustomEventFilterArgs>>> customEventFilters() {
        return Optional.ofNullable(this.customEventFilters);
    }

    /**
     * Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     * 
     */
    @Import(name="predefinedEventFilters")
    private @Nullable Output<List<AlertingProfileEventTypeFilterPredefinedEventFilterArgs>> predefinedEventFilters;

    /**
     * @return Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     * 
     */
    public Optional<Output<List<AlertingProfileEventTypeFilterPredefinedEventFilterArgs>>> predefinedEventFilters() {
        return Optional.ofNullable(this.predefinedEventFilters);
    }

    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private AlertingProfileEventTypeFilterArgs() {}

    private AlertingProfileEventTypeFilterArgs(AlertingProfileEventTypeFilterArgs $) {
        this.customEventFilters = $.customEventFilters;
        this.predefinedEventFilters = $.predefinedEventFilters;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertingProfileEventTypeFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertingProfileEventTypeFilterArgs $;

        public Builder() {
            $ = new AlertingProfileEventTypeFilterArgs();
        }

        public Builder(AlertingProfileEventTypeFilterArgs defaults) {
            $ = new AlertingProfileEventTypeFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customEventFilters Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
         * 
         * @return builder
         * 
         */
        public Builder customEventFilters(@Nullable Output<List<AlertingProfileEventTypeFilterCustomEventFilterArgs>> customEventFilters) {
            $.customEventFilters = customEventFilters;
            return this;
        }

        /**
         * @param customEventFilters Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
         * 
         * @return builder
         * 
         */
        public Builder customEventFilters(List<AlertingProfileEventTypeFilterCustomEventFilterArgs> customEventFilters) {
            return customEventFilters(Output.of(customEventFilters));
        }

        /**
         * @param customEventFilters Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
         * 
         * @return builder
         * 
         */
        public Builder customEventFilters(AlertingProfileEventTypeFilterCustomEventFilterArgs... customEventFilters) {
            return customEventFilters(List.of(customEventFilters));
        }

        /**
         * @param predefinedEventFilters Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
         * 
         * @return builder
         * 
         */
        public Builder predefinedEventFilters(@Nullable Output<List<AlertingProfileEventTypeFilterPredefinedEventFilterArgs>> predefinedEventFilters) {
            $.predefinedEventFilters = predefinedEventFilters;
            return this;
        }

        /**
         * @param predefinedEventFilters Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
         * 
         * @return builder
         * 
         */
        public Builder predefinedEventFilters(List<AlertingProfileEventTypeFilterPredefinedEventFilterArgs> predefinedEventFilters) {
            return predefinedEventFilters(Output.of(predefinedEventFilters));
        }

        /**
         * @param predefinedEventFilters Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
         * 
         * @return builder
         * 
         */
        public Builder predefinedEventFilters(AlertingProfileEventTypeFilterPredefinedEventFilterArgs... predefinedEventFilters) {
            return predefinedEventFilters(List.of(predefinedEventFilters));
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public AlertingProfileEventTypeFilterArgs build() {
            return $;
        }
    }

}
