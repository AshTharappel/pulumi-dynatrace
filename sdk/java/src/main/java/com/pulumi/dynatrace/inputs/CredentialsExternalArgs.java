// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CredentialsExternalArgs extends com.pulumi.resources.ResourceArgs {

    public static final CredentialsExternalArgs Empty = new CredentialsExternalArgs();

    /**
     * Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    /**
     * @return Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate
     * 
     */
    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * Required for Azure Client Secret. No further documentation available
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Required for Azure Client Secret. No further documentation available
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Required for Azure Client Secret. No further documentation available
     * 
     */
    @Import(name="clientid")
    private @Nullable Output<String> clientid;

    /**
     * @return Required for Azure Client Secret. No further documentation available
     * 
     */
    public Optional<Output<String>> clientid() {
        return Optional.ofNullable(this.clientid);
    }

    /**
     * No documentation available
     * 
     */
    @Import(name="credentialsUsedForExternalSynchronizations")
    private @Nullable Output<List<String>> credentialsUsedForExternalSynchronizations;

    /**
     * @return No documentation available
     * 
     */
    public Optional<Output<List<String>>> credentialsUsedForExternalSynchronizations() {
        return Optional.ofNullable(this.credentialsUsedForExternalSynchronizations);
    }

    /**
     * No documentation available
     * 
     */
    @Import(name="passwordSecretName")
    private @Nullable Output<String> passwordSecretName;

    /**
     * @return No documentation available
     * 
     */
    public Optional<Output<String>> passwordSecretName() {
        return Optional.ofNullable(this.passwordSecretName);
    }

    /**
     * Required for Hashicorp App Role or Hashicorp Certificate. No further documentation available
     * 
     */
    @Import(name="pathToCredentials")
    private @Nullable Output<String> pathToCredentials;

    /**
     * @return Required for Hashicorp App Role or Hashicorp Certificate. No further documentation available
     * 
     */
    public Optional<Output<String>> pathToCredentials() {
        return Optional.ofNullable(this.pathToCredentials);
    }

    /**
     * Required for Hashicorp App Role. No further documentation available
     * 
     */
    @Import(name="roleid")
    private @Nullable Output<String> roleid;

    /**
     * @return Required for Hashicorp App Role. No further documentation available
     * 
     */
    public Optional<Output<String>> roleid() {
        return Optional.ofNullable(this.roleid);
    }

    /**
     * Required for Hashicorp App Role. The ID of Credentials within the Certificate Vault holding the secret id
     * 
     */
    @Import(name="secretid")
    private @Nullable Output<String> secretid;

    /**
     * @return Required for Hashicorp App Role. The ID of Credentials within the Certificate Vault holding the secret id
     * 
     */
    public Optional<Output<String>> secretid() {
        return Optional.ofNullable(this.secretid);
    }

    /**
     * Required for Azure Client Secret. No further documentation available
     * 
     */
    @Import(name="tenantid")
    private @Nullable Output<String> tenantid;

    /**
     * @return Required for Azure Client Secret. No further documentation available
     * 
     */
    public Optional<Output<String>> tenantid() {
        return Optional.ofNullable(this.tenantid);
    }

    /**
     * No documentation available
     * 
     */
    @Import(name="tokenSecretName")
    private @Nullable Output<String> tokenSecretName;

    /**
     * @return No documentation available
     * 
     */
    public Optional<Output<String>> tokenSecretName() {
        return Optional.ofNullable(this.tokenSecretName);
    }

    /**
     * No documentation available
     * 
     */
    @Import(name="usernameSecretName")
    private @Nullable Output<String> usernameSecretName;

    /**
     * @return No documentation available
     * 
     */
    public Optional<Output<String>> usernameSecretName() {
        return Optional.ofNullable(this.usernameSecretName);
    }

    /**
     * Required for Hashicorp App Role. No further documentation available
     * 
     */
    @Import(name="vaultNamespace")
    private @Nullable Output<String> vaultNamespace;

    /**
     * @return Required for Hashicorp App Role. No further documentation available
     * 
     */
    public Optional<Output<String>> vaultNamespace() {
        return Optional.ofNullable(this.vaultNamespace);
    }

    /**
     * No documentation available
     * 
     */
    @Import(name="vaultUrl")
    private @Nullable Output<String> vaultUrl;

    /**
     * @return No documentation available
     * 
     */
    public Optional<Output<String>> vaultUrl() {
        return Optional.ofNullable(this.vaultUrl);
    }

    private CredentialsExternalArgs() {}

    private CredentialsExternalArgs(CredentialsExternalArgs $) {
        this.certificate = $.certificate;
        this.clientSecret = $.clientSecret;
        this.clientid = $.clientid;
        this.credentialsUsedForExternalSynchronizations = $.credentialsUsedForExternalSynchronizations;
        this.passwordSecretName = $.passwordSecretName;
        this.pathToCredentials = $.pathToCredentials;
        this.roleid = $.roleid;
        this.secretid = $.secretid;
        this.tenantid = $.tenantid;
        this.tokenSecretName = $.tokenSecretName;
        this.usernameSecretName = $.usernameSecretName;
        this.vaultNamespace = $.vaultNamespace;
        this.vaultUrl = $.vaultUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CredentialsExternalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CredentialsExternalArgs $;

        public Builder() {
            $ = new CredentialsExternalArgs();
        }

        public Builder(CredentialsExternalArgs defaults) {
            $ = new CredentialsExternalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param clientSecret Required for Azure Client Secret. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Required for Azure Client Secret. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param clientid Required for Azure Client Secret. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder clientid(@Nullable Output<String> clientid) {
            $.clientid = clientid;
            return this;
        }

        /**
         * @param clientid Required for Azure Client Secret. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder clientid(String clientid) {
            return clientid(Output.of(clientid));
        }

        /**
         * @param credentialsUsedForExternalSynchronizations No documentation available
         * 
         * @return builder
         * 
         */
        public Builder credentialsUsedForExternalSynchronizations(@Nullable Output<List<String>> credentialsUsedForExternalSynchronizations) {
            $.credentialsUsedForExternalSynchronizations = credentialsUsedForExternalSynchronizations;
            return this;
        }

        /**
         * @param credentialsUsedForExternalSynchronizations No documentation available
         * 
         * @return builder
         * 
         */
        public Builder credentialsUsedForExternalSynchronizations(List<String> credentialsUsedForExternalSynchronizations) {
            return credentialsUsedForExternalSynchronizations(Output.of(credentialsUsedForExternalSynchronizations));
        }

        /**
         * @param credentialsUsedForExternalSynchronizations No documentation available
         * 
         * @return builder
         * 
         */
        public Builder credentialsUsedForExternalSynchronizations(String... credentialsUsedForExternalSynchronizations) {
            return credentialsUsedForExternalSynchronizations(List.of(credentialsUsedForExternalSynchronizations));
        }

        /**
         * @param passwordSecretName No documentation available
         * 
         * @return builder
         * 
         */
        public Builder passwordSecretName(@Nullable Output<String> passwordSecretName) {
            $.passwordSecretName = passwordSecretName;
            return this;
        }

        /**
         * @param passwordSecretName No documentation available
         * 
         * @return builder
         * 
         */
        public Builder passwordSecretName(String passwordSecretName) {
            return passwordSecretName(Output.of(passwordSecretName));
        }

        /**
         * @param pathToCredentials Required for Hashicorp App Role or Hashicorp Certificate. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder pathToCredentials(@Nullable Output<String> pathToCredentials) {
            $.pathToCredentials = pathToCredentials;
            return this;
        }

        /**
         * @param pathToCredentials Required for Hashicorp App Role or Hashicorp Certificate. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder pathToCredentials(String pathToCredentials) {
            return pathToCredentials(Output.of(pathToCredentials));
        }

        /**
         * @param roleid Required for Hashicorp App Role. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder roleid(@Nullable Output<String> roleid) {
            $.roleid = roleid;
            return this;
        }

        /**
         * @param roleid Required for Hashicorp App Role. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder roleid(String roleid) {
            return roleid(Output.of(roleid));
        }

        /**
         * @param secretid Required for Hashicorp App Role. The ID of Credentials within the Certificate Vault holding the secret id
         * 
         * @return builder
         * 
         */
        public Builder secretid(@Nullable Output<String> secretid) {
            $.secretid = secretid;
            return this;
        }

        /**
         * @param secretid Required for Hashicorp App Role. The ID of Credentials within the Certificate Vault holding the secret id
         * 
         * @return builder
         * 
         */
        public Builder secretid(String secretid) {
            return secretid(Output.of(secretid));
        }

        /**
         * @param tenantid Required for Azure Client Secret. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder tenantid(@Nullable Output<String> tenantid) {
            $.tenantid = tenantid;
            return this;
        }

        /**
         * @param tenantid Required for Azure Client Secret. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder tenantid(String tenantid) {
            return tenantid(Output.of(tenantid));
        }

        /**
         * @param tokenSecretName No documentation available
         * 
         * @return builder
         * 
         */
        public Builder tokenSecretName(@Nullable Output<String> tokenSecretName) {
            $.tokenSecretName = tokenSecretName;
            return this;
        }

        /**
         * @param tokenSecretName No documentation available
         * 
         * @return builder
         * 
         */
        public Builder tokenSecretName(String tokenSecretName) {
            return tokenSecretName(Output.of(tokenSecretName));
        }

        /**
         * @param usernameSecretName No documentation available
         * 
         * @return builder
         * 
         */
        public Builder usernameSecretName(@Nullable Output<String> usernameSecretName) {
            $.usernameSecretName = usernameSecretName;
            return this;
        }

        /**
         * @param usernameSecretName No documentation available
         * 
         * @return builder
         * 
         */
        public Builder usernameSecretName(String usernameSecretName) {
            return usernameSecretName(Output.of(usernameSecretName));
        }

        /**
         * @param vaultNamespace Required for Hashicorp App Role. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder vaultNamespace(@Nullable Output<String> vaultNamespace) {
            $.vaultNamespace = vaultNamespace;
            return this;
        }

        /**
         * @param vaultNamespace Required for Hashicorp App Role. No further documentation available
         * 
         * @return builder
         * 
         */
        public Builder vaultNamespace(String vaultNamespace) {
            return vaultNamespace(Output.of(vaultNamespace));
        }

        /**
         * @param vaultUrl No documentation available
         * 
         * @return builder
         * 
         */
        public Builder vaultUrl(@Nullable Output<String> vaultUrl) {
            $.vaultUrl = vaultUrl;
            return this;
        }

        /**
         * @param vaultUrl No documentation available
         * 
         * @return builder
         * 
         */
        public Builder vaultUrl(String vaultUrl) {
            return vaultUrl(Output.of(vaultUrl));
        }

        public CredentialsExternalArgs build() {
            return $;
        }
    }

}
