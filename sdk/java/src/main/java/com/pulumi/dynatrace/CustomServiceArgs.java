// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.CustomServiceRuleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomServiceArgs Empty = new CustomServiceArgs();

    /**
     * Custom service enabled/disabled
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Custom service enabled/disabled
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The name of the custom service, displayed in the UI
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the custom service, displayed in the UI
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The list of process groups the custom service should belong to
     * 
     */
    @Import(name="processGroups")
    private @Nullable Output<List<String>> processGroups;

    /**
     * @return The list of process groups the custom service should belong to
     * 
     */
    public Optional<Output<List<String>>> processGroups() {
        return Optional.ofNullable(this.processGroups);
    }

    /**
     * The queue entry point flag. Set to `true` for custom messaging services
     * 
     */
    @Import(name="queueEntryPoint")
    private @Nullable Output<Boolean> queueEntryPoint;

    /**
     * @return The queue entry point flag. Set to `true` for custom messaging services
     * 
     */
    public Optional<Output<Boolean>> queueEntryPoint() {
        return Optional.ofNullable(this.queueEntryPoint);
    }

    /**
     * The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)
     * 
     */
    @Import(name="queueEntryPointType")
    private @Nullable Output<String> queueEntryPointType;

    /**
     * @return The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)
     * 
     */
    public Optional<Output<String>> queueEntryPointType() {
        return Optional.ofNullable(this.queueEntryPointType);
    }

    /**
     * The list of rules defining the custom service
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<CustomServiceRuleArgs>> rules;

    /**
     * @return The list of rules defining the custom service
     * 
     */
    public Optional<Output<List<CustomServiceRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)
     * 
     */
    @Import(name="technology", required=true)
    private Output<String> technology;

    /**
     * @return Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)
     * 
     */
    public Output<String> technology() {
        return this.technology;
    }

    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    /**
     * @return allows for configuring properties that are not explicitly supported by the current version of this provider
     * 
     */
    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private CustomServiceArgs() {}

    private CustomServiceArgs(CustomServiceArgs $) {
        this.enabled = $.enabled;
        this.name = $.name;
        this.processGroups = $.processGroups;
        this.queueEntryPoint = $.queueEntryPoint;
        this.queueEntryPointType = $.queueEntryPointType;
        this.rules = $.rules;
        this.technology = $.technology;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomServiceArgs $;

        public Builder() {
            $ = new CustomServiceArgs();
        }

        public Builder(CustomServiceArgs defaults) {
            $ = new CustomServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Custom service enabled/disabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Custom service enabled/disabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param name The name of the custom service, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the custom service, displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param processGroups The list of process groups the custom service should belong to
         * 
         * @return builder
         * 
         */
        public Builder processGroups(@Nullable Output<List<String>> processGroups) {
            $.processGroups = processGroups;
            return this;
        }

        /**
         * @param processGroups The list of process groups the custom service should belong to
         * 
         * @return builder
         * 
         */
        public Builder processGroups(List<String> processGroups) {
            return processGroups(Output.of(processGroups));
        }

        /**
         * @param processGroups The list of process groups the custom service should belong to
         * 
         * @return builder
         * 
         */
        public Builder processGroups(String... processGroups) {
            return processGroups(List.of(processGroups));
        }

        /**
         * @param queueEntryPoint The queue entry point flag. Set to `true` for custom messaging services
         * 
         * @return builder
         * 
         */
        public Builder queueEntryPoint(@Nullable Output<Boolean> queueEntryPoint) {
            $.queueEntryPoint = queueEntryPoint;
            return this;
        }

        /**
         * @param queueEntryPoint The queue entry point flag. Set to `true` for custom messaging services
         * 
         * @return builder
         * 
         */
        public Builder queueEntryPoint(Boolean queueEntryPoint) {
            return queueEntryPoint(Output.of(queueEntryPoint));
        }

        /**
         * @param queueEntryPointType The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)
         * 
         * @return builder
         * 
         */
        public Builder queueEntryPointType(@Nullable Output<String> queueEntryPointType) {
            $.queueEntryPointType = queueEntryPointType;
            return this;
        }

        /**
         * @param queueEntryPointType The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)
         * 
         * @return builder
         * 
         */
        public Builder queueEntryPointType(String queueEntryPointType) {
            return queueEntryPointType(Output.of(queueEntryPointType));
        }

        /**
         * @param rules The list of rules defining the custom service
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<CustomServiceRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules The list of rules defining the custom service
         * 
         * @return builder
         * 
         */
        public Builder rules(List<CustomServiceRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules The list of rules defining the custom service
         * 
         * @return builder
         * 
         */
        public Builder rules(CustomServiceRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param technology Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)
         * 
         * @return builder
         * 
         */
        public Builder technology(Output<String> technology) {
            $.technology = technology;
            return this;
        }

        /**
         * @param technology Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)
         * 
         * @return builder
         * 
         */
        public Builder technology(String technology) {
            return technology(Output.of(technology));
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        /**
         * @param unknowns allows for configuring properties that are not explicitly supported by the current version of this provider
         * 
         * @return builder
         * 
         */
        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public CustomServiceArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.technology = Objects.requireNonNull($.technology, "expected parameter 'technology' to be non-null");
            return $;
        }
    }

}
