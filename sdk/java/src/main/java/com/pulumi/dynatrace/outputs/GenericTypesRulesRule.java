// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.GenericTypesRulesRuleAttributes;
import com.pulumi.dynatrace.outputs.GenericTypesRulesRuleRequiredDimensions;
import com.pulumi.dynatrace.outputs.GenericTypesRulesRuleSources;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GenericTypesRulesRule {
    private @Nullable GenericTypesRulesRuleAttributes attributes;
    private @Nullable String iconPattern;
    private String idPattern;
    private @Nullable String instanceNamePattern;
    private @Nullable GenericTypesRulesRuleRequiredDimensions requiredDimensions;
    private @Nullable String role;
    private GenericTypesRulesRuleSources sources;

    private GenericTypesRulesRule() {}
    public Optional<GenericTypesRulesRuleAttributes> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> iconPattern() {
        return Optional.ofNullable(this.iconPattern);
    }
    public String idPattern() {
        return this.idPattern;
    }
    public Optional<String> instanceNamePattern() {
        return Optional.ofNullable(this.instanceNamePattern);
    }
    public Optional<GenericTypesRulesRuleRequiredDimensions> requiredDimensions() {
        return Optional.ofNullable(this.requiredDimensions);
    }
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    public GenericTypesRulesRuleSources sources() {
        return this.sources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GenericTypesRulesRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GenericTypesRulesRuleAttributes attributes;
        private @Nullable String iconPattern;
        private String idPattern;
        private @Nullable String instanceNamePattern;
        private @Nullable GenericTypesRulesRuleRequiredDimensions requiredDimensions;
        private @Nullable String role;
        private GenericTypesRulesRuleSources sources;
        public Builder() {}
        public Builder(GenericTypesRulesRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.iconPattern = defaults.iconPattern;
    	      this.idPattern = defaults.idPattern;
    	      this.instanceNamePattern = defaults.instanceNamePattern;
    	      this.requiredDimensions = defaults.requiredDimensions;
    	      this.role = defaults.role;
    	      this.sources = defaults.sources;
        }

        @CustomType.Setter
        public Builder attributes(@Nullable GenericTypesRulesRuleAttributes attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder iconPattern(@Nullable String iconPattern) {
            this.iconPattern = iconPattern;
            return this;
        }
        @CustomType.Setter
        public Builder idPattern(String idPattern) {
            this.idPattern = Objects.requireNonNull(idPattern);
            return this;
        }
        @CustomType.Setter
        public Builder instanceNamePattern(@Nullable String instanceNamePattern) {
            this.instanceNamePattern = instanceNamePattern;
            return this;
        }
        @CustomType.Setter
        public Builder requiredDimensions(@Nullable GenericTypesRulesRuleRequiredDimensions requiredDimensions) {
            this.requiredDimensions = requiredDimensions;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder sources(GenericTypesRulesRuleSources sources) {
            this.sources = Objects.requireNonNull(sources);
            return this;
        }
        public GenericTypesRulesRule build() {
            final var o = new GenericTypesRulesRule();
            o.attributes = attributes;
            o.iconPattern = iconPattern;
            o.idPattern = idPattern;
            o.instanceNamePattern = instanceNamePattern;
            o.requiredDimensions = requiredDimensions;
            o.role = role;
            o.sources = sources;
            return o;
        }
    }
}
