// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
    private String operand1;
    private @Nullable String operand2;
    private String operator;

    private WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition() {}
    public String operand1() {
        return this.operand1;
    }
    public Optional<String> operand2() {
        return Optional.ofNullable(this.operand2);
    }
    public String operator() {
        return this.operator;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String operand1;
        private @Nullable String operand2;
        private String operator;
        public Builder() {}
        public Builder(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operand1 = defaults.operand1;
    	      this.operand2 = defaults.operand2;
    	      this.operator = defaults.operator;
        }

        @CustomType.Setter
        public Builder operand1(String operand1) {
            this.operand1 = Objects.requireNonNull(operand1);
            return this;
        }
        @CustomType.Setter
        public Builder operand2(@Nullable String operand2) {
            this.operand2 = operand2;
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        public WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition build() {
            final var o = new WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition();
            o.operand1 = operand1;
            o.operand2 = operand2;
            o.operator = operator;
            return o;
        }
    }
}
