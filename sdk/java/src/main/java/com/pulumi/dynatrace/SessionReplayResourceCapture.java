// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.SessionReplayResourceCaptureArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.SessionReplayResourceCaptureState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture")
public class SessionReplayResourceCapture extends com.pulumi.resources.CustomResource {
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    @Export(name="applicationId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applicationId;

    /**
     * @return The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    public Output<Optional<String>> applicationId() {
        return Codegen.optional(this.applicationId);
    }
    /**
     * (Field has overlap with `dynatrace.WebApplication`) When turned on, all CSS resources from all sessions are captured. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).
     * 
     */
    @Export(name="enableResourceCapturing", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableResourceCapturing;

    /**
     * @return (Field has overlap with `dynatrace.WebApplication`) When turned on, all CSS resources from all sessions are captured. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).
     * 
     */
    public Output<Boolean> enableResourceCapturing() {
        return this.enableResourceCapturing;
    }
    /**
     * (Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.
     * 
     */
    @Export(name="resourceCaptureUrlExclusionPatternLists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> resourceCaptureUrlExclusionPatternLists;

    /**
     * @return (Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.
     * 
     */
    public Output<Optional<List<String>>> resourceCaptureUrlExclusionPatternLists() {
        return Codegen.optional(this.resourceCaptureUrlExclusionPatternLists);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SessionReplayResourceCapture(String name) {
        this(name, SessionReplayResourceCaptureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SessionReplayResourceCapture(String name, SessionReplayResourceCaptureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SessionReplayResourceCapture(String name, SessionReplayResourceCaptureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture", name, args == null ? SessionReplayResourceCaptureArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SessionReplayResourceCapture(String name, Output<String> id, @Nullable SessionReplayResourceCaptureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SessionReplayResourceCapture get(String name, Output<String> id, @Nullable SessionReplayResourceCaptureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SessionReplayResourceCapture(name, id, state, options);
    }
}
