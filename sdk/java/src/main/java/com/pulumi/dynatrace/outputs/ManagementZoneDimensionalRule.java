// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.ManagementZoneDimensionalRuleCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementZoneDimensionalRule {
    private String appliesTo;
    private @Nullable List<ManagementZoneDimensionalRuleCondition> conditions;
    private @Nullable Boolean enabled;
    private @Nullable String unknowns;

    private ManagementZoneDimensionalRule() {}
    public String appliesTo() {
        return this.appliesTo;
    }
    public List<ManagementZoneDimensionalRuleCondition> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<String> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementZoneDimensionalRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appliesTo;
        private @Nullable List<ManagementZoneDimensionalRuleCondition> conditions;
        private @Nullable Boolean enabled;
        private @Nullable String unknowns;
        public Builder() {}
        public Builder(ManagementZoneDimensionalRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appliesTo = defaults.appliesTo;
    	      this.conditions = defaults.conditions;
    	      this.enabled = defaults.enabled;
    	      this.unknowns = defaults.unknowns;
        }

        @CustomType.Setter
        public Builder appliesTo(String appliesTo) {
            this.appliesTo = Objects.requireNonNull(appliesTo);
            return this;
        }
        @CustomType.Setter
        public Builder conditions(@Nullable List<ManagementZoneDimensionalRuleCondition> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(ManagementZoneDimensionalRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder unknowns(@Nullable String unknowns) {
            this.unknowns = unknowns;
            return this;
        }
        public ManagementZoneDimensionalRule build() {
            final var o = new ManagementZoneDimensionalRule();
            o.appliesTo = appliesTo;
            o.conditions = conditions;
            o.enabled = enabled;
            o.unknowns = unknowns;
            return o;
        }
    }
}
