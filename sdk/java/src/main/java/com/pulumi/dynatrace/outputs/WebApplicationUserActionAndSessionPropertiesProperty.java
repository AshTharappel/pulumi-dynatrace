// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationUserActionAndSessionPropertiesProperty {
    private @Nullable String aggregation;
    private @Nullable String cleanupRule;
    private @Nullable String displayName;
    /**
     * @return The ID of this resource.
     * 
     */
    private Integer id;
    private @Nullable Boolean ignoreCase;
    private String key;
    private @Nullable Integer longStringLength;
    private @Nullable Integer metadataId;
    private String origin;
    private @Nullable String serverSideRequestAttribute;
    private @Nullable Boolean storeAsSessionProperty;
    private @Nullable Boolean storeAsUserActionProperty;
    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    private String type;

    private WebApplicationUserActionAndSessionPropertiesProperty() {}
    public Optional<String> aggregation() {
        return Optional.ofNullable(this.aggregation);
    }
    public Optional<String> cleanupRule() {
        return Optional.ofNullable(this.cleanupRule);
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public Integer id() {
        return this.id;
    }
    public Optional<Boolean> ignoreCase() {
        return Optional.ofNullable(this.ignoreCase);
    }
    public String key() {
        return this.key;
    }
    public Optional<Integer> longStringLength() {
        return Optional.ofNullable(this.longStringLength);
    }
    public Optional<Integer> metadataId() {
        return Optional.ofNullable(this.metadataId);
    }
    public String origin() {
        return this.origin;
    }
    public Optional<String> serverSideRequestAttribute() {
        return Optional.ofNullable(this.serverSideRequestAttribute);
    }
    public Optional<Boolean> storeAsSessionProperty() {
        return Optional.ofNullable(this.storeAsSessionProperty);
    }
    public Optional<Boolean> storeAsUserActionProperty() {
        return Optional.ofNullable(this.storeAsUserActionProperty);
    }
    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationUserActionAndSessionPropertiesProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregation;
        private @Nullable String cleanupRule;
        private @Nullable String displayName;
        private Integer id;
        private @Nullable Boolean ignoreCase;
        private String key;
        private @Nullable Integer longStringLength;
        private @Nullable Integer metadataId;
        private String origin;
        private @Nullable String serverSideRequestAttribute;
        private @Nullable Boolean storeAsSessionProperty;
        private @Nullable Boolean storeAsUserActionProperty;
        private String type;
        public Builder() {}
        public Builder(WebApplicationUserActionAndSessionPropertiesProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.cleanupRule = defaults.cleanupRule;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.ignoreCase = defaults.ignoreCase;
    	      this.key = defaults.key;
    	      this.longStringLength = defaults.longStringLength;
    	      this.metadataId = defaults.metadataId;
    	      this.origin = defaults.origin;
    	      this.serverSideRequestAttribute = defaults.serverSideRequestAttribute;
    	      this.storeAsSessionProperty = defaults.storeAsSessionProperty;
    	      this.storeAsUserActionProperty = defaults.storeAsUserActionProperty;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder aggregation(@Nullable String aggregation) {
            this.aggregation = aggregation;
            return this;
        }
        @CustomType.Setter
        public Builder cleanupRule(@Nullable String cleanupRule) {
            this.cleanupRule = cleanupRule;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ignoreCase(@Nullable Boolean ignoreCase) {
            this.ignoreCase = ignoreCase;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder longStringLength(@Nullable Integer longStringLength) {
            this.longStringLength = longStringLength;
            return this;
        }
        @CustomType.Setter
        public Builder metadataId(@Nullable Integer metadataId) {
            this.metadataId = metadataId;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            this.origin = Objects.requireNonNull(origin);
            return this;
        }
        @CustomType.Setter
        public Builder serverSideRequestAttribute(@Nullable String serverSideRequestAttribute) {
            this.serverSideRequestAttribute = serverSideRequestAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder storeAsSessionProperty(@Nullable Boolean storeAsSessionProperty) {
            this.storeAsSessionProperty = storeAsSessionProperty;
            return this;
        }
        @CustomType.Setter
        public Builder storeAsUserActionProperty(@Nullable Boolean storeAsUserActionProperty) {
            this.storeAsUserActionProperty = storeAsUserActionProperty;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public WebApplicationUserActionAndSessionPropertiesProperty build() {
            final var o = new WebApplicationUserActionAndSessionPropertiesProperty();
            o.aggregation = aggregation;
            o.cleanupRule = cleanupRule;
            o.displayName = displayName;
            o.id = id;
            o.ignoreCase = ignoreCase;
            o.key = key;
            o.longStringLength = longStringLength;
            o.metadataId = metadataId;
            o.origin = origin;
            o.serverSideRequestAttribute = serverSideRequestAttribute;
            o.storeAsSessionProperty = storeAsSessionProperty;
            o.storeAsUserActionProperty = storeAsUserActionProperty;
            o.type = type;
            return o;
        }
    }
}
