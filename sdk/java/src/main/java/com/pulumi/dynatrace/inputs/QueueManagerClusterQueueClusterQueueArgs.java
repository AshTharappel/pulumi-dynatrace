// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueManagerClusterQueueClusterQueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueManagerClusterQueueClusterQueueArgs Empty = new QueueManagerClusterQueueClusterQueueArgs();

    @Import(name="clusterVisibilities")
    private @Nullable Output<List<String>> clusterVisibilities;

    public Optional<Output<List<String>>> clusterVisibilities() {
        return Optional.ofNullable(this.clusterVisibilities);
    }

    @Import(name="localQueueName", required=true)
    private Output<String> localQueueName;

    public Output<String> localQueueName() {
        return this.localQueueName;
    }

    private QueueManagerClusterQueueClusterQueueArgs() {}

    private QueueManagerClusterQueueClusterQueueArgs(QueueManagerClusterQueueClusterQueueArgs $) {
        this.clusterVisibilities = $.clusterVisibilities;
        this.localQueueName = $.localQueueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueManagerClusterQueueClusterQueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueManagerClusterQueueClusterQueueArgs $;

        public Builder() {
            $ = new QueueManagerClusterQueueClusterQueueArgs();
        }

        public Builder(QueueManagerClusterQueueClusterQueueArgs defaults) {
            $ = new QueueManagerClusterQueueClusterQueueArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterVisibilities(@Nullable Output<List<String>> clusterVisibilities) {
            $.clusterVisibilities = clusterVisibilities;
            return this;
        }

        public Builder clusterVisibilities(List<String> clusterVisibilities) {
            return clusterVisibilities(Output.of(clusterVisibilities));
        }

        public Builder clusterVisibilities(String... clusterVisibilities) {
            return clusterVisibilities(List.of(clusterVisibilities));
        }

        public Builder localQueueName(Output<String> localQueueName) {
            $.localQueueName = localQueueName;
            return this;
        }

        public Builder localQueueName(String localQueueName) {
            return localQueueName(Output.of(localQueueName));
        }

        public QueueManagerClusterQueueClusterQueueArgs build() {
            $.localQueueName = Objects.requireNonNull($.localQueueName, "expected parameter 'localQueueName' to be non-null");
            return $;
        }
    }

}
