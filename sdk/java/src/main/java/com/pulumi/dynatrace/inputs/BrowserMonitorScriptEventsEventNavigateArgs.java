// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventNavigateAuthenticationArgs;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventNavigateTargetArgs;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventNavigateValidateArgs;
import com.pulumi.dynatrace.inputs.BrowserMonitorScriptEventsEventNavigateWaitArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrowserMonitorScriptEventsEventNavigateArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorScriptEventsEventNavigateArgs Empty = new BrowserMonitorScriptEventsEventNavigateArgs();

    @Import(name="authentication")
    private @Nullable Output<BrowserMonitorScriptEventsEventNavigateAuthenticationArgs> authentication;

    public Optional<Output<BrowserMonitorScriptEventsEventNavigateAuthenticationArgs>> authentication() {
        return Optional.ofNullable(this.authentication);
    }

    @Import(name="target")
    private @Nullable Output<BrowserMonitorScriptEventsEventNavigateTargetArgs> target;

    public Optional<Output<BrowserMonitorScriptEventsEventNavigateTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    @Import(name="validate")
    private @Nullable Output<BrowserMonitorScriptEventsEventNavigateValidateArgs> validate;

    public Optional<Output<BrowserMonitorScriptEventsEventNavigateValidateArgs>> validate() {
        return Optional.ofNullable(this.validate);
    }

    @Import(name="wait")
    private @Nullable Output<BrowserMonitorScriptEventsEventNavigateWaitArgs> wait;

    public Optional<Output<BrowserMonitorScriptEventsEventNavigateWaitArgs>> wait_() {
        return Optional.ofNullable(this.wait);
    }

    private BrowserMonitorScriptEventsEventNavigateArgs() {}

    private BrowserMonitorScriptEventsEventNavigateArgs(BrowserMonitorScriptEventsEventNavigateArgs $) {
        this.authentication = $.authentication;
        this.target = $.target;
        this.url = $.url;
        this.validate = $.validate;
        this.wait = $.wait;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorScriptEventsEventNavigateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorScriptEventsEventNavigateArgs $;

        public Builder() {
            $ = new BrowserMonitorScriptEventsEventNavigateArgs();
        }

        public Builder(BrowserMonitorScriptEventsEventNavigateArgs defaults) {
            $ = new BrowserMonitorScriptEventsEventNavigateArgs(Objects.requireNonNull(defaults));
        }

        public Builder authentication(@Nullable Output<BrowserMonitorScriptEventsEventNavigateAuthenticationArgs> authentication) {
            $.authentication = authentication;
            return this;
        }

        public Builder authentication(BrowserMonitorScriptEventsEventNavigateAuthenticationArgs authentication) {
            return authentication(Output.of(authentication));
        }

        public Builder target(@Nullable Output<BrowserMonitorScriptEventsEventNavigateTargetArgs> target) {
            $.target = target;
            return this;
        }

        public Builder target(BrowserMonitorScriptEventsEventNavigateTargetArgs target) {
            return target(Output.of(target));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder validate(@Nullable Output<BrowserMonitorScriptEventsEventNavigateValidateArgs> validate) {
            $.validate = validate;
            return this;
        }

        public Builder validate(BrowserMonitorScriptEventsEventNavigateValidateArgs validate) {
            return validate(Output.of(validate));
        }

        public Builder wait_(@Nullable Output<BrowserMonitorScriptEventsEventNavigateWaitArgs> wait) {
            $.wait = wait;
            return this;
        }

        public Builder wait_(BrowserMonitorScriptEventsEventNavigateWaitArgs wait) {
            return wait_(Output.of(wait));
        }

        public BrowserMonitorScriptEventsEventNavigateArgs build() {
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
