// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.NotificationArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.NotificationState;
import com.pulumi.dynatrace.outputs.NotificationAnsibleTower;
import com.pulumi.dynatrace.outputs.NotificationConfig;
import com.pulumi.dynatrace.outputs.NotificationEmail;
import com.pulumi.dynatrace.outputs.NotificationHipchat;
import com.pulumi.dynatrace.outputs.NotificationJira;
import com.pulumi.dynatrace.outputs.NotificationOpsGenie;
import com.pulumi.dynatrace.outputs.NotificationPagerDuty;
import com.pulumi.dynatrace.outputs.NotificationServiceNow;
import com.pulumi.dynatrace.outputs.NotificationSlack;
import com.pulumi.dynatrace.outputs.NotificationTrello;
import com.pulumi.dynatrace.outputs.NotificationVictorOps;
import com.pulumi.dynatrace.outputs.NotificationWebHook;
import com.pulumi.dynatrace.outputs.NotificationXmatters;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/notification:Notification")
public class Notification extends com.pulumi.resources.CustomResource {
    /**
     * Configuration for Ansible Tower Notification
     * 
     */
    @Export(name="ansibleTower", type=NotificationAnsibleTower.class, parameters={})
    private Output</* @Nullable */ NotificationAnsibleTower> ansibleTower;

    /**
     * @return Configuration for Ansible Tower Notification
     * 
     */
    public Output<Optional<NotificationAnsibleTower>> ansibleTower() {
        return Codegen.optional(this.ansibleTower);
    }
    /**
     * Configuration for Generic Notification
     * 
     */
    @Export(name="config", type=NotificationConfig.class, parameters={})
    private Output</* @Nullable */ NotificationConfig> config;

    /**
     * @return Configuration for Generic Notification
     * 
     */
    public Output<Optional<NotificationConfig>> config() {
        return Codegen.optional(this.config);
    }
    /**
     * Configuration for Email Notification
     * 
     */
    @Export(name="email", type=NotificationEmail.class, parameters={})
    private Output</* @Nullable */ NotificationEmail> email;

    /**
     * @return Configuration for Email Notification
     * 
     */
    public Output<Optional<NotificationEmail>> email() {
        return Codegen.optional(this.email);
    }
    /**
     * Configuration for HipChat Notification
     * 
     */
    @Export(name="hipchat", type=NotificationHipchat.class, parameters={})
    private Output</* @Nullable */ NotificationHipchat> hipchat;

    /**
     * @return Configuration for HipChat Notification
     * 
     */
    public Output<Optional<NotificationHipchat>> hipchat() {
        return Codegen.optional(this.hipchat);
    }
    /**
     * Configuration for Jira Notification
     * 
     */
    @Export(name="jira", type=NotificationJira.class, parameters={})
    private Output</* @Nullable */ NotificationJira> jira;

    /**
     * @return Configuration for Jira Notification
     * 
     */
    public Output<Optional<NotificationJira>> jira() {
        return Codegen.optional(this.jira);
    }
    /**
     * Configuration for OpsGenie Notification
     * 
     */
    @Export(name="opsGenie", type=NotificationOpsGenie.class, parameters={})
    private Output</* @Nullable */ NotificationOpsGenie> opsGenie;

    /**
     * @return Configuration for OpsGenie Notification
     * 
     */
    public Output<Optional<NotificationOpsGenie>> opsGenie() {
        return Codegen.optional(this.opsGenie);
    }
    /**
     * Configuration for PagerDuty Notification
     * 
     */
    @Export(name="pagerDuty", type=NotificationPagerDuty.class, parameters={})
    private Output</* @Nullable */ NotificationPagerDuty> pagerDuty;

    /**
     * @return Configuration for PagerDuty Notification
     * 
     */
    public Output<Optional<NotificationPagerDuty>> pagerDuty() {
        return Codegen.optional(this.pagerDuty);
    }
    /**
     * Configuration for ServiceNow Notification
     * 
     */
    @Export(name="serviceNow", type=NotificationServiceNow.class, parameters={})
    private Output</* @Nullable */ NotificationServiceNow> serviceNow;

    /**
     * @return Configuration for ServiceNow Notification
     * 
     */
    public Output<Optional<NotificationServiceNow>> serviceNow() {
        return Codegen.optional(this.serviceNow);
    }
    /**
     * Configuration for Slack Notification
     * 
     */
    @Export(name="slack", type=NotificationSlack.class, parameters={})
    private Output</* @Nullable */ NotificationSlack> slack;

    /**
     * @return Configuration for Slack Notification
     * 
     */
    public Output<Optional<NotificationSlack>> slack() {
        return Codegen.optional(this.slack);
    }
    /**
     * Configuration for Trello Notification
     * 
     */
    @Export(name="trello", type=NotificationTrello.class, parameters={})
    private Output</* @Nullable */ NotificationTrello> trello;

    /**
     * @return Configuration for Trello Notification
     * 
     */
    public Output<Optional<NotificationTrello>> trello() {
        return Codegen.optional(this.trello);
    }
    /**
     * Configuration for VictorOps Notification
     * 
     */
    @Export(name="victorOps", type=NotificationVictorOps.class, parameters={})
    private Output</* @Nullable */ NotificationVictorOps> victorOps;

    /**
     * @return Configuration for VictorOps Notification
     * 
     */
    public Output<Optional<NotificationVictorOps>> victorOps() {
        return Codegen.optional(this.victorOps);
    }
    /**
     * Configuration for WebHook Notification
     * 
     */
    @Export(name="webHook", type=NotificationWebHook.class, parameters={})
    private Output</* @Nullable */ NotificationWebHook> webHook;

    /**
     * @return Configuration for WebHook Notification
     * 
     */
    public Output<Optional<NotificationWebHook>> webHook() {
        return Codegen.optional(this.webHook);
    }
    /**
     * Configuration for XMatters Notification
     * 
     */
    @Export(name="xmatters", type=NotificationXmatters.class, parameters={})
    private Output</* @Nullable */ NotificationXmatters> xmatters;

    /**
     * @return Configuration for XMatters Notification
     * 
     */
    public Output<Optional<NotificationXmatters>> xmatters() {
        return Codegen.optional(this.xmatters);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Notification(String name) {
        this(name, NotificationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Notification(String name, @Nullable NotificationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Notification(String name, @Nullable NotificationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/notification:Notification", name, args == null ? NotificationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Notification(String name, Output<String> id, @Nullable NotificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/notification:Notification", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Notification get(String name, Output<String> id, @Nullable NotificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Notification(name, id, state, options);
    }
}
