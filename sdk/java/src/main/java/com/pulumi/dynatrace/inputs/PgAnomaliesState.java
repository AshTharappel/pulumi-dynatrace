// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.PgAnomaliesAvailabilityArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PgAnomaliesState extends com.pulumi.resources.ResourceArgs {

    public static final PgAnomaliesState Empty = new PgAnomaliesState();

    /**
     * Configuration of the availability monitoring for the process group.
     * 
     */
    @Import(name="availability")
    private @Nullable Output<PgAnomaliesAvailabilityArgs> availability;

    /**
     * @return Configuration of the availability monitoring for the process group.
     * 
     */
    public Optional<Output<PgAnomaliesAvailabilityArgs>> availability() {
        return Optional.ofNullable(this.availability);
    }

    /**
     * The ID of the process group
     * 
     */
    @Import(name="pgId")
    private @Nullable Output<String> pgId;

    /**
     * @return The ID of the process group
     * 
     */
    public Optional<Output<String>> pgId() {
        return Optional.ofNullable(this.pgId);
    }

    private PgAnomaliesState() {}

    private PgAnomaliesState(PgAnomaliesState $) {
        this.availability = $.availability;
        this.pgId = $.pgId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PgAnomaliesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PgAnomaliesState $;

        public Builder() {
            $ = new PgAnomaliesState();
        }

        public Builder(PgAnomaliesState defaults) {
            $ = new PgAnomaliesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param availability Configuration of the availability monitoring for the process group.
         * 
         * @return builder
         * 
         */
        public Builder availability(@Nullable Output<PgAnomaliesAvailabilityArgs> availability) {
            $.availability = availability;
            return this;
        }

        /**
         * @param availability Configuration of the availability monitoring for the process group.
         * 
         * @return builder
         * 
         */
        public Builder availability(PgAnomaliesAvailabilityArgs availability) {
            return availability(Output.of(availability));
        }

        /**
         * @param pgId The ID of the process group
         * 
         * @return builder
         * 
         */
        public Builder pgId(@Nullable Output<String> pgId) {
            $.pgId = pgId;
            return this;
        }

        /**
         * @param pgId The ID of the process group
         * 
         * @return builder
         * 
         */
        public Builder pgId(String pgId) {
            return pgId(Output.of(pgId));
        }

        public PgAnomaliesState build() {
            return $;
        }
    }

}
