// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.WebApplicationArgs;
import com.pulumi.dynatrace.inputs.WebApplicationState;
import com.pulumi.dynatrace.outputs.WebApplicationConversionGoals;
import com.pulumi.dynatrace.outputs.WebApplicationCustomActionApdexSettings;
import com.pulumi.dynatrace.outputs.WebApplicationKeyUserAction;
import com.pulumi.dynatrace.outputs.WebApplicationLoadActionApdexSettings;
import com.pulumi.dynatrace.outputs.WebApplicationMetaDataCaptureSettings;
import com.pulumi.dynatrace.outputs.WebApplicationMonitoringSettings;
import com.pulumi.dynatrace.outputs.WebApplicationSessionReplayConfig;
import com.pulumi.dynatrace.outputs.WebApplicationUserActionAndSessionProperties;
import com.pulumi.dynatrace.outputs.WebApplicationUserActionNamingSettings;
import com.pulumi.dynatrace.outputs.WebApplicationUserTags;
import com.pulumi.dynatrace.outputs.WebApplicationWaterfallSettings;
import com.pulumi.dynatrace.outputs.WebApplicationXhrActionApdexSettings;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/webApplication:WebApplication")
public class WebApplication extends com.pulumi.resources.CustomResource {
    /**
     * A list of conversion goals of the application
     * 
     */
    @Export(name="conversionGoals", refs={WebApplicationConversionGoals.class}, tree="[0]")
    private Output</* @Nullable */ WebApplicationConversionGoals> conversionGoals;

    /**
     * @return A list of conversion goals of the application
     * 
     */
    public Output<Optional<WebApplicationConversionGoals>> conversionGoals() {
        return Codegen.optional(this.conversionGoals);
    }
    /**
     * (Field has overlap with `dynatrace.WebAppEnablement`) Analize *X*% of user sessions
     * 
     */
    @Export(name="costControlUserSessionPercentage", refs={Integer.class}, tree="[0]")
    private Output<Integer> costControlUserSessionPercentage;

    /**
     * @return (Field has overlap with `dynatrace.WebAppEnablement`) Analize *X*% of user sessions
     * 
     */
    public Output<Integer> costControlUserSessionPercentage() {
        return this.costControlUserSessionPercentage;
    }
    /**
     * Defines the Custom Action Apdex settings of an application
     * 
     */
    @Export(name="customActionApdexSettings", refs={WebApplicationCustomActionApdexSettings.class}, tree="[0]")
    private Output<WebApplicationCustomActionApdexSettings> customActionApdexSettings;

    /**
     * @return Defines the Custom Action Apdex settings of an application
     * 
     */
    public Output<WebApplicationCustomActionApdexSettings> customActionApdexSettings() {
        return this.customActionApdexSettings;
    }
    /**
     * User Action names to be flagged as Key User Actions
     * 
     */
    @Export(name="keyUserActions", refs={List.class,WebApplicationKeyUserAction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<WebApplicationKeyUserAction>> keyUserActions;

    /**
     * @return User Action names to be flagged as Key User Actions
     * 
     */
    public Output<Optional<List<WebApplicationKeyUserAction>>> keyUserActions() {
        return Codegen.optional(this.keyUserActions);
    }
    /**
     * Defines the Load Action Apdex settings of an application
     * 
     */
    @Export(name="loadActionApdexSettings", refs={WebApplicationLoadActionApdexSettings.class}, tree="[0]")
    private Output<WebApplicationLoadActionApdexSettings> loadActionApdexSettings;

    /**
     * @return Defines the Load Action Apdex settings of an application
     * 
     */
    public Output<WebApplicationLoadActionApdexSettings> loadActionApdexSettings() {
        return this.loadActionApdexSettings;
    }
    /**
     * The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
     * 
     */
    @Export(name="loadActionKeyPerformanceMetric", refs={String.class}, tree="[0]")
    private Output<String> loadActionKeyPerformanceMetric;

    /**
     * @return The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
     * 
     */
    public Output<String> loadActionKeyPerformanceMetric() {
        return this.loadActionKeyPerformanceMetric;
    }
    /**
     * Java script agent meta data capture settings
     * 
     */
    @Export(name="metaDataCaptureSettings", refs={WebApplicationMetaDataCaptureSettings.class}, tree="[0]")
    private Output</* @Nullable */ WebApplicationMetaDataCaptureSettings> metaDataCaptureSettings;

    /**
     * @return Java script agent meta data capture settings
     * 
     */
    public Output<Optional<WebApplicationMetaDataCaptureSettings>> metaDataCaptureSettings() {
        return Codegen.optional(this.metaDataCaptureSettings);
    }
    /**
     * Real user monitoring settings
     * 
     */
    @Export(name="monitoringSettings", refs={WebApplicationMonitoringSettings.class}, tree="[0]")
    private Output<WebApplicationMonitoringSettings> monitoringSettings;

    /**
     * @return Real user monitoring settings
     * 
     */
    public Output<WebApplicationMonitoringSettings> monitoringSettings() {
        return this.monitoringSettings;
    }
    /**
     * The name of the web application, displayed in the UI
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the web application, displayed in the UI
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Field has overlap with `dynatrace.WebAppEnablement`) Real user monitoring enabled/disabled
     * 
     */
    @Export(name="realUserMonitoringEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> realUserMonitoringEnabled;

    /**
     * @return (Field has overlap with `dynatrace.WebAppEnablement`) Real user monitoring enabled/disabled
     * 
     */
    public Output<Optional<Boolean>> realUserMonitoringEnabled() {
        return Codegen.optional(this.realUserMonitoringEnabled);
    }
    /**
     * Settings regarding Session Replay
     * 
     */
    @Export(name="sessionReplayConfig", refs={WebApplicationSessionReplayConfig.class}, tree="[0]")
    private Output</* @Nullable */ WebApplicationSessionReplayConfig> sessionReplayConfig;

    /**
     * @return Settings regarding Session Replay
     * 
     */
    public Output<Optional<WebApplicationSessionReplayConfig>> sessionReplayConfig() {
        return Codegen.optional(this.sessionReplayConfig);
    }
    /**
     * The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * URL injection pattern for manual web application
     * 
     */
    @Export(name="urlInjectionPattern", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> urlInjectionPattern;

    /**
     * @return URL injection pattern for manual web application
     * 
     */
    public Output<Optional<String>> urlInjectionPattern() {
        return Codegen.optional(this.urlInjectionPattern);
    }
    /**
     * User action and session properties settings
     * 
     */
    @Export(name="userActionAndSessionProperties", refs={WebApplicationUserActionAndSessionProperties.class}, tree="[0]")
    private Output</* @Nullable */ WebApplicationUserActionAndSessionProperties> userActionAndSessionProperties;

    /**
     * @return User action and session properties settings
     * 
     */
    public Output<Optional<WebApplicationUserActionAndSessionProperties>> userActionAndSessionProperties() {
        return Codegen.optional(this.userActionAndSessionProperties);
    }
    /**
     * The settings of user action naming
     * 
     */
    @Export(name="userActionNamingSettings", refs={WebApplicationUserActionNamingSettings.class}, tree="[0]")
    private Output</* @Nullable */ WebApplicationUserActionNamingSettings> userActionNamingSettings;

    /**
     * @return The settings of user action naming
     * 
     */
    public Output<Optional<WebApplicationUserActionNamingSettings>> userActionNamingSettings() {
        return Codegen.optional(this.userActionNamingSettings);
    }
    /**
     * User tags settings
     * 
     */
    @Export(name="userTags", refs={WebApplicationUserTags.class}, tree="[0]")
    private Output</* @Nullable */ WebApplicationUserTags> userTags;

    /**
     * @return User tags settings
     * 
     */
    public Output<Optional<WebApplicationUserTags>> userTags() {
        return Codegen.optional(this.userTags);
    }
    /**
     * These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
     * 
     */
    @Export(name="waterfallSettings", refs={WebApplicationWaterfallSettings.class}, tree="[0]")
    private Output<WebApplicationWaterfallSettings> waterfallSettings;

    /**
     * @return These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
     * 
     */
    public Output<WebApplicationWaterfallSettings> waterfallSettings() {
        return this.waterfallSettings;
    }
    /**
     * Defines the XHR Action Apdex settings of an application
     * 
     */
    @Export(name="xhrActionApdexSettings", refs={WebApplicationXhrActionApdexSettings.class}, tree="[0]")
    private Output<WebApplicationXhrActionApdexSettings> xhrActionApdexSettings;

    /**
     * @return Defines the XHR Action Apdex settings of an application
     * 
     */
    public Output<WebApplicationXhrActionApdexSettings> xhrActionApdexSettings() {
        return this.xhrActionApdexSettings;
    }
    /**
     * The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
     * 
     */
    @Export(name="xhrActionKeyPerformanceMetric", refs={String.class}, tree="[0]")
    private Output<String> xhrActionKeyPerformanceMetric;

    /**
     * @return The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
     * 
     */
    public Output<String> xhrActionKeyPerformanceMetric() {
        return this.xhrActionKeyPerformanceMetric;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebApplication(String name) {
        this(name, WebApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebApplication(String name, WebApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebApplication(String name, WebApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/webApplication:WebApplication", name, args == null ? WebApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WebApplication(String name, Output<String> id, @Nullable WebApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/webApplication:WebApplication", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebApplication get(String name, Output<String> id, @Nullable WebApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WebApplication(name, id, state, options);
    }
}
