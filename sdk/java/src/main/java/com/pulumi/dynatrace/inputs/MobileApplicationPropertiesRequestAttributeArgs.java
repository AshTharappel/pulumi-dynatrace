// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MobileApplicationPropertiesRequestAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MobileApplicationPropertiesRequestAttributeArgs Empty = new MobileApplicationPropertiesRequestAttributeArgs();

    @Import(name="aggregation")
    private @Nullable Output<String> aggregation;

    public Optional<Output<String>> aggregation() {
        return Optional.ofNullable(this.aggregation);
    }

    @Import(name="cleanupRule")
    private @Nullable Output<String> cleanupRule;

    public Optional<Output<String>> cleanupRule() {
        return Optional.ofNullable(this.cleanupRule);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="id", required=true)
    private Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="storeAsSessionProperty")
    private @Nullable Output<Boolean> storeAsSessionProperty;

    public Optional<Output<Boolean>> storeAsSessionProperty() {
        return Optional.ofNullable(this.storeAsSessionProperty);
    }

    @Import(name="storeAsUserActionProperty")
    private @Nullable Output<Boolean> storeAsUserActionProperty;

    public Optional<Output<Boolean>> storeAsUserActionProperty() {
        return Optional.ofNullable(this.storeAsUserActionProperty);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private MobileApplicationPropertiesRequestAttributeArgs() {}

    private MobileApplicationPropertiesRequestAttributeArgs(MobileApplicationPropertiesRequestAttributeArgs $) {
        this.aggregation = $.aggregation;
        this.cleanupRule = $.cleanupRule;
        this.displayName = $.displayName;
        this.id = $.id;
        this.key = $.key;
        this.storeAsSessionProperty = $.storeAsSessionProperty;
        this.storeAsUserActionProperty = $.storeAsUserActionProperty;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MobileApplicationPropertiesRequestAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MobileApplicationPropertiesRequestAttributeArgs $;

        public Builder() {
            $ = new MobileApplicationPropertiesRequestAttributeArgs();
        }

        public Builder(MobileApplicationPropertiesRequestAttributeArgs defaults) {
            $ = new MobileApplicationPropertiesRequestAttributeArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregation(@Nullable Output<String> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder aggregation(String aggregation) {
            return aggregation(Output.of(aggregation));
        }

        public Builder cleanupRule(@Nullable Output<String> cleanupRule) {
            $.cleanupRule = cleanupRule;
            return this;
        }

        public Builder cleanupRule(String cleanupRule) {
            return cleanupRule(Output.of(cleanupRule));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder storeAsSessionProperty(@Nullable Output<Boolean> storeAsSessionProperty) {
            $.storeAsSessionProperty = storeAsSessionProperty;
            return this;
        }

        public Builder storeAsSessionProperty(Boolean storeAsSessionProperty) {
            return storeAsSessionProperty(Output.of(storeAsSessionProperty));
        }

        public Builder storeAsUserActionProperty(@Nullable Output<Boolean> storeAsUserActionProperty) {
            $.storeAsUserActionProperty = storeAsUserActionProperty;
            return this;
        }

        public Builder storeAsUserActionProperty(Boolean storeAsUserActionProperty) {
            return storeAsUserActionProperty(Output.of(storeAsUserActionProperty));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MobileApplicationPropertiesRequestAttributeArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
