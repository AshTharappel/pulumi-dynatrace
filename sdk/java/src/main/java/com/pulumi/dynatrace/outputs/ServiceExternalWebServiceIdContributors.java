// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.ServiceExternalWebServiceIdContributorsUrlPath;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceExternalWebServiceIdContributors {
    /**
     * @return Detect the matching requests as web request services instead of web services.
     * 
     */
    private Boolean detectAsWebRequestService;
    private @Nullable Boolean portForServiceId;
    private @Nullable ServiceExternalWebServiceIdContributorsUrlPath urlPath;

    private ServiceExternalWebServiceIdContributors() {}
    /**
     * @return Detect the matching requests as web request services instead of web services.
     * 
     */
    public Boolean detectAsWebRequestService() {
        return this.detectAsWebRequestService;
    }
    public Optional<Boolean> portForServiceId() {
        return Optional.ofNullable(this.portForServiceId);
    }
    public Optional<ServiceExternalWebServiceIdContributorsUrlPath> urlPath() {
        return Optional.ofNullable(this.urlPath);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceExternalWebServiceIdContributors defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean detectAsWebRequestService;
        private @Nullable Boolean portForServiceId;
        private @Nullable ServiceExternalWebServiceIdContributorsUrlPath urlPath;
        public Builder() {}
        public Builder(ServiceExternalWebServiceIdContributors defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectAsWebRequestService = defaults.detectAsWebRequestService;
    	      this.portForServiceId = defaults.portForServiceId;
    	      this.urlPath = defaults.urlPath;
        }

        @CustomType.Setter
        public Builder detectAsWebRequestService(Boolean detectAsWebRequestService) {
            this.detectAsWebRequestService = Objects.requireNonNull(detectAsWebRequestService);
            return this;
        }
        @CustomType.Setter
        public Builder portForServiceId(@Nullable Boolean portForServiceId) {
            this.portForServiceId = portForServiceId;
            return this;
        }
        @CustomType.Setter
        public Builder urlPath(@Nullable ServiceExternalWebServiceIdContributorsUrlPath urlPath) {
            this.urlPath = urlPath;
            return this;
        }
        public ServiceExternalWebServiceIdContributors build() {
            final var o = new ServiceExternalWebServiceIdContributors();
            o.detectAsWebRequestService = detectAsWebRequestService;
            o.portForServiceId = portForServiceId;
            o.urlPath = urlPath;
            return o;
        }
    }
}
