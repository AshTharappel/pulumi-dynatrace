// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.CustomAnomaliesStrategyAuto;
import com.pulumi.dynatrace.outputs.CustomAnomaliesStrategyGeneric;
import com.pulumi.dynatrace.outputs.CustomAnomaliesStrategyStatic;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomAnomaliesStrategy {
    /**
     * @return An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
     * 
     */
    private @Nullable CustomAnomaliesStrategyAuto auto;
    /**
     * @return A generic monitoring strategy
     * 
     */
    private @Nullable List<CustomAnomaliesStrategyGeneric> generics;
    /**
     * @return A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
     * 
     */
    private @Nullable CustomAnomaliesStrategyStatic static_;

    private CustomAnomaliesStrategy() {}
    /**
     * @return An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
     * 
     */
    public Optional<CustomAnomaliesStrategyAuto> auto() {
        return Optional.ofNullable(this.auto);
    }
    /**
     * @return A generic monitoring strategy
     * 
     */
    public List<CustomAnomaliesStrategyGeneric> generics() {
        return this.generics == null ? List.of() : this.generics;
    }
    /**
     * @return A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
     * 
     */
    public Optional<CustomAnomaliesStrategyStatic> static_() {
        return Optional.ofNullable(this.static_);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomAnomaliesStrategy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CustomAnomaliesStrategyAuto auto;
        private @Nullable List<CustomAnomaliesStrategyGeneric> generics;
        private @Nullable CustomAnomaliesStrategyStatic static_;
        public Builder() {}
        public Builder(CustomAnomaliesStrategy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auto = defaults.auto;
    	      this.generics = defaults.generics;
    	      this.static_ = defaults.static_;
        }

        @CustomType.Setter
        public Builder auto(@Nullable CustomAnomaliesStrategyAuto auto) {
            this.auto = auto;
            return this;
        }
        @CustomType.Setter
        public Builder generics(@Nullable List<CustomAnomaliesStrategyGeneric> generics) {
            this.generics = generics;
            return this;
        }
        public Builder generics(CustomAnomaliesStrategyGeneric... generics) {
            return generics(List.of(generics));
        }
        @CustomType.Setter("static")
        public Builder static_(@Nullable CustomAnomaliesStrategyStatic static_) {
            this.static_ = static_;
            return this;
        }
        public CustomAnomaliesStrategy build() {
            final var o = new CustomAnomaliesStrategy();
            o.auto = auto;
            o.generics = generics;
            o.static_ = static_;
            return o;
        }
    }
}
