// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.SloV2ErrorBudgetBurnRateArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SloV2State extends com.pulumi.resources.ResourceArgs {

    public static final SloV2State Empty = new SloV2State();

    /**
     * The description of the SLO
     * 
     */
    @Import(name="customDescription")
    private @Nullable Output<String> customDescription;

    /**
     * @return The description of the SLO
     * 
     */
    public Optional<Output<String>> customDescription() {
        return Optional.ofNullable(this.customDescription);
    }

    /**
     * This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * ### Error budget burn rate
     * 
     */
    @Import(name="errorBudgetBurnRate")
    private @Nullable Output<SloV2ErrorBudgetBurnRateArgs> errorBudgetBurnRate;

    /**
     * @return ### Error budget burn rate
     * 
     */
    public Optional<Output<SloV2ErrorBudgetBurnRateArgs>> errorBudgetBurnRate() {
        return Optional.ofNullable(this.errorBudgetBurnRate);
    }

    /**
     * Possible Values: `AGGREGATE`
     * 
     */
    @Import(name="evaluationType")
    private @Nullable Output<String> evaluationType;

    /**
     * @return Possible Values: `AGGREGATE`
     * 
     */
    public Optional<Output<String>> evaluationType() {
        return Optional.ofNullable(this.evaluationType);
    }

    /**
     * Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
     * 
     */
    @Import(name="evaluationWindow")
    private @Nullable Output<String> evaluationWindow;

    /**
     * @return Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
     * 
     */
    public Optional<Output<String>> evaluationWindow() {
        return Optional.ofNullable(this.evaluationWindow);
    }

    /**
     * Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(&#34;SERVICE&#34;)).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(&#34;SERVICE&#34;)).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The ID of this setting when referred to by the Config REST API V1
     * 
     */
    @Import(name="legacyId")
    private @Nullable Output<String> legacyId;

    /**
     * @return The ID of this setting when referred to by the Config REST API V1
     * 
     */
    public Optional<Output<String>> legacyId() {
        return Optional.ofNullable(this.legacyId);
    }

    /**
     * For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
     * 
     */
    @Import(name="metricExpression")
    private @Nullable Output<String> metricExpression;

    /**
     * @return For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
     * 
     */
    public Optional<Output<String>> metricExpression() {
        return Optional.ofNullable(this.metricExpression);
    }

    /**
     * Metric name
     * 
     */
    @Import(name="metricName")
    private @Nullable Output<String> metricName;

    /**
     * @return Metric name
     * 
     */
    public Optional<Output<String>> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * SLO name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return SLO name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set the target value of the SLO. A percentage below this value indicates a failure.
     * 
     */
    @Import(name="targetSuccess")
    private @Nullable Output<Double> targetSuccess;

    /**
     * @return Set the target value of the SLO. A percentage below this value indicates a failure.
     * 
     */
    public Optional<Output<Double>> targetSuccess() {
        return Optional.ofNullable(this.targetSuccess);
    }

    /**
     * Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
     * 
     */
    @Import(name="targetWarning")
    private @Nullable Output<Double> targetWarning;

    /**
     * @return Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
     * 
     */
    public Optional<Output<Double>> targetWarning() {
        return Optional.ofNullable(this.targetWarning);
    }

    private SloV2State() {}

    private SloV2State(SloV2State $) {
        this.customDescription = $.customDescription;
        this.enabled = $.enabled;
        this.errorBudgetBurnRate = $.errorBudgetBurnRate;
        this.evaluationType = $.evaluationType;
        this.evaluationWindow = $.evaluationWindow;
        this.filter = $.filter;
        this.legacyId = $.legacyId;
        this.metricExpression = $.metricExpression;
        this.metricName = $.metricName;
        this.name = $.name;
        this.targetSuccess = $.targetSuccess;
        this.targetWarning = $.targetWarning;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloV2State $;

        public Builder() {
            $ = new SloV2State();
        }

        public Builder(SloV2State defaults) {
            $ = new SloV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDescription The description of the SLO
         * 
         * @return builder
         * 
         */
        public Builder customDescription(@Nullable Output<String> customDescription) {
            $.customDescription = customDescription;
            return this;
        }

        /**
         * @param customDescription The description of the SLO
         * 
         * @return builder
         * 
         */
        public Builder customDescription(String customDescription) {
            return customDescription(Output.of(customDescription));
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled This setting is enabled (`true`) or disabled (`false`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param errorBudgetBurnRate ### Error budget burn rate
         * 
         * @return builder
         * 
         */
        public Builder errorBudgetBurnRate(@Nullable Output<SloV2ErrorBudgetBurnRateArgs> errorBudgetBurnRate) {
            $.errorBudgetBurnRate = errorBudgetBurnRate;
            return this;
        }

        /**
         * @param errorBudgetBurnRate ### Error budget burn rate
         * 
         * @return builder
         * 
         */
        public Builder errorBudgetBurnRate(SloV2ErrorBudgetBurnRateArgs errorBudgetBurnRate) {
            return errorBudgetBurnRate(Output.of(errorBudgetBurnRate));
        }

        /**
         * @param evaluationType Possible Values: `AGGREGATE`
         * 
         * @return builder
         * 
         */
        public Builder evaluationType(@Nullable Output<String> evaluationType) {
            $.evaluationType = evaluationType;
            return this;
        }

        /**
         * @param evaluationType Possible Values: `AGGREGATE`
         * 
         * @return builder
         * 
         */
        public Builder evaluationType(String evaluationType) {
            return evaluationType(Output.of(evaluationType));
        }

        /**
         * @param evaluationWindow Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindow(@Nullable Output<String> evaluationWindow) {
            $.evaluationWindow = evaluationWindow;
            return this;
        }

        /**
         * @param evaluationWindow Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindow(String evaluationWindow) {
            return evaluationWindow(Output.of(evaluationWindow));
        }

        /**
         * @param filter Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(&#34;SERVICE&#34;)).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(&#34;SERVICE&#34;)).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param legacyId The ID of this setting when referred to by the Config REST API V1
         * 
         * @return builder
         * 
         */
        public Builder legacyId(@Nullable Output<String> legacyId) {
            $.legacyId = legacyId;
            return this;
        }

        /**
         * @param legacyId The ID of this setting when referred to by the Config REST API V1
         * 
         * @return builder
         * 
         */
        public Builder legacyId(String legacyId) {
            return legacyId(Output.of(legacyId));
        }

        /**
         * @param metricExpression For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
         * 
         * @return builder
         * 
         */
        public Builder metricExpression(@Nullable Output<String> metricExpression) {
            $.metricExpression = metricExpression;
            return this;
        }

        /**
         * @param metricExpression For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
         * 
         * @return builder
         * 
         */
        public Builder metricExpression(String metricExpression) {
            return metricExpression(Output.of(metricExpression));
        }

        /**
         * @param metricName Metric name
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName Metric name
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param name SLO name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name SLO name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param targetSuccess Set the target value of the SLO. A percentage below this value indicates a failure.
         * 
         * @return builder
         * 
         */
        public Builder targetSuccess(@Nullable Output<Double> targetSuccess) {
            $.targetSuccess = targetSuccess;
            return this;
        }

        /**
         * @param targetSuccess Set the target value of the SLO. A percentage below this value indicates a failure.
         * 
         * @return builder
         * 
         */
        public Builder targetSuccess(Double targetSuccess) {
            return targetSuccess(Output.of(targetSuccess));
        }

        /**
         * @param targetWarning Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
         * 
         * @return builder
         * 
         */
        public Builder targetWarning(@Nullable Output<Double> targetWarning) {
            $.targetWarning = targetWarning;
            return this;
        }

        /**
         * @param targetWarning Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
         * 
         * @return builder
         * 
         */
        public Builder targetWarning(Double targetWarning) {
            return targetWarning(Output.of(targetWarning));
        }

        public SloV2State build() {
            return $;
        }
    }

}
