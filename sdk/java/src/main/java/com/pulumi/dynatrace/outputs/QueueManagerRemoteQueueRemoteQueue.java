// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class QueueManagerRemoteQueueRemoteQueue {
    private @Nullable List<String> clusterVisibilities;
    private String localQueueName;
    private String remoteQueueManager;
    private String remoteQueueName;

    private QueueManagerRemoteQueueRemoteQueue() {}
    public List<String> clusterVisibilities() {
        return this.clusterVisibilities == null ? List.of() : this.clusterVisibilities;
    }
    public String localQueueName() {
        return this.localQueueName;
    }
    public String remoteQueueManager() {
        return this.remoteQueueManager;
    }
    public String remoteQueueName() {
        return this.remoteQueueName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueManagerRemoteQueueRemoteQueue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> clusterVisibilities;
        private String localQueueName;
        private String remoteQueueManager;
        private String remoteQueueName;
        public Builder() {}
        public Builder(QueueManagerRemoteQueueRemoteQueue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterVisibilities = defaults.clusterVisibilities;
    	      this.localQueueName = defaults.localQueueName;
    	      this.remoteQueueManager = defaults.remoteQueueManager;
    	      this.remoteQueueName = defaults.remoteQueueName;
        }

        @CustomType.Setter
        public Builder clusterVisibilities(@Nullable List<String> clusterVisibilities) {
            this.clusterVisibilities = clusterVisibilities;
            return this;
        }
        public Builder clusterVisibilities(String... clusterVisibilities) {
            return clusterVisibilities(List.of(clusterVisibilities));
        }
        @CustomType.Setter
        public Builder localQueueName(String localQueueName) {
            this.localQueueName = Objects.requireNonNull(localQueueName);
            return this;
        }
        @CustomType.Setter
        public Builder remoteQueueManager(String remoteQueueManager) {
            this.remoteQueueManager = Objects.requireNonNull(remoteQueueManager);
            return this;
        }
        @CustomType.Setter
        public Builder remoteQueueName(String remoteQueueName) {
            this.remoteQueueName = Objects.requireNonNull(remoteQueueName);
            return this;
        }
        public QueueManagerRemoteQueueRemoteQueue build() {
            final var o = new QueueManagerRemoteQueueRemoteQueue();
            o.clusterVisibilities = clusterVisibilities;
            o.localQueueName = localQueueName;
            o.remoteQueueManager = remoteQueueManager;
            o.remoteQueueName = remoteQueueName;
            return o;
        }
    }
}
