// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.FailureDetectionRulesConditionsConditionPredicateArgs;
import java.lang.String;
import java.util.Objects;


public final class FailureDetectionRulesConditionsConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FailureDetectionRulesConditionsConditionArgs Empty = new FailureDetectionRulesConditionsConditionArgs();

    @Import(name="attribute", required=true)
    private Output<String> attribute;

    public Output<String> attribute() {
        return this.attribute;
    }

    @Import(name="predicate", required=true)
    private Output<FailureDetectionRulesConditionsConditionPredicateArgs> predicate;

    public Output<FailureDetectionRulesConditionsConditionPredicateArgs> predicate() {
        return this.predicate;
    }

    private FailureDetectionRulesConditionsConditionArgs() {}

    private FailureDetectionRulesConditionsConditionArgs(FailureDetectionRulesConditionsConditionArgs $) {
        this.attribute = $.attribute;
        this.predicate = $.predicate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailureDetectionRulesConditionsConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailureDetectionRulesConditionsConditionArgs $;

        public Builder() {
            $ = new FailureDetectionRulesConditionsConditionArgs();
        }

        public Builder(FailureDetectionRulesConditionsConditionArgs defaults) {
            $ = new FailureDetectionRulesConditionsConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder attribute(Output<String> attribute) {
            $.attribute = attribute;
            return this;
        }

        public Builder attribute(String attribute) {
            return attribute(Output.of(attribute));
        }

        public Builder predicate(Output<FailureDetectionRulesConditionsConditionPredicateArgs> predicate) {
            $.predicate = predicate;
            return this;
        }

        public Builder predicate(FailureDetectionRulesConditionsConditionPredicateArgs predicate) {
            return predicate(Output.of(predicate));
        }

        public FailureDetectionRulesConditionsConditionArgs build() {
            $.attribute = Objects.requireNonNull($.attribute, "expected parameter 'attribute' to be non-null");
            $.predicate = Objects.requireNonNull($.predicate, "expected parameter 'predicate' to be non-null");
            return $;
        }
    }

}
