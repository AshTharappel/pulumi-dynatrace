// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BrowserMonitorPerformanceThresholdsThresholdArgs;
import java.util.List;
import java.util.Objects;


public final class BrowserMonitorPerformanceThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrowserMonitorPerformanceThresholdsArgs Empty = new BrowserMonitorPerformanceThresholdsArgs();

    @Import(name="thresholds", required=true)
    private Output<List<BrowserMonitorPerformanceThresholdsThresholdArgs>> thresholds;

    public Output<List<BrowserMonitorPerformanceThresholdsThresholdArgs>> thresholds() {
        return this.thresholds;
    }

    private BrowserMonitorPerformanceThresholdsArgs() {}

    private BrowserMonitorPerformanceThresholdsArgs(BrowserMonitorPerformanceThresholdsArgs $) {
        this.thresholds = $.thresholds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrowserMonitorPerformanceThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrowserMonitorPerformanceThresholdsArgs $;

        public Builder() {
            $ = new BrowserMonitorPerformanceThresholdsArgs();
        }

        public Builder(BrowserMonitorPerformanceThresholdsArgs defaults) {
            $ = new BrowserMonitorPerformanceThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder thresholds(Output<List<BrowserMonitorPerformanceThresholdsThresholdArgs>> thresholds) {
            $.thresholds = thresholds;
            return this;
        }

        public Builder thresholds(List<BrowserMonitorPerformanceThresholdsThresholdArgs> thresholds) {
            return thresholds(Output.of(thresholds));
        }

        public Builder thresholds(BrowserMonitorPerformanceThresholdsThresholdArgs... thresholds) {
            return thresholds(List.of(thresholds));
        }

        public BrowserMonitorPerformanceThresholdsArgs build() {
            $.thresholds = Objects.requireNonNull($.thresholds, "expected parameter 'thresholds' to be non-null");
            return $;
        }
    }

}
