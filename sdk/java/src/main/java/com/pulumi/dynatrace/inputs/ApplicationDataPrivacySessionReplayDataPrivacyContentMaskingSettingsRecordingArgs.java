// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs Empty = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs();

    @Import(name="preset", required=true)
    private Output<String> preset;

    public Output<String> preset() {
        return this.preset;
    }

    @Import(name="rules")
    private @Nullable Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesArgs> rules;

    public Optional<Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesArgs>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs() {}

    private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs $) {
        this.preset = $.preset;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs $;

        public Builder() {
            $ = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs();
        }

        public Builder(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs defaults) {
            $ = new ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs(Objects.requireNonNull(defaults));
        }

        public Builder preset(Output<String> preset) {
            $.preset = preset;
            return this;
        }

        public Builder preset(String preset) {
            return preset(Output.of(preset));
        }

        public Builder rules(@Nullable Output<ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesArgs> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesArgs rules) {
            return rules(Output.of(rules));
        }

        public ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingArgs build() {
            $.preset = Objects.requireNonNull($.preset, "expected parameter 'preset' to be non-null");
            return $;
        }
    }

}
