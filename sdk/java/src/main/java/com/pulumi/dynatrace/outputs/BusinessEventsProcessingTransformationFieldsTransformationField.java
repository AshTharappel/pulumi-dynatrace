// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BusinessEventsProcessingTransformationFieldsTransformationField {
    private Boolean array;
    private String name;
    private Boolean optional;
    private Boolean readonly;
    private String type;

    private BusinessEventsProcessingTransformationFieldsTransformationField() {}
    public Boolean array() {
        return this.array;
    }
    public String name() {
        return this.name;
    }
    public Boolean optional() {
        return this.optional;
    }
    public Boolean readonly() {
        return this.readonly;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BusinessEventsProcessingTransformationFieldsTransformationField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean array;
        private String name;
        private Boolean optional;
        private Boolean readonly;
        private String type;
        public Builder() {}
        public Builder(BusinessEventsProcessingTransformationFieldsTransformationField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.array = defaults.array;
    	      this.name = defaults.name;
    	      this.optional = defaults.optional;
    	      this.readonly = defaults.readonly;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder array(Boolean array) {
            this.array = Objects.requireNonNull(array);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            this.optional = Objects.requireNonNull(optional);
            return this;
        }
        @CustomType.Setter
        public Builder readonly(Boolean readonly) {
            this.readonly = Objects.requireNonNull(readonly);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public BusinessEventsProcessingTransformationFieldsTransformationField build() {
            final var o = new BusinessEventsProcessingTransformationFieldsTransformationField();
            o.array = array;
            o.name = name;
            o.optional = optional;
            o.readonly = readonly;
            o.type = type;
            return o;
        }
    }
}
