// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseAnomaliesDbConnectFailuresArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseAnomaliesDbConnectFailuresArgs Empty = new DatabaseAnomaliesDbConnectFailuresArgs();

    /**
     * Number of failed database connections during any **eval_period** minutes period to trigger an alert
     * 
     */
    @Import(name="connectionFailsCount")
    private @Nullable Output<Integer> connectionFailsCount;

    /**
     * @return Number of failed database connections during any **eval_period** minutes period to trigger an alert
     * 
     */
    public Optional<Output<Integer>> connectionFailsCount() {
        return Optional.ofNullable(this.connectionFailsCount);
    }

    /**
     * The *X* minutes time period during which the **connection*fails*count** is evaluated
     * 
     */
    @Import(name="evalPeriod")
    private @Nullable Output<Integer> evalPeriod;

    /**
     * @return The *X* minutes time period during which the **connection*fails*count** is evaluated
     * 
     */
    public Optional<Output<Integer>> evalPeriod() {
        return Optional.ofNullable(this.evalPeriod);
    }

    private DatabaseAnomaliesDbConnectFailuresArgs() {}

    private DatabaseAnomaliesDbConnectFailuresArgs(DatabaseAnomaliesDbConnectFailuresArgs $) {
        this.connectionFailsCount = $.connectionFailsCount;
        this.evalPeriod = $.evalPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseAnomaliesDbConnectFailuresArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseAnomaliesDbConnectFailuresArgs $;

        public Builder() {
            $ = new DatabaseAnomaliesDbConnectFailuresArgs();
        }

        public Builder(DatabaseAnomaliesDbConnectFailuresArgs defaults) {
            $ = new DatabaseAnomaliesDbConnectFailuresArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionFailsCount Number of failed database connections during any **eval_period** minutes period to trigger an alert
         * 
         * @return builder
         * 
         */
        public Builder connectionFailsCount(@Nullable Output<Integer> connectionFailsCount) {
            $.connectionFailsCount = connectionFailsCount;
            return this;
        }

        /**
         * @param connectionFailsCount Number of failed database connections during any **eval_period** minutes period to trigger an alert
         * 
         * @return builder
         * 
         */
        public Builder connectionFailsCount(Integer connectionFailsCount) {
            return connectionFailsCount(Output.of(connectionFailsCount));
        }

        /**
         * @param evalPeriod The *X* minutes time period during which the **connection*fails*count** is evaluated
         * 
         * @return builder
         * 
         */
        public Builder evalPeriod(@Nullable Output<Integer> evalPeriod) {
            $.evalPeriod = evalPeriod;
            return this;
        }

        /**
         * @param evalPeriod The *X* minutes time period during which the **connection*fails*count** is evaluated
         * 
         * @return builder
         * 
         */
        public Builder evalPeriod(Integer evalPeriod) {
            return evalPeriod(Output.of(evalPeriod));
        }

        public DatabaseAnomaliesDbConnectFailuresArgs build() {
            return $;
        }
    }

}
