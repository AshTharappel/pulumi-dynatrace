// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.HostAnomaliesDisksSpaceThresholdsArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostAnomaliesDisksSpaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAnomaliesDisksSpaceArgs Empty = new HostAnomaliesDisksSpaceArgs();

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="thresholds")
    private @Nullable Output<HostAnomaliesDisksSpaceThresholdsArgs> thresholds;

    public Optional<Output<HostAnomaliesDisksSpaceThresholdsArgs>> thresholds() {
        return Optional.ofNullable(this.thresholds);
    }

    private HostAnomaliesDisksSpaceArgs() {}

    private HostAnomaliesDisksSpaceArgs(HostAnomaliesDisksSpaceArgs $) {
        this.enabled = $.enabled;
        this.thresholds = $.thresholds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAnomaliesDisksSpaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAnomaliesDisksSpaceArgs $;

        public Builder() {
            $ = new HostAnomaliesDisksSpaceArgs();
        }

        public Builder(HostAnomaliesDisksSpaceArgs defaults) {
            $ = new HostAnomaliesDisksSpaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder thresholds(@Nullable Output<HostAnomaliesDisksSpaceThresholdsArgs> thresholds) {
            $.thresholds = thresholds;
            return this;
        }

        public Builder thresholds(HostAnomaliesDisksSpaceThresholdsArgs thresholds) {
            return thresholds(Output.of(thresholds));
        }

        public HostAnomaliesDisksSpaceArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
