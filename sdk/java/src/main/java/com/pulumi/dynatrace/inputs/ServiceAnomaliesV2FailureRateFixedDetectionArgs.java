// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtectionArgs;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class ServiceAnomaliesV2FailureRateFixedDetectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceAnomaliesV2FailureRateFixedDetectionArgs Empty = new ServiceAnomaliesV2FailureRateFixedDetectionArgs();

    @Import(name="overAlertingProtection", required=true)
    private Output<ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtectionArgs> overAlertingProtection;

    public Output<ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtectionArgs> overAlertingProtection() {
        return this.overAlertingProtection;
    }

    @Import(name="sensitivity", required=true)
    private Output<String> sensitivity;

    public Output<String> sensitivity() {
        return this.sensitivity;
    }

    @Import(name="threshold", required=true)
    private Output<Double> threshold;

    public Output<Double> threshold() {
        return this.threshold;
    }

    private ServiceAnomaliesV2FailureRateFixedDetectionArgs() {}

    private ServiceAnomaliesV2FailureRateFixedDetectionArgs(ServiceAnomaliesV2FailureRateFixedDetectionArgs $) {
        this.overAlertingProtection = $.overAlertingProtection;
        this.sensitivity = $.sensitivity;
        this.threshold = $.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceAnomaliesV2FailureRateFixedDetectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceAnomaliesV2FailureRateFixedDetectionArgs $;

        public Builder() {
            $ = new ServiceAnomaliesV2FailureRateFixedDetectionArgs();
        }

        public Builder(ServiceAnomaliesV2FailureRateFixedDetectionArgs defaults) {
            $ = new ServiceAnomaliesV2FailureRateFixedDetectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder overAlertingProtection(Output<ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtectionArgs> overAlertingProtection) {
            $.overAlertingProtection = overAlertingProtection;
            return this;
        }

        public Builder overAlertingProtection(ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtectionArgs overAlertingProtection) {
            return overAlertingProtection(Output.of(overAlertingProtection));
        }

        public Builder sensitivity(Output<String> sensitivity) {
            $.sensitivity = sensitivity;
            return this;
        }

        public Builder sensitivity(String sensitivity) {
            return sensitivity(Output.of(sensitivity));
        }

        public Builder threshold(Output<Double> threshold) {
            $.threshold = threshold;
            return this;
        }

        public Builder threshold(Double threshold) {
            return threshold(Output.of(threshold));
        }

        public ServiceAnomaliesV2FailureRateFixedDetectionArgs build() {
            $.overAlertingProtection = Objects.requireNonNull($.overAlertingProtection, "expected parameter 'overAlertingProtection' to be non-null");
            $.sensitivity = Objects.requireNonNull($.sensitivity, "expected parameter 'sensitivity' to be non-null");
            $.threshold = Objects.requireNonNull($.threshold, "expected parameter 'threshold' to be non-null");
            return $;
        }
    }

}
