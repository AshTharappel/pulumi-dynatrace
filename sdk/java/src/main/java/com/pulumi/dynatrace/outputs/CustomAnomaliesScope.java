// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeCustomDeviceGroupName;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeEntity;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeHostGroupName;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeHostName;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeManagementZone;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeName;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeProcessGroupId;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeProcessGroupName;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeScope;
import com.pulumi.dynatrace.outputs.CustomAnomaliesScopeTag;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class CustomAnomaliesScope {
    /**
     * @return A scope filter for the related custom device group name
     * 
     */
    private @Nullable List<CustomAnomaliesScopeCustomDeviceGroupName> customDeviceGroupNames;
    /**
     * @return A scope filter for a monitored entity identifier
     * 
     */
    private @Nullable List<CustomAnomaliesScopeEntity> entities;
    /**
     * @return A scope filter for the related host group name
     * 
     */
    private @Nullable List<CustomAnomaliesScopeHostGroupName> hostGroupNames;
    /**
     * @return A scope filter for the related host name
     * 
     */
    private @Nullable List<CustomAnomaliesScopeHostName> hostNames;
    /**
     * @return A scope filter for a management zone identifier
     * 
     */
    private @Nullable List<CustomAnomaliesScopeManagementZone> managementZones;
    /**
     * @return A scope filter for a monitored entity name
     * 
     */
    private @Nullable List<CustomAnomaliesScopeName> names;
    /**
     * @return A scope filter for a process group identifier
     * 
     */
    private @Nullable List<CustomAnomaliesScopeProcessGroupId> processGroupIds;
    /**
     * @return A scope filter for the related process group name
     * 
     */
    private @Nullable List<CustomAnomaliesScopeProcessGroupName> processGroupNames;
    /**
     * @return A generic scope filter
     * 
     */
    private @Nullable List<CustomAnomaliesScopeScope> scopes;
    /**
     * @return A scope filter for tags on entities
     * 
     */
    private @Nullable List<CustomAnomaliesScopeTag> tags;

    private CustomAnomaliesScope() {}
    /**
     * @return A scope filter for the related custom device group name
     * 
     */
    public List<CustomAnomaliesScopeCustomDeviceGroupName> customDeviceGroupNames() {
        return this.customDeviceGroupNames == null ? List.of() : this.customDeviceGroupNames;
    }
    /**
     * @return A scope filter for a monitored entity identifier
     * 
     */
    public List<CustomAnomaliesScopeEntity> entities() {
        return this.entities == null ? List.of() : this.entities;
    }
    /**
     * @return A scope filter for the related host group name
     * 
     */
    public List<CustomAnomaliesScopeHostGroupName> hostGroupNames() {
        return this.hostGroupNames == null ? List.of() : this.hostGroupNames;
    }
    /**
     * @return A scope filter for the related host name
     * 
     */
    public List<CustomAnomaliesScopeHostName> hostNames() {
        return this.hostNames == null ? List.of() : this.hostNames;
    }
    /**
     * @return A scope filter for a management zone identifier
     * 
     */
    public List<CustomAnomaliesScopeManagementZone> managementZones() {
        return this.managementZones == null ? List.of() : this.managementZones;
    }
    /**
     * @return A scope filter for a monitored entity name
     * 
     */
    public List<CustomAnomaliesScopeName> names() {
        return this.names == null ? List.of() : this.names;
    }
    /**
     * @return A scope filter for a process group identifier
     * 
     */
    public List<CustomAnomaliesScopeProcessGroupId> processGroupIds() {
        return this.processGroupIds == null ? List.of() : this.processGroupIds;
    }
    /**
     * @return A scope filter for the related process group name
     * 
     */
    public List<CustomAnomaliesScopeProcessGroupName> processGroupNames() {
        return this.processGroupNames == null ? List.of() : this.processGroupNames;
    }
    /**
     * @return A generic scope filter
     * 
     */
    public List<CustomAnomaliesScopeScope> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    /**
     * @return A scope filter for tags on entities
     * 
     */
    public List<CustomAnomaliesScopeTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomAnomaliesScope defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CustomAnomaliesScopeCustomDeviceGroupName> customDeviceGroupNames;
        private @Nullable List<CustomAnomaliesScopeEntity> entities;
        private @Nullable List<CustomAnomaliesScopeHostGroupName> hostGroupNames;
        private @Nullable List<CustomAnomaliesScopeHostName> hostNames;
        private @Nullable List<CustomAnomaliesScopeManagementZone> managementZones;
        private @Nullable List<CustomAnomaliesScopeName> names;
        private @Nullable List<CustomAnomaliesScopeProcessGroupId> processGroupIds;
        private @Nullable List<CustomAnomaliesScopeProcessGroupName> processGroupNames;
        private @Nullable List<CustomAnomaliesScopeScope> scopes;
        private @Nullable List<CustomAnomaliesScopeTag> tags;
        public Builder() {}
        public Builder(CustomAnomaliesScope defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customDeviceGroupNames = defaults.customDeviceGroupNames;
    	      this.entities = defaults.entities;
    	      this.hostGroupNames = defaults.hostGroupNames;
    	      this.hostNames = defaults.hostNames;
    	      this.managementZones = defaults.managementZones;
    	      this.names = defaults.names;
    	      this.processGroupIds = defaults.processGroupIds;
    	      this.processGroupNames = defaults.processGroupNames;
    	      this.scopes = defaults.scopes;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder customDeviceGroupNames(@Nullable List<CustomAnomaliesScopeCustomDeviceGroupName> customDeviceGroupNames) {
            this.customDeviceGroupNames = customDeviceGroupNames;
            return this;
        }
        public Builder customDeviceGroupNames(CustomAnomaliesScopeCustomDeviceGroupName... customDeviceGroupNames) {
            return customDeviceGroupNames(List.of(customDeviceGroupNames));
        }
        @CustomType.Setter
        public Builder entities(@Nullable List<CustomAnomaliesScopeEntity> entities) {
            this.entities = entities;
            return this;
        }
        public Builder entities(CustomAnomaliesScopeEntity... entities) {
            return entities(List.of(entities));
        }
        @CustomType.Setter
        public Builder hostGroupNames(@Nullable List<CustomAnomaliesScopeHostGroupName> hostGroupNames) {
            this.hostGroupNames = hostGroupNames;
            return this;
        }
        public Builder hostGroupNames(CustomAnomaliesScopeHostGroupName... hostGroupNames) {
            return hostGroupNames(List.of(hostGroupNames));
        }
        @CustomType.Setter
        public Builder hostNames(@Nullable List<CustomAnomaliesScopeHostName> hostNames) {
            this.hostNames = hostNames;
            return this;
        }
        public Builder hostNames(CustomAnomaliesScopeHostName... hostNames) {
            return hostNames(List.of(hostNames));
        }
        @CustomType.Setter
        public Builder managementZones(@Nullable List<CustomAnomaliesScopeManagementZone> managementZones) {
            this.managementZones = managementZones;
            return this;
        }
        public Builder managementZones(CustomAnomaliesScopeManagementZone... managementZones) {
            return managementZones(List.of(managementZones));
        }
        @CustomType.Setter
        public Builder names(@Nullable List<CustomAnomaliesScopeName> names) {
            this.names = names;
            return this;
        }
        public Builder names(CustomAnomaliesScopeName... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder processGroupIds(@Nullable List<CustomAnomaliesScopeProcessGroupId> processGroupIds) {
            this.processGroupIds = processGroupIds;
            return this;
        }
        public Builder processGroupIds(CustomAnomaliesScopeProcessGroupId... processGroupIds) {
            return processGroupIds(List.of(processGroupIds));
        }
        @CustomType.Setter
        public Builder processGroupNames(@Nullable List<CustomAnomaliesScopeProcessGroupName> processGroupNames) {
            this.processGroupNames = processGroupNames;
            return this;
        }
        public Builder processGroupNames(CustomAnomaliesScopeProcessGroupName... processGroupNames) {
            return processGroupNames(List.of(processGroupNames));
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<CustomAnomaliesScopeScope> scopes) {
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(CustomAnomaliesScopeScope... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<CustomAnomaliesScopeTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(CustomAnomaliesScopeTag... tags) {
            return tags(List.of(tags));
        }
        public CustomAnomaliesScope build() {
            final var o = new CustomAnomaliesScope();
            o.customDeviceGroupNames = customDeviceGroupNames;
            o.entities = entities;
            o.hostGroupNames = hostGroupNames;
            o.hostNames = hostNames;
            o.managementZones = managementZones;
            o.names = names;
            o.processGroupIds = processGroupIds;
            o.processGroupNames = processGroupNames;
            o.scopes = scopes;
            o.tags = tags;
            return o;
        }
    }
}
