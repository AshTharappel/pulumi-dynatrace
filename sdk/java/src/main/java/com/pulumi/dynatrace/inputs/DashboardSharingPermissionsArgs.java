// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.DashboardSharingPermissionsPermissionArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardSharingPermissionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardSharingPermissionsArgs Empty = new DashboardSharingPermissionsArgs();

    /**
     * Access permissions of the dashboard
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<DashboardSharingPermissionsPermissionArgs>> permissions;

    /**
     * @return Access permissions of the dashboard
     * 
     */
    public Optional<Output<List<DashboardSharingPermissionsPermissionArgs>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    private DashboardSharingPermissionsArgs() {}

    private DashboardSharingPermissionsArgs(DashboardSharingPermissionsArgs $) {
        this.permissions = $.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardSharingPermissionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardSharingPermissionsArgs $;

        public Builder() {
            $ = new DashboardSharingPermissionsArgs();
        }

        public Builder(DashboardSharingPermissionsArgs defaults) {
            $ = new DashboardSharingPermissionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param permissions Access permissions of the dashboard
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<DashboardSharingPermissionsPermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions Access permissions of the dashboard
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<DashboardSharingPermissionsPermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions Access permissions of the dashboard
         * 
         * @return builder
         * 
         */
        public Builder permissions(DashboardSharingPermissionsPermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        public DashboardSharingPermissionsArgs build() {
            return $;
        }
    }

}
