// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs;
import java.util.List;
import java.util.Objects;


public final class RumProviderBreakdownDomainNamePatternListArgs extends com.pulumi.resources.ResourceArgs {

    public static final RumProviderBreakdownDomainNamePatternListArgs Empty = new RumProviderBreakdownDomainNamePatternListArgs();

    @Import(name="domainNamePatterns", required=true)
    private Output<List<RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs>> domainNamePatterns;

    public Output<List<RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs>> domainNamePatterns() {
        return this.domainNamePatterns;
    }

    private RumProviderBreakdownDomainNamePatternListArgs() {}

    private RumProviderBreakdownDomainNamePatternListArgs(RumProviderBreakdownDomainNamePatternListArgs $) {
        this.domainNamePatterns = $.domainNamePatterns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RumProviderBreakdownDomainNamePatternListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RumProviderBreakdownDomainNamePatternListArgs $;

        public Builder() {
            $ = new RumProviderBreakdownDomainNamePatternListArgs();
        }

        public Builder(RumProviderBreakdownDomainNamePatternListArgs defaults) {
            $ = new RumProviderBreakdownDomainNamePatternListArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainNamePatterns(Output<List<RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs>> domainNamePatterns) {
            $.domainNamePatterns = domainNamePatterns;
            return this;
        }

        public Builder domainNamePatterns(List<RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs> domainNamePatterns) {
            return domainNamePatterns(Output.of(domainNamePatterns));
        }

        public Builder domainNamePatterns(RumProviderBreakdownDomainNamePatternListDomainNamePatternArgs... domainNamePatterns) {
            return domainNamePatterns(List.of(domainNamePatterns));
        }

        public RumProviderBreakdownDomainNamePatternListArgs build() {
            $.domainNamePatterns = Objects.requireNonNull($.domainNamePatterns, "expected parameter 'domainNamePatterns' to be non-null");
            return $;
        }
    }

}
