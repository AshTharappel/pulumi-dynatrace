// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class HostAnomaliesJavaOutOfThreadsThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAnomaliesJavaOutOfThreadsThresholdsArgs Empty = new HostAnomaliesJavaOutOfThreadsThresholdsArgs();

    @Import(name="exceptionCount", required=true)
    private Output<Integer> exceptionCount;

    public Output<Integer> exceptionCount() {
        return this.exceptionCount;
    }

    private HostAnomaliesJavaOutOfThreadsThresholdsArgs() {}

    private HostAnomaliesJavaOutOfThreadsThresholdsArgs(HostAnomaliesJavaOutOfThreadsThresholdsArgs $) {
        this.exceptionCount = $.exceptionCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAnomaliesJavaOutOfThreadsThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAnomaliesJavaOutOfThreadsThresholdsArgs $;

        public Builder() {
            $ = new HostAnomaliesJavaOutOfThreadsThresholdsArgs();
        }

        public Builder(HostAnomaliesJavaOutOfThreadsThresholdsArgs defaults) {
            $ = new HostAnomaliesJavaOutOfThreadsThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder exceptionCount(Output<Integer> exceptionCount) {
            $.exceptionCount = exceptionCount;
            return this;
        }

        public Builder exceptionCount(Integer exceptionCount) {
            return exceptionCount(Output.of(exceptionCount));
        }

        public HostAnomaliesJavaOutOfThreadsThresholdsArgs build() {
            $.exceptionCount = Objects.requireNonNull($.exceptionCount, "expected parameter 'exceptionCount' to be non-null");
            return $;
        }
    }

}
