// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BusinessEventsOneagentTriggersTriggerSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final BusinessEventsOneagentTriggersTriggerSourceArgs Empty = new BusinessEventsOneagentTriggersTriggerSourceArgs();

    @Import(name="dataSource", required=true)
    private Output<String> dataSource;

    public Output<String> dataSource() {
        return this.dataSource;
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private BusinessEventsOneagentTriggersTriggerSourceArgs() {}

    private BusinessEventsOneagentTriggersTriggerSourceArgs(BusinessEventsOneagentTriggersTriggerSourceArgs $) {
        this.dataSource = $.dataSource;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BusinessEventsOneagentTriggersTriggerSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BusinessEventsOneagentTriggersTriggerSourceArgs $;

        public Builder() {
            $ = new BusinessEventsOneagentTriggersTriggerSourceArgs();
        }

        public Builder(BusinessEventsOneagentTriggersTriggerSourceArgs defaults) {
            $ = new BusinessEventsOneagentTriggersTriggerSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataSource(Output<String> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        public Builder dataSource(String dataSource) {
            return dataSource(Output.of(dataSource));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public BusinessEventsOneagentTriggersTriggerSourceArgs build() {
            $.dataSource = Objects.requireNonNull($.dataSource, "expected parameter 'dataSource' to be non-null");
            return $;
        }
    }

}
