// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.WebAppAnomaliesErrorRateErrorRateAuto;
import com.pulumi.dynatrace.outputs.WebAppAnomaliesErrorRateErrorRateFixed;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebAppAnomaliesErrorRate {
    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    private Boolean enabled;
    /**
     * @return Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
     * 
     */
    private @Nullable WebAppAnomaliesErrorRateErrorRateAuto errorRateAuto;
    /**
     * @return Possible Values: `Auto`, `Fixed`
     * 
     */
    private @Nullable String errorRateDetectionMode;
    /**
     * @return no documentation available
     * 
     */
    private @Nullable WebAppAnomaliesErrorRateErrorRateFixed errorRateFixed;

    private WebAppAnomaliesErrorRate() {}
    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
     * 
     */
    public Optional<WebAppAnomaliesErrorRateErrorRateAuto> errorRateAuto() {
        return Optional.ofNullable(this.errorRateAuto);
    }
    /**
     * @return Possible Values: `Auto`, `Fixed`
     * 
     */
    public Optional<String> errorRateDetectionMode() {
        return Optional.ofNullable(this.errorRateDetectionMode);
    }
    /**
     * @return no documentation available
     * 
     */
    public Optional<WebAppAnomaliesErrorRateErrorRateFixed> errorRateFixed() {
        return Optional.ofNullable(this.errorRateFixed);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAppAnomaliesErrorRate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable WebAppAnomaliesErrorRateErrorRateAuto errorRateAuto;
        private @Nullable String errorRateDetectionMode;
        private @Nullable WebAppAnomaliesErrorRateErrorRateFixed errorRateFixed;
        public Builder() {}
        public Builder(WebAppAnomaliesErrorRate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.errorRateAuto = defaults.errorRateAuto;
    	      this.errorRateDetectionMode = defaults.errorRateDetectionMode;
    	      this.errorRateFixed = defaults.errorRateFixed;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder errorRateAuto(@Nullable WebAppAnomaliesErrorRateErrorRateAuto errorRateAuto) {
            this.errorRateAuto = errorRateAuto;
            return this;
        }
        @CustomType.Setter
        public Builder errorRateDetectionMode(@Nullable String errorRateDetectionMode) {
            this.errorRateDetectionMode = errorRateDetectionMode;
            return this;
        }
        @CustomType.Setter
        public Builder errorRateFixed(@Nullable WebAppAnomaliesErrorRateErrorRateFixed errorRateFixed) {
            this.errorRateFixed = errorRateFixed;
            return this;
        }
        public WebAppAnomaliesErrorRate build() {
            final var o = new WebAppAnomaliesErrorRate();
            o.enabled = enabled;
            o.errorRateAuto = errorRateAuto;
            o.errorRateDetectionMode = errorRateDetectionMode;
            o.errorRateFixed = errorRateFixed;
            return o;
        }
    }
}
