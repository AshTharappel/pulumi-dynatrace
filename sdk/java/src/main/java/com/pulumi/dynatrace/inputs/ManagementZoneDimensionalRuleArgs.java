// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ManagementZoneDimensionalRuleConditionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementZoneDimensionalRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementZoneDimensionalRuleArgs Empty = new ManagementZoneDimensionalRuleArgs();

    @Import(name="appliesTo", required=true)
    private Output<String> appliesTo;

    public Output<String> appliesTo() {
        return this.appliesTo;
    }

    @Import(name="conditions")
    private @Nullable Output<List<ManagementZoneDimensionalRuleConditionArgs>> conditions;

    public Optional<Output<List<ManagementZoneDimensionalRuleConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="unknowns")
    private @Nullable Output<String> unknowns;

    public Optional<Output<String>> unknowns() {
        return Optional.ofNullable(this.unknowns);
    }

    private ManagementZoneDimensionalRuleArgs() {}

    private ManagementZoneDimensionalRuleArgs(ManagementZoneDimensionalRuleArgs $) {
        this.appliesTo = $.appliesTo;
        this.conditions = $.conditions;
        this.enabled = $.enabled;
        this.unknowns = $.unknowns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementZoneDimensionalRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementZoneDimensionalRuleArgs $;

        public Builder() {
            $ = new ManagementZoneDimensionalRuleArgs();
        }

        public Builder(ManagementZoneDimensionalRuleArgs defaults) {
            $ = new ManagementZoneDimensionalRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder appliesTo(Output<String> appliesTo) {
            $.appliesTo = appliesTo;
            return this;
        }

        public Builder appliesTo(String appliesTo) {
            return appliesTo(Output.of(appliesTo));
        }

        public Builder conditions(@Nullable Output<List<ManagementZoneDimensionalRuleConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<ManagementZoneDimensionalRuleConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(ManagementZoneDimensionalRuleConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder unknowns(@Nullable Output<String> unknowns) {
            $.unknowns = unknowns;
            return this;
        }

        public Builder unknowns(String unknowns) {
            return unknowns(Output.of(unknowns));
        }

        public ManagementZoneDimensionalRuleArgs build() {
            $.appliesTo = Objects.requireNonNull($.appliesTo, "expected parameter 'appliesTo' to be non-null");
            return $;
        }
    }

}
