// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.WebAppRequestErrorsErrorRulesErrorRuleArgs;
import java.util.List;
import java.util.Objects;


public final class WebAppRequestErrorsErrorRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppRequestErrorsErrorRulesArgs Empty = new WebAppRequestErrorsErrorRulesArgs();

    @Import(name="errorRules", required=true)
    private Output<List<WebAppRequestErrorsErrorRulesErrorRuleArgs>> errorRules;

    public Output<List<WebAppRequestErrorsErrorRulesErrorRuleArgs>> errorRules() {
        return this.errorRules;
    }

    private WebAppRequestErrorsErrorRulesArgs() {}

    private WebAppRequestErrorsErrorRulesArgs(WebAppRequestErrorsErrorRulesArgs $) {
        this.errorRules = $.errorRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppRequestErrorsErrorRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppRequestErrorsErrorRulesArgs $;

        public Builder() {
            $ = new WebAppRequestErrorsErrorRulesArgs();
        }

        public Builder(WebAppRequestErrorsErrorRulesArgs defaults) {
            $ = new WebAppRequestErrorsErrorRulesArgs(Objects.requireNonNull(defaults));
        }

        public Builder errorRules(Output<List<WebAppRequestErrorsErrorRulesErrorRuleArgs>> errorRules) {
            $.errorRules = errorRules;
            return this;
        }

        public Builder errorRules(List<WebAppRequestErrorsErrorRulesErrorRuleArgs> errorRules) {
            return errorRules(Output.of(errorRules));
        }

        public Builder errorRules(WebAppRequestErrorsErrorRulesErrorRuleArgs... errorRules) {
            return errorRules(List.of(errorRules));
        }

        public WebAppRequestErrorsErrorRulesArgs build() {
            $.errorRules = Objects.requireNonNull($.errorRules, "expected parameter 'errorRules' to be non-null");
            return $;
        }
    }

}
