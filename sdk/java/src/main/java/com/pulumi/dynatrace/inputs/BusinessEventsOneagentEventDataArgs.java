// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.BusinessEventsOneagentEventDataEventDataFieldComplexArgs;
import java.util.List;
import java.util.Objects;


public final class BusinessEventsOneagentEventDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final BusinessEventsOneagentEventDataArgs Empty = new BusinessEventsOneagentEventDataArgs();

    @Import(name="eventDataFieldComplexes", required=true)
    private Output<List<BusinessEventsOneagentEventDataEventDataFieldComplexArgs>> eventDataFieldComplexes;

    public Output<List<BusinessEventsOneagentEventDataEventDataFieldComplexArgs>> eventDataFieldComplexes() {
        return this.eventDataFieldComplexes;
    }

    private BusinessEventsOneagentEventDataArgs() {}

    private BusinessEventsOneagentEventDataArgs(BusinessEventsOneagentEventDataArgs $) {
        this.eventDataFieldComplexes = $.eventDataFieldComplexes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BusinessEventsOneagentEventDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BusinessEventsOneagentEventDataArgs $;

        public Builder() {
            $ = new BusinessEventsOneagentEventDataArgs();
        }

        public Builder(BusinessEventsOneagentEventDataArgs defaults) {
            $ = new BusinessEventsOneagentEventDataArgs(Objects.requireNonNull(defaults));
        }

        public Builder eventDataFieldComplexes(Output<List<BusinessEventsOneagentEventDataEventDataFieldComplexArgs>> eventDataFieldComplexes) {
            $.eventDataFieldComplexes = eventDataFieldComplexes;
            return this;
        }

        public Builder eventDataFieldComplexes(List<BusinessEventsOneagentEventDataEventDataFieldComplexArgs> eventDataFieldComplexes) {
            return eventDataFieldComplexes(Output.of(eventDataFieldComplexes));
        }

        public Builder eventDataFieldComplexes(BusinessEventsOneagentEventDataEventDataFieldComplexArgs... eventDataFieldComplexes) {
            return eventDataFieldComplexes(List.of(eventDataFieldComplexes));
        }

        public BusinessEventsOneagentEventDataArgs build() {
            $.eventDataFieldComplexes = Objects.requireNonNull($.eventDataFieldComplexes, "expected parameter 'eventDataFieldComplexes' to be non-null");
            return $;
        }
    }

}
