// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
    private @Nullable Boolean fallbackToInput;
    private @Nullable String patternAfter;
    private @Nullable String patternAfterSearchType;
    private @Nullable String patternBefore;
    private @Nullable String patternBeforeSearchType;
    private @Nullable String patternToReplace;
    private @Nullable String regularExpression;
    private @Nullable String replacement;
    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    private String type;

    private WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep() {}
    public Optional<Boolean> fallbackToInput() {
        return Optional.ofNullable(this.fallbackToInput);
    }
    public Optional<String> patternAfter() {
        return Optional.ofNullable(this.patternAfter);
    }
    public Optional<String> patternAfterSearchType() {
        return Optional.ofNullable(this.patternAfterSearchType);
    }
    public Optional<String> patternBefore() {
        return Optional.ofNullable(this.patternBefore);
    }
    public Optional<String> patternBeforeSearchType() {
        return Optional.ofNullable(this.patternBeforeSearchType);
    }
    public Optional<String> patternToReplace() {
        return Optional.ofNullable(this.patternToReplace);
    }
    public Optional<String> regularExpression() {
        return Optional.ofNullable(this.regularExpression);
    }
    public Optional<String> replacement() {
        return Optional.ofNullable(this.replacement);
    }
    /**
     * @return The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean fallbackToInput;
        private @Nullable String patternAfter;
        private @Nullable String patternAfterSearchType;
        private @Nullable String patternBefore;
        private @Nullable String patternBeforeSearchType;
        private @Nullable String patternToReplace;
        private @Nullable String regularExpression;
        private @Nullable String replacement;
        private String type;
        public Builder() {}
        public Builder(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fallbackToInput = defaults.fallbackToInput;
    	      this.patternAfter = defaults.patternAfter;
    	      this.patternAfterSearchType = defaults.patternAfterSearchType;
    	      this.patternBefore = defaults.patternBefore;
    	      this.patternBeforeSearchType = defaults.patternBeforeSearchType;
    	      this.patternToReplace = defaults.patternToReplace;
    	      this.regularExpression = defaults.regularExpression;
    	      this.replacement = defaults.replacement;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder fallbackToInput(@Nullable Boolean fallbackToInput) {
            this.fallbackToInput = fallbackToInput;
            return this;
        }
        @CustomType.Setter
        public Builder patternAfter(@Nullable String patternAfter) {
            this.patternAfter = patternAfter;
            return this;
        }
        @CustomType.Setter
        public Builder patternAfterSearchType(@Nullable String patternAfterSearchType) {
            this.patternAfterSearchType = patternAfterSearchType;
            return this;
        }
        @CustomType.Setter
        public Builder patternBefore(@Nullable String patternBefore) {
            this.patternBefore = patternBefore;
            return this;
        }
        @CustomType.Setter
        public Builder patternBeforeSearchType(@Nullable String patternBeforeSearchType) {
            this.patternBeforeSearchType = patternBeforeSearchType;
            return this;
        }
        @CustomType.Setter
        public Builder patternToReplace(@Nullable String patternToReplace) {
            this.patternToReplace = patternToReplace;
            return this;
        }
        @CustomType.Setter
        public Builder regularExpression(@Nullable String regularExpression) {
            this.regularExpression = regularExpression;
            return this;
        }
        @CustomType.Setter
        public Builder replacement(@Nullable String replacement) {
            this.replacement = replacement;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep build() {
            final var o = new WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep();
            o.fallbackToInput = fallbackToInput;
            o.patternAfter = patternAfter;
            o.patternAfterSearchType = patternAfterSearchType;
            o.patternBefore = patternBefore;
            o.patternBeforeSearchType = patternBeforeSearchType;
            o.patternToReplace = patternToReplace;
            o.regularExpression = regularExpression;
            o.replacement = replacement;
            o.type = type;
            return o;
        }
    }
}
