// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.CustomAnomaliesStrategyAutoArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesStrategyGenericArgs;
import com.pulumi.dynatrace.inputs.CustomAnomaliesStrategyStaticArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomAnomaliesStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomAnomaliesStrategyArgs Empty = new CustomAnomaliesStrategyArgs();

    /**
     * An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
     * 
     */
    @Import(name="auto")
    private @Nullable Output<CustomAnomaliesStrategyAutoArgs> auto;

    /**
     * @return An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
     * 
     */
    public Optional<Output<CustomAnomaliesStrategyAutoArgs>> auto() {
        return Optional.ofNullable(this.auto);
    }

    /**
     * A generic monitoring strategy
     * 
     */
    @Import(name="generics")
    private @Nullable Output<List<CustomAnomaliesStrategyGenericArgs>> generics;

    /**
     * @return A generic monitoring strategy
     * 
     */
    public Optional<Output<List<CustomAnomaliesStrategyGenericArgs>>> generics() {
        return Optional.ofNullable(this.generics);
    }

    /**
     * A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
     * 
     */
    @Import(name="static")
    private @Nullable Output<CustomAnomaliesStrategyStaticArgs> static_;

    /**
     * @return A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
     * 
     */
    public Optional<Output<CustomAnomaliesStrategyStaticArgs>> static_() {
        return Optional.ofNullable(this.static_);
    }

    private CustomAnomaliesStrategyArgs() {}

    private CustomAnomaliesStrategyArgs(CustomAnomaliesStrategyArgs $) {
        this.auto = $.auto;
        this.generics = $.generics;
        this.static_ = $.static_;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomAnomaliesStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomAnomaliesStrategyArgs $;

        public Builder() {
            $ = new CustomAnomaliesStrategyArgs();
        }

        public Builder(CustomAnomaliesStrategyArgs defaults) {
            $ = new CustomAnomaliesStrategyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auto An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
         * 
         * @return builder
         * 
         */
        public Builder auto(@Nullable Output<CustomAnomaliesStrategyAutoArgs> auto) {
            $.auto = auto;
            return this;
        }

        /**
         * @param auto An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
         * 
         * @return builder
         * 
         */
        public Builder auto(CustomAnomaliesStrategyAutoArgs auto) {
            return auto(Output.of(auto));
        }

        /**
         * @param generics A generic monitoring strategy
         * 
         * @return builder
         * 
         */
        public Builder generics(@Nullable Output<List<CustomAnomaliesStrategyGenericArgs>> generics) {
            $.generics = generics;
            return this;
        }

        /**
         * @param generics A generic monitoring strategy
         * 
         * @return builder
         * 
         */
        public Builder generics(List<CustomAnomaliesStrategyGenericArgs> generics) {
            return generics(Output.of(generics));
        }

        /**
         * @param generics A generic monitoring strategy
         * 
         * @return builder
         * 
         */
        public Builder generics(CustomAnomaliesStrategyGenericArgs... generics) {
            return generics(List.of(generics));
        }

        /**
         * @param static_ A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
         * 
         * @return builder
         * 
         */
        public Builder static_(@Nullable Output<CustomAnomaliesStrategyStaticArgs> static_) {
            $.static_ = static_;
            return this;
        }

        /**
         * @param static_ A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
         * 
         * @return builder
         * 
         */
        public Builder static_(CustomAnomaliesStrategyStaticArgs static_) {
            return static_(Output.of(static_));
        }

        public CustomAnomaliesStrategyArgs build() {
            return $;
        }
    }

}
