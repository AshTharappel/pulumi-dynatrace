// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dynatrace.outputs.HostAnomaliesJavaOutOfMemory;
import com.pulumi.dynatrace.outputs.HostAnomaliesJavaOutOfThreads;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HostAnomaliesJava {
    /**
     * @return Configuration of Java out of memory problems detection
     * 
     */
    private @Nullable HostAnomaliesJavaOutOfMemory outOfMemory;
    /**
     * @return Configuration of Java out of threads problems detection
     * 
     */
    private @Nullable HostAnomaliesJavaOutOfThreads outOfThreads;

    private HostAnomaliesJava() {}
    /**
     * @return Configuration of Java out of memory problems detection
     * 
     */
    public Optional<HostAnomaliesJavaOutOfMemory> outOfMemory() {
        return Optional.ofNullable(this.outOfMemory);
    }
    /**
     * @return Configuration of Java out of threads problems detection
     * 
     */
    public Optional<HostAnomaliesJavaOutOfThreads> outOfThreads() {
        return Optional.ofNullable(this.outOfThreads);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostAnomaliesJava defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable HostAnomaliesJavaOutOfMemory outOfMemory;
        private @Nullable HostAnomaliesJavaOutOfThreads outOfThreads;
        public Builder() {}
        public Builder(HostAnomaliesJava defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.outOfMemory = defaults.outOfMemory;
    	      this.outOfThreads = defaults.outOfThreads;
        }

        @CustomType.Setter
        public Builder outOfMemory(@Nullable HostAnomaliesJavaOutOfMemory outOfMemory) {
            this.outOfMemory = outOfMemory;
            return this;
        }
        @CustomType.Setter
        public Builder outOfThreads(@Nullable HostAnomaliesJavaOutOfThreads outOfThreads) {
            this.outOfThreads = outOfThreads;
            return this;
        }
        public HostAnomaliesJava build() {
            final var o = new HostAnomaliesJava();
            o.outOfMemory = outOfMemory;
            o.outOfThreads = outOfThreads;
            return o;
        }
    }
}
