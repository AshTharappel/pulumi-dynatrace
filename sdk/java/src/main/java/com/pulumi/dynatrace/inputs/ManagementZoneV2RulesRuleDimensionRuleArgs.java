// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementZoneV2RulesRuleDimensionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementZoneV2RulesRuleDimensionRuleArgs Empty = new ManagementZoneV2RulesRuleDimensionRuleArgs();

    @Import(name="appliesTo", required=true)
    private Output<String> appliesTo;

    public Output<String> appliesTo() {
        return this.appliesTo;
    }

    @Import(name="dimensionConditions")
    private @Nullable Output<ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsArgs> dimensionConditions;

    public Optional<Output<ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsArgs>> dimensionConditions() {
        return Optional.ofNullable(this.dimensionConditions);
    }

    private ManagementZoneV2RulesRuleDimensionRuleArgs() {}

    private ManagementZoneV2RulesRuleDimensionRuleArgs(ManagementZoneV2RulesRuleDimensionRuleArgs $) {
        this.appliesTo = $.appliesTo;
        this.dimensionConditions = $.dimensionConditions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementZoneV2RulesRuleDimensionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementZoneV2RulesRuleDimensionRuleArgs $;

        public Builder() {
            $ = new ManagementZoneV2RulesRuleDimensionRuleArgs();
        }

        public Builder(ManagementZoneV2RulesRuleDimensionRuleArgs defaults) {
            $ = new ManagementZoneV2RulesRuleDimensionRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder appliesTo(Output<String> appliesTo) {
            $.appliesTo = appliesTo;
            return this;
        }

        public Builder appliesTo(String appliesTo) {
            return appliesTo(Output.of(appliesTo));
        }

        public Builder dimensionConditions(@Nullable Output<ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsArgs> dimensionConditions) {
            $.dimensionConditions = dimensionConditions;
            return this;
        }

        public Builder dimensionConditions(ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsArgs dimensionConditions) {
            return dimensionConditions(Output.of(dimensionConditions));
        }

        public ManagementZoneV2RulesRuleDimensionRuleArgs build() {
            $.appliesTo = Objects.requireNonNull($.appliesTo, "expected parameter 'appliesTo' to be non-null");
            return $;
        }
    }

}
