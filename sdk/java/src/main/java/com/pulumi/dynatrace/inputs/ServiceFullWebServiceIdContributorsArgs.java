// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ServiceFullWebServiceIdContributorsApplicationIdArgs;
import com.pulumi.dynatrace.inputs.ServiceFullWebServiceIdContributorsContextRootArgs;
import com.pulumi.dynatrace.inputs.ServiceFullWebServiceIdContributorsServerNameArgs;
import com.pulumi.dynatrace.inputs.ServiceFullWebServiceIdContributorsWebServiceNameArgs;
import com.pulumi.dynatrace.inputs.ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceFullWebServiceIdContributorsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceFullWebServiceIdContributorsArgs Empty = new ServiceFullWebServiceIdContributorsArgs();

    @Import(name="applicationId")
    private @Nullable Output<ServiceFullWebServiceIdContributorsApplicationIdArgs> applicationId;

    public Optional<Output<ServiceFullWebServiceIdContributorsApplicationIdArgs>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    @Import(name="contextRoot")
    private @Nullable Output<ServiceFullWebServiceIdContributorsContextRootArgs> contextRoot;

    public Optional<Output<ServiceFullWebServiceIdContributorsContextRootArgs>> contextRoot() {
        return Optional.ofNullable(this.contextRoot);
    }

    /**
     * Detect the matching requests as full web services (false) or web request services (true).
     * 
     */
    @Import(name="detectAsWebRequestService", required=true)
    private Output<Boolean> detectAsWebRequestService;

    /**
     * @return Detect the matching requests as full web services (false) or web request services (true).
     * 
     */
    public Output<Boolean> detectAsWebRequestService() {
        return this.detectAsWebRequestService;
    }

    @Import(name="serverName")
    private @Nullable Output<ServiceFullWebServiceIdContributorsServerNameArgs> serverName;

    public Optional<Output<ServiceFullWebServiceIdContributorsServerNameArgs>> serverName() {
        return Optional.ofNullable(this.serverName);
    }

    @Import(name="webServiceName")
    private @Nullable Output<ServiceFullWebServiceIdContributorsWebServiceNameArgs> webServiceName;

    public Optional<Output<ServiceFullWebServiceIdContributorsWebServiceNameArgs>> webServiceName() {
        return Optional.ofNullable(this.webServiceName);
    }

    @Import(name="webServiceNamespace")
    private @Nullable Output<ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs> webServiceNamespace;

    public Optional<Output<ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs>> webServiceNamespace() {
        return Optional.ofNullable(this.webServiceNamespace);
    }

    private ServiceFullWebServiceIdContributorsArgs() {}

    private ServiceFullWebServiceIdContributorsArgs(ServiceFullWebServiceIdContributorsArgs $) {
        this.applicationId = $.applicationId;
        this.contextRoot = $.contextRoot;
        this.detectAsWebRequestService = $.detectAsWebRequestService;
        this.serverName = $.serverName;
        this.webServiceName = $.webServiceName;
        this.webServiceNamespace = $.webServiceNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceFullWebServiceIdContributorsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceFullWebServiceIdContributorsArgs $;

        public Builder() {
            $ = new ServiceFullWebServiceIdContributorsArgs();
        }

        public Builder(ServiceFullWebServiceIdContributorsArgs defaults) {
            $ = new ServiceFullWebServiceIdContributorsArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(@Nullable Output<ServiceFullWebServiceIdContributorsApplicationIdArgs> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(ServiceFullWebServiceIdContributorsApplicationIdArgs applicationId) {
            return applicationId(Output.of(applicationId));
        }

        public Builder contextRoot(@Nullable Output<ServiceFullWebServiceIdContributorsContextRootArgs> contextRoot) {
            $.contextRoot = contextRoot;
            return this;
        }

        public Builder contextRoot(ServiceFullWebServiceIdContributorsContextRootArgs contextRoot) {
            return contextRoot(Output.of(contextRoot));
        }

        /**
         * @param detectAsWebRequestService Detect the matching requests as full web services (false) or web request services (true).
         * 
         * @return builder
         * 
         */
        public Builder detectAsWebRequestService(Output<Boolean> detectAsWebRequestService) {
            $.detectAsWebRequestService = detectAsWebRequestService;
            return this;
        }

        /**
         * @param detectAsWebRequestService Detect the matching requests as full web services (false) or web request services (true).
         * 
         * @return builder
         * 
         */
        public Builder detectAsWebRequestService(Boolean detectAsWebRequestService) {
            return detectAsWebRequestService(Output.of(detectAsWebRequestService));
        }

        public Builder serverName(@Nullable Output<ServiceFullWebServiceIdContributorsServerNameArgs> serverName) {
            $.serverName = serverName;
            return this;
        }

        public Builder serverName(ServiceFullWebServiceIdContributorsServerNameArgs serverName) {
            return serverName(Output.of(serverName));
        }

        public Builder webServiceName(@Nullable Output<ServiceFullWebServiceIdContributorsWebServiceNameArgs> webServiceName) {
            $.webServiceName = webServiceName;
            return this;
        }

        public Builder webServiceName(ServiceFullWebServiceIdContributorsWebServiceNameArgs webServiceName) {
            return webServiceName(Output.of(webServiceName));
        }

        public Builder webServiceNamespace(@Nullable Output<ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs> webServiceNamespace) {
            $.webServiceNamespace = webServiceNamespace;
            return this;
        }

        public Builder webServiceNamespace(ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs webServiceNamespace) {
            return webServiceNamespace(Output.of(webServiceNamespace));
        }

        public ServiceFullWebServiceIdContributorsArgs build() {
            $.detectAsWebRequestService = Objects.requireNonNull($.detectAsWebRequestService, "expected parameter 'detectAsWebRequestService' to be non-null");
            return $;
        }
    }

}
