// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataPrivacyMasking {
    private @Nullable String ipAddressMasking;
    /**
     * @return Dynatrace captures the IP addresses of your end-users to determine the regions from which they access your application. To learn more, visit [Mask IPs and GPS coordinates](https://dt-url.net/mask-end-users-ip-addresses).. Dynatrace also captures GPS data from mobile apps that provide their users with the option of sharing geolocation data. On the server side, Dynatrace captures IP addresses to enable detailed troubleshooting for Dynatrace service calls.
     * 
     */
    private Boolean ipAddressMaskingEnabled;
    private Boolean personalDataUriMaskingEnabled;
    private Boolean userActionMaskingEnabled;

    private DataPrivacyMasking() {}
    public Optional<String> ipAddressMasking() {
        return Optional.ofNullable(this.ipAddressMasking);
    }
    /**
     * @return Dynatrace captures the IP addresses of your end-users to determine the regions from which they access your application. To learn more, visit [Mask IPs and GPS coordinates](https://dt-url.net/mask-end-users-ip-addresses).. Dynatrace also captures GPS data from mobile apps that provide their users with the option of sharing geolocation data. On the server side, Dynatrace captures IP addresses to enable detailed troubleshooting for Dynatrace service calls.
     * 
     */
    public Boolean ipAddressMaskingEnabled() {
        return this.ipAddressMaskingEnabled;
    }
    public Boolean personalDataUriMaskingEnabled() {
        return this.personalDataUriMaskingEnabled;
    }
    public Boolean userActionMaskingEnabled() {
        return this.userActionMaskingEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataPrivacyMasking defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ipAddressMasking;
        private Boolean ipAddressMaskingEnabled;
        private Boolean personalDataUriMaskingEnabled;
        private Boolean userActionMaskingEnabled;
        public Builder() {}
        public Builder(DataPrivacyMasking defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAddressMasking = defaults.ipAddressMasking;
    	      this.ipAddressMaskingEnabled = defaults.ipAddressMaskingEnabled;
    	      this.personalDataUriMaskingEnabled = defaults.personalDataUriMaskingEnabled;
    	      this.userActionMaskingEnabled = defaults.userActionMaskingEnabled;
        }

        @CustomType.Setter
        public Builder ipAddressMasking(@Nullable String ipAddressMasking) {
            this.ipAddressMasking = ipAddressMasking;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressMaskingEnabled(Boolean ipAddressMaskingEnabled) {
            this.ipAddressMaskingEnabled = Objects.requireNonNull(ipAddressMaskingEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder personalDataUriMaskingEnabled(Boolean personalDataUriMaskingEnabled) {
            this.personalDataUriMaskingEnabled = Objects.requireNonNull(personalDataUriMaskingEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder userActionMaskingEnabled(Boolean userActionMaskingEnabled) {
            this.userActionMaskingEnabled = Objects.requireNonNull(userActionMaskingEnabled);
            return this;
        }
        public DataPrivacyMasking build() {
            final var o = new DataPrivacyMasking();
            o.ipAddressMasking = ipAddressMasking;
            o.ipAddressMaskingEnabled = ipAddressMaskingEnabled;
            o.personalDataUriMaskingEnabled = personalDataUriMaskingEnabled;
            o.userActionMaskingEnabled = userActionMaskingEnabled;
            return o;
        }
    }
}
