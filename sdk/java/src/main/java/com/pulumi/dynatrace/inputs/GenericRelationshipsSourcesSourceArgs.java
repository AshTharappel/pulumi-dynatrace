// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.GenericRelationshipsSourcesSourceMappingRulesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenericRelationshipsSourcesSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericRelationshipsSourcesSourceArgs Empty = new GenericRelationshipsSourcesSourceArgs();

    @Import(name="condition")
    private @Nullable Output<String> condition;

    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="mappingRules")
    private @Nullable Output<GenericRelationshipsSourcesSourceMappingRulesArgs> mappingRules;

    public Optional<Output<GenericRelationshipsSourcesSourceMappingRulesArgs>> mappingRules() {
        return Optional.ofNullable(this.mappingRules);
    }

    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    public Output<String> sourceType() {
        return this.sourceType;
    }

    private GenericRelationshipsSourcesSourceArgs() {}

    private GenericRelationshipsSourcesSourceArgs(GenericRelationshipsSourcesSourceArgs $) {
        this.condition = $.condition;
        this.mappingRules = $.mappingRules;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericRelationshipsSourcesSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericRelationshipsSourcesSourceArgs $;

        public Builder() {
            $ = new GenericRelationshipsSourcesSourceArgs();
        }

        public Builder(GenericRelationshipsSourcesSourceArgs defaults) {
            $ = new GenericRelationshipsSourcesSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        public Builder mappingRules(@Nullable Output<GenericRelationshipsSourcesSourceMappingRulesArgs> mappingRules) {
            $.mappingRules = mappingRules;
            return this;
        }

        public Builder mappingRules(GenericRelationshipsSourcesSourceMappingRulesArgs mappingRules) {
            return mappingRules(Output.of(mappingRules));
        }

        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public GenericRelationshipsSourcesSourceArgs build() {
            $.sourceType = Objects.requireNonNull($.sourceType, "expected parameter 'sourceType' to be non-null");
            return $;
        }
    }

}
