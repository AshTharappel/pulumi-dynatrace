// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyRequestsState extends com.pulumi.resources.ResourceArgs {

    public static final KeyRequestsState Empty = new KeyRequestsState();

    /**
     * The names of the key requests
     * 
     */
    @Import(name="names")
    private @Nullable Output<List<String>> names;

    /**
     * @return The names of the key requests
     * 
     */
    public Optional<Output<List<String>>> names() {
        return Optional.ofNullable(this.names);
    }

    /**
     * Whether to create an entry point or not
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return Whether to create an entry point or not
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    private KeyRequestsState() {}

    private KeyRequestsState(KeyRequestsState $) {
        this.names = $.names;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyRequestsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyRequestsState $;

        public Builder() {
            $ = new KeyRequestsState();
        }

        public Builder(KeyRequestsState defaults) {
            $ = new KeyRequestsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param names The names of the key requests
         * 
         * @return builder
         * 
         */
        public Builder names(@Nullable Output<List<String>> names) {
            $.names = names;
            return this;
        }

        /**
         * @param names The names of the key requests
         * 
         * @return builder
         * 
         */
        public Builder names(List<String> names) {
            return names(Output.of(names));
        }

        /**
         * @param names The names of the key requests
         * 
         * @return builder
         * 
         */
        public Builder names(String... names) {
            return names(List.of(names));
        }

        /**
         * @param service Whether to create an entry point or not
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service Whether to create an entry point or not
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public KeyRequestsState build() {
            return $;
        }
    }

}
