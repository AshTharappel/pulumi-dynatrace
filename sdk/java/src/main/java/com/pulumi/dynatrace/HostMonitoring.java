// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.HostMonitoringArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.HostMonitoringState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/hostMonitoring:HostMonitoring")
public class HostMonitoring extends com.pulumi.resources.CustomResource {
    /**
     * An auto-injection disabled with [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.
     * 
     */
    @Export(name="autoInjection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> autoInjection;

    /**
     * @return An auto-injection disabled with [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.
     * 
     */
    public Output<Boolean> autoInjection() {
        return this.autoInjection;
    }
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return This setting is enabled (`true`) or disabled (`false`)
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Dynatrace uses full-stack monitoring by default, to monitor every aspect of your environment, including all processes, services, and applications detected on your hosts.
     * 
     */
    @Export(name="fullStack", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> fullStack;

    /**
     * @return Dynatrace uses full-stack monitoring by default, to monitor every aspect of your environment, including all processes, services, and applications detected on your hosts.
     * 
     */
    public Output<Boolean> fullStack() {
        return this.fullStack;
    }
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    @Export(name="hostId", refs={String.class}, tree="[0]")
    private Output<String> hostId;

    /**
     * @return The scope of this settings. If the settings should cover the whole environment, just don&#39;t specify any scope.
     * 
     */
    public Output<String> hostId() {
        return this.hostId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HostMonitoring(String name) {
        this(name, HostMonitoringArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HostMonitoring(String name, HostMonitoringArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HostMonitoring(String name, HostMonitoringArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/hostMonitoring:HostMonitoring", name, args == null ? HostMonitoringArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private HostMonitoring(String name, Output<String> id, @Nullable HostMonitoringState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/hostMonitoring:HostMonitoring", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HostMonitoring get(String name, Output<String> id, @Nullable HostMonitoringState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HostMonitoring(name, id, state, options);
    }
}
