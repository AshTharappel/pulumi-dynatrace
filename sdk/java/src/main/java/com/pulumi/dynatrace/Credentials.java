// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dynatrace.CredentialsArgs;
import com.pulumi.dynatrace.Utilities;
import com.pulumi.dynatrace.inputs.CredentialsState;
import com.pulumi.dynatrace.outputs.CredentialsCredentialUsageSummary;
import com.pulumi.dynatrace.outputs.CredentialsExternal;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="dynatrace:index/credentials:Credentials")
public class Credentials extends com.pulumi.resources.CustomResource {
    /**
     * The certificate in the string format.
     * 
     */
    @Export(name="certificate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificate;

    /**
     * @return The certificate in the string format.
     * 
     */
    public Output<Optional<String>> certificate() {
        return Codegen.optional(this.certificate);
    }
    /**
     * The list contains summary data related to the use of credentials
     * 
     * @deprecated
     * `credential_usage_summary` will be removed in future versions. It&#39;s not getting filled anymore, because it&#39;s runtime data
     * 
     */
    @Deprecated /* `credential_usage_summary` will be removed in future versions. It's not getting filled anymore, because it's runtime data */
    @Export(name="credentialUsageSummaries", refs={List.class,CredentialsCredentialUsageSummary.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CredentialsCredentialUsageSummary>> credentialUsageSummaries;

    /**
     * @return The list contains summary data related to the use of credentials
     * 
     */
    public Output<Optional<List<CredentialsCredentialUsageSummary>>> credentialUsageSummaries() {
        return Codegen.optional(this.credentialUsageSummaries);
    }
    /**
     * A short description of the credentials set
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A short description of the credentials set
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * External Vault Configuration
     * 
     */
    @Export(name="external", refs={CredentialsExternal.class}, tree="[0]")
    private Output</* @Nullable */ CredentialsExternal> external;

    /**
     * @return External Vault Configuration
     * 
     */
    public Output<Optional<CredentialsExternal>> external() {
        return Codegen.optional(this.external);
    }
    /**
     * The certificate format. Possible values are `PEM`, `PKCS12` and `UNKNOWN`.
     * 
     */
    @Export(name="format", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> format;

    /**
     * @return The certificate format. Possible values are `PEM`, `PKCS12` and `UNKNOWN`.
     * 
     */
    public Output<Optional<String>> format() {
        return Codegen.optional(this.format);
    }
    /**
     * The name of the credentials set
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the credentials set
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The credentials set is available to every user (`false`) or to owner only (`true`)
     * 
     */
    @Export(name="ownerAccessOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ownerAccessOnly;

    /**
     * @return The credentials set is available to every user (`false`) or to owner only (`true`)
     * 
     */
    public Output<Optional<Boolean>> ownerAccessOnly() {
        return Codegen.optional(this.ownerAccessOnly);
    }
    /**
     * The password of the credential. Note: Terraform treats an empty string for a value as if the attribute was absent. If
     * you want to set an empty password, use the value `--empty--`.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of the credential. Note: Terraform treats an empty string for a value as if the attribute was absent. If
     * you want to set an empty password, use the value `--empty--`.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * For certificate authentication specifies whether it&#39;s public certificate auth (`true`) or not (`false`).
     * 
     */
    @Export(name="public", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> public_;

    /**
     * @return For certificate authentication specifies whether it&#39;s public certificate auth (`true`) or not (`false`).
     * 
     */
    public Output<Optional<Boolean>> public_() {
        return Codegen.optional(this.public_);
    }
    /**
     * The scope of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    /**
     * @return The scope of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }
    /**
     * Token in the string format. Specifying a token implies `Token Authentication`.
     * 
     */
    @Export(name="token", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> token;

    /**
     * @return Token in the string format. Specifying a token implies `Token Authentication`.
     * 
     */
    public Output<Optional<String>> token() {
        return Codegen.optional(this.token);
    }
    /**
     * The username of the credentials set.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return The username of the credentials set.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Credentials(String name) {
        this(name, CredentialsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Credentials(String name, CredentialsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Credentials(String name, CredentialsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/credentials:Credentials", name, args == null ? CredentialsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Credentials(String name, Output<String> id, @Nullable CredentialsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dynatrace:index/credentials:Credentials", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password",
                "token",
                "username"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Credentials get(String name, Output<String> id, @Nullable CredentialsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Credentials(name, id, state, options);
    }
}
