// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.UpdateWindowsOnceRecurrenceRecurrenceRangeArgs;
import java.util.Objects;


public final class UpdateWindowsOnceRecurrenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final UpdateWindowsOnceRecurrenceArgs Empty = new UpdateWindowsOnceRecurrenceArgs();

    @Import(name="recurrenceRange", required=true)
    private Output<UpdateWindowsOnceRecurrenceRecurrenceRangeArgs> recurrenceRange;

    public Output<UpdateWindowsOnceRecurrenceRecurrenceRangeArgs> recurrenceRange() {
        return this.recurrenceRange;
    }

    private UpdateWindowsOnceRecurrenceArgs() {}

    private UpdateWindowsOnceRecurrenceArgs(UpdateWindowsOnceRecurrenceArgs $) {
        this.recurrenceRange = $.recurrenceRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UpdateWindowsOnceRecurrenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UpdateWindowsOnceRecurrenceArgs $;

        public Builder() {
            $ = new UpdateWindowsOnceRecurrenceArgs();
        }

        public Builder(UpdateWindowsOnceRecurrenceArgs defaults) {
            $ = new UpdateWindowsOnceRecurrenceArgs(Objects.requireNonNull(defaults));
        }

        public Builder recurrenceRange(Output<UpdateWindowsOnceRecurrenceRecurrenceRangeArgs> recurrenceRange) {
            $.recurrenceRange = recurrenceRange;
            return this;
        }

        public Builder recurrenceRange(UpdateWindowsOnceRecurrenceRecurrenceRangeArgs recurrenceRange) {
            return recurrenceRange(Output.of(recurrenceRange));
        }

        public UpdateWindowsOnceRecurrenceArgs build() {
            $.recurrenceRange = Objects.requireNonNull($.recurrenceRange, "expected parameter 'recurrenceRange' to be non-null");
            return $;
        }
    }

}
