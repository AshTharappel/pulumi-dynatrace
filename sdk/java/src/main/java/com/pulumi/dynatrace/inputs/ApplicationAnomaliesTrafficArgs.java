// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.ApplicationAnomaliesTrafficDropsArgs;
import com.pulumi.dynatrace.inputs.ApplicationAnomaliesTrafficSpikesArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationAnomaliesTrafficArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationAnomaliesTrafficArgs Empty = new ApplicationAnomaliesTrafficArgs();

    /**
     * The configuration of traffic drops detection
     * 
     */
    @Import(name="drops")
    private @Nullable Output<ApplicationAnomaliesTrafficDropsArgs> drops;

    /**
     * @return The configuration of traffic drops detection
     * 
     */
    public Optional<Output<ApplicationAnomaliesTrafficDropsArgs>> drops() {
        return Optional.ofNullable(this.drops);
    }

    /**
     * The configuration of traffic spikes detection
     * 
     */
    @Import(name="spikes")
    private @Nullable Output<ApplicationAnomaliesTrafficSpikesArgs> spikes;

    /**
     * @return The configuration of traffic spikes detection
     * 
     */
    public Optional<Output<ApplicationAnomaliesTrafficSpikesArgs>> spikes() {
        return Optional.ofNullable(this.spikes);
    }

    private ApplicationAnomaliesTrafficArgs() {}

    private ApplicationAnomaliesTrafficArgs(ApplicationAnomaliesTrafficArgs $) {
        this.drops = $.drops;
        this.spikes = $.spikes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationAnomaliesTrafficArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationAnomaliesTrafficArgs $;

        public Builder() {
            $ = new ApplicationAnomaliesTrafficArgs();
        }

        public Builder(ApplicationAnomaliesTrafficArgs defaults) {
            $ = new ApplicationAnomaliesTrafficArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param drops The configuration of traffic drops detection
         * 
         * @return builder
         * 
         */
        public Builder drops(@Nullable Output<ApplicationAnomaliesTrafficDropsArgs> drops) {
            $.drops = drops;
            return this;
        }

        /**
         * @param drops The configuration of traffic drops detection
         * 
         * @return builder
         * 
         */
        public Builder drops(ApplicationAnomaliesTrafficDropsArgs drops) {
            return drops(Output.of(drops));
        }

        /**
         * @param spikes The configuration of traffic spikes detection
         * 
         * @return builder
         * 
         */
        public Builder spikes(@Nullable Output<ApplicationAnomaliesTrafficSpikesArgs> spikes) {
            $.spikes = spikes;
            return this;
        }

        /**
         * @param spikes The configuration of traffic spikes detection
         * 
         * @return builder
         * 
         */
        public Builder spikes(ApplicationAnomaliesTrafficSpikesArgs spikes) {
            return spikes(Output.of(spikes));
        }

        public ApplicationAnomaliesTrafficArgs build() {
            return $;
        }
    }

}
