// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dynatrace.inputs.OwnershipConfigOwnershipIdentifiersArgs;
import java.util.Objects;


public final class OwnershipConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final OwnershipConfigArgs Empty = new OwnershipConfigArgs();

    /**
     * Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.
     * 
     */
    @Import(name="ownershipIdentifiers", required=true)
    private Output<OwnershipConfigOwnershipIdentifiersArgs> ownershipIdentifiers;

    /**
     * @return Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.
     * 
     */
    public Output<OwnershipConfigOwnershipIdentifiersArgs> ownershipIdentifiers() {
        return this.ownershipIdentifiers;
    }

    private OwnershipConfigArgs() {}

    private OwnershipConfigArgs(OwnershipConfigArgs $) {
        this.ownershipIdentifiers = $.ownershipIdentifiers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OwnershipConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OwnershipConfigArgs $;

        public Builder() {
            $ = new OwnershipConfigArgs();
        }

        public Builder(OwnershipConfigArgs defaults) {
            $ = new OwnershipConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ownershipIdentifiers Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.
         * 
         * @return builder
         * 
         */
        public Builder ownershipIdentifiers(Output<OwnershipConfigOwnershipIdentifiersArgs> ownershipIdentifiers) {
            $.ownershipIdentifiers = ownershipIdentifiers;
            return this;
        }

        /**
         * @param ownershipIdentifiers Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.
         * 
         * @return builder
         * 
         */
        public Builder ownershipIdentifiers(OwnershipConfigOwnershipIdentifiersArgs ownershipIdentifiers) {
            return ownershipIdentifiers(Output.of(ownershipIdentifiers));
        }

        public OwnershipConfigArgs build() {
            $.ownershipIdentifiers = Objects.requireNonNull($.ownershipIdentifiers, "expected parameter 'ownershipIdentifiers' to be non-null");
            return $;
        }
    }

}
