// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dynatrace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed {
    private Double absoluteCrashRate;
    private Integer concurrentUsers;

    private MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed() {}
    public Double absoluteCrashRate() {
        return this.absoluteCrashRate;
    }
    public Integer concurrentUsers() {
        return this.concurrentUsers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double absoluteCrashRate;
        private Integer concurrentUsers;
        public Builder() {}
        public Builder(MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.absoluteCrashRate = defaults.absoluteCrashRate;
    	      this.concurrentUsers = defaults.concurrentUsers;
        }

        @CustomType.Setter
        public Builder absoluteCrashRate(Double absoluteCrashRate) {
            this.absoluteCrashRate = Objects.requireNonNull(absoluteCrashRate);
            return this;
        }
        @CustomType.Setter
        public Builder concurrentUsers(Integer concurrentUsers) {
            this.concurrentUsers = Objects.requireNonNull(concurrentUsers);
            return this;
        }
        public MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed build() {
            final var o = new MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed();
            o.absoluteCrashRate = absoluteCrashRate;
            o.concurrentUsers = concurrentUsers;
            return o;
        }
    }
}
