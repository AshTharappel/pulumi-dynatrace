{
    "name": "dynatrace",
    "displayName": "Dynatrace",
    "description": "A Pulumi package for creating and managing Dynatrace cloud resources.",
    "keywords": [
        "pulumi",
        "dynatrace",
        "category/infrastructure",
        "lbrlabs"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`dynatrace` Terraform Provider](https://github.com/dynatrace-oss/terraform-provider-dynatrace).",
    "repository": "https://github.com/lbrlabs/pulumi-dynatrace",
    "logoUrl": "https://raw.githubusercontent.com/lbrlabs/pulumi-dynatrace/master/assets/logo.svg",
    "pluginDownloadURL": "github://api.github.com/lbrlabs",
    "publisher": "Lbrlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Dynatrace cloud resources.",
            "packageName": "@lbrlabs/pulumi-dynatrace",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/dynatrace-oss/terraform-provider-dynatrace)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-dynatrace` repo](https://github.com/lbrlabs/pulumi-dynatrace/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-dynatrace` repo](https://github.com/dynatrace-oss/terraform-provider-dynatrace/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "lbrlabs_pulumi_dynatrace",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/dynatrace-oss/terraform-provider-dynatrace)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-dynatrace` repo](https://github.com/lbrlabs/pulumi-dynatrace/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-dynatrace` repo](https://github.com/dynatrace-oss/terraform-provider-dynatrace/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "dtApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_API_TOKEN",
                        "DT_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_API_TOKEN",
                        "DT_CLUSTER_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_URL",
                        "DT_CLUSTER_URL"
                    ]
                },
                "secret": true
            },
            "dtEnvUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_ENV_URL",
                        "DT_ENV_URL"
                    ]
                }
            }
        }
    },
    "types": {
        "dynatrace:index/AlertingFilters:AlertingFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingFiltersFilter:AlertingFiltersFilter"
                    },
                    "description": "A conditions for the metric usage\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingFiltersFilter:AlertingFiltersFilter": {
            "properties": {
                "custom": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustom:AlertingFiltersFilterCustom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "predefined": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterPredefined:AlertingFiltersFilterPredefined",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingFiltersFilterCustom:AlertingFiltersFilterCustom": {
            "properties": {
                "description": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomDescription:AlertingFiltersFilterCustomDescription",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomTitle:AlertingFiltersFilterCustomTitle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingFiltersFilterCustomDescription:AlertingFiltersFilterCustomDescription": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterCustomTitle:AlertingFiltersFilterCustomTitle": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterPredefined:AlertingFiltersFilterPredefined": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter": {
            "properties": {
                "customEventFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilter:AlertingProfileEventTypeFilterCustomEventFilter"
                    },
                    "description": "Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "predefinedEventFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterPredefinedEventFilter:AlertingProfileEventTypeFilterPredefinedEventFilter"
                    },
                    "description": "Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilter:AlertingProfileEventTypeFilterCustomEventFilter": {
            "properties": {
                "customDescriptionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customTitleFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingProfileEventTypeFilterPredefinedEventFilter:AlertingProfileEventTypeFilterPredefinedEventFilter": {
            "properties": {
                "eventType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "eventType"
            ]
        },
        "dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "description": "Dynatrace server version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingProfileRule:AlertingProfileRule": {
            "properties": {
                "delayInMinutes": {
                    "type": "integer",
                    "description": "Send a notification if a problem remains open longer than *X* minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityLevel": {
                    "type": "string",
                    "description": "The severity level to trigger the alert. Possible values are `AVAILABILITY`,\t`CUSTOM_ALERT`,\t`ERROR`,`MONITORING_UNAVAILABLE`,`PERFORMANCE` and `RESOURCE_CONTENTION`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRuleTagFilter:AlertingProfileRuleTagFilter"
                    },
                    "description": "Configuration of the tag filtering of the alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "delayInMinutes",
                "severityLevel",
                "tagFilters"
            ]
        },
        "dynatrace:index/AlertingProfileRuleTagFilter:AlertingProfileRuleTagFilter": {
            "properties": {
                "includeMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRuleTagFilterTagFilter:AlertingProfileRuleTagFilterTagFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "includeMode"
            ]
        },
        "dynatrace:index/AlertingProfileRuleTagFilterTagFilter:AlertingProfileRuleTagFilterTagFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AlertingRules:AlertingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingRulesRule:AlertingRulesRule"
                    },
                    "description": "A conditions for the metric usage\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingRulesRule:AlertingRulesRule": {
            "properties": {
                "delayInMinutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "delayInMinutes",
                "includeMode",
                "severityLevel"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRateAuto:ApplicationAnomaliesFailureRateAuto",
                    "description": "Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRateThresholds:ApplicationAnomaliesFailureRateThresholds",
                    "description": "Fixed thresholds for failure rate increase detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationAnomaliesFailureRateAuto:ApplicationAnomaliesFailureRateAuto": {
            "properties": {
                "absolute": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "relative": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "absolute",
                "relative"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesFailureRateThresholds:ApplicationAnomaliesFailureRateThresholds": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTimeAuto:ApplicationAnomaliesResponseTimeAuto",
                    "description": "Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTimeThresholds:ApplicationAnomaliesResponseTimeThresholds",
                    "description": "Fixed thresholds for response time degradation detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationAnomaliesResponseTimeAuto:ApplicationAnomaliesResponseTimeAuto": {
            "properties": {
                "load": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "percent",
                "slowestMilliseconds",
                "slowestPercent"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesResponseTimeThresholds:ApplicationAnomaliesResponseTimeThresholds": {
            "properties": {
                "load": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "sensitivity",
                "slowestMilliseconds"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic": {
            "properties": {
                "drops": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTrafficDrops:ApplicationAnomaliesTrafficDrops",
                    "description": "The configuration of traffic drops detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spikes": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTrafficSpikes:ApplicationAnomaliesTrafficSpikes",
                    "description": "The configuration of traffic spikes detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationAnomaliesTrafficDrops:ApplicationAnomaliesTrafficDrops": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesTrafficSpikes:ApplicationAnomaliesTrafficSpikes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy": {
            "properties": {
                "contentMaskingSettings": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings",
                    "description": "Content masking settings for Session Replay.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "optIn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlExclusionRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contentMaskingSettings"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings": {
            "properties": {
                "playback": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recording": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "playback",
                "recording"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback": {
            "properties": {
                "preset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "preset"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule": {
            "properties": {
                "selector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userInteractionHidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "selector",
                "type"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording": {
            "properties": {
                "preset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "preset"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule": {
            "properties": {
                "selector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userInteractionHidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "selector",
                "type"
            ]
        },
        "dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig": {
            "properties": {
                "applicationMatchTarget": {
                    "type": "string",
                    "description": "Where to look for the pattern value, possible values are `DOMAIN` or `URL`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationMatchType": {
                    "type": "string",
                    "description": "The operator used for matching the application detection rule, possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `MATCHES`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "The value to look for with the application detection rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationMatchTarget",
                "applicationMatchType",
                "pattern"
            ]
        },
        "dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrorsRule:ApplicationErrorRulesCustomErrorsRule"
                    },
                    "description": "Configuration of the custom error in the web application\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationErrorRulesCustomErrorsRule:ApplicationErrorRulesCustomErrorsRule": {
            "properties": {
                "capture": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customAlerting": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "impactApdex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyMatcher": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyPattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueMatcher": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valuePattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrorsRule:ApplicationErrorRulesHttpErrorsRule"
                    },
                    "description": "Configuration of the HTTP error in the web application\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationErrorRulesHttpErrorsRule:ApplicationErrorRulesHttpErrorsRule": {
            "properties": {
                "capture": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "considerBlockedRequests": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "considerForAi": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "considerUnknownErrorCode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorCodes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterByUrl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "impactApdex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagMetadata:AutotagMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRule:AutotagRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleCondition:AutotagRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propagationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AutotagRuleCondition:AutotagRuleCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionApplicationTypeComparison:AutotagRuleConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionApplicationType:AutotagRuleConditionApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureComputeModeComparison:AutotagRuleConditionAzureComputeModeComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureComputeMode:AutotagRuleConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureSkuComparision:AutotagRuleConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureSkus:AutotagRuleConditionAzureSkus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBaseComparisonBasic:AutotagRuleConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBaseConditionKey:AutotagRuleConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBitnessComparision:AutotagRuleConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBitness:AutotagRuleConditionBitness"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCloudTypeComparison:AutotagRuleConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCloudType:AutotagRuleConditionCloudType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionComparison:AutotagRuleConditionComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomApplicationTypeComparison:AutotagRuleConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomApplicationType:AutotagRuleConditionCustomApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKey:AutotagRuleConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadata:AutotagRuleConditionCustomHostMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKey:AutotagRuleConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadata:AutotagRuleConditionCustomProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDatabaseTopology:AutotagRuleConditionDatabaseTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDatabaseTopologyComparison:AutotagRuleConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDcrumDecoderComparison:AutotagRuleConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDcrumDecoder:AutotagRuleConditionDcrumDecoder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionEntity:AutotagRuleConditionEntity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionEntityIdComparison:AutotagRuleConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionHostTech:AutotagRuleConditionHostTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionHypervisorTypeComparision:AutotagRuleConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionHypervisor:AutotagRuleConditionHypervisor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedNameComparison:AutotagRuleConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedName:AutotagRuleConditionIndexedName"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedStringComparison:AutotagRuleConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedString:AutotagRuleConditionIndexedString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTagComparison:AutotagRuleConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTag:AutotagRuleConditionIndexedTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIntegerComparison:AutotagRuleConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionInteger:AutotagRuleConditionInteger"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIpaddressComparison:AutotagRuleConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIpaddress:AutotagRuleConditionIpaddress"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionKey:AutotagRuleConditionKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionMobilePlatformComparison:AutotagRuleConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionMobilePlatform:AutotagRuleConditionMobilePlatform"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOsArch:AutotagRuleConditionOsArch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOsType:AutotagRuleConditionOsType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOsarchitectureComparison:AutotagRuleConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOstypeComparison:AutotagRuleConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionPaasTypeComparison:AutotagRuleConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionPaasType:AutotagRuleConditionPaasType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionProcessMetadataConditionKey:AutotagRuleConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionProcessMetadata:AutotagRuleConditionProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceTopology:AutotagRuleConditionServiceTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceTopologyComparison:AutotagRuleConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceTypeComparison:AutotagRuleConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceType:AutotagRuleConditionServiceType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleHostTechComparison:AutotagRuleConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleTechComparison:AutotagRuleConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionStringComparison:AutotagRuleConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionStringConditionKey:AutotagRuleConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionStringKey:AutotagRuleConditionStringKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionString:AutotagRuleConditionString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSyntheticEngineTypeComparison:AutotagRuleConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSyntheticEngine:AutotagRuleConditionSyntheticEngine"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionTagComparison:AutotagRuleConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionTag:AutotagRuleConditionTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionTech:AutotagRuleConditionTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionApplicationType:AutotagRuleConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionApplicationTypeComparison:AutotagRuleConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureComputeMode:AutotagRuleConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureComputeModeComparison:AutotagRuleConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureSkuComparision:AutotagRuleConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureSkus:AutotagRuleConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBaseComparisonBasic:AutotagRuleConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBaseConditionKey:AutotagRuleConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBitness:AutotagRuleConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBitnessComparision:AutotagRuleConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCloudType:AutotagRuleConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCloudTypeComparison:AutotagRuleConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionComparison:AutotagRuleConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomApplicationType:AutotagRuleConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomApplicationTypeComparison:AutotagRuleConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadata:AutotagRuleConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadataDynamicKey:AutotagRuleConditionCustomHostMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKey:AutotagRuleConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadataDynamicKey:AutotagRuleConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadata:AutotagRuleConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadataDynamicKey:AutotagRuleConditionCustomProcessMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKey:AutotagRuleConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadataDynamicKey:AutotagRuleConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDatabaseTopology:AutotagRuleConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDatabaseTopologyComparison:AutotagRuleConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDcrumDecoder:AutotagRuleConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDcrumDecoderComparison:AutotagRuleConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionEntity:AutotagRuleConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionEntityIdComparison:AutotagRuleConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionHostTech:AutotagRuleConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionHostTechValue:AutotagRuleConditionHostTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionHostTechValue:AutotagRuleConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionHypervisor:AutotagRuleConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionHypervisorTypeComparision:AutotagRuleConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedName:AutotagRuleConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedNameComparison:AutotagRuleConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedString:AutotagRuleConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedStringComparison:AutotagRuleConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTag:AutotagRuleConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTagValue:AutotagRuleConditionIndexedTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTagComparison:AutotagRuleConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTagComparisonValue:AutotagRuleConditionIndexedTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTagComparisonValue:AutotagRuleConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTagValue:AutotagRuleConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionInteger:AutotagRuleConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIntegerComparison:AutotagRuleConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIpaddress:AutotagRuleConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIpaddressComparison:AutotagRuleConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionKey:AutotagRuleConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/AutotagRuleConditionMobilePlatform:AutotagRuleConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionMobilePlatformComparison:AutotagRuleConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOsArch:AutotagRuleConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOsType:AutotagRuleConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOsarchitectureComparison:AutotagRuleConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOstypeComparison:AutotagRuleConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionPaasType:AutotagRuleConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionPaasTypeComparison:AutotagRuleConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionProcessMetadata:AutotagRuleConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionProcessMetadataConditionKey:AutotagRuleConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceTopology:AutotagRuleConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceTopologyComparison:AutotagRuleConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceType:AutotagRuleConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceTypeComparison:AutotagRuleConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSimpleHostTechComparison:AutotagRuleConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleHostTechComparisonValue:AutotagRuleConditionSimpleHostTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSimpleHostTechComparisonValue:AutotagRuleConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionSimpleTechComparison:AutotagRuleConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleTechComparisonValue:AutotagRuleConditionSimpleTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSimpleTechComparisonValue:AutotagRuleConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionString:AutotagRuleConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionStringComparison:AutotagRuleConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionStringConditionKey:AutotagRuleConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionStringKey:AutotagRuleConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSyntheticEngine:AutotagRuleConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSyntheticEngineTypeComparison:AutotagRuleConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTag:AutotagRuleConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionTagValue:AutotagRuleConditionTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTagComparison:AutotagRuleConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionTagComparisonValue:AutotagRuleConditionTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTagComparisonValue:AutotagRuleConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTagValue:AutotagRuleConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTech:AutotagRuleConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionTechValue:AutotagRuleConditionTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTechValue:AutotagRuleConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "the access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountId": {
                    "type": "string",
                    "description": "the ID of the Amazon account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalId": {
                    "type": "string",
                    "description": "the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iamRole": {
                    "type": "string",
                    "description": "the IAM role to be used by Dynatrace to get monitoring data\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "the secret access key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor": {
            "properties": {
                "monitoredMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitorMonitoredMetric:AwsCredentialsSupportingServicesToMonitorMonitoredMetric"
                    },
                    "description": "a list of metrics to be monitored for this service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "the name of the supporting service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsCredentialsSupportingServicesToMonitorMonitoredMetric:AwsCredentialsSupportingServicesToMonitorMonitoredMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "the key of the AWS tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "the value of the AWS tag\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService": {
            "properties": {
                "monitoredMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingServiceMonitoredMetric:AzureCredentialsSupportingServiceMonitoredMetric"
                    },
                    "description": "A list of Azure tags to be monitored.  You can specify up to 10 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the supporting service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsSupportingServiceMonitoredMetric:AzureCredentialsSupportingServiceMonitoredMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection": {
            "properties": {
                "loadingTimeThresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThreshold"
                    },
                    "description": "Thresholds for loading times\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "outageHandlings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandling:BrowserMonitorAnomalyDetectionOutageHandling"
                    },
                    "description": "Outage handling configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThreshold": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold": {
            "properties": {
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "thresholds"
            ]
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold": {
            "properties": {
                "eventIndex": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestIndex": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueMs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "valueMs"
            ]
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandling:BrowserMonitorAnomalyDetectionOutageHandling": {
            "properties": {
                "globalOutage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localOutage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localOutagePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retryOnError": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy": {
            "properties": {
                "affectedLocations": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consecutiveRuns": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "affectedLocations",
                "consecutiveRuns"
            ]
        },
        "dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics": {
            "properties": {
                "loadActionKpm": {
                    "type": "string",
                    "description": "Defines the key performance metric for load actions. Supported values are `VISUALLY_COMPLETE`, `SPEED_INDEX`, `USER_ACTION_DURATION`, `TIME_TO_FIRST_BYTE`, `HTML_DOWNLOADED`, `DOM_INTERACTIVE`, `LOAD_EVENT_START` and `LOAD_EVENT_END`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xhrActionKpm": {
                    "type": "string",
                    "description": "Defines the key performance metric for XHR actions. Supported values are `VISUALLY_COMPLETE`, `USER_ACTION_DURATION`, `TIME_TO_FIRST_BYTE` and `RESPONSE_END`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "loadActionKpm",
                "xhrActionKpm"
            ]
        },
        "dynatrace:index/BrowserMonitorScript:BrowserMonitorScript": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfiguration:BrowserMonitorScriptConfiguration",
                    "description": "The setup of the monitor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEvents:BrowserMonitorScriptEvents",
                    "description": "Steps of the clickpath—the first step must always be of the `navigate` type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of monitor. Possible values are `clickpath` for clickpath monitors and `availability` for single-URL browser monitors. These monitors are only allowed to have one event of the `navigate` type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfiguration:BrowserMonitorScriptConfiguration": {
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationBandwidth:BrowserMonitorScriptConfigurationBandwidth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassCsp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookies": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationCookies:BrowserMonitorScriptConfigurationCookies",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "device": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationDevice:BrowserMonitorScriptConfigurationDevice",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableWebSecurity": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationHeaders:BrowserMonitorScriptConfigurationHeaders",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoredErrorCodes": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationIgnoredErrorCodes:BrowserMonitorScriptConfigurationIgnoredErrorCodes",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "javascriptSetttings": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttings:BrowserMonitorScriptConfigurationJavascriptSetttings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorFrames": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgent": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationBandwidth:BrowserMonitorScriptConfigurationBandwidth": {
            "properties": {
                "download": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latency": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upload": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationCookies:BrowserMonitorScriptConfigurationCookies": {
            "properties": {
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationCookiesCookie:BrowserMonitorScriptConfigurationCookiesCookie"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationCookiesCookie:BrowserMonitorScriptConfigurationCookiesCookie": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domain",
                "name",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationDevice:BrowserMonitorScriptConfigurationDevice": {
            "properties": {
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobile": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orientation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleFactor": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "touchEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationHeaders:BrowserMonitorScriptConfigurationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationHeadersHeader:BrowserMonitorScriptConfigurationHeadersHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationHeadersHeader:BrowserMonitorScriptConfigurationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationIgnoredErrorCodes:BrowserMonitorScriptConfigurationIgnoredErrorCodes": {
            "properties": {
                "matchingDocumentRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCodes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "statusCodes"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttings:BrowserMonitorScriptConfigurationJavascriptSetttings": {
            "properties": {
                "customProperties": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutSettings": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings:BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visuallyCompleteOptions": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions:BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings:BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings": {
            "properties": {
                "actionLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "totalTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actionLimit",
                "totalTimeout"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions:BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions": {
            "properties": {
                "excludedElements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageSizeThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inactivityTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mutationTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imageSizeThreshold",
                "inactivityTimeout",
                "mutationTimeout"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEvents:BrowserMonitorScriptEvents": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEvent:BrowserMonitorScriptEventsEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEvent:BrowserMonitorScriptEventsEvent": {
            "properties": {
                "click": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClick:BrowserMonitorScriptEventsEventClick",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookie": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventCookie:BrowserMonitorScriptEventsEventCookie",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "javascript": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascript:BrowserMonitorScriptEventsEventJavascript",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keystrokes": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokes:BrowserMonitorScriptEventsEventKeystrokes",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "navigate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigate:BrowserMonitorScriptEventsEventNavigate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "select": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelect:BrowserMonitorScriptEventsEventSelect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tap": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTap:BrowserMonitorScriptEventsEventTap",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClick:BrowserMonitorScriptEventsEventClick": {
            "properties": {
                "button": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickTarget:BrowserMonitorScriptEventsEventClickTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidate:BrowserMonitorScriptEventsEventClickValidate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWait:BrowserMonitorScriptEventsEventClickWait",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "button"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickTarget:BrowserMonitorScriptEventsEventClickTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocator:BrowserMonitorScriptEventsEventClickTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocator:BrowserMonitorScriptEventsEventClickTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocatorLocator:BrowserMonitorScriptEventsEventClickTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocatorLocator:BrowserMonitorScriptEventsEventClickTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidate:BrowserMonitorScriptEventsEventClickValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidation:BrowserMonitorScriptEventsEventClickValidateValidation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidation:BrowserMonitorScriptEventsEventClickValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTarget:BrowserMonitorScriptEventsEventClickValidateValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTarget:BrowserMonitorScriptEventsEventClickValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWait:BrowserMonitorScriptEventsEventClickWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidation:BrowserMonitorScriptEventsEventClickWaitValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitFor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidation:BrowserMonitorScriptEventsEventClickWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTarget:BrowserMonitorScriptEventsEventClickWaitValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTarget:BrowserMonitorScriptEventsEventClickWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventCookie:BrowserMonitorScriptEventsEventCookie": {
            "properties": {
                "cookies": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventCookieCookies:BrowserMonitorScriptEventsEventCookieCookies",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventCookieCookies:BrowserMonitorScriptEventsEventCookieCookies": {
            "properties": {
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventCookieCookiesCookie:BrowserMonitorScriptEventsEventCookieCookiesCookie"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventCookieCookiesCookie:BrowserMonitorScriptEventsEventCookieCookiesCookie": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domain",
                "name",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascript:BrowserMonitorScriptEventsEventJavascript": {
            "properties": {
                "code": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTarget:BrowserMonitorScriptEventsEventJavascriptTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWait:BrowserMonitorScriptEventsEventJavascriptWait",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTarget:BrowserMonitorScriptEventsEventJavascriptTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWait:BrowserMonitorScriptEventsEventJavascriptWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidation:BrowserMonitorScriptEventsEventJavascriptWaitValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitFor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidation:BrowserMonitorScriptEventsEventJavascriptWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget:BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget:BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokes:BrowserMonitorScriptEventsEventKeystrokes": {
            "properties": {
                "credential": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesCredential:BrowserMonitorScriptEventsEventKeystrokesCredential",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simulateBlurEvent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTarget:BrowserMonitorScriptEventsEventKeystrokesTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidate:BrowserMonitorScriptEventsEventKeystrokesValidate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWait:BrowserMonitorScriptEventsEventKeystrokesWait",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesCredential:BrowserMonitorScriptEventsEventKeystrokesCredential": {
            "properties": {
                "field": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vaultId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "field",
                "vaultId"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTarget:BrowserMonitorScriptEventsEventKeystrokesTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidate:BrowserMonitorScriptEventsEventKeystrokesValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidation:BrowserMonitorScriptEventsEventKeystrokesValidateValidation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidation:BrowserMonitorScriptEventsEventKeystrokesValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWait:BrowserMonitorScriptEventsEventKeystrokesWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidation:BrowserMonitorScriptEventsEventKeystrokesWaitValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitFor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidation:BrowserMonitorScriptEventsEventKeystrokesWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigate:BrowserMonitorScriptEventsEventNavigate": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateAuthentication:BrowserMonitorScriptEventsEventNavigateAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateTarget:BrowserMonitorScriptEventsEventNavigateTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidate:BrowserMonitorScriptEventsEventNavigateValidate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWait:BrowserMonitorScriptEventsEventNavigateWait",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateAuthentication:BrowserMonitorScriptEventsEventNavigateAuthentication": {
            "properties": {
                "creds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creds",
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateTarget:BrowserMonitorScriptEventsEventNavigateTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocator:BrowserMonitorScriptEventsEventNavigateTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocator:BrowserMonitorScriptEventsEventNavigateTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidate:BrowserMonitorScriptEventsEventNavigateValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidation:BrowserMonitorScriptEventsEventNavigateValidateValidation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidation:BrowserMonitorScriptEventsEventNavigateValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTarget:BrowserMonitorScriptEventsEventNavigateValidateValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTarget:BrowserMonitorScriptEventsEventNavigateValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWait:BrowserMonitorScriptEventsEventNavigateWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidation:BrowserMonitorScriptEventsEventNavigateWaitValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitFor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidation:BrowserMonitorScriptEventsEventNavigateWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTarget:BrowserMonitorScriptEventsEventNavigateWaitValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTarget:BrowserMonitorScriptEventsEventNavigateWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelect:BrowserMonitorScriptEventsEventSelect": {
            "properties": {
                "selections": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectSelections:BrowserMonitorScriptEventsEventSelectSelections",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectTarget:BrowserMonitorScriptEventsEventSelectTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidate:BrowserMonitorScriptEventsEventSelectValidate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWait:BrowserMonitorScriptEventsEventSelectWait",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "selections"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectSelections:BrowserMonitorScriptEventsEventSelectSelections": {
            "properties": {
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectSelectionsOption:BrowserMonitorScriptEventsEventSelectSelectionsOption"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "options"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectSelectionsOption:BrowserMonitorScriptEventsEventSelectSelectionsOption": {
            "properties": {
                "index": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectTarget:BrowserMonitorScriptEventsEventSelectTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocator:BrowserMonitorScriptEventsEventSelectTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocator:BrowserMonitorScriptEventsEventSelectTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidate:BrowserMonitorScriptEventsEventSelectValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidation:BrowserMonitorScriptEventsEventSelectValidateValidation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidation:BrowserMonitorScriptEventsEventSelectValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTarget:BrowserMonitorScriptEventsEventSelectValidateValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTarget:BrowserMonitorScriptEventsEventSelectValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWait:BrowserMonitorScriptEventsEventSelectWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidation:BrowserMonitorScriptEventsEventSelectWaitValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitFor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidation:BrowserMonitorScriptEventsEventSelectWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTarget:BrowserMonitorScriptEventsEventSelectWaitValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTarget:BrowserMonitorScriptEventsEventSelectWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTap:BrowserMonitorScriptEventsEventTap": {
            "properties": {
                "button": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapTarget:BrowserMonitorScriptEventsEventTapTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidate:BrowserMonitorScriptEventsEventTapValidate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWait:BrowserMonitorScriptEventsEventTapWait",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "button"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapTarget:BrowserMonitorScriptEventsEventTapTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocator:BrowserMonitorScriptEventsEventTapTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocator:BrowserMonitorScriptEventsEventTapTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocatorLocator:BrowserMonitorScriptEventsEventTapTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocatorLocator:BrowserMonitorScriptEventsEventTapTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidate:BrowserMonitorScriptEventsEventTapValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidation:BrowserMonitorScriptEventsEventTapValidateValidation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidation:BrowserMonitorScriptEventsEventTapValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTarget:BrowserMonitorScriptEventsEventTapValidateValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTarget:BrowserMonitorScriptEventsEventTapValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWait:BrowserMonitorScriptEventsEventTapWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidation:BrowserMonitorScriptEventsEventTapWaitValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitFor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidation:BrowserMonitorScriptEventsEventTapWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTarget:BrowserMonitorScriptEventsEventTapWaitValidationTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTarget:BrowserMonitorScriptEventsEventTapWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorTag:BrowserMonitorTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorTagTag:BrowserMonitorTagTag"
                    },
                    "description": "Tag with source of a Dynatrace entity.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorTagTag:BrowserMonitorTagTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionCondition:CalculatedServiceMetricConditionCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionCondition:CalculatedServiceMetricConditionCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparison": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparison:CalculatedServiceMetricConditionConditionComparison",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "comparison"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparison:CalculatedServiceMetricConditionConditionComparison": {
            "properties": {
                "boolean": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonBoolean:CalculatedServiceMetricConditionConditionComparisonBoolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "esbInputNodeType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType:CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failedState": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailedState:CalculatedServiceMetricConditionConditionComparisonFailedState",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failureReason": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailureReason:CalculatedServiceMetricConditionConditionComparisonFailureReason",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fastString": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFastString:CalculatedServiceMetricConditionConditionComparisonFastString",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flawState": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFlawState:CalculatedServiceMetricConditionConditionComparisonFlawState",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "generic": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonGeneric:CalculatedServiceMetricConditionConditionComparisonGeneric",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpMethod:CalculatedServiceMetricConditionConditionComparisonHttpMethod",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpStatusClass": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpStatusClass:CalculatedServiceMetricConditionConditionComparisonHttpStatusClass",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iibInputNodeType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonIibInputNodeType:CalculatedServiceMetricConditionConditionComparisonIibInputNodeType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "number": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumber:CalculatedServiceMetricConditionConditionComparisonNumber",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonServiceType:CalculatedServiceMetricConditionConditionComparisonServiceType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "string": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonString:CalculatedServiceMetricConditionConditionComparisonString",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute:CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTag:CalculatedServiceMetricConditionConditionComparisonTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zosCallType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonZosCallType:CalculatedServiceMetricConditionConditionComparisonZosCallType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonBoolean:CalculatedServiceMetricConditionConditionComparisonBoolean": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType:CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailedState:CalculatedServiceMetricConditionConditionComparisonFailedState": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailureReason:CalculatedServiceMetricConditionConditionComparisonFailureReason": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFastString:CalculatedServiceMetricConditionConditionComparisonFastString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFlawState:CalculatedServiceMetricConditionConditionComparisonFlawState": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonGeneric:CalculatedServiceMetricConditionConditionComparisonGeneric": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpMethod:CalculatedServiceMetricConditionConditionComparisonHttpMethod": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpStatusClass:CalculatedServiceMetricConditionConditionComparisonHttpStatusClass": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonIibInputNodeType:CalculatedServiceMetricConditionConditionComparisonIibInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumber:CalculatedServiceMetricConditionConditionComparisonNumber": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute": {
            "properties": {
                "matchOnChildCalls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonServiceType:CalculatedServiceMetricConditionConditionComparisonServiceType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonString:CalculatedServiceMetricConditionConditionComparisonString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute:CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchOnChildCalls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTag:CalculatedServiceMetricConditionConditionComparisonTag": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValue:CalculatedServiceMetricConditionConditionComparisonTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValues:CalculatedServiceMetricConditionConditionComparisonTagValues",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValue:CalculatedServiceMetricConditionConditionComparisonTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValues:CalculatedServiceMetricConditionConditionComparisonTagValues": {
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValuesValue:CalculatedServiceMetricConditionConditionComparisonTagValuesValue"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValuesValue:CalculatedServiceMetricConditionConditionComparisonTagValuesValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonZosCallType:CalculatedServiceMetricConditionConditionComparisonZosCallType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition": {
            "properties": {
                "dimension": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholders:CalculatedServiceMetricDimensionDefinitionPlaceholders",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topX": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topXAggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topXDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "name",
                "topX",
                "topXAggregation",
                "topXDirection"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholders:CalculatedServiceMetricDimensionDefinitionPlaceholders": {
            "properties": {
                "placeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "delimiterOrRegex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endDelimiter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useFromChildCalls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "kind",
                "name"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource": {
            "properties": {
                "managementZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition": {
            "properties": {
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionDimension:CustomAnomaliesDimensionDimension"
                    },
                    "description": "A generic definition for a filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionEntity:CustomAnomaliesDimensionEntity"
                    },
                    "description": "A filter for the metrics entity dimensions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionString:CustomAnomaliesDimensionString"
                    },
                    "description": "A filter for the metrics string dimensions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesDimensionDimension:CustomAnomaliesDimensionDimension": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionEntity:CustomAnomaliesDimensionEntity": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionEntityFilter:CustomAnomaliesDimensionEntityFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionEntityFilter:CustomAnomaliesDimensionEntityFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionString:CustomAnomaliesDimensionString": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionStringFilter:CustomAnomaliesDimensionStringFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionStringFilter:CustomAnomaliesDimensionStringFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope": {
            "properties": {
                "customDeviceGroupNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupName:CustomAnomaliesScopeCustomDeviceGroupName"
                    },
                    "description": "A scope filter for the related custom device group name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeEntity:CustomAnomaliesScopeEntity"
                    },
                    "description": "A scope filter for a monitored entity identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostGroupNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostGroupName:CustomAnomaliesScopeHostGroupName"
                    },
                    "description": "A scope filter for the related host group name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostName:CustomAnomaliesScopeHostName"
                    },
                    "description": "A scope filter for the related host name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeManagementZone:CustomAnomaliesScopeManagementZone"
                    },
                    "description": "A scope filter for a management zone identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeName:CustomAnomaliesScopeName"
                    },
                    "description": "A scope filter for a monitored entity name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processGroupIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeProcessGroupId:CustomAnomaliesScopeProcessGroupId"
                    },
                    "description": "A scope filter for a process group identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processGroupNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeProcessGroupName:CustomAnomaliesScopeProcessGroupName"
                    },
                    "description": "A scope filter for the related process group name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeScope:CustomAnomaliesScopeScope"
                    },
                    "description": "A generic scope filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeTag:CustomAnomaliesScopeTag"
                    },
                    "description": "A scope filter for tags on entities\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupName:CustomAnomaliesScopeCustomDeviceGroupName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupNameFilter:CustomAnomaliesScopeCustomDeviceGroupNameFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupNameFilter:CustomAnomaliesScopeCustomDeviceGroupNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeEntity:CustomAnomaliesScopeEntity": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostGroupName:CustomAnomaliesScopeHostGroupName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostGroupNameFilter:CustomAnomaliesScopeHostGroupNameFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostGroupNameFilter:CustomAnomaliesScopeHostGroupNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostName:CustomAnomaliesScopeHostName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostNameFilter:CustomAnomaliesScopeHostNameFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostNameFilter:CustomAnomaliesScopeHostNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeManagementZone:CustomAnomaliesScopeManagementZone": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesScopeName:CustomAnomaliesScopeName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeNameFilter:CustomAnomaliesScopeNameFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeNameFilter:CustomAnomaliesScopeNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeProcessGroupId:CustomAnomaliesScopeProcessGroupId": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeProcessGroupName:CustomAnomaliesScopeProcessGroupName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeProcessGroupNameFilter:CustomAnomaliesScopeProcessGroupNameFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeProcessGroupNameFilter:CustomAnomaliesScopeProcessGroupNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeScope:CustomAnomaliesScopeScope": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeTag:CustomAnomaliesScopeTag": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeTagFilter:CustomAnomaliesScopeTagFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeTagFilter:CustomAnomaliesScopeTagFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategyAuto:CustomAnomaliesStrategyAuto",
                    "description": "An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "generics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategyGeneric:CustomAnomaliesStrategyGeneric"
                    },
                    "description": "A generic monitoring strategy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "static": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategyStatic:CustomAnomaliesStrategyStatic",
                    "description": "A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesStrategyAuto:CustomAnomaliesStrategyAuto": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingOnMissingData": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dealertingSamples": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalFluctuations": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "violatingSamples": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertCondition",
                "dealertingSamples",
                "samples",
                "signalFluctuations",
                "violatingSamples"
            ]
        },
        "dynatrace:index/CustomAnomaliesStrategyGeneric:CustomAnomaliesStrategyGeneric": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CustomAnomaliesStrategyStatic:CustomAnomaliesStrategyStatic": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingOnMissingData": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dealertingSamples": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "violatingSamples": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertCondition",
                "dealertingSamples",
                "samples",
                "threshold",
                "unit",
                "violatingSamples"
            ]
        },
        "dynatrace:index/CustomServiceRule:CustomServiceRule": {
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "class": {
                    "$ref": "#/types/dynatrace:index/CustomServiceRuleClass:CustomServiceRuleClass",
                    "description": "The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Rule enabled/disabled\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "file": {
                    "$ref": "#/types/dynatrace:index/CustomServiceRuleFile:CustomServiceRuleFile",
                    "description": "The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the detection rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomServiceRuleMethod:CustomServiceRuleMethod"
                    },
                    "description": "methods to instrument\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "methods"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "id",
                        "methods"
                    ]
                }
            }
        },
        "dynatrace:index/CustomServiceRuleClass:CustomServiceRuleClass": {
            "properties": {
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom service, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/CustomServiceRuleFile:CustomServiceRuleFile": {
            "properties": {
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom service, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/CustomServiceRuleMethod:CustomServiceRuleMethod": {
            "properties": {
                "arguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom service, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "returns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata": {
            "properties": {
                "consistentColors": {
                    "type": "boolean",
                    "description": "The tile uses consistent colors when rendering its content\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicFilters": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataDynamicFilters:DashboardDashboardMetadataDynamicFilters",
                    "description": "Dashboard filter configuration of a dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataFilter:DashboardDashboardMetadataFilter",
                    "description": "Global filter Settings for the Dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "the name of the dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "owner": {
                    "type": "string",
                    "description": "the owner of the dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preset": {
                    "type": "boolean",
                    "description": "the dashboard is a preset (`true`) or not (`false`). Default is `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shared": {
                    "type": "boolean",
                    "description": "the dashboard is shared (`true`) or private (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharingDetails": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataSharingDetails:DashboardDashboardMetadataSharingDetails",
                    "description": "represents sharing configuration of a dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a set of tags assigned to the dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validFilterKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a set of all possible global dashboard filters that can be applied to dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "owner"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataDynamicFilters:DashboardDashboardMetadataDynamicFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagSuggestionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataFilter:DashboardDashboardMetadataFilter": {
            "properties": {
                "managementZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataFilterManagementZone:DashboardDashboardMetadataFilterManagementZone"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardDashboardMetadataFilterManagementZone:DashboardDashboardMetadataFilterManagementZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataSharingDetails:DashboardDashboardMetadataSharingDetails": {
            "properties": {
                "linkShared": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "published": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardMetadata:DashboardMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "description": "Dynatrace server version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions": {
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardSharingPermissionsPermission:DashboardSharingPermissionsPermission"
                    },
                    "description": "Access permissions of the dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardSharingPermissionsPermission:DashboardSharingPermissionsPermission": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "level": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "level",
                "type"
            ]
        },
        "dynatrace:index/DashboardSharingPublic:DashboardSharingPublic": {
            "properties": {
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of management zones that can display data on the publicly shared dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "managementZones"
            ]
        },
        "dynatrace:index/DashboardTile:DashboardTile": {
            "properties": {
                "assignedEntities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Dynatrace entities, assigned to the tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bounds": {
                    "$ref": "#/types/dynatrace:index/DashboardTileBounds:DashboardTileBounds",
                    "description": "the position and size of a tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "chartVisible": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configured": {
                    "type": "boolean",
                    "description": "The tile is configured and ready to use (`true`) or just placed on the dashboard (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customName": {
                    "type": "string",
                    "description": "The name of the tile, set by user\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeMaintenanceWindows": {
                    "type": "boolean",
                    "description": "Include (`false') or exclude (`true`) maintenance windows from availability calculations\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilter:DashboardTileFilter",
                    "description": "is filter applied to a tile. It overrides dashboard's filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterConfig": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilterConfig:DashboardTileFilterConfig",
                    "description": "the position and size of a tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "The limit of the results, if not set will use the default value of the system\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markdown": {
                    "type": "string",
                    "description": "The markdown-formatted content of the tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "The metric assigned to the tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "the name of the tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameSize": {
                    "type": "string",
                    "description": "The size of the tile name. Possible values are `small`, `medium` and `large`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "A [user session query](https://www.dynatrace.com/support/help/shortlink/usql-info) executed by the tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tileType": {
                    "type": "string",
                    "description": "the type of the tile. Must be either `APPLICATION_WORLDMAP`, `RESOURCES`, `THIRD_PARTY_MOST_ACTIVE`, `UEM_CONVERSIONS_PER_GOAL`, `PROCESS_GROUPS_ONE` or `HOST` .\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeFrameShift": {
                    "type": "string",
                    "description": "The comparison timeframe of the query. If specified, you additionally get the results of the same query with the specified time shift\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The attribute `type` exists for backwards compatibilty. Usage is discouraged. You should use `visualization` instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visualization": {
                    "type": "string",
                    "description": "The visualization of the tile. Possible values are: `COLUMN_CHART`, `FUNNEL`, `LINE_CHART`, `PIE_CHART`, `SINGLE_VALUE`, `TABLE`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visualizationConfig": {
                    "$ref": "#/types/dynatrace:index/DashboardTileVisualizationConfig:DashboardTileVisualizationConfig",
                    "description": "Configuration of a User session query visualization tile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "tileType"
            ]
        },
        "dynatrace:index/DashboardTileBounds:DashboardTileBounds": {
            "properties": {
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "left": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "top": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "left",
                "top",
                "width"
            ]
        },
        "dynatrace:index/DashboardTileFilter:DashboardTileFilter": {
            "properties": {
                "managementZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterManagementZone:DashboardTileFilterManagementZone"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfig:DashboardTileFilterConfig": {
            "properties": {
                "chartConfig": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfig:DashboardTileFilterConfigChartConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigFilters:DashboardTileFilterConfigFilters",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "customName",
                "defaultName",
                "type"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfig:DashboardTileFilterConfigChartConfig": {
            "properties": {
                "axisLimits": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leftAxisCustomUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resultMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadata:DashboardTileFilterConfigChartConfigResultMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rightAxisCustomUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "series": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigSeries:DashboardTileFilterConfigChartConfigSeries"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadata:DashboardTileFilterConfigChartConfigResultMetadata": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadataConfig:DashboardTileFilterConfigChartConfigResultMetadataConfig"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadataConfig:DashboardTileFilterConfigChartConfigResultMetadataConfig": {
            "properties": {
                "customColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigSeries:DashboardTileFilterConfigChartConfigSeries": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aggregationRate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigSeriesDimension:DashboardTileFilterConfigChartConfigSeriesDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percentile": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortAscending": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "entityType",
                "metric",
                "type"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigSeriesDimension:DashboardTileFilterConfigChartConfigSeriesDimension": {
            "properties": {
                "entityDimension": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigFilters:DashboardTileFilterConfigFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigFiltersFilter:DashboardTileFilterConfigFiltersFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfigFiltersFilter:DashboardTileFilterConfigFiltersFilter": {
            "properties": {
                "entityType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigFiltersFilterMatch:DashboardTileFilterConfigFiltersFilterMatch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "entityType"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigFiltersFilterMatch:DashboardTileFilterConfigFiltersFilterMatch": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/DashboardTileFilterManagementZone:DashboardTileFilterManagementZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DashboardTileVisualizationConfig:DashboardTileVisualizationConfig": {
            "properties": {
                "hasAxisBucketing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures": {
            "properties": {
                "connectionFailsCount": {
                    "type": "integer",
                    "description": "Number of failed database connections during any **eval_period** minutes period to trigger an alert\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evalPeriod": {
                    "type": "integer",
                    "description": "The *X* minutes time period during which the **connection*fails*count** is evaluated\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRateAuto:DatabaseAnomaliesFailureRateAuto",
                    "description": "Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRateThresholds:DatabaseAnomaliesFailureRateThresholds",
                    "description": "Fixed thresholds for failure rate increase detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesFailureRateAuto:DatabaseAnomaliesFailureRateAuto": {
            "properties": {
                "absolute": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "relative": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "absolute",
                "relative"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesFailureRateThresholds:DatabaseAnomaliesFailureRateThresholds": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad": {
            "properties": {
                "drops": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoadDrops:DatabaseAnomaliesLoadDrops",
                    "description": "The configuration of traffic drops detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spikes": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoadSpikes:DatabaseAnomaliesLoadSpikes",
                    "description": "The configuration of traffic spikes detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesLoadDrops:DatabaseAnomaliesLoadDrops": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesLoadSpikes:DatabaseAnomaliesLoadSpikes": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTimeAuto:DatabaseAnomaliesResponseTimeAuto",
                    "description": "Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTimeThresholds:DatabaseAnomaliesResponseTimeThresholds",
                    "description": "Fixed thresholds for response time degradation detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesResponseTimeAuto:DatabaseAnomaliesResponseTimeAuto": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Configuration for anomalies regarding load drops and spikes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "percent",
                "slowestMilliseconds",
                "slowestPercent"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesResponseTimeThresholds:DatabaseAnomaliesResponseTimeThresholds": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Configuration for anomalies regarding load drops and spikes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "sensitivity",
                "slowestMilliseconds"
            ]
        },
        "dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Possible values are: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS` and `STARTS_WITH`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesTagsFilter:DiskAnomaliesTagsFilter"
                    },
                    "description": "A Tag Filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DiskAnomaliesTagsFilter:DiskAnomaliesTagsFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/EnvironmentQuotas:EnvironmentQuotas": {
            "properties": {
                "ddus": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasDdus:EnvironmentQuotasDdus",
                    "description": "Davis Data Units consumption and quota information on environment level. Not set (and not editable) if Davis data units is not enabled\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "demUnits": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasDemUnits:EnvironmentQuotasDemUnits",
                    "description": "DEM units consumption and quota information on environment level\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostUnits": {
                    "type": "integer",
                    "description": "Host units consumption and quota information on environment level\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logs": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasLogs:EnvironmentQuotasLogs",
                    "description": "Log Monitoring consumption and quota information on environment level. Not set (and not editable) if Log monitoring is not enabled. Not set (and not editable) if Log monitoring is migrated to Davis data on license level\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synthetic": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasSynthetic:EnvironmentQuotasSynthetic",
                    "description": "Synthetic monitors consumption and quota information on environment level. Not set (and not editable) if neither Synthetic nor DEM units is enabled\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSessions": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasUserSessions:EnvironmentQuotasUserSessions",
                    "description": "User sessions consumption and quota information on environment level\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasDdus:EnvironmentQuotasDdus": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasDemUnits:EnvironmentQuotasDemUnits": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasLogs:EnvironmentQuotasLogs": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasSynthetic:EnvironmentQuotasSynthetic": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasUserSessions:EnvironmentQuotasUserSessions": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentStorage:EnvironmentStorage": {
            "properties": {
                "limits": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorageLimits:EnvironmentStorageLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retention": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorageRetention:EnvironmentStorageRetention",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactions": {
                    "type": "integer",
                    "description": "Maximum number of newly monitored entry point PurePaths captured per process/minute on environment level. Can be set to any value from 100 to 100000\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userActions": {
                    "type": "integer",
                    "description": "Maximum number of user actions generated per minute on environment level. Can be set to any value from 1 to 2147483646 or left unlimited by omitting this property\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "transactions"
            ]
        },
        "dynatrace:index/EnvironmentStorageLimits:EnvironmentStorageLimits": {
            "properties": {
                "logs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionReplay": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "symbolFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactions": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentStorageRetention:EnvironmentStorageRetention": {
            "properties": {
                "logs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rum": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceCodeLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRequestLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionReplay": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synthetic": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logs",
                "rum",
                "serviceCodeLevel",
                "serviceRequestLevel",
                "sessionReplay",
                "synthetic"
            ]
        },
        "dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabledOnGracefulShutdowns": {
                    "type": "boolean",
                    "description": "Alert (`true`) on graceful host shutdowns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "enabledOnGracefulShutdowns"
            ]
        },
        "dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesCpuThresholds:HostAnomaliesCpuThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesCpuThresholds:HostAnomaliesCpuThresholds": {
            "properties": {
                "saturation": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "saturation"
            ]
        },
        "dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks": {
            "properties": {
                "inodes": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksInodes:HostAnomaliesDisksInodes",
                    "description": "Configuration of low disk inodes number detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "space": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpace:HostAnomaliesDisksSpace",
                    "description": "Configuration of low disk space detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "speed": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpeed:HostAnomaliesDisksSpeed",
                    "description": "Configuration of slow running disks detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostAnomaliesDisksInodes:HostAnomaliesDisksInodes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksInodesThresholds:HostAnomaliesDisksInodesThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksInodesThresholds:HostAnomaliesDisksInodesThresholds": {
            "properties": {
                "percentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "percentage"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpace:HostAnomaliesDisksSpace": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpaceThresholds:HostAnomaliesDisksSpaceThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpaceThresholds:HostAnomaliesDisksSpaceThresholds": {
            "properties": {
                "percentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "percentage"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpeed:HostAnomaliesDisksSpeed": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpeedThresholds:HostAnomaliesDisksSpeedThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpeedThresholds:HostAnomaliesDisksSpeedThresholds": {
            "properties": {
                "writeAndReadTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "writeAndReadTime"
            ]
        },
        "dynatrace:index/HostAnomaliesGc:HostAnomaliesGc": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesGcThresholds:HostAnomaliesGcThresholds",
                    "description": "Custom thresholds for high GC activity. If not set, automatic mode is used.   Meeting **any** of these conditions triggers an alert\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesGcThresholds:HostAnomaliesGcThresholds": {
            "properties": {
                "suspensionPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "suspensionPercentage",
                "timePercentage"
            ]
        },
        "dynatrace:index/HostAnomaliesJava:HostAnomaliesJava": {
            "properties": {
                "outOfMemory": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfMemory:HostAnomaliesJavaOutOfMemory",
                    "description": "Configuration of Java out of memory problems detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "outOfThreads": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfThreads:HostAnomaliesJavaOutOfThreads",
                    "description": "Configuration of Java out of threads problems detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostAnomaliesJavaOutOfMemory:HostAnomaliesJavaOutOfMemory": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfMemoryThresholds:HostAnomaliesJavaOutOfMemoryThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesJavaOutOfMemoryThresholds:HostAnomaliesJavaOutOfMemoryThresholds": {
            "properties": {
                "exceptionCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "exceptionCount"
            ]
        },
        "dynatrace:index/HostAnomaliesJavaOutOfThreads:HostAnomaliesJavaOutOfThreads": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfThreadsThresholds:HostAnomaliesJavaOutOfThreadsThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesJavaOutOfThreadsThresholds:HostAnomaliesJavaOutOfThreadsThresholds": {
            "properties": {
                "exceptionCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "exceptionCount"
            ]
        },
        "dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemoryThresholds:HostAnomaliesMemoryThresholds",
                    "description": "Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesMemoryThresholds:HostAnomaliesMemoryThresholds": {
            "properties": {
                "linux": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemoryThresholdsLinux:HostAnomaliesMemoryThresholdsLinux",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "windows": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemoryThresholdsWindows:HostAnomaliesMemoryThresholdsWindows",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "linux",
                "windows"
            ]
        },
        "dynatrace:index/HostAnomaliesMemoryThresholdsLinux:HostAnomaliesMemoryThresholdsLinux": {
            "properties": {
                "pageFaults": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pageFaults",
                "usage"
            ]
        },
        "dynatrace:index/HostAnomaliesMemoryThresholdsWindows:HostAnomaliesMemoryThresholdsWindows": {
            "properties": {
                "pageFaults": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pageFaults",
                "usage"
            ]
        },
        "dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork": {
            "properties": {
                "connectivity": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkConnectivity:HostAnomaliesNetworkConnectivity",
                    "description": "Configuration of TCP connectivity problems detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "droppedPackets": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkDroppedPackets:HostAnomaliesNetworkDroppedPackets",
                    "description": "Configuration of high number of dropped packets detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errors": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkErrors:HostAnomaliesNetworkErrors",
                    "description": "Configuration of high number of network errors detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retransmission": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkRetransmission:HostAnomaliesNetworkRetransmission",
                    "description": "Configuration of high retransmission rate detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "utilization": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkUtilization:HostAnomaliesNetworkUtilization",
                    "description": "Configuration of high network utilization detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostAnomaliesNetworkConnectivity:HostAnomaliesNetworkConnectivity": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkConnectivityThresholds:HostAnomaliesNetworkConnectivityThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkConnectivityThresholds:HostAnomaliesNetworkConnectivityThresholds": {
            "properties": {
                "failedConnections": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newConnectionFailures": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "failedConnections",
                "newConnectionFailures"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkDroppedPackets:HostAnomaliesNetworkDroppedPackets": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkDroppedPacketsThresholds:HostAnomaliesNetworkDroppedPacketsThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkDroppedPacketsThresholds:HostAnomaliesNetworkDroppedPacketsThresholds": {
            "properties": {
                "droppedPackets": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "totalPacketsRate": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "droppedPackets",
                "totalPacketsRate"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkErrors:HostAnomaliesNetworkErrors": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkErrorsThresholds:HostAnomaliesNetworkErrorsThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkErrorsThresholds:HostAnomaliesNetworkErrorsThresholds": {
            "properties": {
                "errorsPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "totalPacketsRate": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "errorsPercentage",
                "totalPacketsRate"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkRetransmission:HostAnomaliesNetworkRetransmission": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkRetransmissionThresholds:HostAnomaliesNetworkRetransmissionThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkRetransmissionThresholds:HostAnomaliesNetworkRetransmissionThresholds": {
            "properties": {
                "retransmissionRate": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retransmittedPackets": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "retransmissionRate",
                "retransmittedPackets"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkUtilization:HostAnomaliesNetworkUtilization": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkUtilizationThresholds:HostAnomaliesNetworkUtilizationThresholds",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkUtilizationThresholds:HostAnomaliesNetworkUtilizationThresholds": {
            "properties": {
                "utilization": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "utilization"
            ]
        },
        "dynatrace:index/HostNamingCondition:HostNamingCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionCondition:HostNamingConditionCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionCondition:HostNamingConditionCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionApplicationTypeComparison:HostNamingConditionConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionApplicationType:HostNamingConditionConditionApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureComputeModeComparison:HostNamingConditionConditionAzureComputeModeComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureComputeMode:HostNamingConditionConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureSkuComparision:HostNamingConditionConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureSkus:HostNamingConditionConditionAzureSkus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBaseComparisonBasic:HostNamingConditionConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBaseConditionKey:HostNamingConditionConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBitnessComparision:HostNamingConditionConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBitness:HostNamingConditionConditionBitness"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCloudTypeComparison:HostNamingConditionConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCloudType:HostNamingConditionConditionCloudType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionComparison:HostNamingConditionConditionComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomApplicationTypeComparison:HostNamingConditionConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomApplicationType:HostNamingConditionConditionCustomApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKey:HostNamingConditionConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadata:HostNamingConditionConditionCustomHostMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKey:HostNamingConditionConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadata:HostNamingConditionConditionCustomProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDatabaseTopology:HostNamingConditionConditionDatabaseTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDatabaseTopologyComparison:HostNamingConditionConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDcrumDecoderComparison:HostNamingConditionConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDcrumDecoder:HostNamingConditionConditionDcrumDecoder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionEntity:HostNamingConditionConditionEntity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionEntityIdComparison:HostNamingConditionConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHostTech:HostNamingConditionConditionHostTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHypervisorTypeComparision:HostNamingConditionConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHypervisor:HostNamingConditionConditionHypervisor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedNameComparison:HostNamingConditionConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedName:HostNamingConditionConditionIndexedName"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedStringComparison:HostNamingConditionConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedString:HostNamingConditionConditionIndexedString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTagComparison:HostNamingConditionConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTag:HostNamingConditionConditionIndexedTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIntegerComparison:HostNamingConditionConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionInteger:HostNamingConditionConditionInteger"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIpaddressComparison:HostNamingConditionConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIpaddress:HostNamingConditionConditionIpaddress"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionKey:HostNamingConditionConditionKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionMobilePlatformComparison:HostNamingConditionConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionMobilePlatform:HostNamingConditionConditionMobilePlatform"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOsArch:HostNamingConditionConditionOsArch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOsType:HostNamingConditionConditionOsType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOsarchitectureComparison:HostNamingConditionConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOstypeComparison:HostNamingConditionConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionPaasTypeComparison:HostNamingConditionConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionPaasType:HostNamingConditionConditionPaasType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionProcessMetadataConditionKey:HostNamingConditionConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionProcessMetadata:HostNamingConditionConditionProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceTopology:HostNamingConditionConditionServiceTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceTopologyComparison:HostNamingConditionConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceTypeComparison:HostNamingConditionConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceType:HostNamingConditionConditionServiceType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleHostTechComparison:HostNamingConditionConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleTechComparison:HostNamingConditionConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionStringComparison:HostNamingConditionConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionStringConditionKey:HostNamingConditionConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionStringKey:HostNamingConditionConditionStringKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionString:HostNamingConditionConditionString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSyntheticEngineTypeComparison:HostNamingConditionConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSyntheticEngine:HostNamingConditionConditionSyntheticEngine"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTagComparison:HostNamingConditionConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTag:HostNamingConditionConditionTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTech:HostNamingConditionConditionTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionApplicationType:HostNamingConditionConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionApplicationTypeComparison:HostNamingConditionConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureComputeMode:HostNamingConditionConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureComputeModeComparison:HostNamingConditionConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureSkuComparision:HostNamingConditionConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureSkus:HostNamingConditionConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBaseComparisonBasic:HostNamingConditionConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBaseConditionKey:HostNamingConditionConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBitness:HostNamingConditionConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBitnessComparision:HostNamingConditionConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCloudType:HostNamingConditionConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCloudTypeComparison:HostNamingConditionConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionComparison:HostNamingConditionConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomApplicationType:HostNamingConditionConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomApplicationTypeComparison:HostNamingConditionConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadata:HostNamingConditionConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadataDynamicKey:HostNamingConditionConditionCustomHostMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKey:HostNamingConditionConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadataDynamicKey:HostNamingConditionConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadata:HostNamingConditionConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadataDynamicKey:HostNamingConditionConditionCustomProcessMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKey:HostNamingConditionConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadataDynamicKey:HostNamingConditionConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDatabaseTopology:HostNamingConditionConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDatabaseTopologyComparison:HostNamingConditionConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDcrumDecoder:HostNamingConditionConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDcrumDecoderComparison:HostNamingConditionConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionEntity:HostNamingConditionConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionEntityIdComparison:HostNamingConditionConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionHostTech:HostNamingConditionConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHostTechValue:HostNamingConditionConditionHostTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionHostTechValue:HostNamingConditionConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionHypervisor:HostNamingConditionConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionHypervisorTypeComparision:HostNamingConditionConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedName:HostNamingConditionConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedNameComparison:HostNamingConditionConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedString:HostNamingConditionConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedStringComparison:HostNamingConditionConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTag:HostNamingConditionConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTagValue:HostNamingConditionConditionIndexedTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTagComparison:HostNamingConditionConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTagComparisonValue:HostNamingConditionConditionIndexedTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTagComparisonValue:HostNamingConditionConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTagValue:HostNamingConditionConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionInteger:HostNamingConditionConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIntegerComparison:HostNamingConditionConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIpaddress:HostNamingConditionConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIpaddressComparison:HostNamingConditionConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionKey:HostNamingConditionConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionMobilePlatform:HostNamingConditionConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionMobilePlatformComparison:HostNamingConditionConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOsArch:HostNamingConditionConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOsType:HostNamingConditionConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOsarchitectureComparison:HostNamingConditionConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOstypeComparison:HostNamingConditionConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionPaasType:HostNamingConditionConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionPaasTypeComparison:HostNamingConditionConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionProcessMetadata:HostNamingConditionConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionProcessMetadataConditionKey:HostNamingConditionConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceTopology:HostNamingConditionConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceTopologyComparison:HostNamingConditionConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceType:HostNamingConditionConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceTypeComparison:HostNamingConditionConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSimpleHostTechComparison:HostNamingConditionConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleHostTechComparisonValue:HostNamingConditionConditionSimpleHostTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSimpleHostTechComparisonValue:HostNamingConditionConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionSimpleTechComparison:HostNamingConditionConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleTechComparisonValue:HostNamingConditionConditionSimpleTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSimpleTechComparisonValue:HostNamingConditionConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionString:HostNamingConditionConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionStringComparison:HostNamingConditionConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionStringConditionKey:HostNamingConditionConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionStringKey:HostNamingConditionConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSyntheticEngine:HostNamingConditionConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSyntheticEngineTypeComparison:HostNamingConditionConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTag:HostNamingConditionConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTagValue:HostNamingConditionConditionTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTagComparison:HostNamingConditionConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTagComparisonValue:HostNamingConditionConditionTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTagComparisonValue:HostNamingConditionConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTagValue:HostNamingConditionConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTech:HostNamingConditionConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTechValue:HostNamingConditionConditionTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTechValue:HostNamingConditionConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection": {
            "properties": {
                "loadingTimeThresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThreshold:HttpMonitorAnomalyDetectionLoadingTimeThreshold"
                    },
                    "description": "Thresholds for loading times\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "outageHandlings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionOutageHandling:HttpMonitorAnomalyDetectionOutageHandling"
                    },
                    "description": "Outage handling configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThreshold:HttpMonitorAnomalyDetectionLoadingTimeThreshold": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold": {
            "properties": {
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "thresholds"
            ]
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold": {
            "properties": {
                "eventIndex": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestIndex": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueMs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "valueMs"
            ]
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionOutageHandling:HttpMonitorAnomalyDetectionOutageHandling": {
            "properties": {
                "globalOutage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localOutage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localOutagePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retryOnError": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy": {
            "properties": {
                "affectedLocations": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consecutiveRuns": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "affectedLocations",
                "consecutiveRuns"
            ]
        },
        "dynatrace:index/HttpMonitorScript:HttpMonitorScript": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequest:HttpMonitorScriptRequest"
                    },
                    "description": "A HTTP request to be performed by the monitor.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequest:HttpMonitorScriptRequest": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestAuthentication:HttpMonitorScriptRequestAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configuration": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestConfiguration:HttpMonitorScriptRequestConfiguration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postProcessing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preProcessing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestValidation:HttpMonitorScriptRequestValidation",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "method",
                "url"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestAuthentication:HttpMonitorScriptRequestAuthentication": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kdcIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "realmName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "type"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestConfiguration:HttpMonitorScriptRequestConfiguration": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "followRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestConfigurationHeaders:HttpMonitorScriptRequestConfigurationHeaders",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgent": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorScriptRequestConfigurationHeaders:HttpMonitorScriptRequestConfigurationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestConfigurationHeadersHeader:HttpMonitorScriptRequestConfigurationHeadersHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestConfigurationHeadersHeader:HttpMonitorScriptRequestConfigurationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestValidation:HttpMonitorScriptRequestValidation": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestValidationRule:HttpMonitorScriptRequestValidationRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestValidationRule:HttpMonitorScriptRequestValidationRule": {
            "properties": {
                "passIfFound": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorTag:HttpMonitorTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorTagTag:HttpMonitorTagTag"
                    },
                    "description": "Tag with source of a Dynatrace entity.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorTagTag:HttpMonitorTagTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager": {
            "properties": {
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ImsBridgesQueueManagerQueueManager:ImsBridgesQueueManagerQueueManager"
                    },
                    "description": "Queue manager definition for IMS bridge\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ImsBridgesQueueManagerQueueManager:ImsBridgesQueueManagerQueueManager": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the IMS bridge\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queueManagerQueues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fieldSelector": {
                    "type": "string",
                    "description": "The field selector string (url decoding is applied) when storing it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "A label of the events field selector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "fieldSelector",
                "label"
            ]
        },
        "dynatrace:index/MaintenanceFilter:MaintenanceFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceFilterFilter:MaintenanceFilterFilter"
                    },
                    "description": "A list of matching rules for dynamic filter formation.  If several rules are set, the OR logic applies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceFilterFilter:MaintenanceFilterFilter": {
            "properties": {
                "entityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the maintenance purpose\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableSynthetic": {
                    "type": "boolean",
                    "description": "Suppress execution of synthetic monitors during the maintenance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the maintenance window, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "suppression": {
                    "type": "string",
                    "description": "The type of suppression of alerting and problem detection during the maintenance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the maintenance: planned or unplanned\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "suppression",
                "type"
            ]
        },
        "dynatrace:index/MaintenanceSchedule:MaintenanceSchedule": {
            "properties": {
                "dailyRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleDailyRecurrence:MaintenanceScheduleDailyRecurrence",
                    "description": "The configuration for maintenance windows occuring daily\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthlyRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleMonthlyRecurrence:MaintenanceScheduleMonthlyRecurrence",
                    "description": "The configuration for maintenance windows occuring monthly\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onceRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleOnceRecurrence:MaintenanceScheduleOnceRecurrence",
                    "description": "The configuration for maintenance windows occuring once\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The time window of the maintenance window\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weeklyRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleWeeklyRecurrence:MaintenanceScheduleWeeklyRecurrence",
                    "description": "The configuration for maintenance windows occuring weekly\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/MaintenanceScheduleDailyRecurrence:MaintenanceScheduleDailyRecurrence": {
            "properties": {
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleDailyRecurrenceRecurrenceRange:MaintenanceScheduleDailyRecurrenceRecurrenceRange",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindow": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleDailyRecurrenceTimeWindow:MaintenanceScheduleDailyRecurrenceTimeWindow",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "recurrenceRange",
                "timeWindow"
            ]
        },
        "dynatrace:index/MaintenanceScheduleDailyRecurrenceRecurrenceRange:MaintenanceScheduleDailyRecurrenceRecurrenceRange": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "dynatrace:index/MaintenanceScheduleDailyRecurrenceTimeWindow:MaintenanceScheduleDailyRecurrenceTimeWindow": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceScheduleMonthlyRecurrence:MaintenanceScheduleMonthlyRecurrence": {
            "properties": {
                "dayOfMonth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleMonthlyRecurrenceRecurrenceRange:MaintenanceScheduleMonthlyRecurrenceRecurrenceRange",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindow": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleMonthlyRecurrenceTimeWindow:MaintenanceScheduleMonthlyRecurrenceTimeWindow",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dayOfMonth",
                "recurrenceRange",
                "timeWindow"
            ]
        },
        "dynatrace:index/MaintenanceScheduleMonthlyRecurrenceRecurrenceRange:MaintenanceScheduleMonthlyRecurrenceRecurrenceRange": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "dynatrace:index/MaintenanceScheduleMonthlyRecurrenceTimeWindow:MaintenanceScheduleMonthlyRecurrenceTimeWindow": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceScheduleOnceRecurrence:MaintenanceScheduleOnceRecurrence": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceScheduleWeeklyRecurrence:MaintenanceScheduleWeeklyRecurrence": {
            "properties": {
                "dayOfWeek": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleWeeklyRecurrenceRecurrenceRange:MaintenanceScheduleWeeklyRecurrenceRecurrenceRange",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindow": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleWeeklyRecurrenceTimeWindow:MaintenanceScheduleWeeklyRecurrenceTimeWindow",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dayOfWeek",
                "recurrenceRange",
                "timeWindow"
            ]
        },
        "dynatrace:index/MaintenanceScheduleWeeklyRecurrenceRecurrenceRange:MaintenanceScheduleWeeklyRecurrenceRecurrenceRange": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "dynatrace:index/MaintenanceScheduleWeeklyRecurrenceTimeWindow:MaintenanceScheduleWeeklyRecurrenceTimeWindow": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceWindowMetadata:MaintenanceWindowMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "description": "Dynatrace server version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule": {
            "properties": {
                "end": {
                    "type": "string",
                    "description": "The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowScheduleRecurrence:MaintenanceWindowScheduleRecurrence",
                    "description": "The recurrence of the maintenance window\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recurrenceType": {
                    "type": "string",
                    "description": "The type of the schedule recurrence. Possible values are `DAILY`, `MONTHLY`, `ONCE` and `WEEKLY`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "description": "The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoneId": {
                    "type": "string",
                    "description": "The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "end",
                "recurrenceType",
                "start",
                "zoneId"
            ]
        },
        "dynatrace:index/MaintenanceWindowScheduleRecurrence:MaintenanceWindowScheduleRecurrence": {
            "properties": {
                "dayOfMonth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dayOfWeek": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "durationMinutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "durationMinutes",
                "startTime"
            ]
        },
        "dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope": {
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Dynatrace entities (for example, hosts or services) to be included in the scope.  Allowed values are Dynatrace entity IDs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowScopeMatch:MaintenanceWindowScopeMatch"
                    },
                    "description": "A list of matching rules for dynamic scope formation.  If several rules are set, the OR logic applies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceWindowScopeMatch:MaintenanceWindowScopeMatch": {
            "properties": {
                "mzId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagCombination": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowScopeMatchTag:MaintenanceWindowScopeMatchTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the maintenance: planned or unplanned\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceWindowScopeMatchTag:MaintenanceWindowScopeMatchTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule": {
            "properties": {
                "appliesTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRuleCondition:ManagementZoneDimensionalRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "appliesTo"
            ]
        },
        "dynatrace:index/ManagementZoneDimensionalRuleCondition:ManagementZoneDimensionalRuleCondition": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "match",
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneMetadata:ManagementZoneMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRule:ManagementZoneRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleCondition:ManagementZoneRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propagationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneRuleCondition:ManagementZoneRuleCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionApplicationTypeComparison:ManagementZoneRuleConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionApplicationType:ManagementZoneRuleConditionApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureComputeModeComparison:ManagementZoneRuleConditionAzureComputeModeComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureComputeMode:ManagementZoneRuleConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureSkuComparision:ManagementZoneRuleConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureSkus:ManagementZoneRuleConditionAzureSkus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBaseComparisonBasic:ManagementZoneRuleConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBaseConditionKey:ManagementZoneRuleConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBitnessComparision:ManagementZoneRuleConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBitness:ManagementZoneRuleConditionBitness"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCloudTypeComparison:ManagementZoneRuleConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCloudType:ManagementZoneRuleConditionCloudType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionComparison:ManagementZoneRuleConditionComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomApplicationTypeComparison:ManagementZoneRuleConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomApplicationType:ManagementZoneRuleConditionCustomApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKey:ManagementZoneRuleConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadata:ManagementZoneRuleConditionCustomHostMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadata:ManagementZoneRuleConditionCustomProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDatabaseTopology:ManagementZoneRuleConditionDatabaseTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDatabaseTopologyComparison:ManagementZoneRuleConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDcrumDecoderComparison:ManagementZoneRuleConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDcrumDecoder:ManagementZoneRuleConditionDcrumDecoder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionEntity:ManagementZoneRuleConditionEntity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionEntityIdComparison:ManagementZoneRuleConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHostTech:ManagementZoneRuleConditionHostTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHypervisorTypeComparision:ManagementZoneRuleConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHypervisor:ManagementZoneRuleConditionHypervisor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedNameComparison:ManagementZoneRuleConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedName:ManagementZoneRuleConditionIndexedName"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedStringComparison:ManagementZoneRuleConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedString:ManagementZoneRuleConditionIndexedString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTagComparison:ManagementZoneRuleConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTag:ManagementZoneRuleConditionIndexedTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIntegerComparison:ManagementZoneRuleConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionInteger:ManagementZoneRuleConditionInteger"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIpaddressComparison:ManagementZoneRuleConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIpaddress:ManagementZoneRuleConditionIpaddress"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionKey:ManagementZoneRuleConditionKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionMobilePlatformComparison:ManagementZoneRuleConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionMobilePlatform:ManagementZoneRuleConditionMobilePlatform"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOsArch:ManagementZoneRuleConditionOsArch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOsType:ManagementZoneRuleConditionOsType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOsarchitectureComparison:ManagementZoneRuleConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOstypeComparison:ManagementZoneRuleConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionPaasTypeComparison:ManagementZoneRuleConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionPaasType:ManagementZoneRuleConditionPaasType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionProcessMetadataConditionKey:ManagementZoneRuleConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionProcessMetadata:ManagementZoneRuleConditionProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceTopology:ManagementZoneRuleConditionServiceTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceTopologyComparison:ManagementZoneRuleConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceTypeComparison:ManagementZoneRuleConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceType:ManagementZoneRuleConditionServiceType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparison:ManagementZoneRuleConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleTechComparison:ManagementZoneRuleConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionStringComparison:ManagementZoneRuleConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionStringConditionKey:ManagementZoneRuleConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionStringKey:ManagementZoneRuleConditionStringKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionString:ManagementZoneRuleConditionString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSyntheticEngineTypeComparison:ManagementZoneRuleConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSyntheticEngine:ManagementZoneRuleConditionSyntheticEngine"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTagComparison:ManagementZoneRuleConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTag:ManagementZoneRuleConditionTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTech:ManagementZoneRuleConditionTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionApplicationType:ManagementZoneRuleConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionApplicationTypeComparison:ManagementZoneRuleConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureComputeMode:ManagementZoneRuleConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureComputeModeComparison:ManagementZoneRuleConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureSkuComparision:ManagementZoneRuleConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureSkus:ManagementZoneRuleConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBaseComparisonBasic:ManagementZoneRuleConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBaseConditionKey:ManagementZoneRuleConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBitness:ManagementZoneRuleConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBitnessComparision:ManagementZoneRuleConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCloudType:ManagementZoneRuleConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCloudTypeComparison:ManagementZoneRuleConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionComparison:ManagementZoneRuleConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomApplicationType:ManagementZoneRuleConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomApplicationTypeComparison:ManagementZoneRuleConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadata:ManagementZoneRuleConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataDynamicKey:ManagementZoneRuleConditionCustomHostMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKey:ManagementZoneRuleConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataDynamicKey:ManagementZoneRuleConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadata:ManagementZoneRuleConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDatabaseTopology:ManagementZoneRuleConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDatabaseTopologyComparison:ManagementZoneRuleConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDcrumDecoder:ManagementZoneRuleConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDcrumDecoderComparison:ManagementZoneRuleConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionEntity:ManagementZoneRuleConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionEntityIdComparison:ManagementZoneRuleConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionHostTech:ManagementZoneRuleConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHostTechValue:ManagementZoneRuleConditionHostTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionHostTechValue:ManagementZoneRuleConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionHypervisor:ManagementZoneRuleConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionHypervisorTypeComparision:ManagementZoneRuleConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedName:ManagementZoneRuleConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedNameComparison:ManagementZoneRuleConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedString:ManagementZoneRuleConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedStringComparison:ManagementZoneRuleConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTag:ManagementZoneRuleConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTagValue:ManagementZoneRuleConditionIndexedTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTagComparison:ManagementZoneRuleConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTagComparisonValue:ManagementZoneRuleConditionIndexedTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTagComparisonValue:ManagementZoneRuleConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTagValue:ManagementZoneRuleConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionInteger:ManagementZoneRuleConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIntegerComparison:ManagementZoneRuleConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIpaddress:ManagementZoneRuleConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIpaddressComparison:ManagementZoneRuleConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionKey:ManagementZoneRuleConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionMobilePlatform:ManagementZoneRuleConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionMobilePlatformComparison:ManagementZoneRuleConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOsArch:ManagementZoneRuleConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOsType:ManagementZoneRuleConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOsarchitectureComparison:ManagementZoneRuleConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOstypeComparison:ManagementZoneRuleConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionPaasType:ManagementZoneRuleConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionPaasTypeComparison:ManagementZoneRuleConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionProcessMetadata:ManagementZoneRuleConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionProcessMetadataConditionKey:ManagementZoneRuleConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceTopology:ManagementZoneRuleConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceTopologyComparison:ManagementZoneRuleConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceType:ManagementZoneRuleConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceTypeComparison:ManagementZoneRuleConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparison:ManagementZoneRuleConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparisonValue:ManagementZoneRuleConditionSimpleHostTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparisonValue:ManagementZoneRuleConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleTechComparison:ManagementZoneRuleConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleTechComparisonValue:ManagementZoneRuleConditionSimpleTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleTechComparisonValue:ManagementZoneRuleConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionString:ManagementZoneRuleConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionStringComparison:ManagementZoneRuleConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionStringConditionKey:ManagementZoneRuleConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionStringKey:ManagementZoneRuleConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSyntheticEngine:ManagementZoneRuleConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSyntheticEngineTypeComparison:ManagementZoneRuleConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTag:ManagementZoneRuleConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTagValue:ManagementZoneRuleConditionTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTagComparison:ManagementZoneRuleConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTagComparisonValue:ManagementZoneRuleConditionTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTagComparisonValue:ManagementZoneRuleConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTagValue:ManagementZoneRuleConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTech:ManagementZoneRuleConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTechValue:ManagementZoneRuleConditionTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTechValue:ManagementZoneRuleConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MobileApplicationApdex:MobileApplicationApdex": {
            "properties": {
                "frustrated": {
                    "type": "integer",
                    "description": "Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frustratedOnError": {
                    "type": "boolean",
                    "description": "Apdex error condition: if `true` the user session is considered frustrated when an error is reported\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tolerable": {
                    "type": "integer",
                    "description": "Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "frustrated",
                "tolerable"
            ]
        },
        "dynatrace:index/MobileApplicationProperties:MobileApplicationProperties": {
            "properties": {
                "apiValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationPropertiesApiValue:MobileApplicationPropertiesApiValue"
                    },
                    "description": "A User Action / Session Property based on a value reported by the API\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationPropertiesRequestAttribute:MobileApplicationPropertiesRequestAttribute"
                    },
                    "description": "A User Action / Session Property based on a Server Side Request Attribute\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/MobileApplicationPropertiesApiValue:MobileApplicationPropertiesApiValue": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cleanupRule": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storeAsSessionProperty": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storeAsUserActionProperty": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "type"
            ]
        },
        "dynatrace:index/MobileApplicationPropertiesRequestAttribute:MobileApplicationPropertiesRequestAttribute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cleanupRule": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storeAsSessionProperty": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storeAsUserActionProperty": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "type"
            ]
        },
        "dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customMessage": {
                    "type": "string",
                    "description": "The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jobTemplateId": {
                    "type": "integer",
                    "description": "The ID of the target Ansible Tower job template\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jobTemplateUrl": {
                    "type": "string",
                    "description": "The URL of the target Ansible Tower job template\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Ansible Tower account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Ansible Tower account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "active",
                "alertingProfile",
                "customMessage",
                "jobTemplateId",
                "jobTemplateUrl",
                "name",
                "username"
            ]
        },
        "dynatrace:index/NotificationConfig:NotificationConfig": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` \u003e EmailNotificationConfig  * `PAGER_DUTY` \u003e PagerDutyNotificationConfig  * `WEBHOOK` \u003e WebHookNotificationConfig  * `SLACK` \u003e SlackNotificationConfig  * `HIPCHAT` \u003e HipChatNotificationConfig  * `VICTOROPS` \u003e VictorOpsNotificationConfig  * `SERVICE_NOW` \u003e ServiceNowNotificationConfig  * `XMATTERS` \u003e XMattersNotificationConfig  * `ANSIBLETOWER` \u003e AnsibleTowerNotificationConfig  * `OPS_GENIE` \u003e OpsGenieNotificationConfig  * `JIRA` \u003e JiraNotificationConfig  * `TRELLO` \u003e TrelloNotificationConfig\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "name",
                "type"
            ]
        },
        "dynatrace:index/NotificationEmail:NotificationEmail": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bccReceivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email BCC-recipients\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "body": {
                    "type": "string",
                    "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ccReceivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email CC-recipients\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email recipients\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email notifications\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "body",
                "name",
                "subject"
            ]
        },
        "dynatrace:index/NotificationHipchat:NotificationHipchat": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "description": "The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the HipChat WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "message",
                "name"
            ]
        },
        "dynatrace:index/NotificationJira:NotificationJira": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueType": {
                    "type": "string",
                    "description": "The type of the Jira issue to be created by this notification\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Jira profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "description": "The project key of the Jira issue to be created by this notification\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Jira API endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Jira profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "description",
                "issueType",
                "name",
                "projectKey",
                "summary",
                "url",
                "username"
            ]
        },
        "dynatrace:index/NotificationOpsGenie:NotificationOpsGenie": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access OpsGenie\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The region domain of the OpsGenie\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "domain",
                "message",
                "name"
            ]
        },
        "dynatrace:index/NotificationPagerDuty:NotificationPagerDuty": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The name of the PagerDuty account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceApiKey": {
                    "type": "string",
                    "description": "The API key to access PagerDuty\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "account",
                "active",
                "alertingProfile",
                "name",
                "serviceName"
            ]
        },
        "dynatrace:index/NotificationServiceNow:NotificationServiceNow": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceName": {
                    "type": "string",
                    "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "description": "The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The username to the ServiceNow account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendEvents": {
                    "type": "boolean",
                    "description": "Send events into ServiceNow ITOM (`true`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendIncidents": {
                    "type": "boolean",
                    "description": "Send incidents into ServiceNow ITSM (`true`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "message",
                "name",
                "sendEvents",
                "sendIncidents",
                "username"
            ]
        },
        "dynatrace:index/NotificationSlack:NotificationSlack": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "channel": {
                    "type": "string",
                    "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "channel",
                "name",
                "title"
            ]
        },
        "dynatrace:index/NotificationTrello:NotificationTrello": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationKey": {
                    "type": "string",
                    "description": "The application key for the Trello account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationToken": {
                    "type": "string",
                    "description": "The application token for the Trello account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "boardId": {
                    "type": "string",
                    "description": "The Trello board to which the card should be assigned\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Trello card.   You can use same placeholders as in card text\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "listId": {
                    "type": "string",
                    "description": "The Trello list to which the card should be assigned\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolvedListId": {
                    "type": "string",
                    "description": "The Trello list to which the card of the resolved problem should be assigned\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "applicationKey",
                "boardId",
                "description",
                "listId",
                "name",
                "resolvedListId",
                "text"
            ]
        },
        "dynatrace:index/NotificationVictorOps:NotificationVictorOps": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the target VictorOps account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routingKey": {
                    "type": "string",
                    "description": "The routing key, defining the group to be notified\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "message",
                "name",
                "routingKey"
            ]
        },
        "dynatrace:index/NotificationWebHook:NotificationWebHook": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/NotificationWebHookHeader:NotificationWebHookHeader"
                    },
                    "description": "A list of the additional HTTP headers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notifyEventMerges": {
                    "type": "boolean",
                    "description": "Call webhook if new events merge into existing problems\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "active",
                "alertingProfile",
                "name",
                "payload",
                "url"
            ]
        },
        "dynatrace:index/NotificationWebHookHeader:NotificationWebHookHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/NotificationXmatters:NotificationXmatters": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/NotificationXmattersHeader:NotificationXmattersHeader"
                    },
                    "description": "A list of the additional HTTP headers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the xMatters WebHook\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "active",
                "alertingProfile",
                "name",
                "payload",
                "url"
            ]
        },
        "dynatrace:index/NotificationXmattersHeader:NotificationXmattersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionCondition:ProcessgroupNamingConditionCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionCondition:ProcessgroupNamingConditionCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionApplicationTypeComparison:ProcessgroupNamingConditionConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionApplicationType:ProcessgroupNamingConditionConditionApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeModeComparison:ProcessgroupNamingConditionConditionAzureComputeModeComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeMode:ProcessgroupNamingConditionConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureSkuComparision:ProcessgroupNamingConditionConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureSkus:ProcessgroupNamingConditionConditionAzureSkus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBaseComparisonBasic:ProcessgroupNamingConditionConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBaseConditionKey:ProcessgroupNamingConditionConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBitnessComparision:ProcessgroupNamingConditionConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBitness:ProcessgroupNamingConditionConditionBitness"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCloudTypeComparison:ProcessgroupNamingConditionConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCloudType:ProcessgroupNamingConditionConditionCloudType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionComparison:ProcessgroupNamingConditionConditionComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationTypeComparison:ProcessgroupNamingConditionConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationType:ProcessgroupNamingConditionConditionCustomApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadata:ProcessgroupNamingConditionConditionCustomHostMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadata:ProcessgroupNamingConditionConditionCustomProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopology:ProcessgroupNamingConditionConditionDatabaseTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopologyComparison:ProcessgroupNamingConditionConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoderComparison:ProcessgroupNamingConditionConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoder:ProcessgroupNamingConditionConditionDcrumDecoder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionEntity:ProcessgroupNamingConditionConditionEntity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionEntityIdComparison:ProcessgroupNamingConditionConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHostTech:ProcessgroupNamingConditionConditionHostTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHypervisorTypeComparision:ProcessgroupNamingConditionConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHypervisor:ProcessgroupNamingConditionConditionHypervisor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedNameComparison:ProcessgroupNamingConditionConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedName:ProcessgroupNamingConditionConditionIndexedName"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedStringComparison:ProcessgroupNamingConditionConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedString:ProcessgroupNamingConditionConditionIndexedString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparison:ProcessgroupNamingConditionConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTag:ProcessgroupNamingConditionConditionIndexedTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIntegerComparison:ProcessgroupNamingConditionConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionInteger:ProcessgroupNamingConditionConditionInteger"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIpaddressComparison:ProcessgroupNamingConditionConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIpaddress:ProcessgroupNamingConditionConditionIpaddress"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionKey:ProcessgroupNamingConditionConditionKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatformComparison:ProcessgroupNamingConditionConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatform:ProcessgroupNamingConditionConditionMobilePlatform"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOsArch:ProcessgroupNamingConditionConditionOsArch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOsType:ProcessgroupNamingConditionConditionOsType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOsarchitectureComparison:ProcessgroupNamingConditionConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOstypeComparison:ProcessgroupNamingConditionConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionPaasTypeComparison:ProcessgroupNamingConditionConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionPaasType:ProcessgroupNamingConditionConditionPaasType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadataConditionKey:ProcessgroupNamingConditionConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadata:ProcessgroupNamingConditionConditionProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceTopology:ProcessgroupNamingConditionConditionServiceTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceTopologyComparison:ProcessgroupNamingConditionConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceTypeComparison:ProcessgroupNamingConditionConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceType:ProcessgroupNamingConditionConditionServiceType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparison:ProcessgroupNamingConditionConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparison:ProcessgroupNamingConditionConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionStringComparison:ProcessgroupNamingConditionConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionStringConditionKey:ProcessgroupNamingConditionConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionStringKey:ProcessgroupNamingConditionConditionStringKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionString:ProcessgroupNamingConditionConditionString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison:ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngine:ProcessgroupNamingConditionConditionSyntheticEngine"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTagComparison:ProcessgroupNamingConditionConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTag:ProcessgroupNamingConditionConditionTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTech:ProcessgroupNamingConditionConditionTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionApplicationType:ProcessgroupNamingConditionConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionApplicationTypeComparison:ProcessgroupNamingConditionConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeMode:ProcessgroupNamingConditionConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeModeComparison:ProcessgroupNamingConditionConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureSkuComparision:ProcessgroupNamingConditionConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureSkus:ProcessgroupNamingConditionConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBaseComparisonBasic:ProcessgroupNamingConditionConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBaseConditionKey:ProcessgroupNamingConditionConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBitness:ProcessgroupNamingConditionConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBitnessComparision:ProcessgroupNamingConditionConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCloudType:ProcessgroupNamingConditionConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCloudTypeComparison:ProcessgroupNamingConditionConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionComparison:ProcessgroupNamingConditionConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationType:ProcessgroupNamingConditionConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationTypeComparison:ProcessgroupNamingConditionConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadata:ProcessgroupNamingConditionConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadata:ProcessgroupNamingConditionConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopology:ProcessgroupNamingConditionConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopologyComparison:ProcessgroupNamingConditionConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoder:ProcessgroupNamingConditionConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoderComparison:ProcessgroupNamingConditionConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionEntity:ProcessgroupNamingConditionConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionEntityIdComparison:ProcessgroupNamingConditionConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHostTech:ProcessgroupNamingConditionConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHostTechValue:ProcessgroupNamingConditionConditionHostTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHostTechValue:ProcessgroupNamingConditionConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHypervisor:ProcessgroupNamingConditionConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHypervisorTypeComparision:ProcessgroupNamingConditionConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedName:ProcessgroupNamingConditionConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedNameComparison:ProcessgroupNamingConditionConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedString:ProcessgroupNamingConditionConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedStringComparison:ProcessgroupNamingConditionConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTag:ProcessgroupNamingConditionConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagValue:ProcessgroupNamingConditionConditionIndexedTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparison:ProcessgroupNamingConditionConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparisonValue:ProcessgroupNamingConditionConditionIndexedTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparisonValue:ProcessgroupNamingConditionConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagValue:ProcessgroupNamingConditionConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionInteger:ProcessgroupNamingConditionConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIntegerComparison:ProcessgroupNamingConditionConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIpaddress:ProcessgroupNamingConditionConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIpaddressComparison:ProcessgroupNamingConditionConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionKey:ProcessgroupNamingConditionConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatform:ProcessgroupNamingConditionConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatformComparison:ProcessgroupNamingConditionConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOsArch:ProcessgroupNamingConditionConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOsType:ProcessgroupNamingConditionConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOsarchitectureComparison:ProcessgroupNamingConditionConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOstypeComparison:ProcessgroupNamingConditionConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionPaasType:ProcessgroupNamingConditionConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionPaasTypeComparison:ProcessgroupNamingConditionConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadata:ProcessgroupNamingConditionConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadataConditionKey:ProcessgroupNamingConditionConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceTopology:ProcessgroupNamingConditionConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceTopologyComparison:ProcessgroupNamingConditionConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceType:ProcessgroupNamingConditionConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceTypeComparison:ProcessgroupNamingConditionConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparison:ProcessgroupNamingConditionConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue:ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue:ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparison:ProcessgroupNamingConditionConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparisonValue:ProcessgroupNamingConditionConditionSimpleTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparisonValue:ProcessgroupNamingConditionConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionString:ProcessgroupNamingConditionConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionStringComparison:ProcessgroupNamingConditionConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionStringConditionKey:ProcessgroupNamingConditionConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionStringKey:ProcessgroupNamingConditionConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngine:ProcessgroupNamingConditionConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison:ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTag:ProcessgroupNamingConditionConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTagValue:ProcessgroupNamingConditionConditionTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTagComparison:ProcessgroupNamingConditionConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTagComparisonValue:ProcessgroupNamingConditionConditionTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTagComparisonValue:ProcessgroupNamingConditionConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTagValue:ProcessgroupNamingConditionConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTech:ProcessgroupNamingConditionConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTechValue:ProcessgroupNamingConditionConditionTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTechValue:ProcessgroupNamingConditionConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue": {
            "properties": {
                "aliasQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerAliasQueueAliasQueue:QueueManagerAliasQueueAliasQueue"
                    },
                    "description": "Alias queue definitions for queue manager\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerAliasQueueAliasQueue:QueueManagerAliasQueueAliasQueue": {
            "properties": {
                "aliasQueueName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseQueueName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aliasQueueName",
                "baseQueueName"
            ]
        },
        "dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue": {
            "properties": {
                "clusterQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerClusterQueueClusterQueue:QueueManagerClusterQueueClusterQueue"
                    },
                    "description": "Cluster queue definitions for queue manager\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerClusterQueueClusterQueue:QueueManagerClusterQueueClusterQueue": {
            "properties": {
                "clusterVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localQueueName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "localQueueName"
            ]
        },
        "dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue": {
            "properties": {
                "remoteQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueueRemoteQueue:QueueManagerRemoteQueueRemoteQueue"
                    },
                    "description": "Remote queue definitions for queue manager\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerRemoteQueueRemoteQueue:QueueManagerRemoteQueueRemoteQueue": {
            "properties": {
                "clusterVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localQueueName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteQueueManager": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteQueueName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "localQueueName",
                "remoteQueueManager",
                "remoteQueueName"
            ]
        },
        "dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource": {
            "properties": {
                "capturingAndStorageLocation": {
                    "type": "string",
                    "description": "Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cicsSdkMethodNodeCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceCicsSdkMethodNodeCondition:RequestAttributeDataSourceCicsSdkMethodNodeCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The data source is enabled (`true`) or disabled (`false`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iibLabelMethodNodeCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceIibLabelMethodNodeCondition:RequestAttributeDataSourceIibLabelMethodNodeCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iibMethodNodeCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceIibMethodNodeCondition:RequestAttributeDataSourceIibMethodNodeCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iibNodeType": {
                    "type": "string",
                    "description": "The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceMethod:RequestAttributeDataSourceMethod"
                    },
                    "description": "The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parameterName": {
                    "type": "string",
                    "description": "The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceScope:RequestAttributeDataSourceScope",
                    "description": "Conditions for data capturing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionAttributeTechnology": {
                    "type": "string",
                    "description": "The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "technology": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueProcessing": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceValueProcessing:RequestAttributeDataSourceValueProcessing",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "source"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceCicsSdkMethodNodeCondition:RequestAttributeDataSourceCicsSdkMethodNodeCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceIibLabelMethodNodeCondition:RequestAttributeDataSourceIibLabelMethodNodeCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceIibMethodNodeCondition:RequestAttributeDataSourceIibMethodNodeCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceMethod:RequestAttributeDataSourceMethod": {
            "properties": {
                "argumentIndex": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "capture": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deepObjectAccess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceMethodMethod:RequestAttributeDataSourceMethodMethod",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capture"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceMethodMethod:RequestAttributeDataSourceMethodMethod": {
            "properties": {
                "argumentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "className": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileNameMatcher": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "methodName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "returnType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "methodName",
                "returnType",
                "visibility"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceScope:RequestAttributeDataSourceScope": {
            "properties": {
                "hostGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTechnology": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagOfProcessGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestAttributeDataSourceValueProcessing:RequestAttributeDataSourceValueProcessing": {
            "properties": {
                "extractSubstring": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceValueProcessingExtractSubstring:RequestAttributeDataSourceValueProcessingExtractSubstring",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splitAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trim": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceValueProcessingValueCondition:RequestAttributeDataSourceValueProcessingValueCondition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueExtractorRegex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestAttributeDataSourceValueProcessingExtractSubstring:RequestAttributeDataSourceValueProcessingExtractSubstring": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endDelimiter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "position": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "delimiter",
                "position"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceValueProcessingValueCondition:RequestAttributeDataSourceValueProcessingValueCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestNamingConditions:RequestNamingConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestNamingConditionsCondition:RequestNamingConditionsCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsCondition:RequestNamingConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparison": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparison:RequestNamingConditionsConditionComparison",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "comparison"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparison:RequestNamingConditionsConditionComparison": {
            "properties": {
                "boolean": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonBoolean:RequestNamingConditionsConditionComparisonBoolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "esbInputNodeType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonEsbInputNodeType:RequestNamingConditionsConditionComparisonEsbInputNodeType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failedState": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFailedState:RequestNamingConditionsConditionComparisonFailedState",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failureReason": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFailureReason:RequestNamingConditionsConditionComparisonFailureReason",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fastString": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFastString:RequestNamingConditionsConditionComparisonFastString",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flawState": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFlawState:RequestNamingConditionsConditionComparisonFlawState",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "generic": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonGeneric:RequestNamingConditionsConditionComparisonGeneric",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonHttpMethod:RequestNamingConditionsConditionComparisonHttpMethod",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpStatusClass": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonHttpStatusClass:RequestNamingConditionsConditionComparisonHttpStatusClass",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iibInputNodeType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonIibInputNodeType:RequestNamingConditionsConditionComparisonIibInputNodeType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "number": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumber:RequestNamingConditionsConditionComparisonNumber",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttribute:RequestNamingConditionsConditionComparisonNumberRequestAttribute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonServiceType:RequestNamingConditionsConditionComparisonServiceType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "string": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonString:RequestNamingConditionsConditionComparisonString",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttribute:RequestNamingConditionsConditionComparisonStringRequestAttribute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTag:RequestNamingConditionsConditionComparisonTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zosCallType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonZosCallType:RequestNamingConditionsConditionComparisonZosCallType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonBoolean:RequestNamingConditionsConditionComparisonBoolean": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonEsbInputNodeType:RequestNamingConditionsConditionComparisonEsbInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFailedState:RequestNamingConditionsConditionComparisonFailedState": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFailureReason:RequestNamingConditionsConditionComparisonFailureReason": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFastString:RequestNamingConditionsConditionComparisonFastString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFlawState:RequestNamingConditionsConditionComparisonFlawState": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonGeneric:RequestNamingConditionsConditionComparisonGeneric": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonHttpMethod:RequestNamingConditionsConditionComparisonHttpMethod": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonHttpStatusClass:RequestNamingConditionsConditionComparisonHttpStatusClass": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonIibInputNodeType:RequestNamingConditionsConditionComparisonIibInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumber:RequestNamingConditionsConditionComparisonNumber": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttribute:RequestNamingConditionsConditionComparisonNumberRequestAttribute": {
            "properties": {
                "matchOnChildCalls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSource:RequestNamingConditionsConditionComparisonNumberRequestAttributeSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSource:RequestNamingConditionsConditionComparisonNumberRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonServiceType:RequestNamingConditionsConditionComparisonServiceType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonString:RequestNamingConditionsConditionComparisonString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttribute:RequestNamingConditionsConditionComparisonStringRequestAttribute": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchOnChildCalls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSource:RequestNamingConditionsConditionComparisonStringRequestAttributeSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSource:RequestNamingConditionsConditionComparisonStringRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTag:RequestNamingConditionsConditionComparisonTag": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTagValue:RequestNamingConditionsConditionComparisonTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTagValues:RequestNamingConditionsConditionComparisonTagValues",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTagValue:RequestNamingConditionsConditionComparisonTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTagValues:RequestNamingConditionsConditionComparisonTagValues": {
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTagValuesValue:RequestNamingConditionsConditionComparisonTagValuesValue"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTagValuesValue:RequestNamingConditionsConditionComparisonTagValuesValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonZosCallType:RequestNamingConditionsConditionComparisonZosCallType": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders": {
            "properties": {
                "placeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholder:RequestNamingPlaceholdersPlaceholder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholder:RequestNamingPlaceholdersPlaceholder": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "delimiterOrRegex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endDelimiter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholderSource:RequestNamingPlaceholdersPlaceholderSource",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useFromChildCalls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "kind",
                "name"
            ]
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholderSource:RequestNamingPlaceholdersPlaceholderSource": {
            "properties": {
                "managementZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTag:RequestNamingPlaceholdersPlaceholderSourceServiceTag",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTag:RequestNamingPlaceholdersPlaceholderSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey:RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey:RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRatesAuto:ServiceAnomaliesFailureRatesAuto",
                    "description": "Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRatesThresholds:ServiceAnomaliesFailureRatesThresholds",
                    "description": "Fixed thresholds for failure rate increase detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesFailureRatesAuto:ServiceAnomaliesFailureRatesAuto": {
            "properties": {
                "absolute": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "relative": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "absolute",
                "relative"
            ]
        },
        "dynatrace:index/ServiceAnomaliesFailureRatesThresholds:ServiceAnomaliesFailureRatesThresholds": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad": {
            "properties": {
                "drops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                    "description": "The configuration of traffic drops detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spikes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadSpikes:ServiceAnomaliesLoadSpikes",
                    "description": "The configuration of traffic spikes detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "description": "Alert if the service stays in abnormal state for at least *X* minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesLoadSpikes:ServiceAnomaliesLoadSpikes": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimesAuto:ServiceAnomaliesResponseTimesAuto",
                    "description": "Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimesThresholds:ServiceAnomaliesResponseTimesThresholds",
                    "description": "Fixed thresholds for response time degradation detection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesResponseTimesAuto:ServiceAnomaliesResponseTimesAuto": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "percent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "percent",
                "slowestMilliseconds",
                "slowestPercent"
            ]
        },
        "dynatrace:index/ServiceAnomaliesResponseTimesThresholds:ServiceAnomaliesResponseTimesThresholds": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "milliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "sensitivity",
                "slowestMilliseconds"
            ]
        },
        "dynatrace:index/ServiceNamingCondition:ServiceNamingCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionCondition:ServiceNamingConditionCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionCondition:ServiceNamingConditionCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionApplicationTypeComparison:ServiceNamingConditionConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionApplicationType:ServiceNamingConditionConditionApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureComputeModeComparison:ServiceNamingConditionConditionAzureComputeModeComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureComputeMode:ServiceNamingConditionConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureSkuComparision:ServiceNamingConditionConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureSkus:ServiceNamingConditionConditionAzureSkus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBaseComparisonBasic:ServiceNamingConditionConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBaseConditionKey:ServiceNamingConditionConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBitnessComparision:ServiceNamingConditionConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBitness:ServiceNamingConditionConditionBitness"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCloudTypeComparison:ServiceNamingConditionConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCloudType:ServiceNamingConditionConditionCloudType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionComparison:ServiceNamingConditionConditionComparison"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomApplicationTypeComparison:ServiceNamingConditionConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomApplicationType:ServiceNamingConditionConditionCustomApplicationType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKey:ServiceNamingConditionConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadata:ServiceNamingConditionConditionCustomHostMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadata:ServiceNamingConditionConditionCustomProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDatabaseTopology:ServiceNamingConditionConditionDatabaseTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDatabaseTopologyComparison:ServiceNamingConditionConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDcrumDecoderComparison:ServiceNamingConditionConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDcrumDecoder:ServiceNamingConditionConditionDcrumDecoder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionEntity:ServiceNamingConditionConditionEntity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionEntityIdComparison:ServiceNamingConditionConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHostTech:ServiceNamingConditionConditionHostTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHypervisorTypeComparision:ServiceNamingConditionConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHypervisor:ServiceNamingConditionConditionHypervisor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedNameComparison:ServiceNamingConditionConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedName:ServiceNamingConditionConditionIndexedName"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedStringComparison:ServiceNamingConditionConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedString:ServiceNamingConditionConditionIndexedString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTagComparison:ServiceNamingConditionConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTag:ServiceNamingConditionConditionIndexedTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIntegerComparison:ServiceNamingConditionConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionInteger:ServiceNamingConditionConditionInteger"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIpaddressComparison:ServiceNamingConditionConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIpaddress:ServiceNamingConditionConditionIpaddress"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionKey:ServiceNamingConditionConditionKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionMobilePlatformComparison:ServiceNamingConditionConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionMobilePlatform:ServiceNamingConditionConditionMobilePlatform"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOsArch:ServiceNamingConditionConditionOsArch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOsType:ServiceNamingConditionConditionOsType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOsarchitectureComparison:ServiceNamingConditionConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOstypeComparison:ServiceNamingConditionConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionPaasTypeComparison:ServiceNamingConditionConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionPaasType:ServiceNamingConditionConditionPaasType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionProcessMetadataConditionKey:ServiceNamingConditionConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionProcessMetadata:ServiceNamingConditionConditionProcessMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceTopology:ServiceNamingConditionConditionServiceTopology"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceTopologyComparison:ServiceNamingConditionConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceTypeComparison:ServiceNamingConditionConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceType:ServiceNamingConditionConditionServiceType"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparison:ServiceNamingConditionConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleTechComparison:ServiceNamingConditionConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionStringComparison:ServiceNamingConditionConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionStringConditionKey:ServiceNamingConditionConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionStringKey:ServiceNamingConditionConditionStringKey"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionString:ServiceNamingConditionConditionString"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSyntheticEngineTypeComparison:ServiceNamingConditionConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSyntheticEngine:ServiceNamingConditionConditionSyntheticEngine"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTagComparison:ServiceNamingConditionConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTag:ServiceNamingConditionConditionTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTech:ServiceNamingConditionConditionTech"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionApplicationType:ServiceNamingConditionConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionApplicationTypeComparison:ServiceNamingConditionConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureComputeMode:ServiceNamingConditionConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureComputeModeComparison:ServiceNamingConditionConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureSkuComparision:ServiceNamingConditionConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureSkus:ServiceNamingConditionConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBaseComparisonBasic:ServiceNamingConditionConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBaseConditionKey:ServiceNamingConditionConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBitness:ServiceNamingConditionConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBitnessComparision:ServiceNamingConditionConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCloudType:ServiceNamingConditionConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCloudTypeComparison:ServiceNamingConditionConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionComparison:ServiceNamingConditionConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomApplicationType:ServiceNamingConditionConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomApplicationTypeComparison:ServiceNamingConditionConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadata:ServiceNamingConditionConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataDynamicKey:ServiceNamingConditionConditionCustomHostMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKey:ServiceNamingConditionConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataDynamicKey:ServiceNamingConditionConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadata:ServiceNamingConditionConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDatabaseTopology:ServiceNamingConditionConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDatabaseTopologyComparison:ServiceNamingConditionConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDcrumDecoder:ServiceNamingConditionConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDcrumDecoderComparison:ServiceNamingConditionConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionEntity:ServiceNamingConditionConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionEntityIdComparison:ServiceNamingConditionConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionHostTech:ServiceNamingConditionConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHostTechValue:ServiceNamingConditionConditionHostTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionHostTechValue:ServiceNamingConditionConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionHypervisor:ServiceNamingConditionConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionHypervisorTypeComparision:ServiceNamingConditionConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedName:ServiceNamingConditionConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedNameComparison:ServiceNamingConditionConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedString:ServiceNamingConditionConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedStringComparison:ServiceNamingConditionConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTag:ServiceNamingConditionConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTagValue:ServiceNamingConditionConditionIndexedTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTagComparison:ServiceNamingConditionConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTagComparisonValue:ServiceNamingConditionConditionIndexedTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTagComparisonValue:ServiceNamingConditionConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTagValue:ServiceNamingConditionConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionInteger:ServiceNamingConditionConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIntegerComparison:ServiceNamingConditionConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIpaddress:ServiceNamingConditionConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIpaddressComparison:ServiceNamingConditionConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionKey:ServiceNamingConditionConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionMobilePlatform:ServiceNamingConditionConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionMobilePlatformComparison:ServiceNamingConditionConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOsArch:ServiceNamingConditionConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOsType:ServiceNamingConditionConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOsarchitectureComparison:ServiceNamingConditionConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOstypeComparison:ServiceNamingConditionConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionPaasType:ServiceNamingConditionConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionPaasTypeComparison:ServiceNamingConditionConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionProcessMetadata:ServiceNamingConditionConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionProcessMetadataConditionKey:ServiceNamingConditionConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceTopology:ServiceNamingConditionConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceTopologyComparison:ServiceNamingConditionConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceType:ServiceNamingConditionConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceTypeComparison:ServiceNamingConditionConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparison:ServiceNamingConditionConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparisonValue:ServiceNamingConditionConditionSimpleHostTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparisonValue:ServiceNamingConditionConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleTechComparison:ServiceNamingConditionConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleTechComparisonValue:ServiceNamingConditionConditionSimpleTechComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleTechComparisonValue:ServiceNamingConditionConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionString:ServiceNamingConditionConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionStringComparison:ServiceNamingConditionConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionStringConditionKey:ServiceNamingConditionConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionStringKey:ServiceNamingConditionConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSyntheticEngine:ServiceNamingConditionConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSyntheticEngineTypeComparison:ServiceNamingConditionConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTag:ServiceNamingConditionConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTagValue:ServiceNamingConditionConditionTagValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTagComparison:ServiceNamingConditionConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTagComparisonValue:ServiceNamingConditionConditionTagComparisonValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTagComparisonValue:ServiceNamingConditionConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTagValue:ServiceNamingConditionConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTech:ServiceNamingConditionConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTechValue:ServiceNamingConditionConditionTechValue",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTechValue:ServiceNamingConditionConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknowns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verbatimType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatchesMatch:SpanCaptureRuleMatchesMatch"
                    },
                    "description": "Matching strategies for the Span\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "dynatrace:index/SpanCaptureRuleMatchesMatch:SpanCaptureRuleMatchesMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparison": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SpanContextPropagationMatchesMatch:SpanContextPropagationMatchesMatch"
                    },
                    "description": "Matching strategies for the Span\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "dynatrace:index/SpanContextPropagationMatchesMatch:SpanContextPropagationMatchesMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparison": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SpanEntryPointMatchesMatch:SpanEntryPointMatchesMatch"
                    },
                    "description": "Matching strategies for the Span\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "dynatrace:index/SpanEntryPointMatchesMatch:SpanEntryPointMatchesMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparison": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "dynatrace:index/UserGroupPermissions:UserGroupPermissions": {
            "properties": {
                "grants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/UserGroupPermissionsGrant:UserGroupPermissionsGrant"
                    },
                    "description": "A permission granted to one or multiple environments\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grants"
            ]
        },
        "dynatrace:index/UserGroupPermissionsGrant:UserGroupPermissionsGrant": {
            "properties": {
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "permission"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals": {
            "properties": {
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoal:WebApplicationConversionGoalsGoal"
                    },
                    "description": "A conversion goal of the application\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "goals"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoalsGoal:WebApplicationConversionGoalsGoal": {
            "properties": {
                "destination": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalDestination:WebApplicationConversionGoalsGoalDestination",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web application, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAction": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalUserAction:WebApplicationConversionGoalsGoalUserAction",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visitDuration": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalVisitDuration:WebApplicationConversionGoalsGoalVisitDuration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visitNumAction": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalVisitNumAction:WebApplicationConversionGoalsGoalVisitNumAction",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalDestination:WebApplicationConversionGoalsGoalDestination": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlOrPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "urlOrPath"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalUserAction:WebApplicationConversionGoalsGoalUserAction": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchEntity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalVisitDuration:WebApplicationConversionGoalsGoalVisitDuration": {
            "properties": {
                "duration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalVisitNumAction:WebApplicationConversionGoalsGoalVisitNumAction": {
            "properties": {
                "numUserActions": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings": {
            "properties": {
                "frustratingFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frustratingThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toleratedFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toleratedThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationKeyUserActionAction:WebApplicationKeyUserActionAction"
                    },
                    "description": "Configuration of the key user action\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actions"
            ]
        },
        "dynatrace:index/WebApplicationKeyUserActionAction:WebApplicationKeyUserActionAction": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web application, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings": {
            "properties": {
                "frustratingFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frustratingThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toleratedFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toleratedThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings": {
            "properties": {
                "captures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettingsCapture:WebApplicationMetaDataCaptureSettingsCapture"
                    },
                    "description": "Java script agent meta data capture settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMetaDataCaptureSettingsCapture:WebApplicationMetaDataCaptureSettingsCapture": {
            "properties": {
                "capturingName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web application, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicMetadata": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uniqueId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useLastValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capturingName",
                "name",
                "type"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings": {
            "properties": {
                "addCrossOriginAnonymousAttribute": {
                    "type": "boolean",
                    "description": "Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "advancedJavascriptTagSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings",
                    "description": "Advanced JavaScript tag settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "angularPackageName": {
                    "type": "string",
                    "description": "The name of the angular package\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserRestrictionSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettings:WebApplicationMonitoringSettingsBrowserRestrictionSettings",
                    "description": "Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheControlHeaderOptimizations": {
                    "type": "boolean",
                    "description": "Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentCapture": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCapture:WebApplicationMonitoringSettingsContentCapture",
                    "description": "Settings for content capture\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookiePlacementDomain": {
                    "type": "string",
                    "description": "Domain for cookie placement. Maximum 150 characters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "correlationHeaderInclusionRegex": {
                    "type": "string",
                    "description": "To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customConfigurationProperties": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeXhrRegex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fetchRequests": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "injectionMode": {
                    "type": "string",
                    "description": "Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddressRestrictionSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettings:WebApplicationMonitoringSettingsIpAddressRestrictionSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "javascriptFrameworkSupport": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsJavascriptFrameworkSupport:WebApplicationMonitoringSettingsJavascriptFrameworkSupport",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "javascriptInjectionRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRules:WebApplicationMonitoringSettingsJavascriptInjectionRules",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "libraryFileLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoringDataPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptTagCacheDurationInHours": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secureCookieAttribute": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverRequestPathId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xmlHttpRequest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contentCapture",
                "injectionMode"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings": {
            "properties": {
                "additionalEventHandlers": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventWrapperSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "globalEventCaptureSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instrumentUnsupportedAjaxFrameworks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxActionNameLength": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxErrorsToCapture": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "specialCharactersToEscape": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncBeaconFirefox": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncBeaconInternetExplorer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "maxActionNameLength",
                "maxErrorsToCapture"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers": {
            "properties": {
                "blur": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "change": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "click": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDomNodes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mouseup": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toStringMethod": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useMouseUpEventForClicks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "maxDomNodes"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings": {
            "properties": {
                "blur": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "change": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "click": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mouseup": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "touchEnd": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "touchStart": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings": {
            "properties": {
                "additionalEventCapturedAsUserInput": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "click": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "doubleclick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keydown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyup": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mousedown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mouseup": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scroll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettings:WebApplicationMonitoringSettingsBrowserRestrictionSettings": {
            "properties": {
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restrictions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions": {
            "properties": {
                "restrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "restrictions"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction": {
            "properties": {
                "browserType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "platform": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "browserType"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCapture:WebApplicationMonitoringSettingsContentCapture": {
            "properties": {
                "javascriptErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceTimingSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings:WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCaptureTimeoutSettings:WebApplicationMonitoringSettingsContentCaptureTimeoutSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visuallyCompleteAndSpeedIndex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visuallyCompleteSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings:WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings:WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings": {
            "properties": {
                "instrumentationDelay": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonW3cResourceTimings": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceTimingCaptureType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceTimingsDomainLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "w3cResourceTimings": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instrumentationDelay"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCaptureTimeoutSettings:WebApplicationMonitoringSettingsContentCaptureTimeoutSettings": {
            "properties": {
                "temporaryActionLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "temporaryActionTotalTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timedActionSupport": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "temporaryActionLimit",
                "temporaryActionTotalTimeout"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings:WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings": {
            "properties": {
                "excludeUrlRegex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoredMutationsList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inactivityTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mutationTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettings:WebApplicationMonitoringSettingsIpAddressRestrictionSettings": {
            "properties": {
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restrictions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions": {
            "properties": {
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ranges"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetMask": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsJavascriptFrameworkSupport:WebApplicationMonitoringSettingsJavascriptFrameworkSupport": {
            "properties": {
                "activeXObject": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "angular": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dojo": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extjs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icefaces": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jquery": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mooTools": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prototype": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRules:WebApplicationMonitoringSettingsJavascriptInjectionRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRulesRule:WebApplicationMonitoringSettingsJavascriptInjectionRulesRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRulesRule:WebApplicationMonitoringSettingsJavascriptInjectionRulesRule": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "htmlPattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlOperator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlPattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rule",
                "urlOperator"
            ]
        },
        "dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig": {
            "properties": {
                "costControlPercentage": {
                    "type": "integer",
                    "description": "Session replay sampling rating in percent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cssResourceCapturingExclusionRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs to be excluded from CSS resource capturing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCssResourceCapturing": {
                    "type": "boolean",
                    "description": "Capture (`true`) or don't capture (`false`) CSS resources from the session\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "SessionReplay Enabled/Disabled\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "costControlPercentage"
            ]
        },
        "dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties": {
            "properties": {
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionPropertiesProperty:WebApplicationUserActionAndSessionPropertiesProperty"
                    },
                    "description": "User action and session properties settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationUserActionAndSessionPropertiesProperty:WebApplicationUserActionAndSessionPropertiesProperty": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cleanupRule": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreCase": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longStringLength": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "origin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideRequestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storeAsSessionProperty": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storeAsUserActionProperty": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "origin",
                "type"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings": {
            "properties": {
                "customActionNamingRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRules:WebApplicationUserActionNamingSettingsCustomActionNamingRules",
                    "description": "User action naming rules for custom actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Case insensitive naming\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadActionNamingRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRules:WebApplicationUserActionNamingSettingsLoadActionNamingRules",
                    "description": "User action naming rules for loading actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholders:WebApplicationUserActionNamingSettingsPlaceholders",
                    "description": "User action placeholders\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryParameterCleanups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User action naming rules for custom actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splitUserActionsByDomain": {
                    "type": "boolean",
                    "description": "Deactivate this setting if different domains should not result in separate user actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useFirstDetectedLoadAction": {
                    "type": "boolean",
                    "description": "First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xhrActionNamingRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRules:WebApplicationUserActionNamingSettingsXhrActionNamingRules",
                    "description": "User action naming rules for XHR actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRules:WebApplicationUserActionNamingSettingsCustomActionNamingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useOrConditions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "template"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition": {
            "properties": {
                "operand1": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operand2": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operand1",
                "operator"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRules:WebApplicationUserActionNamingSettingsLoadActionNamingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useOrConditions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "template"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition": {
            "properties": {
                "operand1": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operand2": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operand1",
                "operator"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholders:WebApplicationUserActionNamingSettingsPlaceholders": {
            "properties": {
                "placeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "placeholders"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder": {
            "properties": {
                "input": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web application, displayed in the UI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processingPart": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processingSteps": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useGuessedElementIdentifier": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "input",
                "name",
                "processingPart"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps": {
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "steps"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep": {
            "properties": {
                "fallbackToInput": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternAfterSearchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternBefore": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternBeforeSearchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternToReplace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regularExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replacement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRules:WebApplicationUserActionNamingSettingsXhrActionNamingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useOrConditions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "template"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition": {
            "properties": {
                "operand1": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operand2": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operand1",
                "operator"
            ]
        },
        "dynatrace:index/WebApplicationUserTags:WebApplicationUserTags": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserTagsTag:WebApplicationUserTagsTag"
                    },
                    "description": "User tag settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tags"
            ]
        },
        "dynatrace:index/WebApplicationUserTagsTag:WebApplicationUserTagsTag": {
            "properties": {
                "cleanupRule": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreCase": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideRequestAttribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings": {
            "properties": {
                "resourceBrowserCachingThreshold": {
                    "type": "integer",
                    "description": "Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowCndResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowFirstPartyResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowThirdPartyResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "speedIndexVisuallyCompleteRatioThreshold": {
                    "type": "integer",
                    "description": "Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncompressedResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceBrowserCachingThreshold",
                "resourcesThreshold",
                "slowCndResourcesThreshold",
                "slowFirstPartyResourcesThreshold",
                "slowThirdPartyResourcesThreshold",
                "speedIndexVisuallyCompleteRatioThreshold",
                "uncompressedResourcesThreshold"
            ]
        },
        "dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings": {
            "properties": {
                "frustratingFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frustratingThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toleratedFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toleratedThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebhookNotificationHeadersHeader:WebhookNotificationHeadersHeader"
                    },
                    "description": "An additional HTTP Header to include when sending requests\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/WebhookNotificationHeadersHeader:WebhookNotificationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "secret": true
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/XmattersNotificationHeadersHeader:XmattersNotificationHeadersHeader"
                    },
                    "description": "An additional HTTP Header to include when sending requests\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/XmattersNotificationHeadersHeader:XmattersNotificationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "secret": true
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/getSyntheticLocationsLocations:getSyntheticLocationsLocations": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/getSyntheticLocationsLocationsLocation:getSyntheticLocationsLocationsLocation"
                    },
                    "description": "The name of the location\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/getSyntheticLocationsLocationsLocation:getSyntheticLocationsLocationsLocation": {
            "properties": {
                "cloudPlatform": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cloudPlatform",
                "ips",
                "stage",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the dynatrace package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "dtApiToken": {
                "type": "string",
                "secret": true
            },
            "dtClusterApiToken": {
                "type": "string",
                "secret": true
            },
            "dtClusterUrl": {
                "type": "string",
                "secret": true
            },
            "dtEnvUrl": {
                "type": "string"
            }
        },
        "inputProperties": {
            "dtApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_API_TOKEN",
                        "DT_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_API_TOKEN",
                        "DT_CLUSTER_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_URL",
                        "DT_CLUSTER_URL"
                    ]
                },
                "secret": true
            },
            "dtEnvUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_ENV_URL",
                        "DT_ENV_URL"
                    ]
                }
            }
        }
    },
    "resources": {
        "dynatrace:index/alerting:Alerting": {
            "properties": {
                "filters": {
                    "$ref": "#/types/dynatrace:index/AlertingFilters:AlertingFilters",
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The ID of the management zone to which the alerting profile applies\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AlertingRules:AlertingRules",
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "$ref": "#/types/dynatrace:index/AlertingFilters:AlertingFilters",
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The ID of the management zone to which the alerting profile applies\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AlertingRules:AlertingRules",
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alerting resources.\n",
                "properties": {
                    "filters": {
                        "$ref": "#/types/dynatrace:index/AlertingFilters:AlertingFilters",
                        "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                    },
                    "managementZone": {
                        "type": "string",
                        "description": "The ID of the management zone to which the alerting profile applies\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the alerting profile, displayed in the UI\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/AlertingRules:AlertingRules",
                        "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/alertingProfile:AlertingProfile": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "eventTypeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter"
                    },
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "mzId": {
                    "type": "string",
                    "description": "The ID of the management zone to which the alerting profile applies\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRule:AlertingProfileRule"
                    },
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "displayName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "eventTypeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter"
                    },
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "mzId": {
                    "type": "string",
                    "description": "The ID of the management zone to which the alerting profile applies\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRule:AlertingProfileRule"
                    },
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertingProfile resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The name of the alerting profile, displayed in the UI\n"
                    },
                    "eventTypeFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter"
                        },
                        "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "mzId": {
                        "type": "string",
                        "description": "The ID of the management zone to which the alerting profile applies\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AlertingProfileRule:AlertingProfileRule"
                        },
                        "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ansibleTowerNotification:AnsibleTowerNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The notification is active (`true`) or inactive (`false`). Default is `false`.\n"
                },
                "customMessage": {
                    "type": "string",
                    "description": "The custom message of the notification. This message will be displayed in the extra variables **Message** field of your job template. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates. Default is `false`.\n"
                },
                "jobTemplateUrl": {
                    "type": "string",
                    "description": "The URL of the target Ansible Tower job template\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name within the Dynatrace WebUI.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Ansible Tower account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Ansible Tower account\n"
                }
            },
            "required": [
                "customMessage",
                "jobTemplateUrl",
                "name",
                "profile",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The notification is active (`true`) or inactive (`false`). Default is `false`.\n"
                },
                "customMessage": {
                    "type": "string",
                    "description": "The custom message of the notification. This message will be displayed in the extra variables **Message** field of your job template. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates. Default is `false`.\n"
                },
                "jobTemplateUrl": {
                    "type": "string",
                    "description": "The URL of the target Ansible Tower job template\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name within the Dynatrace WebUI.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Ansible Tower account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Ansible Tower account\n"
                }
            },
            "requiredInputs": [
                "customMessage",
                "jobTemplateUrl",
                "profile",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AnsibleTowerNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The notification is active (`true`) or inactive (`false`). Default is `false`.\n"
                    },
                    "customMessage": {
                        "type": "string",
                        "description": "The custom message of the notification. This message will be displayed in the extra variables **Message** field of your job template. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates. Default is `false`.\n"
                    },
                    "jobTemplateUrl": {
                        "type": "string",
                        "description": "The URL of the target Ansible Tower job template\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name within the Dynatrace WebUI.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the Ansible Tower account\n",
                        "secret": true
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the Ansible Tower account\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationAnomalies:ApplicationAnomalies": {
            "properties": {
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                },
                "traffic": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic",
                    "description": "Configuration for anomalies regarding traffic\n"
                }
            },
            "inputProperties": {
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                },
                "traffic": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic",
                    "description": "Configuration for anomalies regarding traffic\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationAnomalies resources.\n",
                "properties": {
                    "failureRate": {
                        "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate",
                        "description": "Configuration of failure rate increase detection\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime",
                        "description": "Configuration of response time degradation detection\n"
                    },
                    "traffic": {
                        "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic",
                        "description": "Configuration for anomalies regarding traffic\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy": {
            "properties": {
                "dataCaptureOptIn": {
                    "type": "boolean",
                    "description": "Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called\n"
                },
                "doNotTrackBehaviour": {
                    "type": "string",
                    "description": "How to handle the \"Do Not Track\" header:\n"
                },
                "persistentCookieForUserTracking": {
                    "type": "boolean",
                    "description": "Set to `true` to set persistent cookie in order to recognize returning devices\n"
                },
                "sessionReplayDataPrivacy": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy",
                    "description": "Data privacy settings for Session Replay\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "Dynatrace entity ID of the web application\n"
                }
            },
            "required": [
                "doNotTrackBehaviour",
                "sessionReplayDataPrivacy",
                "webApplicationId"
            ],
            "inputProperties": {
                "dataCaptureOptIn": {
                    "type": "boolean",
                    "description": "Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called\n"
                },
                "doNotTrackBehaviour": {
                    "type": "string",
                    "description": "How to handle the \"Do Not Track\" header:\n"
                },
                "persistentCookieForUserTracking": {
                    "type": "boolean",
                    "description": "Set to `true` to set persistent cookie in order to recognize returning devices\n"
                },
                "sessionReplayDataPrivacy": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy",
                    "description": "Data privacy settings for Session Replay\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "Dynatrace entity ID of the web application\n"
                }
            },
            "requiredInputs": [
                "doNotTrackBehaviour",
                "sessionReplayDataPrivacy",
                "webApplicationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationDataPrivacy resources.\n",
                "properties": {
                    "dataCaptureOptIn": {
                        "type": "boolean",
                        "description": "Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called\n"
                    },
                    "doNotTrackBehaviour": {
                        "type": "string",
                        "description": "How to handle the \"Do Not Track\" header:\n"
                    },
                    "persistentCookieForUserTracking": {
                        "type": "boolean",
                        "description": "Set to `true` to set persistent cookie in order to recognize returning devices\n"
                    },
                    "sessionReplayDataPrivacy": {
                        "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy",
                        "description": "Data privacy settings for Session Replay\n"
                    },
                    "webApplicationId": {
                        "type": "string",
                        "description": "Dynatrace entity ID of the web application\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationDetectionRule:ApplicationDetectionRule": {
            "properties": {
                "applicationIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application, for example APPLICATION-4A3B43\n"
                },
                "filterConfig": {
                    "$ref": "#/types/dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig",
                    "description": "The condition of an application detection rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Application detection rule\n"
                },
                "order": {
                    "type": "string",
                    "description": "The order of the rule in the rules list\n"
                }
            },
            "required": [
                "applicationIdentifier",
                "filterConfig",
                "name"
            ],
            "inputProperties": {
                "applicationIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application, for example APPLICATION-4A3B43\n"
                },
                "filterConfig": {
                    "$ref": "#/types/dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig",
                    "description": "The condition of an application detection rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Application detection rule\n"
                },
                "order": {
                    "type": "string",
                    "description": "The order of the rule in the rules list\n"
                }
            },
            "requiredInputs": [
                "applicationIdentifier",
                "filterConfig"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationDetectionRule resources.\n",
                "properties": {
                    "applicationIdentifier": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the application, for example APPLICATION-4A3B43\n"
                    },
                    "filterConfig": {
                        "$ref": "#/types/dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig",
                        "description": "The condition of an application detection rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the Application detection rule\n"
                    },
                    "order": {
                        "type": "string",
                        "description": "The order of the rule in the rules list\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationErrorRules:ApplicationErrorRules": {
            "properties": {
                "customErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors",
                    "description": "An ordered list of HTTP errors.\n"
                },
                "httpErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors",
                    "description": "An ordered list of HTTP errors. Rules are evaluated from top to bottom; the first matching rule applies\n"
                },
                "ignoreCustomErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) custom errors listed in **customErrorRules** in Apdex calculation\n"
                },
                "ignoreHttpErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) HTTP errors listed in **httpErrorRules** in Apdex calculation\n"
                },
                "ignoreJsErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "The EntityID of the the WebApplication\n"
                }
            },
            "inputProperties": {
                "customErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors",
                    "description": "An ordered list of HTTP errors.\n"
                },
                "httpErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors",
                    "description": "An ordered list of HTTP errors. Rules are evaluated from top to bottom; the first matching rule applies\n"
                },
                "ignoreCustomErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) custom errors listed in **customErrorRules** in Apdex calculation\n"
                },
                "ignoreHttpErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) HTTP errors listed in **httpErrorRules** in Apdex calculation\n"
                },
                "ignoreJsErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "The EntityID of the the WebApplication\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationErrorRules resources.\n",
                "properties": {
                    "customErrors": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors",
                        "description": "An ordered list of HTTP errors.\n"
                    },
                    "httpErrors": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors",
                        "description": "An ordered list of HTTP errors. Rules are evaluated from top to bottom; the first matching rule applies\n"
                    },
                    "ignoreCustomErrorsApdex": {
                        "type": "boolean",
                        "description": "Exclude (`true`) or include (`false`) custom errors listed in **customErrorRules** in Apdex calculation\n"
                    },
                    "ignoreHttpErrorsApdex": {
                        "type": "boolean",
                        "description": "Exclude (`true`) or include (`false`) HTTP errors listed in **httpErrorRules** in Apdex calculation\n"
                    },
                    "ignoreJsErrorsApdex": {
                        "type": "boolean",
                        "description": "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation\n"
                    },
                    "webApplicationId": {
                        "type": "string",
                        "description": "The EntityID of the the WebApplication\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/autotag:Autotag": {
            "properties": {
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AutotagMetadata:AutotagMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.\nIn that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to\n`Infrastructure:Windows` and `Infrastructure:Linux`.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRule:AutotagRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AutotagMetadata:AutotagMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.\nIn that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to\n`Infrastructure:Windows` and `Infrastructure:Linux`.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRule:AutotagRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Autotag resources.\n",
                "properties": {
                    "entitySelectorBasedRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule"
                        },
                        "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/AutotagMetadata:AutotagMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.\nIn that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to\n`Infrastructure:Windows` and `Infrastructure:Linux`.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AutotagRule:AutotagRule"
                        },
                        "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/awsCredentials:AwsCredentials": {
            "properties": {
                "authenticationData": {
                    "$ref": "#/types/dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData",
                    "description": "credentials for the AWS authentication\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the credentials\n"
                },
                "partitionType": {
                    "type": "string",
                    "description": "The type of the AWS partition\n"
                },
                "supportingServicesToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor"
                    },
                    "description": "supporting services to be monitored\n"
                },
                "taggedOnly": {
                    "type": "boolean",
                    "description": "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)\n"
                },
                "tagsToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor"
                    },
                    "description": "AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "required": [
                "authenticationData",
                "partitionType",
                "taggedOnly"
            ],
            "inputProperties": {
                "authenticationData": {
                    "$ref": "#/types/dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData",
                    "description": "credentials for the AWS authentication\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the credentials\n"
                },
                "partitionType": {
                    "type": "string",
                    "description": "The type of the AWS partition\n"
                },
                "supportingServicesToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor"
                    },
                    "description": "supporting services to be monitored\n"
                },
                "taggedOnly": {
                    "type": "boolean",
                    "description": "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)\n"
                },
                "tagsToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor"
                    },
                    "description": "AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "requiredInputs": [
                "authenticationData",
                "partitionType",
                "taggedOnly"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsCredentials resources.\n",
                "properties": {
                    "authenticationData": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData",
                        "description": "credentials for the AWS authentication\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name of the credentials\n"
                    },
                    "partitionType": {
                        "type": "string",
                        "description": "The type of the AWS partition\n"
                    },
                    "supportingServicesToMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor"
                        },
                        "description": "supporting services to be monitored\n"
                    },
                    "taggedOnly": {
                        "type": "boolean",
                        "description": "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)\n"
                    },
                    "tagsToMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor"
                        },
                        "description": "AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/azureCredentials:AzureCredentials": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "autoTagging": {
                    "type": "boolean",
                    "description": "The automatic capture of Azure tags is on (`true`) or off (`false`)\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "key": {
                    "type": "string",
                    "description": "The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`.   Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed\n"
                },
                "monitorOnlyExcludingTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair"
                    },
                    "description": "A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n"
                },
                "monitorOnlyTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair"
                    },
                    "description": "A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                },
                "monitorOnlyTaggedEntities": {
                    "type": "boolean",
                    "description": "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).\n"
                },
                "supportingServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService"
                    },
                    "description": "A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "required": [
                "active",
                "monitorOnlyTaggedEntities"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "autoTagging": {
                    "type": "boolean",
                    "description": "The automatic capture of Azure tags is on (`true`) or off (`false`)\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "key": {
                    "type": "string",
                    "description": "The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`.   Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed\n"
                },
                "monitorOnlyExcludingTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair"
                    },
                    "description": "A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n"
                },
                "monitorOnlyTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair"
                    },
                    "description": "A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                },
                "monitorOnlyTaggedEntities": {
                    "type": "boolean",
                    "description": "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).\n"
                },
                "supportingServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService"
                    },
                    "description": "A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "requiredInputs": [
                "active",
                "monitorOnlyTaggedEntities"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureCredentials resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique\n"
                    },
                    "autoTagging": {
                        "type": "boolean",
                        "description": "The automatic capture of Azure tags is on (`true`) or off (`false`)\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`.   Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed\n"
                    },
                    "monitorOnlyExcludingTagPairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair"
                        },
                        "description": "A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n"
                    },
                    "monitorOnlyTagPairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair"
                        },
                        "description": "A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                    },
                    "monitorOnlyTaggedEntities": {
                        "type": "boolean",
                        "description": "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).\n"
                    },
                    "supportingServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService"
                        },
                        "description": "A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/browserMonitor:BrowserMonitor": {
            "properties": {
                "anomalyDetection": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection",
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The monitor is enabled (`true`) or disabled (`false`).\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "keyPerformanceMetrics": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics",
                    "description": "The key performance metrics configuration\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the monitor.\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScript:BrowserMonitorScript",
                    "description": "The Browser Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorTag:BrowserMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "required": [
                "frequency",
                "name"
            ],
            "inputProperties": {
                "anomalyDetection": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection",
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The monitor is enabled (`true`) or disabled (`false`).\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "keyPerformanceMetrics": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics",
                    "description": "The key performance metrics configuration\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the monitor.\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScript:BrowserMonitorScript",
                    "description": "The Browser Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorTag:BrowserMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "requiredInputs": [
                "frequency"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BrowserMonitor resources.\n",
                "properties": {
                    "anomalyDetection": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection",
                        "description": "The anomaly detection configuration.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The monitor is enabled (`true`) or disabled (`false`).\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "The frequency of the monitor, in minutes.\n"
                    },
                    "keyPerformanceMetrics": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics",
                        "description": "The key performance metrics configuration\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                    },
                    "manuallyAssignedApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of manually assigned applications.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the monitor.\n"
                    },
                    "script": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScript:BrowserMonitorScript",
                        "description": "The Browser Script\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/BrowserMonitorTag:BrowserMonitorTag"
                        },
                        "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/calculatedServiceMetric:CalculatedServiceMetric": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition"
                    },
                    "description": "The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric\n"
                },
                "description": {
                    "type": "string",
                    "description": "The displayed description of the metric\n"
                },
                "dimensionDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition",
                    "description": "Parameters of a definition of a calculated service metric\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field\n"
                },
                "metricDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition",
                    "description": "The definition of a calculated service metric\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The key of the calculated service metric\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,\n`BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`,\n`GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`,\n`KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`,\n`MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,\n`MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`,\n`MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`,\n`PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`\n"
                },
                "unitDisplayName": {
                    "type": "string",
                    "description": "The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "metricKey",
                "name",
                "unit"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition"
                    },
                    "description": "The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric\n"
                },
                "description": {
                    "type": "string",
                    "description": "The displayed description of the metric\n"
                },
                "dimensionDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition",
                    "description": "Parameters of a definition of a calculated service metric\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field\n"
                },
                "metricDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition",
                    "description": "The definition of a calculated service metric\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The key of the calculated service metric\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,\n`BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`,\n`GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`,\n`KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`,\n`MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,\n`MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`,\n`MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`,\n`PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`\n"
                },
                "unitDisplayName": {
                    "type": "string",
                    "description": "The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "metricKey",
                "unit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CalculatedServiceMetric resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition"
                        },
                        "description": "The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The displayed description of the metric\n"
                    },
                    "dimensionDefinition": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition",
                        "description": "Parameters of a definition of a calculated service metric\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field\n"
                    },
                    "metricDefinition": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition",
                        "description": "The definition of a calculated service metric\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "The key of the calculated service metric\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The displayed name of the metric\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,\n`BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`,\n`GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`,\n`KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`,\n`MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,\n`MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`,\n`MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`,\n`PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`\n"
                    },
                    "unitDisplayName": {
                        "type": "string",
                        "description": "The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/cloudfoundaryCredentials:CloudfoundaryCredentials": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Cloud Foundry foundation credentials.\n",
                    "secret": true
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.\n"
                }
            },
            "required": [
                "apiUrl",
                "loginUrl",
                "name",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Cloud Foundry foundation credentials.\n",
                    "secret": true
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.\n"
                }
            },
            "requiredInputs": [
                "apiUrl",
                "loginUrl",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudfoundaryCredentials resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "apiUrl": {
                        "type": "string",
                        "description": "The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Cloud Foundry foundation credentials.\n",
                        "secret": true
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customAnomalies:CustomAnomalies": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the metric event\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension"
                    },
                    "description": "Defines the dimensions of the metric to alert on. The filters are combined by conjunction\n"
                },
                "disabledReason": {
                    "type": "string",
                    "description": "The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric event is enabled (`true`) or disabled (`false`)\n"
                },
                "metricId": {
                    "type": "string",
                    "description": "The ID of the metric evaluated by the metric event\n"
                },
                "metricSelector": {
                    "type": "string",
                    "description": "The metric selector that should be executed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the metric event displayed in the UI\n"
                },
                "primaryDimensionKey": {
                    "type": "string",
                    "description": "Defines which dimension key should be used for the **alertingScope**\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope"
                    },
                    "description": "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem\n"
                },
                "strategy": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy",
                    "description": "A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "warningReason": {
                    "type": "string",
                    "description": "The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                }
            },
            "required": [
                "description",
                "enabled",
                "name",
                "strategy"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string",
                    "description": "How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the metric event\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension"
                    },
                    "description": "Defines the dimensions of the metric to alert on. The filters are combined by conjunction\n"
                },
                "disabledReason": {
                    "type": "string",
                    "description": "The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric event is enabled (`true`) or disabled (`false`)\n"
                },
                "metricId": {
                    "type": "string",
                    "description": "The ID of the metric evaluated by the metric event\n"
                },
                "metricSelector": {
                    "type": "string",
                    "description": "The metric selector that should be executed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the metric event displayed in the UI\n"
                },
                "primaryDimensionKey": {
                    "type": "string",
                    "description": "Defines which dimension key should be used for the **alertingScope**\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope"
                    },
                    "description": "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem\n"
                },
                "strategy": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy",
                    "description": "A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "warningReason": {
                    "type": "string",
                    "description": "The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                }
            },
            "requiredInputs": [
                "description",
                "enabled",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomAnomalies resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string",
                        "description": "How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the metric event\n"
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension"
                        },
                        "description": "Defines the dimensions of the metric to alert on. The filters are combined by conjunction\n"
                    },
                    "disabledReason": {
                        "type": "string",
                        "description": "The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`\n",
                        "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric event is enabled (`true`) or disabled (`false`)\n"
                    },
                    "metricId": {
                        "type": "string",
                        "description": "The ID of the metric evaluated by the metric event\n"
                    },
                    "metricSelector": {
                        "type": "string",
                        "description": "The metric selector that should be executed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the metric event displayed in the UI\n"
                    },
                    "primaryDimensionKey": {
                        "type": "string",
                        "description": "Defines which dimension key should be used for the **alertingScope**\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope"
                        },
                        "description": "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction\n"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem\n"
                    },
                    "strategy": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy",
                        "description": "A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    },
                    "warningReason": {
                        "type": "string",
                        "description": "The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`\n",
                        "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customService:CustomService": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Custom service enabled/disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom service, displayed in the UI\n"
                },
                "processGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of process groups the custom service should belong to\n"
                },
                "queueEntryPoint": {
                    "type": "boolean",
                    "description": "The queue entry point flag. Set to `true` for custom messaging services\n"
                },
                "queueEntryPointType": {
                    "type": "string",
                    "description": "The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomServiceRule:CustomServiceRule"
                    },
                    "description": "The list of rules defining the custom service\n"
                },
                "technology": {
                    "type": "string",
                    "description": "Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "technology"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Custom service enabled/disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom service, displayed in the UI\n"
                },
                "processGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of process groups the custom service should belong to\n"
                },
                "queueEntryPoint": {
                    "type": "boolean",
                    "description": "The queue entry point flag. Set to `true` for custom messaging services\n"
                },
                "queueEntryPointType": {
                    "type": "string",
                    "description": "The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomServiceRule:CustomServiceRule"
                    },
                    "description": "The list of rules defining the custom service\n"
                },
                "technology": {
                    "type": "string",
                    "description": "Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "technology"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomService resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Custom service enabled/disabled\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the custom service, displayed in the UI\n"
                    },
                    "processGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of process groups the custom service should belong to\n"
                    },
                    "queueEntryPoint": {
                        "type": "boolean",
                        "description": "The queue entry point flag. Set to `true` for custom messaging services\n"
                    },
                    "queueEntryPointType": {
                        "type": "string",
                        "description": "The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CustomServiceRule:CustomServiceRule"
                        },
                        "description": "The list of rules defining the custom service\n"
                    },
                    "technology": {
                        "type": "string",
                        "description": "Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboard:Dashboard": {
            "properties": {
                "dashboardMetadata": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata",
                    "description": "contains parameters of a dashboard\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/DashboardMetadata:DashboardMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "tiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTile:DashboardTile"
                    },
                    "description": "the tiles this Dashboard consist of\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "inputProperties": {
                "dashboardMetadata": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata",
                    "description": "contains parameters of a dashboard\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/DashboardMetadata:DashboardMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "tiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTile:DashboardTile"
                    },
                    "description": "the tiles this Dashboard consist of\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardMetadata": {
                        "$ref": "#/types/dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata",
                        "description": "contains parameters of a dashboard\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/DashboardMetadata:DashboardMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "tiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/DashboardTile:DashboardTile"
                        },
                        "description": "the tiles this Dashboard consist of\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboardSharing:DashboardSharing": {
            "description": "## Dynatrace Documentation\n\n- Share Dynatrace dashboards - https://www.dynatrace.com/support/help/how-to-use-dynatrace/dashboards-and-charts/dashboards/share-dashboards\n\n- Dashboards API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/dashboards-api\n",
            "properties": {
                "dashboardId": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the dashboard\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The dashboard is shared (`true`) or private (`false`)\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions",
                    "description": "Access permissions of the dashboard\n"
                },
                "preset": {
                    "type": "boolean",
                    "description": "If `true` the dashboard will be marked as preset\n"
                },
                "public": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPublic:DashboardSharingPublic",
                    "description": "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard\n"
                }
            },
            "required": [
                "dashboardId"
            ],
            "inputProperties": {
                "dashboardId": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the dashboard\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The dashboard is shared (`true`) or private (`false`)\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions",
                    "description": "Access permissions of the dashboard\n"
                },
                "preset": {
                    "type": "boolean",
                    "description": "If `true` the dashboard will be marked as preset\n"
                },
                "public": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPublic:DashboardSharingPublic",
                    "description": "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard\n"
                }
            },
            "requiredInputs": [
                "dashboardId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardSharing resources.\n",
                "properties": {
                    "dashboardId": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the dashboard\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The dashboard is shared (`true`) or private (`false`)\n"
                    },
                    "permissions": {
                        "$ref": "#/types/dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions",
                        "description": "Access permissions of the dashboard\n"
                    },
                    "preset": {
                        "type": "boolean",
                        "description": "If `true` the dashboard will be marked as preset\n"
                    },
                    "public": {
                        "$ref": "#/types/dynatrace:index/DashboardSharingPublic:DashboardSharingPublic",
                        "description": "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/databaseAnomalies:DatabaseAnomalies": {
            "properties": {
                "dbConnectFailures": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures",
                    "description": "Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period\n"
                },
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad",
                    "description": "Configuration for anomalies regarding load drops and spikes\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                }
            },
            "inputProperties": {
                "dbConnectFailures": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures",
                    "description": "Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period\n"
                },
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad",
                    "description": "Configuration for anomalies regarding load drops and spikes\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseAnomalies resources.\n",
                "properties": {
                    "dbConnectFailures": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures",
                        "description": "Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period\n"
                    },
                    "failureRate": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate",
                        "description": "Configuration of failure rate increase detection\n"
                    },
                    "load": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad",
                        "description": "Configuration for anomalies regarding load drops and spikes\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime",
                        "description": "Configuration of response time degradation detection\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskAnomalies:DiskAnomalies": {
            "properties": {
                "diskName": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName",
                    "description": "Narrows the rule usage down to disks, matching the specified criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Disk event rule enabled/disabled\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric to monitor. Possible values are: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the disk event rule\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of samples to evaluate\n"
                },
                "tags": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags",
                    "description": "Narrows the rule usage down to the hosts matching the specified tags\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The threshold to trigger disk event.   * A percentage for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples\n"
                }
            },
            "required": [
                "enabled",
                "metric",
                "name",
                "samples",
                "threshold",
                "violatingSamples"
            ],
            "inputProperties": {
                "diskName": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName",
                    "description": "Narrows the rule usage down to disks, matching the specified criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Disk event rule enabled/disabled\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric to monitor. Possible values are: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the disk event rule\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of samples to evaluate\n"
                },
                "tags": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags",
                    "description": "Narrows the rule usage down to the hosts matching the specified tags\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The threshold to trigger disk event.   * A percentage for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "metric",
                "samples",
                "threshold",
                "violatingSamples"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskAnomalies resources.\n",
                "properties": {
                    "diskName": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName",
                        "description": "Narrows the rule usage down to disks, matching the specified criteria\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Disk event rule enabled/disabled\n"
                    },
                    "hostGroupId": {
                        "type": "string",
                        "description": "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The metric to monitor. Possible values are: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the disk event rule\n"
                    },
                    "samples": {
                        "type": "integer",
                        "description": "The number of samples to evaluate\n"
                    },
                    "tags": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags",
                        "description": "Narrows the rule usage down to the hosts matching the specified tags\n"
                    },
                    "threshold": {
                        "type": "number",
                        "description": "The threshold to trigger disk event.   * A percentage for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics\n"
                    },
                    "violatingSamples": {
                        "type": "integer",
                        "description": "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/emailNotification:EmailNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email BCC-recipients\n"
                },
                "body": {
                    "type": "string",
                    "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email CC-recipients\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email notifications\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email recipients\n"
                }
            },
            "required": [
                "body",
                "name",
                "profile",
                "subject",
                "tos"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email BCC-recipients\n"
                },
                "body": {
                    "type": "string",
                    "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email CC-recipients\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email notifications\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email recipients\n"
                }
            },
            "requiredInputs": [
                "body",
                "profile",
                "subject",
                "tos"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "bccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the email BCC-recipients\n"
                    },
                    "body": {
                        "type": "string",
                        "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "ccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the email CC-recipients\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "notifyClosedProblems": {
                        "type": "boolean",
                        "description": "Send email if problem is closed\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject of the email notifications\n"
                    },
                    "tos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the email recipients\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/environment:Environment": {
            "description": "## Dynatrace Documentation\n\n- Manage your monitoring environments - https://www.dynatrace.com/support/help/setup-and-configuration/dynatrace-managed/operation/manage-your-monitoring-environments\n\n- Cluster API v2 - Environments - https://www.dynatrace.com/support/help/shortlink/cluster-api#environments\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The display name of the environment\n"
                },
                "quotas": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotas:EnvironmentQuotas",
                    "description": "Environment level consumption and quotas information\n"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates whether the environment is enabled or disabled. Possible values are `ENABLED` and `DISABLED`. The default value is ENABLED\n"
                },
                "storage": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorage:EnvironmentStorage",
                    "description": "Environment level storage usage and limit information\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters\n"
                },
                "trial": {
                    "type": "boolean",
                    "description": "Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)\n"
                }
            },
            "required": [
                "name",
                "state",
                "storage"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The display name of the environment\n"
                },
                "quotas": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotas:EnvironmentQuotas",
                    "description": "Environment level consumption and quotas information\n"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates whether the environment is enabled or disabled. Possible values are `ENABLED` and `DISABLED`. The default value is ENABLED\n"
                },
                "storage": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorage:EnvironmentStorage",
                    "description": "Environment level storage usage and limit information\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters\n"
                },
                "trial": {
                    "type": "boolean",
                    "description": "Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)\n"
                }
            },
            "requiredInputs": [
                "state",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The display name of the environment\n"
                    },
                    "quotas": {
                        "$ref": "#/types/dynatrace:index/EnvironmentQuotas:EnvironmentQuotas",
                        "description": "Environment level consumption and quotas information\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates whether the environment is enabled or disabled. Possible values are `ENABLED` and `DISABLED`. The default value is ENABLED\n"
                    },
                    "storage": {
                        "$ref": "#/types/dynatrace:index/EnvironmentStorage:EnvironmentStorage",
                        "description": "Environment level storage usage and limit information\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters\n"
                    },
                    "trial": {
                        "type": "boolean",
                        "description": "Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/frequentIssues:FrequentIssues": {
            "properties": {
                "detectApps": {
                    "type": "boolean",
                    "description": "Detect frequent issues within applications, enabled (`true`) or disabled (`false`)\n"
                },
                "detectInfra": {
                    "type": "boolean",
                    "description": "Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)\n"
                },
                "detectTxn": {
                    "type": "boolean",
                    "description": "Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "detectApps",
                "detectInfra",
                "detectTxn"
            ],
            "inputProperties": {
                "detectApps": {
                    "type": "boolean",
                    "description": "Detect frequent issues within applications, enabled (`true`) or disabled (`false`)\n"
                },
                "detectInfra": {
                    "type": "boolean",
                    "description": "Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)\n"
                },
                "detectTxn": {
                    "type": "boolean",
                    "description": "Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "detectApps",
                "detectInfra",
                "detectTxn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FrequentIssues resources.\n",
                "properties": {
                    "detectApps": {
                        "type": "boolean",
                        "description": "Detect frequent issues within applications, enabled (`true`) or disabled (`false`)\n"
                    },
                    "detectInfra": {
                        "type": "boolean",
                        "description": "Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)\n"
                    },
                    "detectTxn": {
                        "type": "boolean",
                        "description": "Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostAnomalies:HostAnomalies": {
            "properties": {
                "connections": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections",
                    "description": "Configuration of lost connection detection\n"
                },
                "cpu": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu",
                    "description": "Configuration of high CPU saturation detection\n"
                },
                "disks": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks",
                    "description": "Configuration of disk related anomalies\n"
                },
                "gc": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesGc:HostAnomaliesGc",
                    "description": "Configuration of high Garbage Collector activity detection\n"
                },
                "java": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJava:HostAnomaliesJava",
                    "description": "Configuration of Java related anomalies\n"
                },
                "memory": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory",
                    "description": "Configuration of high memory usage detection\n"
                },
                "network": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork",
                    "description": "Configuration of network related anomalies\n"
                }
            },
            "inputProperties": {
                "connections": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections",
                    "description": "Configuration of lost connection detection\n"
                },
                "cpu": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu",
                    "description": "Configuration of high CPU saturation detection\n"
                },
                "disks": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks",
                    "description": "Configuration of disk related anomalies\n"
                },
                "gc": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesGc:HostAnomaliesGc",
                    "description": "Configuration of high Garbage Collector activity detection\n"
                },
                "java": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJava:HostAnomaliesJava",
                    "description": "Configuration of Java related anomalies\n"
                },
                "memory": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory",
                    "description": "Configuration of high memory usage detection\n"
                },
                "network": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork",
                    "description": "Configuration of network related anomalies\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostAnomalies resources.\n",
                "properties": {
                    "connections": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections",
                        "description": "Configuration of lost connection detection\n"
                    },
                    "cpu": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu",
                        "description": "Configuration of high CPU saturation detection\n"
                    },
                    "disks": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks",
                        "description": "Configuration of disk related anomalies\n"
                    },
                    "gc": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesGc:HostAnomaliesGc",
                        "description": "Configuration of high Garbage Collector activity detection\n"
                    },
                    "java": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesJava:HostAnomaliesJava",
                        "description": "Configuration of Java related anomalies\n"
                    },
                    "memory": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory",
                        "description": "Configuration of high memory usage detection\n"
                    },
                    "network": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork",
                        "description": "Configuration of network related anomalies\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostNaming:HostNaming": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingCondition:HostNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "format",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingCondition:HostNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "format"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostNaming resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/HostNamingCondition:HostNamingCondition"
                        },
                        "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/httpMonitor:HttpMonitor": {
            "properties": {
                "anomalyDetections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection"
                    },
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The monitor is enabled (`true`) or disabled (`false`).\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the monitor.\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScript:HttpMonitorScript",
                    "description": "The HTTP Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorTag:HttpMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "required": [
                "frequency",
                "name"
            ],
            "inputProperties": {
                "anomalyDetections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection"
                    },
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The monitor is enabled (`true`) or disabled (`false`).\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the monitor.\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScript:HttpMonitorScript",
                    "description": "The HTTP Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorTag:HttpMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "requiredInputs": [
                "frequency"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpMonitor resources.\n",
                "properties": {
                    "anomalyDetections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection"
                        },
                        "description": "The anomaly detection configuration.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The monitor is enabled (`true`) or disabled (`false`).\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "The frequency of the monitor, in minutes.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                    },
                    "manuallyAssignedApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of manually assigned applications.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the monitor.\n"
                    },
                    "script": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScript:HttpMonitorScript",
                        "description": "The HTTP Script\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/HttpMonitorTag:HttpMonitorTag"
                        },
                        "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ibmMqFilters:IbmMqFilters": {
            "properties": {
                "cicsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Excluded MQ queues\n"
                },
                "cicsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Included MQ queues\n"
                },
                "imsCrTrnIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS bridge: Excluded transaction IDs\n"
                },
                "imsCrTrnIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS bridge: Included transaction IDs\n"
                },
                "imsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Excluded MQ queues\n"
                },
                "imsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Included MQ queues\n"
                }
            },
            "inputProperties": {
                "cicsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Excluded MQ queues\n"
                },
                "cicsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Included MQ queues\n"
                },
                "imsCrTrnIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS bridge: Excluded transaction IDs\n"
                },
                "imsCrTrnIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS bridge: Included transaction IDs\n"
                },
                "imsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Excluded MQ queues\n"
                },
                "imsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Included MQ queues\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IbmMqFilters resources.\n",
                "properties": {
                    "cicsMqQueueIdExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "CICS: Excluded MQ queues\n"
                    },
                    "cicsMqQueueIdIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "CICS: Included MQ queues\n"
                    },
                    "imsCrTrnIdExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IMS bridge: Excluded transaction IDs\n"
                    },
                    "imsCrTrnIdIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IMS bridge: Included transaction IDs\n"
                    },
                    "imsMqQueueIdExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IMS: Excluded MQ queues\n"
                    },
                    "imsMqQueueIdIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IMS: Included MQ queues\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/imsBridges:ImsBridges": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the IMS bridge\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager"
                    },
                    "description": "Queue manager(s) that belong to the IMS bridge\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the IMS bridge\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager"
                    },
                    "description": "Queue manager(s) that belong to the IMS bridge\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImsBridges resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the IMS bridge\n"
                    },
                    "queueManagers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager"
                        },
                        "description": "Queue manager(s) that belong to the IMS bridge\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/jiraNotification:JiraNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                },
                "issueType": {
                    "type": "string",
                    "description": "The type of the Jira issue to be created by this notification\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "The project key of the Jira issue to be created by this notification\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Jira API endpoint\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Jira profile\n"
                }
            },
            "required": [
                "active",
                "description",
                "issueType",
                "name",
                "profile",
                "projectKey",
                "summary",
                "url",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                },
                "issueType": {
                    "type": "string",
                    "description": "The type of the Jira issue to be created by this notification\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "The project key of the Jira issue to be created by this notification\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Jira API endpoint\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Jira profile\n"
                }
            },
            "requiredInputs": [
                "active",
                "description",
                "issueType",
                "profile",
                "projectKey",
                "summary",
                "url",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering JiraNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiToken": {
                        "type": "string",
                        "description": "The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                    },
                    "issueType": {
                        "type": "string",
                        "description": "The type of the Jira issue to be created by this notification\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "The project key of the Jira issue to be created by this notification\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the Jira API endpoint\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the Jira profile\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sCredentials:K8sCredentials": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "certificateCheckEnabled": {
                    "type": "boolean",
                    "description": "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "davisEventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected\n"
                },
                "endpointUrl": {
                    "type": "string",
                    "description": "The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.\n"
                },
                "eventAnalysisAndAlertingEnabled": {
                    "type": "boolean",
                    "description": "Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "eventsFieldSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector"
                    },
                    "description": "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.\n"
                },
                "eventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "hostnameVerification": {
                    "type": "boolean",
                    "description": "Verify hostname in certificate against Kubernetes API URL\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                },
                "prometheusExporters": {
                    "type": "boolean",
                    "description": "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "workloadIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                }
            },
            "required": [
                "label"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "certificateCheckEnabled": {
                    "type": "boolean",
                    "description": "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "davisEventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected\n"
                },
                "endpointUrl": {
                    "type": "string",
                    "description": "The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.\n"
                },
                "eventAnalysisAndAlertingEnabled": {
                    "type": "boolean",
                    "description": "Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "eventsFieldSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector"
                    },
                    "description": "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.\n"
                },
                "eventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "hostnameVerification": {
                    "type": "boolean",
                    "description": "Verify hostname in certificate against Kubernetes API URL\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                },
                "prometheusExporters": {
                    "type": "boolean",
                    "description": "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "workloadIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sCredentials resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "authToken": {
                        "type": "string",
                        "description": "The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "certificateCheckEnabled": {
                        "type": "boolean",
                        "description": "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "davisEventsIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected\n"
                    },
                    "endpointUrl": {
                        "type": "string",
                        "description": "The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.\n"
                    },
                    "eventAnalysisAndAlertingEnabled": {
                        "type": "boolean",
                        "description": "Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "eventsFieldSelectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector"
                        },
                        "description": "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.\n"
                    },
                    "eventsIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "hostnameVerification": {
                        "type": "boolean",
                        "description": "Verify hostname in certificate against Kubernetes API URL\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                    },
                    "prometheusExporters": {
                        "type": "boolean",
                        "description": "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    },
                    "workloadIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/keyRequests:KeyRequests": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the key requests\n"
                },
                "service": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                }
            },
            "required": [
                "service"
            ],
            "inputProperties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the key requests\n"
                },
                "service": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                }
            },
            "requiredInputs": [
                "service"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KeyRequests resources.\n",
                "properties": {
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the key requests\n"
                    },
                    "service": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/maintenance:Maintenance": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The maintenance window is enabled or disabled\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceFilter:MaintenanceFilter"
                    },
                    "description": "The filters of the maintenance window\n"
                },
                "generalProperties": {
                    "$ref": "#/types/dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties",
                    "description": "The general properties of the maintenance window\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceSchedule:MaintenanceSchedule",
                    "description": "The schedule of the maintenance window\n"
                }
            },
            "required": [
                "generalProperties",
                "schedule"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The maintenance window is enabled or disabled\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceFilter:MaintenanceFilter"
                    },
                    "description": "The filters of the maintenance window\n"
                },
                "generalProperties": {
                    "$ref": "#/types/dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties",
                    "description": "The general properties of the maintenance window\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceSchedule:MaintenanceSchedule",
                    "description": "The schedule of the maintenance window\n"
                }
            },
            "requiredInputs": [
                "generalProperties",
                "schedule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Maintenance resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "The maintenance window is enabled or disabled\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/MaintenanceFilter:MaintenanceFilter"
                        },
                        "description": "The filters of the maintenance window\n"
                    },
                    "generalProperties": {
                        "$ref": "#/types/dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties",
                        "description": "The general properties of the maintenance window\n"
                    },
                    "schedule": {
                        "$ref": "#/types/dynatrace:index/MaintenanceSchedule:MaintenanceSchedule",
                        "description": "The schedule of the maintenance window\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/maintenanceWindow:MaintenanceWindow": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the maintenance purpose\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The Maintenance Window is enabled or disabled\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowMetadata:MaintenanceWindowMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the maintenance window, displayed in the UI\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule",
                    "description": "The schedule of the maintenance window\n"
                },
                "scope": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope",
                    "description": "the tiles this Dashboard consist of\n"
                },
                "suppressSynthMonExec": {
                    "type": "boolean",
                    "description": "Suppress execution of synthetic monitors during the maintenance\n"
                },
                "suppression": {
                    "type": "string",
                    "description": "The type of suppression of alerting and problem detection during the maintenance\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the maintenance: planned or unplanned\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "name",
                "suppression",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the maintenance purpose\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The Maintenance Window is enabled or disabled\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowMetadata:MaintenanceWindowMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the maintenance window, displayed in the UI\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule",
                    "description": "The schedule of the maintenance window\n"
                },
                "scope": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope",
                    "description": "the tiles this Dashboard consist of\n"
                },
                "suppressSynthMonExec": {
                    "type": "boolean",
                    "description": "Suppress execution of synthetic monitors during the maintenance\n"
                },
                "suppression": {
                    "type": "string",
                    "description": "The type of suppression of alerting and problem detection during the maintenance\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the maintenance: planned or unplanned\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "suppression",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MaintenanceWindow resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A short description of the maintenance purpose\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The Maintenance Window is enabled or disabled\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowMetadata:MaintenanceWindowMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the maintenance window, displayed in the UI\n"
                    },
                    "schedule": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule",
                        "description": "The schedule of the maintenance window\n"
                    },
                    "scope": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope",
                        "description": "the tiles this Dashboard consist of\n"
                    },
                    "suppressSynthMonExec": {
                        "type": "boolean",
                        "description": "Suppress execution of synthetic monitors during the maintenance\n"
                    },
                    "suppression": {
                        "type": "string",
                        "description": "The type of suppression of alerting and problem detection during the maintenance\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the maintenance: planned or unplanned\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managementZone:ManagementZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the management zone\n"
                },
                "dimensionalRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule"
                    },
                    "description": "A list of dimensional data rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneMetadata:ManagementZoneMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the management zone\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRule:ManagementZoneRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the management zone\n"
                },
                "dimensionalRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule"
                    },
                    "description": "A list of dimensional data rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneMetadata:ManagementZoneMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the management zone\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRule:ManagementZoneRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagementZone resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the management zone\n"
                    },
                    "dimensionalRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule"
                        },
                        "description": "A list of dimensional data rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                    },
                    "entitySelectorBasedRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule"
                        },
                        "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneMetadata:ManagementZoneMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the management zone\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ManagementZoneRule:ManagementZoneRule"
                        },
                        "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileApplication:MobileApplication": {
            "properties": {
                "apdex": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationApdex:MobileApplicationApdex",
                    "description": "Apdex configuration of a mobile application. A duration less than the **tolerable** threshold is considered satisfied\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The UUID of the application.\n"
                },
                "beaconEndpointType": {
                    "type": "string",
                    "description": "The type of the beacon endpoint. Possible values are `CLUSTER_ACTIVE_GATE`, `ENVIRONMENT_ACTIVE_GATE` and `INSTRUMENTED_WEB_SERVER`.\n"
                },
                "beaconEndpointUrl": {
                    "type": "string",
                    "description": "The URL of the beacon endpoint. Only applicable when the **beacon_endpoint_type** is set to `ENVIRONMENT_ACTIVE_GATE` or\n`INSTRUMENTED_WEB_SERVER`\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application\n"
                },
                "optInMode": {
                    "type": "boolean",
                    "description": "The opt-in mode is enabled (`true`) or disabled (`false`)\n"
                },
                "properties": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationProperties:MobileApplicationProperties",
                    "description": "User Action and Session Properties\n"
                },
                "sessionReplay": {
                    "type": "boolean",
                    "description": "The session replay is enabled (`true`) or disabled (`false`).\n"
                },
                "sessionReplayOnCrash": {
                    "type": "boolean",
                    "description": "The session replay on crash is enabled (`true`) or disabled (`false`). Enabling requires both **sessionReplayEnabled**\nand **optInModeEnabled** values set to `true`.\n"
                },
                "userSessionPercentage": {
                    "type": "integer",
                    "description": "The percentage of user sessions to be analyzed\n"
                }
            },
            "required": [
                "apdex",
                "beaconEndpointType",
                "name"
            ],
            "inputProperties": {
                "apdex": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationApdex:MobileApplicationApdex",
                    "description": "Apdex configuration of a mobile application. A duration less than the **tolerable** threshold is considered satisfied\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The UUID of the application.\n"
                },
                "beaconEndpointType": {
                    "type": "string",
                    "description": "The type of the beacon endpoint. Possible values are `CLUSTER_ACTIVE_GATE`, `ENVIRONMENT_ACTIVE_GATE` and `INSTRUMENTED_WEB_SERVER`.\n"
                },
                "beaconEndpointUrl": {
                    "type": "string",
                    "description": "The URL of the beacon endpoint. Only applicable when the **beacon_endpoint_type** is set to `ENVIRONMENT_ACTIVE_GATE` or\n`INSTRUMENTED_WEB_SERVER`\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application\n"
                },
                "optInMode": {
                    "type": "boolean",
                    "description": "The opt-in mode is enabled (`true`) or disabled (`false`)\n"
                },
                "properties": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationProperties:MobileApplicationProperties",
                    "description": "User Action and Session Properties\n"
                },
                "sessionReplay": {
                    "type": "boolean",
                    "description": "The session replay is enabled (`true`) or disabled (`false`).\n"
                },
                "sessionReplayOnCrash": {
                    "type": "boolean",
                    "description": "The session replay on crash is enabled (`true`) or disabled (`false`). Enabling requires both **sessionReplayEnabled**\nand **optInModeEnabled** values set to `true`.\n"
                },
                "userSessionPercentage": {
                    "type": "integer",
                    "description": "The percentage of user sessions to be analyzed\n"
                }
            },
            "requiredInputs": [
                "apdex",
                "beaconEndpointType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileApplication resources.\n",
                "properties": {
                    "apdex": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationApdex:MobileApplicationApdex",
                        "description": "Apdex configuration of a mobile application. A duration less than the **tolerable** threshold is considered satisfied\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The UUID of the application.\n"
                    },
                    "beaconEndpointType": {
                        "type": "string",
                        "description": "The type of the beacon endpoint. Possible values are `CLUSTER_ACTIVE_GATE`, `ENVIRONMENT_ACTIVE_GATE` and `INSTRUMENTED_WEB_SERVER`.\n"
                    },
                    "beaconEndpointUrl": {
                        "type": "string",
                        "description": "The URL of the beacon endpoint. Only applicable when the **beacon_endpoint_type** is set to `ENVIRONMENT_ACTIVE_GATE` or\n`INSTRUMENTED_WEB_SERVER`\n"
                    },
                    "keyUserActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "User Action names to be flagged as Key User Actions\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the application\n"
                    },
                    "optInMode": {
                        "type": "boolean",
                        "description": "The opt-in mode is enabled (`true`) or disabled (`false`)\n"
                    },
                    "properties": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationProperties:MobileApplicationProperties",
                        "description": "User Action and Session Properties\n"
                    },
                    "sessionReplay": {
                        "type": "boolean",
                        "description": "The session replay is enabled (`true`) or disabled (`false`).\n"
                    },
                    "sessionReplayOnCrash": {
                        "type": "boolean",
                        "description": "The session replay on crash is enabled (`true`) or disabled (`false`). Enabling requires both **sessionReplayEnabled**\nand **optInModeEnabled** values set to `true`.\n"
                    },
                    "userSessionPercentage": {
                        "type": "integer",
                        "description": "The percentage of user sessions to be analyzed\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/networkZones:NetworkZones": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Network Zones are enabled (`true`) or disabled (`false`)\n"
                }
            },
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Network Zones are enabled (`true`) or disabled (`false`)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkZones resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Network Zones are enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/notification:Notification": {
            "properties": {
                "ansibleTower": {
                    "$ref": "#/types/dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower",
                    "description": "Configuration for Ansible Tower Notification\n"
                },
                "config": {
                    "$ref": "#/types/dynatrace:index/NotificationConfig:NotificationConfig",
                    "description": "Configuration for Generic Notification\n"
                },
                "email": {
                    "$ref": "#/types/dynatrace:index/NotificationEmail:NotificationEmail",
                    "description": "Configuration for Email Notification\n"
                },
                "hipchat": {
                    "$ref": "#/types/dynatrace:index/NotificationHipchat:NotificationHipchat",
                    "description": "Configuration for HipChat Notification\n"
                },
                "jira": {
                    "$ref": "#/types/dynatrace:index/NotificationJira:NotificationJira",
                    "description": "Configuration for Jira Notification\n"
                },
                "opsGenie": {
                    "$ref": "#/types/dynatrace:index/NotificationOpsGenie:NotificationOpsGenie",
                    "description": "Configuration for OpsGenie Notification\n"
                },
                "pagerDuty": {
                    "$ref": "#/types/dynatrace:index/NotificationPagerDuty:NotificationPagerDuty",
                    "description": "Configuration for PagerDuty Notification\n"
                },
                "serviceNow": {
                    "$ref": "#/types/dynatrace:index/NotificationServiceNow:NotificationServiceNow",
                    "description": "Configuration for ServiceNow Notification\n"
                },
                "slack": {
                    "$ref": "#/types/dynatrace:index/NotificationSlack:NotificationSlack",
                    "description": "Configuration for Slack Notification\n"
                },
                "trello": {
                    "$ref": "#/types/dynatrace:index/NotificationTrello:NotificationTrello",
                    "description": "Configuration for Trello Notification\n"
                },
                "victorOps": {
                    "$ref": "#/types/dynatrace:index/NotificationVictorOps:NotificationVictorOps",
                    "description": "Configuration for VictorOps Notification\n"
                },
                "webHook": {
                    "$ref": "#/types/dynatrace:index/NotificationWebHook:NotificationWebHook",
                    "description": "Configuration for WebHook Notification\n"
                },
                "xmatters": {
                    "$ref": "#/types/dynatrace:index/NotificationXmatters:NotificationXmatters",
                    "description": "Configuration for XMatters Notification\n"
                }
            },
            "inputProperties": {
                "ansibleTower": {
                    "$ref": "#/types/dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower",
                    "description": "Configuration for Ansible Tower Notification\n"
                },
                "config": {
                    "$ref": "#/types/dynatrace:index/NotificationConfig:NotificationConfig",
                    "description": "Configuration for Generic Notification\n"
                },
                "email": {
                    "$ref": "#/types/dynatrace:index/NotificationEmail:NotificationEmail",
                    "description": "Configuration for Email Notification\n"
                },
                "hipchat": {
                    "$ref": "#/types/dynatrace:index/NotificationHipchat:NotificationHipchat",
                    "description": "Configuration for HipChat Notification\n"
                },
                "jira": {
                    "$ref": "#/types/dynatrace:index/NotificationJira:NotificationJira",
                    "description": "Configuration for Jira Notification\n"
                },
                "opsGenie": {
                    "$ref": "#/types/dynatrace:index/NotificationOpsGenie:NotificationOpsGenie",
                    "description": "Configuration for OpsGenie Notification\n"
                },
                "pagerDuty": {
                    "$ref": "#/types/dynatrace:index/NotificationPagerDuty:NotificationPagerDuty",
                    "description": "Configuration for PagerDuty Notification\n"
                },
                "serviceNow": {
                    "$ref": "#/types/dynatrace:index/NotificationServiceNow:NotificationServiceNow",
                    "description": "Configuration for ServiceNow Notification\n"
                },
                "slack": {
                    "$ref": "#/types/dynatrace:index/NotificationSlack:NotificationSlack",
                    "description": "Configuration for Slack Notification\n"
                },
                "trello": {
                    "$ref": "#/types/dynatrace:index/NotificationTrello:NotificationTrello",
                    "description": "Configuration for Trello Notification\n"
                },
                "victorOps": {
                    "$ref": "#/types/dynatrace:index/NotificationVictorOps:NotificationVictorOps",
                    "description": "Configuration for VictorOps Notification\n"
                },
                "webHook": {
                    "$ref": "#/types/dynatrace:index/NotificationWebHook:NotificationWebHook",
                    "description": "Configuration for WebHook Notification\n"
                },
                "xmatters": {
                    "$ref": "#/types/dynatrace:index/NotificationXmatters:NotificationXmatters",
                    "description": "Configuration for XMatters Notification\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Notification resources.\n",
                "properties": {
                    "ansibleTower": {
                        "$ref": "#/types/dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower",
                        "description": "Configuration for Ansible Tower Notification\n"
                    },
                    "config": {
                        "$ref": "#/types/dynatrace:index/NotificationConfig:NotificationConfig",
                        "description": "Configuration for Generic Notification\n"
                    },
                    "email": {
                        "$ref": "#/types/dynatrace:index/NotificationEmail:NotificationEmail",
                        "description": "Configuration for Email Notification\n"
                    },
                    "hipchat": {
                        "$ref": "#/types/dynatrace:index/NotificationHipchat:NotificationHipchat",
                        "description": "Configuration for HipChat Notification\n"
                    },
                    "jira": {
                        "$ref": "#/types/dynatrace:index/NotificationJira:NotificationJira",
                        "description": "Configuration for Jira Notification\n"
                    },
                    "opsGenie": {
                        "$ref": "#/types/dynatrace:index/NotificationOpsGenie:NotificationOpsGenie",
                        "description": "Configuration for OpsGenie Notification\n"
                    },
                    "pagerDuty": {
                        "$ref": "#/types/dynatrace:index/NotificationPagerDuty:NotificationPagerDuty",
                        "description": "Configuration for PagerDuty Notification\n"
                    },
                    "serviceNow": {
                        "$ref": "#/types/dynatrace:index/NotificationServiceNow:NotificationServiceNow",
                        "description": "Configuration for ServiceNow Notification\n"
                    },
                    "slack": {
                        "$ref": "#/types/dynatrace:index/NotificationSlack:NotificationSlack",
                        "description": "Configuration for Slack Notification\n"
                    },
                    "trello": {
                        "$ref": "#/types/dynatrace:index/NotificationTrello:NotificationTrello",
                        "description": "Configuration for Trello Notification\n"
                    },
                    "victorOps": {
                        "$ref": "#/types/dynatrace:index/NotificationVictorOps:NotificationVictorOps",
                        "description": "Configuration for VictorOps Notification\n"
                    },
                    "webHook": {
                        "$ref": "#/types/dynatrace:index/NotificationWebHook:NotificationWebHook",
                        "description": "Configuration for WebHook Notification\n"
                    },
                    "xmatters": {
                        "$ref": "#/types/dynatrace:index/NotificationXmatters:NotificationXmatters",
                        "description": "Configuration for XMatters Notification\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/opsGenieNotification:OpsGenieNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access OpsGenie\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "The region domain of the OpsGenie\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                }
            },
            "required": [
                "active",
                "domain",
                "message",
                "name",
                "profile"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access OpsGenie\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "The region domain of the OpsGenie\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                }
            },
            "requiredInputs": [
                "active",
                "domain",
                "message",
                "profile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpsGenieNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key to access OpsGenie\n",
                        "secret": true
                    },
                    "domain": {
                        "type": "string",
                        "description": "The region domain of the OpsGenie\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/pagerDutyNotification:PagerDutyNotification": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The name of the PagerDuty account\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access PagerDuty\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "service": {
                    "type": "string",
                    "description": "The name of the PagerDuty Service\n"
                }
            },
            "required": [
                "account",
                "active",
                "name",
                "profile",
                "service"
            ],
            "inputProperties": {
                "account": {
                    "type": "string",
                    "description": "The name of the PagerDuty account\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access PagerDuty\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "service": {
                    "type": "string",
                    "description": "The name of the PagerDuty Service\n"
                }
            },
            "requiredInputs": [
                "account",
                "active",
                "profile",
                "service"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PagerDutyNotification resources.\n",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The name of the PagerDuty account\n"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key to access PagerDuty\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "service": {
                        "type": "string",
                        "description": "The name of the PagerDuty Service\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processgroupNaming:ProcessgroupNaming": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "format",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "format"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessgroupNaming resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition"
                        },
                        "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/queueManager:QueueManager": {
            "properties": {
                "aliasQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusterQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this queue manager is part of\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "remoteQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "aliasQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusterQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this queue manager is part of\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "remoteQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueueManager resources.\n",
                "properties": {
                    "aliasQueues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue"
                        },
                        "description": "The alias queues in the queue manager\n"
                    },
                    "clusterQueues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue"
                        },
                        "description": "The alias queues in the queue manager\n"
                    },
                    "clusters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name of the cluster(s) this queue manager is part of\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the queue manager\n"
                    },
                    "remoteQueues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue"
                        },
                        "description": "The alias queues in the queue manager\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/queueSharingGroups:QueueSharingGroups": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the queue sharing group\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Queue manager(s) that belong to the queue sharing group\n"
                },
                "sharedQueues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Shared queue(s) that belong to the queue sharing group\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the queue sharing group\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Queue manager(s) that belong to the queue sharing group\n"
                },
                "sharedQueues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Shared queue(s) that belong to the queue sharing group\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueueSharingGroups resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the queue sharing group\n"
                    },
                    "queueManagers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Queue manager(s) that belong to the queue sharing group\n"
                    },
                    "sharedQueues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Shared queue(s) that belong to the queue sharing group\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/requestAttribute:RequestAttribute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Aggregation type for the request values\n"
                },
                "confidential": {
                    "type": "boolean",
                    "description": "Confidential data flag. Set `true` to treat the captured data as confidential\n"
                },
                "dataSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource"
                    },
                    "description": "The list of data sources\n"
                },
                "dataType": {
                    "type": "string",
                    "description": "The data type of the request attribute\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The request attribute is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request attribute\n"
                },
                "normalization": {
                    "type": "string",
                    "description": "String values transformation.   If the **dataType** is not `string`, set the `Original` here\n"
                },
                "skipPersonalDataMasking": {
                    "type": "boolean",
                    "description": "Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "aggregation",
                "dataType",
                "name",
                "normalization"
            ],
            "inputProperties": {
                "aggregation": {
                    "type": "string",
                    "description": "Aggregation type for the request values\n"
                },
                "confidential": {
                    "type": "boolean",
                    "description": "Confidential data flag. Set `true` to treat the captured data as confidential\n"
                },
                "dataSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource"
                    },
                    "description": "The list of data sources\n"
                },
                "dataType": {
                    "type": "string",
                    "description": "The data type of the request attribute\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The request attribute is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request attribute\n"
                },
                "normalization": {
                    "type": "string",
                    "description": "String values transformation.   If the **dataType** is not `string`, set the `Original` here\n"
                },
                "skipPersonalDataMasking": {
                    "type": "boolean",
                    "description": "Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "aggregation",
                "dataType",
                "normalization"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RequestAttribute resources.\n",
                "properties": {
                    "aggregation": {
                        "type": "string",
                        "description": "Aggregation type for the request values\n"
                    },
                    "confidential": {
                        "type": "boolean",
                        "description": "Confidential data flag. Set `true` to treat the captured data as confidential\n"
                    },
                    "dataSources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource"
                        },
                        "description": "The list of data sources\n"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "The data type of the request attribute\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The request attribute is enabled (`true`) or disabled (`false`)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the request attribute\n"
                    },
                    "normalization": {
                        "type": "string",
                        "description": "String values transformation.   If the **dataType** is not `string`, set the `Original` here\n"
                    },
                    "skipPersonalDataMasking": {
                        "type": "boolean",
                        "description": "Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/requestNaming:RequestNaming": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditions:RequestNamingConditions",
                    "description": "The set of conditions for the request naming rule usage. You can specify several conditions. The request has to match\n**all** the specified conditions for the rule to trigger\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the management zones for which this rule should be applied\n"
                },
                "namingPattern": {
                    "type": "string",
                    "description": "The name to be assigned to matching requests\n"
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders",
                    "description": "The list of custom placeholders to be used in the naming pattern. It enables you to extract a request attribute value or\nother request attribute and use it in the request naming pattern.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "conditions",
                "namingPattern"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditions:RequestNamingConditions",
                    "description": "The set of conditions for the request naming rule usage. You can specify several conditions. The request has to match\n**all** the specified conditions for the rule to trigger\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the management zones for which this rule should be applied\n"
                },
                "namingPattern": {
                    "type": "string",
                    "description": "The name to be assigned to matching requests\n"
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders",
                    "description": "The list of custom placeholders to be used in the naming pattern. It enables you to extract a request attribute value or\nother request attribute and use it in the request naming pattern.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "conditions",
                "namingPattern"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RequestNaming resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/RequestNamingConditions:RequestNamingConditions",
                        "description": "The set of conditions for the request naming rule usage. You can specify several conditions. The request has to match\n**all** the specified conditions for the rule to trigger\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the management zones for which this rule should be applied\n"
                    },
                    "namingPattern": {
                        "type": "string",
                        "description": "The name to be assigned to matching requests\n"
                    },
                    "placeholders": {
                        "$ref": "#/types/dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders",
                        "description": "The list of custom placeholders to be used in the naming pattern. It enables you to extract a request attribute value or\nother request attribute and use it in the request naming pattern.\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/requestNamings:RequestNamings": {
            "description": "## Dynatrace Documentation\n\n- Set up request naming - https://www.dynatrace.com/support/help/how-to-use-dynatrace/services/service-monitoring-settings/set-up-request-naming\n\n- Request naming API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/service-api/request-naming-api\n",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the request namings in the order they should be taken into consideration\n"
                }
            },
            "required": [
                "ids"
            ],
            "inputProperties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the request namings in the order they should be taken into consideration\n"
                }
            },
            "requiredInputs": [
                "ids"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RequestNamings resources.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the request namings in the order they should be taken into consideration\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/resourceAttributes:ResourceAttributes": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "configured attributes that currently shouldn't be taken into consideration\n"
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "attributes that should get captured\n"
                }
            },
            "inputProperties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "configured attributes that currently shouldn't be taken into consideration\n"
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "attributes that should get captured\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceAttributes resources.\n",
                "properties": {
                    "disableds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "configured attributes that currently shouldn't be taken into consideration\n"
                    },
                    "enableds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "attributes that should get captured\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceAnomalies:ServiceAnomalies": {
            "properties": {
                "failureRates": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates",
                    "description": "Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad",
                    "description": "The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                    "description": "The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.\n"
                },
                "responseTimes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes",
                    "description": "Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.\n"
                }
            },
            "inputProperties": {
                "failureRates": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates",
                    "description": "Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad",
                    "description": "The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                    "description": "The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.\n"
                },
                "responseTimes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes",
                    "description": "Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAnomalies resources.\n",
                "properties": {
                    "failureRates": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates",
                        "description": "Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.\n"
                    },
                    "load": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad",
                        "description": "The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.\n"
                    },
                    "loadDrops": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                        "description": "The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.\n"
                    },
                    "responseTimes": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes",
                        "description": "Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceNaming:ServiceNaming": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingCondition:ServiceNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "format",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingCondition:ServiceNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "format"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceNaming resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ServiceNamingCondition:ServiceNamingCondition"
                        },
                        "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceNowNotification:ServiceNowNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "events": {
                    "type": "boolean",
                    "description": "Send events into ServiceNow ITOM\n"
                },
                "incidents": {
                    "type": "boolean",
                    "description": "Send incidents into ServiceNow ITSM\n"
                },
                "instance": {
                    "type": "string",
                    "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the **url** field. You can only use one of them\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the ServiceNow description. You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to the ServiceNow account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the **instance** field. You can only use one of them\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                }
            },
            "required": [
                "active",
                "incidents",
                "message",
                "name",
                "profile",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "events": {
                    "type": "boolean",
                    "description": "Send events into ServiceNow ITOM\n"
                },
                "incidents": {
                    "type": "boolean",
                    "description": "Send incidents into ServiceNow ITSM\n"
                },
                "instance": {
                    "type": "string",
                    "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the **url** field. You can only use one of them\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the ServiceNow description. You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to the ServiceNow account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the **instance** field. You can only use one of them\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                }
            },
            "requiredInputs": [
                "active",
                "incidents",
                "message",
                "profile",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceNowNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "events": {
                        "type": "boolean",
                        "description": "Send events into ServiceNow ITOM\n"
                    },
                    "incidents": {
                        "type": "boolean",
                        "description": "Send incidents into ServiceNow ITSM\n"
                    },
                    "instance": {
                        "type": "string",
                        "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the **url** field. You can only use one of them\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the ServiceNow description. You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to the ServiceNow account\n",
                        "secret": true
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the **instance** field. You can only use one of them\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/slackNotification:SlackNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "channel": {
                    "type": "string",
                    "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                    "secret": true
                }
            },
            "required": [
                "active",
                "channel",
                "message",
                "name",
                "profile",
                "url"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "channel": {
                    "type": "string",
                    "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "active",
                "channel",
                "message",
                "profile",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SlackNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/slo:Slo": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "The total count metric (the denominator in rate calculation)\n"
                },
                "description": {
                    "type": "string",
                    "description": "The custom description of the SLO (optional)\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "The SLO is enabled (`false`) or disabled (`true`)\n"
                },
                "evaluation": {
                    "type": "string",
                    "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector)\n"
                },
                "metricExpression": {
                    "type": "string",
                    "description": "The percentage-based metric expression for the calculation of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The metric for the count of successes (the numerator in rate calculation)\n",
                    "deprecationMessage": "`numerator` and `denominator` have been replaced by `metric_expression`"
                },
                "rate": {
                    "type": "string",
                    "description": "The percentage-based metric for the calculation of the SLO\n"
                },
                "target": {
                    "type": "number",
                    "description": "The target value of the SLO\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector\n"
                },
                "warning": {
                    "type": "number",
                    "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                }
            },
            "required": [
                "evaluation",
                "name",
                "target",
                "timeframe",
                "warning"
            ],
            "inputProperties": {
                "denominator": {
                    "type": "string",
                    "description": "The total count metric (the denominator in rate calculation)\n"
                },
                "description": {
                    "type": "string",
                    "description": "The custom description of the SLO (optional)\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "The SLO is enabled (`false`) or disabled (`true`)\n"
                },
                "evaluation": {
                    "type": "string",
                    "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector)\n"
                },
                "metricExpression": {
                    "type": "string",
                    "description": "The percentage-based metric expression for the calculation of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The metric for the count of successes (the numerator in rate calculation)\n",
                    "deprecationMessage": "`numerator` and `denominator` have been replaced by `metric_expression`"
                },
                "rate": {
                    "type": "string",
                    "description": "The percentage-based metric for the calculation of the SLO\n"
                },
                "target": {
                    "type": "number",
                    "description": "The target value of the SLO\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector\n"
                },
                "warning": {
                    "type": "number",
                    "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                }
            },
            "requiredInputs": [
                "evaluation",
                "target",
                "timeframe",
                "warning"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Slo resources.\n",
                "properties": {
                    "denominator": {
                        "type": "string",
                        "description": "The total count metric (the denominator in rate calculation)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The custom description of the SLO (optional)\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "The SLO is enabled (`false`) or disabled (`true`)\n"
                    },
                    "evaluation": {
                        "type": "string",
                        "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector)\n"
                    },
                    "metricExpression": {
                        "type": "string",
                        "description": "The percentage-based metric expression for the calculation of the SLO\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "numerator": {
                        "type": "string",
                        "description": "The metric for the count of successes (the numerator in rate calculation)\n",
                        "deprecationMessage": "`numerator` and `denominator` have been replaced by `metric_expression`"
                    },
                    "rate": {
                        "type": "string",
                        "description": "The percentage-based metric for the calculation of the SLO\n"
                    },
                    "target": {
                        "type": "number",
                        "description": "The target value of the SLO\n"
                    },
                    "timeframe": {
                        "type": "string",
                        "description": "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector\n"
                    },
                    "warning": {
                        "type": "number",
                        "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanAttributed:SpanAttributed": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "the key of the attribute to capture\n"
                }
            },
            "required": [
                "key"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "the key of the attribute to capture\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanAttributed resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "the key of the attribute to capture\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanCaptureRule:SpanCaptureRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "required": [
                "action",
                "matches",
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "matches"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanCaptureRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    },
                    "matches": {
                        "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches",
                        "description": "Matching strategies for the Span\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanContextPropagation:SpanContextPropagation": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "required": [
                "action",
                "matches",
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "matches"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanContextPropagation resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    },
                    "matches": {
                        "$ref": "#/types/dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches",
                        "description": "Matching strategies for the Span\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanEntryPoint:SpanEntryPoint": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "required": [
                "action",
                "matches",
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "matches"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanEntryPoint resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    },
                    "matches": {
                        "$ref": "#/types/dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches",
                        "description": "Matching strategies for the Span\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/trrelloNotification:TrrelloNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "The application key for the Trello account\n"
                },
                "authorizationToken": {
                    "type": "string",
                    "description": "The application token for the Trello account\n"
                },
                "boardId": {
                    "type": "string",
                    "description": "The Trello board to which the card should be assigned\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The Trello list to which the card should be assigned\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "resolvedListId": {
                    "type": "string",
                    "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                }
            },
            "required": [
                "active",
                "applicationKey",
                "boardId",
                "description",
                "listId",
                "name",
                "profile",
                "resolvedListId",
                "text"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "The application key for the Trello account\n"
                },
                "authorizationToken": {
                    "type": "string",
                    "description": "The application token for the Trello account\n"
                },
                "boardId": {
                    "type": "string",
                    "description": "The Trello board to which the card should be assigned\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The Trello list to which the card should be assigned\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "resolvedListId": {
                    "type": "string",
                    "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                }
            },
            "requiredInputs": [
                "active",
                "applicationKey",
                "boardId",
                "description",
                "listId",
                "profile",
                "resolvedListId",
                "text"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrrelloNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "applicationKey": {
                        "type": "string",
                        "description": "The application key for the Trello account\n"
                    },
                    "authorizationToken": {
                        "type": "string",
                        "description": "The application token for the Trello account\n"
                    },
                    "boardId": {
                        "type": "string",
                        "description": "The Trello board to which the card should be assigned\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                    },
                    "listId": {
                        "type": "string",
                        "description": "The Trello list to which the card should be assigned\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "resolvedListId": {
                        "type": "string",
                        "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                    },
                    "text": {
                        "type": "string",
                        "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/user:User": {
            "description": "## Dynatrace Documentation\n\n- User management and SSO - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso\n\n- User management API - https://www.dynatrace.com/support/help/dynatrace-api/account-management-api/user-management-api\n",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user's user group IDs\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's last name\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The User Name\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "lastName",
                "userName"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user's user group IDs\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's last name\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The User Name\n"
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email address\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user's user group IDs\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The User Name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/userGroup:UserGroup": {
            "description": "## Dynatrace Documentation\n\n- User management and SSO - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso\n\n- User management API - https://www.dynatrace.com/support/help/dynatrace-api/account-management-api/user-management-api\n",
            "properties": {
                "accessAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the access account rights\n"
                },
                "clusterAdmin": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the cluster administrator rights\n"
                },
                "ldapGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "LDAP group names\n"
                },
                "manageAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the manage account rights\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/UserGroupPermissions:UserGroupPermissions",
                    "description": "Permissions for environments\n"
                },
                "ssoGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accessAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the access account rights\n"
                },
                "clusterAdmin": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the cluster administrator rights\n"
                },
                "ldapGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "LDAP group names\n"
                },
                "manageAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the manage account rights\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/UserGroupPermissions:UserGroupPermissions",
                    "description": "Permissions for environments\n"
                },
                "ssoGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserGroup resources.\n",
                "properties": {
                    "accessAccount": {
                        "type": "boolean",
                        "description": "If `true`, then the group has the access account rights\n"
                    },
                    "clusterAdmin": {
                        "type": "boolean",
                        "description": "If `true`, then the group has the cluster administrator rights\n"
                    },
                    "ldapGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "LDAP group names\n"
                    },
                    "manageAccount": {
                        "type": "boolean",
                        "description": "If `true`, then the group has the manage account rights\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user group\n"
                    },
                    "permissions": {
                        "$ref": "#/types/dynatrace:index/UserGroupPermissions:UserGroupPermissions",
                        "description": "Permissions for environments\n"
                    },
                    "ssoGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/victorOpsNotification:VictorOpsNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the target VictorOps account\n",
                    "secret": true
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "routingKey": {
                    "type": "string",
                    "description": "The routing key, defining the group to be notified\n"
                }
            },
            "required": [
                "active",
                "message",
                "name",
                "profile",
                "routingKey"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the target VictorOps account\n",
                    "secret": true
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "routingKey": {
                    "type": "string",
                    "description": "The routing key, defining the group to be notified\n"
                }
            },
            "requiredInputs": [
                "active",
                "message",
                "profile",
                "routingKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VictorOpsNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key for the target VictorOps account\n",
                        "secret": true
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "routingKey": {
                        "type": "string",
                        "description": "The routing key, defining the group to be notified\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webApplication:WebApplication": {
            "properties": {
                "conversionGoals": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals",
                    "description": "A list of conversion goals of the application\n"
                },
                "costControlUserSessionPercentage": {
                    "type": "integer",
                    "description": "Analize *X*% of user sessions\n"
                },
                "customActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings",
                    "description": "Defines the Custom Action Apdex settings of an application\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n"
                },
                "loadActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings",
                    "description": "Defines the Load Action Apdex settings of an application\n"
                },
                "loadActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`\n"
                },
                "metaDataCaptureSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings",
                    "description": "Java script agent meta data capture settings\n"
                },
                "monitoringSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings",
                    "description": "Real user monitoring settings\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web application, displayed in the UI\n"
                },
                "realUserMonitoringEnabled": {
                    "type": "boolean",
                    "description": "Real user monitoring enabled/disabled\n"
                },
                "sessionReplayConfig": {
                    "$ref": "#/types/dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig",
                    "description": "Settings regarding Session Replay\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n"
                },
                "urlInjectionPattern": {
                    "type": "string",
                    "description": "URL injection pattern for manual web application\n"
                },
                "userActionAndSessionProperties": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties",
                    "description": "User action and session properties settings\n"
                },
                "userActionNamingSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings",
                    "description": "The settings of user action naming\n"
                },
                "userTags": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserTags:WebApplicationUserTags",
                    "description": "User tags settings\n"
                },
                "waterfallSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings",
                    "description": "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources\n"
                },
                "xhrActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings",
                    "description": "Defines the XHR Action Apdex settings of an application\n"
                },
                "xhrActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.\n"
                }
            },
            "required": [
                "costControlUserSessionPercentage",
                "customActionApdexSettings",
                "loadActionApdexSettings",
                "loadActionKeyPerformanceMetric",
                "monitoringSettings",
                "name",
                "type",
                "waterfallSettings",
                "xhrActionApdexSettings",
                "xhrActionKeyPerformanceMetric"
            ],
            "inputProperties": {
                "conversionGoals": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals",
                    "description": "A list of conversion goals of the application\n"
                },
                "costControlUserSessionPercentage": {
                    "type": "integer",
                    "description": "Analize *X*% of user sessions\n"
                },
                "customActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings",
                    "description": "Defines the Custom Action Apdex settings of an application\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n"
                },
                "loadActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings",
                    "description": "Defines the Load Action Apdex settings of an application\n"
                },
                "loadActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`\n"
                },
                "metaDataCaptureSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings",
                    "description": "Java script agent meta data capture settings\n"
                },
                "monitoringSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings",
                    "description": "Real user monitoring settings\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web application, displayed in the UI\n"
                },
                "realUserMonitoringEnabled": {
                    "type": "boolean",
                    "description": "Real user monitoring enabled/disabled\n"
                },
                "sessionReplayConfig": {
                    "$ref": "#/types/dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig",
                    "description": "Settings regarding Session Replay\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n"
                },
                "urlInjectionPattern": {
                    "type": "string",
                    "description": "URL injection pattern for manual web application\n"
                },
                "userActionAndSessionProperties": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties",
                    "description": "User action and session properties settings\n"
                },
                "userActionNamingSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings",
                    "description": "The settings of user action naming\n"
                },
                "userTags": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserTags:WebApplicationUserTags",
                    "description": "User tags settings\n"
                },
                "waterfallSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings",
                    "description": "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources\n"
                },
                "xhrActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings",
                    "description": "Defines the XHR Action Apdex settings of an application\n"
                },
                "xhrActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.\n"
                }
            },
            "requiredInputs": [
                "costControlUserSessionPercentage",
                "customActionApdexSettings",
                "loadActionApdexSettings",
                "loadActionKeyPerformanceMetric",
                "monitoringSettings",
                "type",
                "waterfallSettings",
                "xhrActionApdexSettings",
                "xhrActionKeyPerformanceMetric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebApplication resources.\n",
                "properties": {
                    "conversionGoals": {
                        "$ref": "#/types/dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals",
                        "description": "A list of conversion goals of the application\n"
                    },
                    "costControlUserSessionPercentage": {
                        "type": "integer",
                        "description": "Analize *X*% of user sessions\n"
                    },
                    "customActionApdexSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings",
                        "description": "Defines the Custom Action Apdex settings of an application\n"
                    },
                    "keyUserActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction"
                        },
                        "description": "User Action names to be flagged as Key User Actions\n"
                    },
                    "loadActionApdexSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings",
                        "description": "Defines the Load Action Apdex settings of an application\n"
                    },
                    "loadActionKeyPerformanceMetric": {
                        "type": "string",
                        "description": "The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`\n"
                    },
                    "metaDataCaptureSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings",
                        "description": "Java script agent meta data capture settings\n"
                    },
                    "monitoringSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings",
                        "description": "Real user monitoring settings\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the web application, displayed in the UI\n"
                    },
                    "realUserMonitoringEnabled": {
                        "type": "boolean",
                        "description": "Real user monitoring enabled/disabled\n"
                    },
                    "sessionReplayConfig": {
                        "$ref": "#/types/dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig",
                        "description": "Settings regarding Session Replay\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`\n"
                    },
                    "urlInjectionPattern": {
                        "type": "string",
                        "description": "URL injection pattern for manual web application\n"
                    },
                    "userActionAndSessionProperties": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties",
                        "description": "User action and session properties settings\n"
                    },
                    "userActionNamingSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings",
                        "description": "The settings of user action naming\n"
                    },
                    "userTags": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserTags:WebApplicationUserTags",
                        "description": "User tags settings\n"
                    },
                    "waterfallSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings",
                        "description": "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources\n"
                    },
                    "xhrActionApdexSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings",
                        "description": "Defines the XHR Action Apdex settings of an application\n"
                    },
                    "xhrActionKeyPerformanceMetric": {
                        "type": "string",
                        "description": "The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webhookNotification:WebhookNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "notifyEventMerges": {
                    "type": "boolean",
                    "description": "Call webhook if new events merge into existing problems\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "required": [
                "active",
                "name",
                "payload",
                "profile",
                "url"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "notifyEventMerges": {
                    "type": "boolean",
                    "description": "Call webhook if new events merge into existing problems\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "requiredInputs": [
                "active",
                "payload",
                "profile",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebhookNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "headers": {
                        "$ref": "#/types/dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders",
                        "description": "A list of the additional HTTP headers\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "notifyClosedProblems": {
                        "type": "boolean",
                        "description": "Send email if problem is closed\n"
                    },
                    "notifyEventMerges": {
                        "type": "boolean",
                        "description": "Call webhook if new events merge into existing problems\n"
                    },
                    "payload": {
                        "type": "string",
                        "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the WebHook endpoint\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/xmattersNotification:XmattersNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "required": [
                "active",
                "name",
                "payload",
                "profile",
                "url"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "requiredInputs": [
                "active",
                "payload",
                "profile",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering XmattersNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "headers": {
                        "$ref": "#/types/dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders",
                        "description": "A list of the additional HTTP headers\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "payload": {
                        "type": "string",
                        "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the WebHook endpoint\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "dynatrace:index/getAlertingProfile:getAlertingProfile": {
            "description": "The Alerting Profile queries for an Alerting Profile that has a specified name. In case multiple Alerting Profiles share the same name the first one found will be used.\nThe ID of this Data Resource aligns with the IDs used by the Dynatrace Settings 2.0 API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@lbrlabs/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst default = dynatrace.getAlertingProfile({\n    name: \"Default\",\n});\nconst myWebhookNotification = new dynatrace.WebhookNotification(\"myWebhookNotification\", {\n    active: false,\n    profile: _default.then(_default =\u003e _default.id),\n    url: \"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\",\n    insecure: true,\n    notifyEventMerges: true,\n    notifyClosedProblems: true,\n    payload: \"web-hook-payload\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ndefault = dynatrace.get_alerting_profile(name=\"Default\")\nmy_webhook_notification = dynatrace.WebhookNotification(\"myWebhookNotification\",\n    active=False,\n    profile=default.id,\n    url=\"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\",\n    insecure=True,\n    notify_event_merges=True,\n    notify_closed_problems=True,\n    payload=\"web-hook-payload\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = Dynatrace.GetAlertingProfile.Invoke(new()\n    {\n        Name = \"Default\",\n    });\n\n    var myWebhookNotification = new Dynatrace.WebhookNotification(\"myWebhookNotification\", new()\n    {\n        Active = false,\n        Profile = @default.Apply(getAlertingProfileResult =\u003e getAlertingProfileResult).Apply(@default =\u003e @default.Apply(getAlertingProfileResult =\u003e getAlertingProfileResult.Id)),\n        Url = \"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\",\n        Insecure = true,\n        NotifyEventMerges = true,\n        NotifyClosedProblems = true,\n        Payload = \"web-hook-payload\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_default, err := dynatrace.LookupAlertingProfile(ctx, \u0026GetAlertingProfileArgs{\n\t\t\tName: \"Default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewWebhookNotification(ctx, \"myWebhookNotification\", \u0026dynatrace.WebhookNotificationArgs{\n\t\t\tActive:               pulumi.Bool(false),\n\t\t\tProfile:              pulumi.String(_default.Id),\n\t\t\tUrl:                  pulumi.String(\"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\"),\n\t\t\tInsecure:             pulumi.Bool(true),\n\t\t\tNotifyEventMerges:    pulumi.Bool(true),\n\t\t\tNotifyClosedProblems: pulumi.Bool(true),\n\t\t\tPayload:              pulumi.String(\"web-hook-payload\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAlertingProfileArgs;\nimport com.pulumi.dynatrace.WebhookNotification;\nimport com.pulumi.dynatrace.WebhookNotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default = DynatraceFunctions.getAlertingProfile(GetAlertingProfileArgs.builder()\n            .name(\"Default\")\n            .build());\n\n        var myWebhookNotification = new WebhookNotification(\"myWebhookNotification\", WebhookNotificationArgs.builder()        \n            .active(false)\n            .profile(default_.id())\n            .url(\"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\")\n            .insecure(true)\n            .notifyEventMerges(true)\n            .notifyClosedProblems(true)\n            .payload(\"web-hook-payload\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myWebhookNotification:\n    type: dynatrace:WebhookNotification\n    properties:\n      active: false\n      profile: ${default.id}\n      url: https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\n      insecure: true\n      notifyEventMerges: true\n      notifyClosedProblems: true\n      payload: web-hook-payload\nvariables:\n  default:\n    fn::invoke:\n      Function: dynatrace:getAlertingProfile\n      Arguments:\n        name: Default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAlertingProfile.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAlertingProfile.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAlertingProfiles:getAlertingProfiles": {
            "description": "The alerting profiles data source allows retrieval of all alerting profiles.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAlertingProfiles.\n",
                "properties": {
                    "profiles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlertingProfiles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "profiles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "dynatrace:index/getApplication:getApplication": {
            "description": "The application data source allows the application ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all applications with the specified name\n- `tags` (optional) refers to the tags that need to be present for the application (inclusive)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@lbrlabs/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getApplication({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n});\nconst _name_ = new dynatrace.ApplicationDetectionRule(\"#name#\", {\n    applicationIdentifier: test.then(test =\u003e test.id),\n    filterConfig: {\n        applicationMatchTarget: \"DOMAIN\",\n        applicationMatchType: \"MATCHES\",\n        pattern: \"www.google.com\",\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_application(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ApplicationDetectionRule(\"#name#\",\n    application_identifier=test.id,\n    filter_config=dynatrace.ApplicationDetectionRuleFilterConfigArgs(\n        application_match_target=\"DOMAIN\",\n        application_match_type=\"MATCHES\",\n        pattern=\"www.google.com\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetApplication.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ApplicationDetectionRule(\"#name#\", new()\n    {\n        ApplicationIdentifier = test.Apply(getApplicationResult =\u003e getApplicationResult.Id),\n        FilterConfig = new Dynatrace.Inputs.ApplicationDetectionRuleFilterConfigArgs\n        {\n            ApplicationMatchTarget = \"DOMAIN\",\n            ApplicationMatchType = \"MATCHES\",\n            Pattern = \"www.google.com\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetApplication(ctx, \u0026GetApplicationArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewApplicationDetectionRule(ctx, \"#name#\", \u0026dynatrace.ApplicationDetectionRuleArgs{\n\t\t\tApplicationIdentifier: pulumi.String(test.Id),\n\t\t\tFilterConfig: \u0026ApplicationDetectionRuleFilterConfigArgs{\n\t\t\t\tApplicationMatchTarget: pulumi.String(\"DOMAIN\"),\n\t\t\t\tApplicationMatchType:   pulumi.String(\"MATCHES\"),\n\t\t\t\tPattern:                pulumi.String(\"www.google.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetApplicationArgs;\nimport com.pulumi.dynatrace.ApplicationDetectionRule;\nimport com.pulumi.dynatrace.ApplicationDetectionRuleArgs;\nimport com.pulumi.dynatrace.inputs.ApplicationDetectionRuleFilterConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getApplication(GetApplicationArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ApplicationDetectionRule(\"#name#\", ApplicationDetectionRuleArgs.builder()        \n            .applicationIdentifier(test.applyValue(getApplicationResult -\u003e getApplicationResult.id()))\n            .filterConfig(ApplicationDetectionRuleFilterConfigArgs.builder()\n                .applicationMatchTarget(\"DOMAIN\")\n                .applicationMatchType(\"MATCHES\")\n                .pattern(\"www.google.com\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ApplicationDetectionRule\n    properties:\n      applicationIdentifier: ${test.id}\n      filterConfig:\n        applicationMatchTarget: DOMAIN\n        applicationMatchType: MATCHES\n        pattern: www.google.com\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getApplication\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplication.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the application to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the application to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAwsIamExternal:getAwsIamExternal": {
            "description": "The AWS IAM external data source allows the AWS IAM external ID to be retrieved.\n",
            "outputs": {
                "description": "A collection of values returned by getAwsIamExternal.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "dynatrace:index/getCredentials:getCredentials": {
            "description": "The `dynatrace.getCredentials` data source queries for Credentials stored within the Credentials Vault using the properties `name`, `scope` and `type`. At least one of `name`, `scope` or `type` needs to be specified as a non empty value. Combinations of the three properties are also possible.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@lbrlabs/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst creds = dynatrace.getCredentials({\n    name: \"Office365 Access Token\",\n});\nconst _name_ = new dynatrace.HttpMonitor(\"#name#\", {\n    enabled: true,\n    frequency: 60,\n    locations: [\"SYNTHETIC_LOCATION-781752216580B1BC\"],\n    anomalyDetections: [{\n        loadingTimeThresholds: [{\n            enabled: true,\n        }],\n        outageHandlings: [{\n            globalOutage: true,\n            localOutage: false,\n            retryOnError: false,\n        }],\n    }],\n    script: {\n        requests: [{\n            description: \"google.com\",\n            method: \"GET\",\n            url: \"https://www.google.com\",\n            authentication: {\n                type: \"BASIC_AUTHENTICATION\",\n                credentials: creds.then(creds =\u003e creds.id),\n            },\n            configuration: {\n                acceptAnyCertificate: true,\n                followRedirects: true,\n            },\n            validation: {\n                rules: [{\n                    type: \"httpStatusesList\",\n                    passIfFound: false,\n                    value: \"\u003e=400\",\n                }],\n            },\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ncreds = dynatrace.get_credentials(name=\"Office365 Access Token\")\n_name_ = dynatrace.HttpMonitor(\"#name#\",\n    enabled=True,\n    frequency=60,\n    locations=[\"SYNTHETIC_LOCATION-781752216580B1BC\"],\n    anomaly_detections=[dynatrace.HttpMonitorAnomalyDetectionArgs(\n        loading_time_thresholds=[dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs(\n            enabled=True,\n        )],\n        outage_handlings=[dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArgs(\n            global_outage=True,\n            local_outage=False,\n            retry_on_error=False,\n        )],\n    )],\n    script=dynatrace.HttpMonitorScriptArgs(\n        requests=[dynatrace.HttpMonitorScriptRequestArgs(\n            description=\"google.com\",\n            method=\"GET\",\n            url=\"https://www.google.com\",\n            authentication=dynatrace.HttpMonitorScriptRequestAuthenticationArgs(\n                type=\"BASIC_AUTHENTICATION\",\n                credentials=creds.id,\n            ),\n            configuration=dynatrace.HttpMonitorScriptRequestConfigurationArgs(\n                accept_any_certificate=True,\n                follow_redirects=True,\n            ),\n            validation=dynatrace.HttpMonitorScriptRequestValidationArgs(\n                rules=[dynatrace.HttpMonitorScriptRequestValidationRuleArgs(\n                    type=\"httpStatusesList\",\n                    pass_if_found=False,\n                    value=\"\u003e=400\",\n                )],\n            ),\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var creds = Dynatrace.GetCredentials.Invoke(new()\n    {\n        Name = \"Office365 Access Token\",\n    });\n\n    var _name_ = new Dynatrace.HttpMonitor(\"#name#\", new()\n    {\n        Enabled = true,\n        Frequency = 60,\n        Locations = new[]\n        {\n            \"SYNTHETIC_LOCATION-781752216580B1BC\",\n        },\n        AnomalyDetections = new[]\n        {\n            new Dynatrace.Inputs.HttpMonitorAnomalyDetectionArgs\n            {\n                LoadingTimeThresholds = new[]\n                {\n                    new Dynatrace.Inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs\n                    {\n                        Enabled = true,\n                    },\n                },\n                OutageHandlings = new[]\n                {\n                    new Dynatrace.Inputs.HttpMonitorAnomalyDetectionOutageHandlingArgs\n                    {\n                        GlobalOutage = true,\n                        LocalOutage = false,\n                        RetryOnError = false,\n                    },\n                },\n            },\n        },\n        Script = new Dynatrace.Inputs.HttpMonitorScriptArgs\n        {\n            Requests = new[]\n            {\n                new Dynatrace.Inputs.HttpMonitorScriptRequestArgs\n                {\n                    Description = \"google.com\",\n                    Method = \"GET\",\n                    Url = \"https://www.google.com\",\n                    Authentication = new Dynatrace.Inputs.HttpMonitorScriptRequestAuthenticationArgs\n                    {\n                        Type = \"BASIC_AUTHENTICATION\",\n                        Credentials = creds.Apply(getCredentialsResult =\u003e getCredentialsResult.Id),\n                    },\n                    Configuration = new Dynatrace.Inputs.HttpMonitorScriptRequestConfigurationArgs\n                    {\n                        AcceptAnyCertificate = true,\n                        FollowRedirects = true,\n                    },\n                    Validation = new Dynatrace.Inputs.HttpMonitorScriptRequestValidationArgs\n                    {\n                        Rules = new[]\n                        {\n                            new Dynatrace.Inputs.HttpMonitorScriptRequestValidationRuleArgs\n                            {\n                                Type = \"httpStatusesList\",\n                                PassIfFound = false,\n                                Value = \"\u003e=400\",\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcreds, err := dynatrace.GetCredentials(ctx, \u0026GetCredentialsArgs{\n\t\t\tName: pulumi.StringRef(\"Office365 Access Token\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewHttpMonitor(ctx, \"#name#\", \u0026dynatrace.HttpMonitorArgs{\n\t\t\tEnabled:   pulumi.Bool(true),\n\t\t\tFrequency: pulumi.Int(60),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"SYNTHETIC_LOCATION-781752216580B1BC\"),\n\t\t\t},\n\t\t\tAnomalyDetections: HttpMonitorAnomalyDetectionArray{\n\t\t\t\t\u0026HttpMonitorAnomalyDetectionArgs{\n\t\t\t\t\tLoadingTimeThresholds: HttpMonitorAnomalyDetectionLoadingTimeThresholdArray{\n\t\t\t\t\t\t\u0026HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs{\n\t\t\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tOutageHandlings: HttpMonitorAnomalyDetectionOutageHandlingArray{\n\t\t\t\t\t\t\u0026HttpMonitorAnomalyDetectionOutageHandlingArgs{\n\t\t\t\t\t\t\tGlobalOutage: pulumi.Bool(true),\n\t\t\t\t\t\t\tLocalOutage:  pulumi.Bool(false),\n\t\t\t\t\t\t\tRetryOnError: pulumi.Bool(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tScript: \u0026HttpMonitorScriptArgs{\n\t\t\t\tRequests: HttpMonitorScriptRequestArray{\n\t\t\t\t\t\u0026HttpMonitorScriptRequestArgs{\n\t\t\t\t\t\tDescription: pulumi.String(\"google.com\"),\n\t\t\t\t\t\tMethod:      pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:         pulumi.String(\"https://www.google.com\"),\n\t\t\t\t\t\tAuthentication: \u0026HttpMonitorScriptRequestAuthenticationArgs{\n\t\t\t\t\t\t\tType:        pulumi.String(\"BASIC_AUTHENTICATION\"),\n\t\t\t\t\t\t\tCredentials: pulumi.String(creds.Id),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tConfiguration: \u0026HttpMonitorScriptRequestConfigurationArgs{\n\t\t\t\t\t\t\tAcceptAnyCertificate: pulumi.Bool(true),\n\t\t\t\t\t\t\tFollowRedirects:      pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tValidation: \u0026HttpMonitorScriptRequestValidationArgs{\n\t\t\t\t\t\t\tRules: HttpMonitorScriptRequestValidationRuleArray{\n\t\t\t\t\t\t\t\t\u0026HttpMonitorScriptRequestValidationRuleArgs{\n\t\t\t\t\t\t\t\t\tType:        pulumi.String(\"httpStatusesList\"),\n\t\t\t\t\t\t\t\t\tPassIfFound: pulumi.Bool(false),\n\t\t\t\t\t\t\t\t\tValue:       pulumi.String(\"\u003e=400\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetCredentialsArgs;\nimport com.pulumi.dynatrace.HttpMonitor;\nimport com.pulumi.dynatrace.HttpMonitorArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorAnomalyDetectionArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var creds = DynatraceFunctions.getCredentials(GetCredentialsArgs.builder()\n            .name(\"Office365 Access Token\")\n            .build());\n\n        var _name_ = new HttpMonitor(\"#name#\", HttpMonitorArgs.builder()        \n            .enabled(true)\n            .frequency(60)\n            .locations(\"SYNTHETIC_LOCATION-781752216580B1BC\")\n            .anomalyDetections(HttpMonitorAnomalyDetectionArgs.builder()\n                .loadingTimeThresholds(HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs.builder()\n                    .enabled(true)\n                    .build())\n                .outageHandlings(HttpMonitorAnomalyDetectionOutageHandlingArgs.builder()\n                    .globalOutage(true)\n                    .localOutage(false)\n                    .retryOnError(false)\n                    .build())\n                .build())\n            .script(HttpMonitorScriptArgs.builder()\n                .requests(HttpMonitorScriptRequestArgs.builder()\n                    .description(\"google.com\")\n                    .method(\"GET\")\n                    .url(\"https://www.google.com\")\n                    .authentication(HttpMonitorScriptRequestAuthenticationArgs.builder()\n                        .type(\"BASIC_AUTHENTICATION\")\n                        .credentials(creds.applyValue(getCredentialsResult -\u003e getCredentialsResult.id()))\n                        .build())\n                    .configuration(HttpMonitorScriptRequestConfigurationArgs.builder()\n                        .acceptAnyCertificate(true)\n                        .followRedirects(true)\n                        .build())\n                    .validation(HttpMonitorScriptRequestValidationArgs.builder()\n                        .rules(HttpMonitorScriptRequestValidationRuleArgs.builder()\n                            .type(\"httpStatusesList\")\n                            .passIfFound(false)\n                            .value(\"\u003e=400\")\n                            .build())\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:HttpMonitor\n    properties:\n      enabled: true\n      frequency: 60\n      locations:\n        - SYNTHETIC_LOCATION-781752216580B1BC\n      anomalyDetections:\n        - loadingTimeThresholds:\n            - enabled: true\n          outageHandlings:\n            - globalOutage: true\n              localOutage: false\n              retryOnError: false\n      script:\n        requests:\n          - description: google.com\n            method: GET\n            url: https://www.google.com\n            authentication:\n              type: BASIC_AUTHENTICATION\n              credentials: ${creds.id}\n            configuration:\n              acceptAnyCertificate: true\n              followRedirects: true\n            validation:\n              rules:\n                - type: httpStatusesList\n                  passIfFound: false\n                  value: '\u003e=400'\nvariables:\n  creds:\n    fn::invoke:\n      Function: dynatrace:getCredentials\n      Arguments:\n        name: Office365 Access Token\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCredentials.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the credential as shown within the Dynatrace WebUI. If not specified all names will match\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of the credential. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`. If not specified all scopes will match.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential. Possible values are `CERTIFICATE`, `PUBLIC_CERTIFICATE`, `TOKEN`, `USERNAME_PASSWORD` and `UNKNOWN`. If not specified all credential types will match\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCredentials.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credential as shown within the Dynatrace WebUI. If not specified all names will match\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of the credential. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`. If not specified all scopes will match.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential. Possible values are `CERTIFICATE`, `PUBLIC_CERTIFICATE`, `TOKEN`, `USERNAME_PASSWORD` and `UNKNOWN`. If not specified all credential types will match\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "dynatrace:index/getHost:getHost": {
            "description": "The host data source allows the host ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all hosts with the specified name\n- `tags` (optional) refers to the tags that need to be present for the host (inclusive)\n\nIf multiple hosts match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = pulumi.output(dynatrace.getHost({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n}));\nconst _name_ = new dynatrace.ManagementZone(\"#name#\", {\n    entitySelectorBasedRules: [{\n        enabled: true,\n        selector: pulumi.interpolate`type(\"host\"),entityId(\"${test.id}\")`,\n    }],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_host(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ManagementZone(\"#name#\", entity_selector_based_rules=[dynatrace.ManagementZoneEntitySelectorBasedRuleArgs(\n    enabled=True,\n    selector=f\"type(\\\"host\\\"),entityId(\\\"{test.id}\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetHost.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ManagementZone(\"#name#\", new()\n    {\n        EntitySelectorBasedRules = new[]\n        {\n            new Dynatrace.Inputs.ManagementZoneEntitySelectorBasedRuleArgs\n            {\n                Enabled = true,\n                Selector = $\"type(\\\"host\\\"),entityId(\\\"{test.Apply(getHostResult =\u003e getHostResult.Id)}\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetHost(ctx, \u0026GetHostArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewManagementZone(ctx, \"#name#\", \u0026dynatrace.ManagementZoneArgs{\n\t\t\tEntitySelectorBasedRules: ManagementZoneEntitySelectorBasedRuleArray{\n\t\t\t\t\u0026ManagementZoneEntitySelectorBasedRuleArgs{\n\t\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\t\tSelector: pulumi.String(fmt.Sprintf(\"type(\\\"host\\\"),entityId(\\\"%v\\\")\", test.Id)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetHostArgs;\nimport com.pulumi.dynatrace.ManagementZone;\nimport com.pulumi.dynatrace.ManagementZoneArgs;\nimport com.pulumi.dynatrace.inputs.ManagementZoneEntitySelectorBasedRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getHost(GetHostArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ManagementZone(\"#name#\", ManagementZoneArgs.builder()        \n            .entitySelectorBasedRules(ManagementZoneEntitySelectorBasedRuleArgs.builder()\n                .enabled(true)\n                .selector(String.format(\"type(\\\"host\\\"),entityId(\\\"%s\\\")\", test.applyValue(getHostResult -\u003e getHostResult.id())))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ManagementZone\n    properties:\n      entitySelectorBasedRules:\n        - enabled: true\n          selector: type(\"host\"),entityId(\"${test.id}\")\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getHost\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHost.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the host to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHost.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the host to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getManagementZone:getManagementZone": {
            "description": "The management zone data source allows the management zone ID to be retrieved by its name.\n\n- `name` queries for all management zones with the specified name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = pulumi.output(dynatrace.getManagementZone({\n    name: \"Example\",\n}));\nconst _name_ = new dynatrace.CalculatedServiceMetric(\"#name#\", {\n    conditions: [{\n        conditions: [{\n            attribute: \"HTTP_REQUEST_METHOD\",\n            comparison: {\n                httpMethod: {\n                    operator: \"EQUALS_ANY_OF\",\n                    values: [\n                        \"POST\",\n                        \"GET\",\n                    ],\n                },\n                negate: false,\n            },\n        }],\n    }],\n    enabled: true,\n    managementZones: [test.id],\n    metricDefinition: {\n        metric: \"REQUEST_ATTRIBUTE\",\n        requestAttribute: \"foo\",\n    },\n    metricKey: \"calc:service.#name#\",\n    unit: \"MILLI_SECOND_PER_MINUTE\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_management_zone(name=\"Example\")\n_name_ = dynatrace.CalculatedServiceMetric(\"#name#\",\n    conditions=[dynatrace.CalculatedServiceMetricConditionArgs(\n        conditions=[dynatrace.CalculatedServiceMetricConditionConditionArgs(\n            attribute=\"HTTP_REQUEST_METHOD\",\n            comparison=dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs(\n                http_method=dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs(\n                    operator=\"EQUALS_ANY_OF\",\n                    values=[\n                        \"POST\",\n                        \"GET\",\n                    ],\n                ),\n                negate=False,\n            ),\n        )],\n    )],\n    enabled=True,\n    management_zones=[test.id],\n    metric_definition=dynatrace.CalculatedServiceMetricMetricDefinitionArgs(\n        metric=\"REQUEST_ATTRIBUTE\",\n        request_attribute=\"foo\",\n    ),\n    metric_key=\"calc:service.#name#\",\n    unit=\"MILLI_SECOND_PER_MINUTE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetManagementZone.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n    var _name_ = new Dynatrace.CalculatedServiceMetric(\"#name#\", new()\n    {\n        Conditions = new[]\n        {\n            new Dynatrace.Inputs.CalculatedServiceMetricConditionArgs\n            {\n                Conditions = new[]\n                {\n                    new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionArgs\n                    {\n                        Attribute = \"HTTP_REQUEST_METHOD\",\n                        Comparison = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonArgs\n                        {\n                            HttpMethod = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs\n                            {\n                                Operator = \"EQUALS_ANY_OF\",\n                                Values = new[]\n                                {\n                                    \"POST\",\n                                    \"GET\",\n                                },\n                            },\n                            Negate = false,\n                        },\n                    },\n                },\n            },\n        },\n        Enabled = true,\n        ManagementZones = new[]\n        {\n            test.Apply(getManagementZoneResult =\u003e getManagementZoneResult.Id),\n        },\n        MetricDefinition = new Dynatrace.Inputs.CalculatedServiceMetricMetricDefinitionArgs\n        {\n            Metric = \"REQUEST_ATTRIBUTE\",\n            RequestAttribute = \"foo\",\n        },\n        MetricKey = \"calc:service.#name#\",\n        Unit = \"MILLI_SECOND_PER_MINUTE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.LookupManagementZone(ctx, \u0026GetManagementZoneArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewCalculatedServiceMetric(ctx, \"#name#\", \u0026dynatrace.CalculatedServiceMetricArgs{\n\t\t\tConditions: CalculatedServiceMetricConditionArray{\n\t\t\t\t\u0026CalculatedServiceMetricConditionArgs{\n\t\t\t\t\tConditions: CalculatedServiceMetricConditionConditionArray{\n\t\t\t\t\t\t\u0026CalculatedServiceMetricConditionConditionArgs{\n\t\t\t\t\t\t\tAttribute: pulumi.String(\"HTTP_REQUEST_METHOD\"),\n\t\t\t\t\t\t\tComparison: \u0026CalculatedServiceMetricConditionConditionComparisonArgs{\n\t\t\t\t\t\t\t\tHttpMethod: \u0026CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs{\n\t\t\t\t\t\t\t\t\tOperator: pulumi.String(\"EQUALS_ANY_OF\"),\n\t\t\t\t\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"POST\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"GET\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tNegate: pulumi.Bool(false),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tManagementZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(test.Id),\n\t\t\t},\n\t\t\tMetricDefinition: \u0026CalculatedServiceMetricMetricDefinitionArgs{\n\t\t\t\tMetric:           pulumi.String(\"REQUEST_ATTRIBUTE\"),\n\t\t\t\tRequestAttribute: pulumi.String(\"foo\"),\n\t\t\t},\n\t\t\tMetricKey: pulumi.String(\"calc:service.#name#\"),\n\t\t\tUnit:      pulumi.String(\"MILLI_SECOND_PER_MINUTE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetManagementZoneArgs;\nimport com.pulumi.dynatrace.CalculatedServiceMetric;\nimport com.pulumi.dynatrace.CalculatedServiceMetricArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricConditionArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricMetricDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getManagementZone(GetManagementZoneArgs.builder()\n            .name(\"Example\")\n            .build());\n\n        var _name_ = new CalculatedServiceMetric(\"#name#\", CalculatedServiceMetricArgs.builder()        \n            .conditions(CalculatedServiceMetricConditionArgs.builder()\n                .conditions(CalculatedServiceMetricConditionConditionArgs.builder()\n                    .attribute(\"HTTP_REQUEST_METHOD\")\n                    .comparison(CalculatedServiceMetricConditionConditionComparisonArgs.builder()\n                        .httpMethod(CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs.builder()\n                            .operator(\"EQUALS_ANY_OF\")\n                            .values(                            \n                                \"POST\",\n                                \"GET\")\n                            .build())\n                        .negate(false)\n                        .build())\n                    .build())\n                .build())\n            .enabled(true)\n            .managementZones(test.applyValue(getManagementZoneResult -\u003e getManagementZoneResult.id()))\n            .metricDefinition(CalculatedServiceMetricMetricDefinitionArgs.builder()\n                .metric(\"REQUEST_ATTRIBUTE\")\n                .requestAttribute(\"foo\")\n                .build())\n            .metricKey(\"calc:service.#name#\")\n            .unit(\"MILLI_SECOND_PER_MINUTE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:CalculatedServiceMetric\n    properties:\n      conditions:\n        - conditions:\n            - attribute: HTTP_REQUEST_METHOD\n              comparison:\n                httpMethod:\n                  operator: EQUALS_ANY_OF\n                  values:\n                    - POST\n                    - GET\n                negate: false\n      enabled: true\n      managementZones:\n        - ${test.id}\n      metricDefinition:\n        metric: REQUEST_ATTRIBUTE\n        requestAttribute: foo\n      metricKey: calc:service.#name#\n      unit: MILLI_SECOND_PER_MINUTE\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getManagementZone\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getManagementZone.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getManagementZone.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getProcess:getProcess": {
            "description": "The process data source allows the process ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all processes with the specified name\n- `tags` (optional) refers to the tags that need to be present for the process (inclusive)\n\nIf multiple processes match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = pulumi.output(dynatrace.getProcess({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n}));\nconst _name_ = new dynatrace.ManagementZone(\"#name#\", {\n    entitySelectorBasedRules: [{\n        enabled: true,\n        selector: pulumi.interpolate`type(\"process_group_instance\"),entityId(\"${test.id}\")`,\n    }],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_process(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ManagementZone(\"#name#\", entity_selector_based_rules=[dynatrace.ManagementZoneEntitySelectorBasedRuleArgs(\n    enabled=True,\n    selector=f\"type(\\\"process_group_instance\\\"),entityId(\\\"{test.id}\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetProcess.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ManagementZone(\"#name#\", new()\n    {\n        EntitySelectorBasedRules = new[]\n        {\n            new Dynatrace.Inputs.ManagementZoneEntitySelectorBasedRuleArgs\n            {\n                Enabled = true,\n                Selector = $\"type(\\\"process_group_instance\\\"),entityId(\\\"{test.Apply(getProcessResult =\u003e getProcessResult.Id)}\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetProcess(ctx, \u0026GetProcessArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewManagementZone(ctx, \"#name#\", \u0026dynatrace.ManagementZoneArgs{\n\t\t\tEntitySelectorBasedRules: ManagementZoneEntitySelectorBasedRuleArray{\n\t\t\t\t\u0026ManagementZoneEntitySelectorBasedRuleArgs{\n\t\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\t\tSelector: pulumi.String(fmt.Sprintf(\"type(\\\"process_group_instance\\\"),entityId(\\\"%v\\\")\", test.Id)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetProcessArgs;\nimport com.pulumi.dynatrace.ManagementZone;\nimport com.pulumi.dynatrace.ManagementZoneArgs;\nimport com.pulumi.dynatrace.inputs.ManagementZoneEntitySelectorBasedRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getProcess(GetProcessArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ManagementZone(\"#name#\", ManagementZoneArgs.builder()        \n            .entitySelectorBasedRules(ManagementZoneEntitySelectorBasedRuleArgs.builder()\n                .enabled(true)\n                .selector(String.format(\"type(\\\"process_group_instance\\\"),entityId(\\\"%s\\\")\", test.applyValue(getProcessResult -\u003e getProcessResult.id())))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ManagementZone\n    properties:\n      entitySelectorBasedRules:\n        - enabled: true\n          selector: type(\"process_group_instance\"),entityId(\"${test.id}\")\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getProcess\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProcess.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProcess.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getProcessGroup:getProcessGroup": {
            "description": "The process group data source allows the process group ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all process groups with the specified name\n- `tags` (optional) refers to the tags that need to be present for the process group (inclusive)\n\nIf multiple process groups match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = pulumi.output(dynatrace.getProcessGroup({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n}));\nconst _name_ = new dynatrace.ManagementZone(\"#name#\", {\n    entitySelectorBasedRules: [{\n        enabled: true,\n        selector: pulumi.interpolate`type(\"process_group\"),entityId(\"${test.id}\")`,\n    }],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_process_group(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ManagementZone(\"#name#\", entity_selector_based_rules=[dynatrace.ManagementZoneEntitySelectorBasedRuleArgs(\n    enabled=True,\n    selector=f\"type(\\\"process_group\\\"),entityId(\\\"{test.id}\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetProcessGroup.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ManagementZone(\"#name#\", new()\n    {\n        EntitySelectorBasedRules = new[]\n        {\n            new Dynatrace.Inputs.ManagementZoneEntitySelectorBasedRuleArgs\n            {\n                Enabled = true,\n                Selector = $\"type(\\\"process_group\\\"),entityId(\\\"{test.Apply(getProcessGroupResult =\u003e getProcessGroupResult.Id)}\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetProcessGroup(ctx, \u0026GetProcessGroupArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewManagementZone(ctx, \"#name#\", \u0026dynatrace.ManagementZoneArgs{\n\t\t\tEntitySelectorBasedRules: ManagementZoneEntitySelectorBasedRuleArray{\n\t\t\t\t\u0026ManagementZoneEntitySelectorBasedRuleArgs{\n\t\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\t\tSelector: pulumi.String(fmt.Sprintf(\"type(\\\"process_group\\\"),entityId(\\\"%v\\\")\", test.Id)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetProcessGroupArgs;\nimport com.pulumi.dynatrace.ManagementZone;\nimport com.pulumi.dynatrace.ManagementZoneArgs;\nimport com.pulumi.dynatrace.inputs.ManagementZoneEntitySelectorBasedRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getProcessGroup(GetProcessGroupArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ManagementZone(\"#name#\", ManagementZoneArgs.builder()        \n            .entitySelectorBasedRules(ManagementZoneEntitySelectorBasedRuleArgs.builder()\n                .enabled(true)\n                .selector(String.format(\"type(\\\"process_group\\\"),entityId(\\\"%s\\\")\", test.applyValue(getProcessGroupResult -\u003e getProcessGroupResult.id())))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ManagementZone\n    properties:\n      entitySelectorBasedRules:\n        - enabled: true\n          selector: type(\"process_group\"),entityId(\"${test.id}\")\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getProcessGroup\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProcessGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process group to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProcessGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process group to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getService:getService": {
            "description": "The service data source allows the service ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all services with the specified name\n- `tags` (optional) refers to the tags that need to be present for the service (inclusive)\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@lbrlabs/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getService({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n});\nconst _name_ = new dynatrace.KeyRequests(\"#name#\", {service: test.then(test =\u003e test.id)});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_service(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.KeyRequests(\"#name#\", service=test.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetService.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.KeyRequests(\"#name#\", new()\n    {\n        Service = test.Apply(getServiceResult =\u003e getServiceResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetService(ctx, \u0026GetServiceArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewKeyRequests(ctx, \"#name#\", \u0026dynatrace.KeyRequestsArgs{\n\t\t\tService: pulumi.String(test.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetServiceArgs;\nimport com.pulumi.dynatrace.KeyRequests;\nimport com.pulumi.dynatrace.KeyRequestsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getService(GetServiceArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new KeyRequests(\"#name#\", KeyRequestsArgs.builder()        \n            .service(test.applyValue(getServiceResult -\u003e getServiceResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:KeyRequests\n    properties:\n      service: ${test.id}\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getService\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the service to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the service to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getSyntheticLocation:getSyntheticLocation": {
            "description": "The synthetic location data source allows the location ID to be retrieved based off of provided parameters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = pulumi.output(dynatrace.getSyntheticLocation({\n    cloudPlatform: \"AMAZON_EC2\",\n    name: \"Sydney\",\n    type: \"PUBLIC\",\n}));\nconst _name_ = new dynatrace.HttpMonitor(\"#name#\", {\n    anomalyDetections: [{\n        loadingTimeThresholds: [{\n            enabled: true,\n        }],\n        outageHandlings: [{\n            globalOutage: true,\n            localOutage: false,\n            retryOnError: false,\n        }],\n    }],\n    enabled: true,\n    frequency: 60,\n    locations: [test.id!],\n    script: {\n        requests: [{\n            configuration: {\n                acceptAnyCertificate: true,\n                followRedirects: true,\n            },\n            description: \"google.com\",\n            method: \"GET\",\n            url: \"https://www.google.com\",\n            validation: {\n                rules: [{\n                    passIfFound: false,\n                    type: \"httpStatusesList\",\n                    value: \"\u003e=400\",\n                }],\n            },\n        }],\n    },\n});\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetSyntheticLocationArgs;\nimport com.pulumi.dynatrace.HttpMonitor;\nimport com.pulumi.dynatrace.HttpMonitorArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorAnomalyDetectionArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getSyntheticLocation(GetSyntheticLocationArgs.builder()\n            .cloudPlatform(\"AMAZON_EC2\")\n            .name(\"Sydney\")\n            .type(\"PUBLIC\")\n            .build());\n\n        var _name_ = new HttpMonitor(\"#name#\", HttpMonitorArgs.builder()        \n            .anomalyDetections(HttpMonitorAnomalyDetectionArgs.builder()\n                .loadingTimeThresholds(HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs.builder()\n                    .enabled(true)\n                    .build())\n                .outageHandlings(HttpMonitorAnomalyDetectionOutageHandlingArgs.builder()\n                    .globalOutage(true)\n                    .localOutage(false)\n                    .retryOnError(false)\n                    .build())\n                .build())\n            .enabled(true)\n            .frequency(60)\n            .locations(test.applyValue(getSyntheticLocationResult -\u003e getSyntheticLocationResult.id()))\n            .script(HttpMonitorScriptArgs.builder()\n                .requests(HttpMonitorScriptRequestArgs.builder()\n                    .configuration(HttpMonitorScriptRequestConfigurationArgs.builder()\n                        .acceptAnyCertificate(true)\n                        .followRedirects(true)\n                        .build())\n                    .description(\"google.com\")\n                    .method(\"GET\")\n                    .url(\"https://www.google.com\")\n                    .validation(HttpMonitorScriptRequestValidationArgs.builder()\n                        .rule(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:HttpMonitor\n    properties:\n      anomalyDetections:\n        - loadingTimeThresholds:\n            - enabled: true\n          outageHandlings:\n            - globalOutage: true\n              localOutage: false\n              retryOnError: false\n      enabled: true\n      frequency: 60\n      locations:\n        - ${test.id}\n      script:\n        requests:\n          - configuration:\n              acceptAnyCertificate: true\n              followRedirects: true\n            description: google.com\n            method: GET\n            url: https://www.google.com\n            validation:\n              rule:\n                - passIfFound: false\n                  type: httpStatusesList\n                  value: '\u003e=400'\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getSyntheticLocation\n      Arguments:\n        cloudPlatform: AMAZON_EC2\n        name: Sydney\n        type: PUBLIC\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticLocation.\n",
                "properties": {
                    "cloudPlatform": {
                        "type": "string",
                        "description": "The cloud provider where the location is hosted.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "stage": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticLocation.\n",
                "properties": {
                    "cloudPlatform": {
                        "type": "string",
                        "description": "The cloud provider where the location is hosted.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "stage": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudPlatform",
                    "ips",
                    "stage",
                    "status"
                ]
            }
        },
        "dynatrace:index/getSyntheticLocations:getSyntheticLocations": {
            "description": "The synthetic locations data source allows the location IDs to be retrieved based off of provided parameters.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "locations": {
                        "$ref": "#/types/dynatrace:index/getSyntheticLocationsLocations:getSyntheticLocationsLocations"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "locations": {
                        "$ref": "#/types/dynatrace:index/getSyntheticLocationsLocations:getSyntheticLocationsLocations"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "locations"
                ]
            }
        }
    }
}